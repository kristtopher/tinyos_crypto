<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="46:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ffb37e9bb90"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ffb38999020"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ffb38999020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ffb387c2590"/></to>
    </wire>
    <wire loc="49:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb37e3e440"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb38113020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb38113020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb3810fa70"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb36f9edd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37026020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb3704a9c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37067080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb371b7620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb372a7820"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb376bd7e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb3642c460"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb3751c020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37769ab0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37a5c8c0"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37eac020"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb3685ec00"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb386a0540"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37edaa60"/></to>
    </wire>
    <wire loc="52:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37dffd30"/></to>
    </wire>
    <wire loc="45:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb37dffd30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37df53a0"/></to>
    </wire>
    <wire loc="53:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7ffb37e95020"/></from>
      <to><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7ffb37dfc3f0"/></to>
    </wire>
    <wire loc="44:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7ffb37dfc3f0"/></from>
      <to><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7ffb37df9830"/></to>
    </wire>
    <wire loc="54:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="DMA0" scoped="" ref="0x7ffb37e74600"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7ffb37d48590"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Channel0" scoped="" ref="0x7ffb37d48590"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7ffb37c3e020"/></to>
    </wire>
    <wire loc="57:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="AccelInit" scoped="" ref="0x7ffb37e73c10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37beb9f0"/></to>
    </wire>
    <wire loc="44:../../../tos/platforms/shimmer2r/AccelC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb37beb9f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37bea840"/></to>
    </wire>
    <wire loc="58:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="Accel" scoped="" ref="0x7ffb37e67c20"/></from>
      <to><interface-ref name="Accel" scoped="" ref="0x7ffb37beb260"/></to>
    </wire>
    <wire loc="45:../../../tos/platforms/shimmer2r/AccelC.nc">
      <from><interface-ref name="Accel" scoped="" ref="0x7ffb37beb260"/></from>
      <to><interface-ref name="Accel" scoped="" ref="0x7ffb37be7020"/></to>
    </wire>
    <wire loc="61:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="GyroInit" scoped="" ref="0x7ffb37e694d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37bedd60"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb37bedd60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37bd9240"/></to>
    </wire>
    <wire loc="62:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="GyroStdControl" scoped="" ref="0x7ffb37e69be0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ffb37bde440"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7ffb37bde440"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ffb37bd9880"/></to>
    </wire>
    <wire loc="63:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="GyroBoard" scoped="" ref="0x7ffb37e62bf0"/></from>
      <to><interface-ref name="GyroBoard" scoped="" ref="0x7ffb37bdec00"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="GyroBoard" scoped="" ref="0x7ffb37bdec00"/></from>
      <to><interface-ref name="GyroBoard" scoped="" ref="0x7ffb37bd8080"/></to>
    </wire>
    <wire loc="66:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="tiltNotify" scoped="" ref="0x7ffb37e651c0"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7ffb37be8e60"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7ffb37be8e60"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7ffb378be8a0"/></to>
    </wire>
    <wire loc="69:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="sampleTimerInit" scoped="" ref="0x7ffb37e61e70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37873760"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb37873760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb36646680"/></to>
    </wire>
    <wire loc="70:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="sampleTimer" scoped="" ref="0x7ffb37e55be0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ffb37872020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ffb37872020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ffb3663f1d0"/></to>
    </wire>
    <wire loc="73:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="motionTimer" scoped="" ref="0x7ffb37e47a10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb3786c020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb3786c020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ffb37a64c60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="blinkTimer" scoped="" ref="0x7ffb37e43020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb37865020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb37865020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ffb37a64c60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="AMRadioControl" scoped="" ref="0x7ffb37e9a3c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ffb3785fa70"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ffb3785fa70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ffb378322f0"/></to>
    </wire>
    <wire loc="82:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ffb37e99c70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ffb36e995a0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ffb36e995a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ffb362d48b0"/></to>
    </wire>
    <wire loc="83:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="AMRadioSend" scoped="" ref="0x7ffb37e99020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ffb36e9a970"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ffb36e9a970"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ffb362d5b60"/></to>
    </wire>
    <wire loc="86:SimpleAccelGyroAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ffb37e98900"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb36e90cc0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ffb36e90cc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb3785be40"/>
      <arguments>
        <value cst="I:127">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7ffb37ed3a20"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7ffb37f03bf0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ffb37ed0440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ffb37f09020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ffb37f09020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ffb36cf2120"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ffb37ecf0c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ffb37f09c30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ffb37f09c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ffb3870f7e0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7ffb37eb2be0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7ffb37ed31a0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7ffb387c2c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7ffb3905a3a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7ffb3905a3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7ffb38a32c30"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ffb387c16c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb389984a0"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb389984a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb3898b2b0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb387c1dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7ffb3898b9c0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7ffb38989500"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7ffb38989500"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb3895a440"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ffb38988120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb38981080"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7ffb38988800"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb380e62e0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb3895a440"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb38942c00"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ffb389519e0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ffb38940350"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7ffb38cdb4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7ffb3893f680"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7ffb388fc5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ffb3883a6d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7ffb388ea0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ffb38832b30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7ffb388f3890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ffb3883f160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7ffb388d7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ffb38819cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7ffb388faaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ffb38840480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7ffb388dd020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ffb38819020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7ffb388d4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ffb38801cb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7ffb388e55a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ffb38812220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7ffb388fdb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ffb3888f9d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7ffb388d9a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ffb388272f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7ffb388e03e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ffb38829610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7ffb388e95a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ffb3882a220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7ffb388f2890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ffb388377a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7ffb388d6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ffb388102f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7ffb388e8be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ffb388226d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7ffb388f9890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ffb38838ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7ffb3890d060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb3889ec80"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7ffb388ddda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ffb38811610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7ffb389030c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ffb38841020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7ffb388e4a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ffb3880b6d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7ffb388ed8d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ffb38847a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7ffb388d8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ffb388207a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7ffb388f5cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ffb38848de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7ffb388de1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ffb38821ac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7ffb388d5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ffb388097a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7ffb388e60c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ffb3881bb30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7ffb388ec850"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb38897c80"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7ffb388dcb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ffb3880aac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7ffb388daa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ffb38830cb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7ffb388dba20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ffb38801020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7ffb388e1570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ffb38830020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7ffb388e2020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ffb38803b30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7ffb3889cc20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ffb3889c5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7ffb3889b2f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7ffb387fca90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7ffb3889b940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7ffb387f9260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb38846930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb3889ec80"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ffb38844020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ffb3889c5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb3883e020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb3889ec80"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ffb3883d7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ffb3889c5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb38836610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb3889ec80"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ffb38835c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ffb3889c5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7ffb38895c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ffb388955b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7ffb388932f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7ffb387f99f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7ffb38893940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7ffb387f8240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb3882fb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb38897c80"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ffb3882d2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ffb388955b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb38826160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb38897c80"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ffb388257a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ffb388955b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb3881f610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb38897c80"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ffb3881ec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ffb388955b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb38817b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb38897c80"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ffb388152f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ffb388955b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb3880f160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb38897c80"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ffb3880e7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ffb388955b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb38807610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb38897c80"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ffb38806c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ffb388955b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb38800b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb38897c80"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ffb387fe2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ffb388955b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb38a31b70"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7ffb38a2a2c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7ffb3904c3b0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ffb3870f7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ffb386a5d60"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ffb37f088b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ffb3870e470"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ffb3870e470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ffb386a76c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7ffb37f06020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb3870cb20"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb3870cb20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb386a4a10"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ffb36cf2d90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb3876cce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ffb36cf1a10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ffb3870e470"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ffb3876cce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb38720580"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ffb3871f400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ffb387153f0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ffb387153f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ffb386fc300"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ffb3871e060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ffb3870e470"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ffb3871c720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ffb3870f7e0"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7ffb3871b480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7ffb3871bc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ffb387113b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ffb386a0b90"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ffb386a0b90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ffb3868ec40"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ffb3870f1d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb386a70d0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb386a0540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb3868e5f0"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb386992b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb386fd330"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ffb386a34a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb3869c790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ffb386a2120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb3869dc60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7ffb38695970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7ffb37f21a30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ffb3869c790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb3855cde0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ffb3869dc60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb3855c6c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7ffb3855bc20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7ffb38695970"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb38686760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb386992b0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb38559920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb386992b0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb3854fcc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb386992b0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7ffb3855a590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7ffb38682530"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7ffb3855ae80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7ffb38687a40"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7ffb3867c7e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7ffb38554e00"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7ffb38678780"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ffb385290c0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7ffb385290c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ffb37f350c0"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7ffb38547d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7ffb385298d0"/></to>
    </wire>
    <wire loc="45:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7ffb385298d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7ffb37f3c440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7ffb386256e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7ffb3865c4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7ffb38629c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7ffb38622a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7ffb38556020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7ffb38556800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7ffb38527020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7ffb37f3b440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7ffb37f3b440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7ffb384bc210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7ffb37f3c440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7ffb384c0b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ffb37f3a020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ffb37f35920"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb37f34020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb37f3d020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb37f3d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb384c2320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb37f3dc70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb36c35a90"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb36c35a90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb380992c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ffb384ba600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ffb37f3a020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb36c27020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb384bedd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7ffb384bb370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb36c36e00"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb36c36e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb3809a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7ffb384b5be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ffb36c2f440"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ffb36c2f440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ffb3809d4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb384bedd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb3842ae70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7ffb384bc210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7ffb38428890"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7ffb384c0b50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7ffb38429790"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb384c2320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb3842a0d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ffb384263e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ffb384ba600"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7ffb384275b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7ffb384bb370"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7ffb384215b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7ffb384b5be0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7ffb38426a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ffb38417b60"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ffb38417b60"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7ffb3840b360"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ffb38420020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb38135d20"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ffb38135d20"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ffb3812fd90"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb3841d120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb38113020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ffb3840fbd0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7ffb38406970"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ffb384106d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ffb38406020"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7ffb383ca860"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7ffb382e2cc0"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7ffb382e2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38233100"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7ffb383d4800"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7ffb382decc0"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7ffb382decc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3822fd10"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7ffb383c8800"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7ffb382dccc0"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7ffb382dccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3822a740"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7ffb383c6800"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7ffb382d5cc0"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7ffb382d5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38221d10"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7ffb383c4800"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7ffb382d7cc0"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7ffb382d7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38225100"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7ffb383dcbc0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7ffb37ff6940"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7ffb3833e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38272740"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7ffb38329810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38242100"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7ffb382e0ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38233100"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7ffb382bbcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381a8740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7ffb38325810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38238740"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7ffb383119a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38208460"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7ffb382fc9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381d9d10"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7ffb382ec9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381b2100"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7ffb382c7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381c5740"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7ffb382b3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381a3100"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7ffb38338810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38264740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7ffb38333810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3825ad10"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7ffb3831f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3822a740"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7ffb3830b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381fa100"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7ffb382f69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381cad10"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7ffb382e69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381a3100"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7ffb38342810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3827b100"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7ffb3832d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3824cd80"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7ffb38319810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3821c740"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7ffb382c1cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381b7740"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7ffb382b5cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381a3100"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7ffb382cdcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381dd100"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7ffb38315810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38212e60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7ffb383009a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381e2740"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7ffb382f09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381bcd10"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7ffb382bfcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381b2100"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7ffb382d3cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381eb100"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7ffb3833c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3826d100"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7ffb38327810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3823ed10"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7ffb382f49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381c5740"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7ffb38323810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38233100"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7ffb3830f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38204e00"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7ffb382fa9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381d4740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7ffb382ea9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381aed10"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7ffb382cfcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381e2740"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7ffb38348800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb382acd10"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7ffb38331810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38255740"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7ffb3831d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38225100"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7ffb383099a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381f6d10"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7ffb382cbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3821c740"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7ffb382c5cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381c0100"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7ffb382b9cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381a3100"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7ffb383049a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381eb100"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7ffb382c9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38216100"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7ffb38340810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38277d10"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7ffb3832b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38247740"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7ffb38317810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38216100"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7ffb382d1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381e7d10"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7ffb382bdcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381aed10"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7ffb383139a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3820d9f0"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7ffb382fe9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381dd100"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7ffb382ee9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381b7740"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7ffb3833a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38269d10"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7ffb382f29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381c0100"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7ffb38335810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3825e100"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7ffb38321810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3822fd10"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7ffb3830d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381ff740"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7ffb382f89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381cf100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7ffb382e89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381a8740"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7ffb38344810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38280740"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7ffb3832f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38250100"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7ffb3831b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38221d10"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7ffb383069a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381f0740"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7ffb382daca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb3822a740"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7ffb382c3cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381bcd10"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7ffb383029a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381e7d10"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7ffb382b7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381a8740"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7ffb382b1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb381cad10"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7ffb382e49f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ffb38238740"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ffb3812fd90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb38129e50"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb38117020"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ffb388ec850"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb380e62e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb3810f470"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7ffb3810c060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7ffb38110b10"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7ffb38110b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb380e3020"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7ffb3810b340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7ffb380e9e70"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7ffb380e9e70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb380cfb90"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7ffb38106660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7ffb380e70f0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7ffb380e70f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb380c9710"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb380d22f0"/></from>
      <to><interface-ref name="Port40" scoped="" ref="0x7ffb38315810"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb380cdde0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7ffb383119a0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb380c8930"/></from>
      <to><interface-ref name="Port43" scoped="" ref="0x7ffb3830f9a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ffb36c2fbe0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7ffb3809b3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ffb36c2e2b0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ffb38000d70"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ffb38000d70"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7ffb37ff6940"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ffb36c34a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ffb38417b60"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb36c342b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb38099ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb38099ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb38007400"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb380988a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb36c27020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb380992c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb38009020"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb38009020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb3685a3a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7ffb3809d4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ffb38096d60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb3809a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb3800a210"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb3800a210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb3685b4d0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7ffb3809b3f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7ffb38095710"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb38007400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb368598b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb38007cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb380988a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb38083bf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb38007400"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7ffb38095d80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ffb384106d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7ffb380835e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ffb3840fbd0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb380097a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb3685ab20"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb36857210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb38007cd0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7ffb368579d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7ffb3685d2b0"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7ffb36855c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7ffb37fed700"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7ffb3840b360"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7ffb37fe8250"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7ffb382e2cc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7ffb37fe61f0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7ffb382dccc0"/></to>
    </wire>
    <wire loc="114:../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7ffb37ec9500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7ffb37eac680"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7ffb37eb2be0"/></to>
    </wire>
    <wire loc="44:../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ffb37ea6380"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ffb38999020"/></to>
    </wire>
    <wire loc="47:../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7ffb37ea6aa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ffb387113b0"/></to>
    </wire>
    <wire loc="81:SimpleAccelGyroC.nc">
      <from><interface-ref name="Go" scoped="" ref="0x7ffb37e38610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:SimpleAccelGyroC.nc">
      <from><interface-ref name="Stop" scoped="" ref="0x7ffb37e374f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:SimpleAccelGyroC.nc">
      <from><interface-ref name="send_data" scoped="" ref="0x7ffb37e25da0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7ffb37df0020"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7ffb37d82520"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Msp430DmaControl" scoped="" ref="0x7ffb37df18d0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ffb37d80b70"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7ffb37d80b70"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ffb37c23060"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Msp430DmaChannel" scoped="" ref="0x7ffb37df4170"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7ffb37d48590"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb37dca020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb38113020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7ffb37d468b0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7ffb37c2ed80"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7ffb37d47720"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7ffb37c367a0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel" scoped="" ref="0x7ffb37c3d020"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7ffb37d1edf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Channel0" scoped="" ref="0x7ffb37d1edf0"/></from>
      <to><interface-ref name="DMA" scoped="" ref="0x7ffb37c89c90"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel" scoped="" ref="0x7ffb37c357a0"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7ffb37d1b730"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7ffb37d1b730"/></from>
      <to><interface-ref name="DMA" scoped="" ref="0x7ffb37c7f9b0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel" scoped="" ref="0x7ffb37c2ddb0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7ffb37d160c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7ffb37d160c0"/></from>
      <to><interface-ref name="DMA" scoped="" ref="0x7ffb37c763f0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplControl" scoped="" ref="0x7ffb37c23970"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ffb37d3bd90"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7ffb37d3bd90"/></from>
      <to><interface-ref name="DmaControl" scoped="" ref="0x7ffb37d10510"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel0" scoped="" ref="0x7ffb37c22d90"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7ffb37d1edf0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel1" scoped="" ref="0x7ffb37c1c740"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7ffb37d1b730"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel2" scoped="" ref="0x7ffb37c170d0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7ffb37d160c0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x7ffb37c84610"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7ffb37d0a710"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x7ffb37c7a2f0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7ffb37d0a710"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x7ffb37c72c50"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7ffb37d0a710"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="buttonNotify" scoped="" ref="0x7ffb37bd7020"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7ffb37bda8f0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7ffb37bda8f0"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7ffb37a84af0"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7ffb37a87760"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7ffb37bad5b0"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7ffb37bad5b0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7ffb37aab490"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37a88510"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37bb6c90"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37bb6c90"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37ab2d70"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7ffb37a7f750"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7ffb37a8ab10"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="debounceTimer" scoped="" ref="0x7ffb37a7d3d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb37a6a640"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb37a6a640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ffb37a64c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb37ab0020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7ffb38340810"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7ffb37a9e020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7ffb37ba4710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7ffb37ba4710"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7ffb37b90710"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7ffb37ba3710"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7ffb37b8f710"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7ffb37b998a0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7ffb37b858a0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7ffb37ba0710"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7ffb37b8c710"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7ffb37b9e710"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7ffb37b8a710"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7ffb37ba9710"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7ffb37b91710"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7ffb37b9b710"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7ffb37b87710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7ffb37ba2710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7ffb37b8e710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7ffb37b988a0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7ffb37b848a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7ffb37ba5740"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7ffb37b936b0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7ffb37b9d710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7ffb37b89710"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7ffb37b9a8a0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7ffb37b868a0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7ffb37ba1710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7ffb37b8d710"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7ffb37b9f710"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7ffb37b8b710"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7ffb37baa710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7ffb37b92710"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7ffb37b9c710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7ffb37b88710"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7ffb37a862f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <from><interface-ref name="debounce" scoped="" ref="0x7ffb37a73c40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7ffb37a64c60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ffb37a58700"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7ffb37a58700"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb37903690"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb37a5c8c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb3797e760"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7ffb37a521a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ffb378f4cf0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb3797e760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb366fa020"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7ffb378fdc30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb37952cf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ffb3794c1d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ffb3797d020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ffb3797d020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ffb366f4a90"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ffb378e9020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb379df020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ffb379df020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb379bf5f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb366fa020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb366df660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7ffb366ed210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ffb366fa870"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ffb366fa870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ffb366dd020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ffb366f1e10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb379df020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb366da190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb366e4340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb366e4340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb37a37990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb366d9770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb366e3a80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb366e3a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb37a35720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb366d8a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb366e2da0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb366e2da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb37a321d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb37a37990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ffb388ec850"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb37a35720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7ffb388ea0c0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb37a321d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7ffb388e1570"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb37a37990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ffb388ec850"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb37a35720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7ffb388e95a0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb37a321d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB1" scoped="" ref="0x7ffb388e03e0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb37a37990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ffb388ec850"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb37a35720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7ffb388e8be0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb37a321d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7ffb388de1f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb37a37990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ffb388ec850"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb37a35720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7ffb388e60c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb37a321d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7ffb388dd020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb37a37990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ffb388ec850"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb37a35720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7ffb388e55a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb37a321d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7ffb388ddda0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb37a37990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ffb388ec850"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb37a35720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7ffb388e4a50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb37a321d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7ffb388dcb80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb37a37990"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ffb388ec850"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb37a35720"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7ffb388e2020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb37a321d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7ffb388dba20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7ffb379bd950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ffb3812fd90"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7ffb37948490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7ffb378f8e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7ffb378c1440"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7ffb378d2660"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2/chips/tilt/HplTiltDetectorC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7ffb378d2660"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7ffb378cab50"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7ffb378c3290"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb378d3340"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2/chips/tilt/HplTiltDetectorC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7ffb378d3340"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb378cf850"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7ffb378ba4d0"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7ffb378c5880"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorC.nc">
      <from><interface-ref name="debounceTimer" scoped="" ref="0x7ffb378b7150"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ffb378a7970"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb378a7970"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ffb37a64c60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2/chips/tilt/HplTiltDetectorC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb378ceac0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7ffb3832d810"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer2/chips/tilt/HplTiltDetectorC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7ffb378c97a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7ffb37b9b710"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7ffb378c0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorP.nc">
      <from><interface-ref name="debounce" scoped="" ref="0x7ffb378adbb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb36646680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb36629340"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7ffb36639b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ffb36644020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ffb36644020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ffb36629bd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ffb3663b690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb3788f650"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ffb3788f650"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb378892e0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb36625dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb36630e70"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb36630e70"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb37a37990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb36623440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb3662d5d0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb3662d5d0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb37a35720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb36622760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb3662c8f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb3662c8f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb37a321d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli16C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7ffb378866d0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ffb3812fd90"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ffb378322f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ffb37809020"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ffb3785cb10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ffb37831320"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ffb37831320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ffb36f60020"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7ffb37859a40"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7ffb3782f1d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7ffb3782f1d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7ffb36f5fdf0"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ffb37858080"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ffb3782c020"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ffb3782c020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ffb36f5ca80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ffb3784b6b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ffb37133550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ffb37133550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ffb37125a80"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ffb3783d5b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ffb37818170"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ffb37818170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ffb37801700"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ffb3785be40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb37830510"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ffb37830510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb36f5f210"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb378564e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb3782b020"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb3782b020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb37802670"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ffb37858cf0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ffb3782f800"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ffb3782f800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ffb36f5d470"/></to>
    </wire>
    <wire loc="87:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ffb3784a840"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ffb3712f660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ffb3712f660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ffb37121af0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ffb37809020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ffb36f91b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb3782a2c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb36f5a8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7ffb378161d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7ffb36f5bce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb378230f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb37803670"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb37803670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb37138670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ffb37801700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ffb36f91080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb37802670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7ffb371356e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7ffb3780e430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7ffb378002e0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7ffb378002e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7ffb36f7d020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ffb3781e170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ffb37801080"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ffb37801080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ffb37134a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7ffb36f520f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb378081d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ffb36f59860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7ffb37804170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7ffb37804170"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7ffb36ffa020"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ffb36f58690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7ffb37803020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7ffb37803020"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7ffb36ffad50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ffb36f544d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ffb372d9b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb36f58ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb37138670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb37138670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb3712ad20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb36f57b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb371340c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb371340c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb37126640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7ffb36f56610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7ffb3777b020"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7ffb3777b020"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7ffb37764e50"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7ffb36f531f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb377fb990"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb377fb990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb377f21a0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb36f52d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb38113020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ffb36f91b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7ffb36f8ed90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ffb37134a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ffb37125020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7ffb36f7d020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7ffb36f7b410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7ffb36ffa020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7ffb36fefbb0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ffb36f91080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ffb36f8a2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7ffb37806d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb36ffb900"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ffb36ffb900"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7ffb36fef500"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7ffb371356e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7ffb37127c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb378081d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb36ffc020"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb36ffc020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb36ff2910"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7ffb37806020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb36ffcc60"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ffb36ffcc60"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7ffb36ff1660"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7ffb37805420"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7ffb36ff9440"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7ffb36ff9440"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7ffb36fed0d0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7ffb36ffad50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7ffb36fee9d0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7ffb36f8ed90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ffb377ffac0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ffb377ffac0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ffb377f88d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ffb36ff8890"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb370514d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ffb370514d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb3704dd50"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ffb3704e3b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb36f80350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ffb36f80350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ffb36f7dd70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ffb36f7dd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb36f95ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ffb36f95ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ffb36f8f860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ffb36f8f860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb377fc600"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ffb377fc600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb377f3470"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ffb36ff8200"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb36f92980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ffb36f92980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7ffb36f8e690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ffb36f8e690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb3702fd00"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ffb3702fd00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb370281e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ffb3702cb80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb377fb300"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ffb377fb300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb371bc7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ffb371bc7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ffb371b5020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420RxState" scoped="" ref="0x7ffb377f62d0"/></from>
      <to><interface-ref name="CC2420RxState" scoped="" ref="0x7ffb377f1080"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb377f1880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb3777f9d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb3777f9d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb37764180"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7ffb377e9e30"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7ffb3776c020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7ffb3776c020"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7ffb37761d80"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7ffb377ee0d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ffb372b26c0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7ffb377ee0d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ffb371bf5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7ffb371bf5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ffb371b7ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7ffb372b26c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ffb372a6020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7ffb377e1d30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7ffb372af020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7ffb372af020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb372a68c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7ffb377e8ae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb372afcb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb372afcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb372a5650"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb377dc020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb37138670"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb377d5660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb371340c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ffb377e0020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7ffb3706da20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ffb3706da20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7ffb37066a20"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7ffb377d0e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ffb3706faa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ffb3706faa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ffb375201d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb377e07f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb38113020"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7ffb377cbb70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7ffb377cdc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7ffb377ced20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7ffb377675c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7ffb3775f1b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7ffb3775d020"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7ffb376ba220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7ffb376ba220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7ffb376b4af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ffb37758250"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ffb37675cd0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ffb37675cd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37667b60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7ffb37757510"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7ffb376716a0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7ffb376716a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37659d70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7ffb37756830"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7ffb3766fce0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7ffb3766fce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb3764e710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7ffb37755bd0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7ffb37638c70"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7ffb37638c70"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7ffb375e4100"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ffb37741b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb37363e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb37363e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb375a1600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ffb37740b60"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7ffb3735f7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ffb3735f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ffb377423b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7ffb3735eae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ffb3735eae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ffb37741440"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7ffb37361ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ffb37361ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ffb37742ae0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7ffb3735d160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ffb3735d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ffb37746420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7ffb37355870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ffb37355870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ffb37746cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7ffb37352880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ffb37352880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ffb3774d5d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7ffb373510a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ffb373510a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ffb37748020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7ffb37359e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ffb37359e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb377488f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb37358670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb37358670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ffb37749e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7ffb37344500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ffb37344500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ffb377494a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7ffb37345ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ffb37345ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ffb377451e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7ffb37356e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ffb37356e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ffb37745a80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7ffb37358e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ffb37358e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ffb377433c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7ffb37357e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ffb37357e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7ffb3773e880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb37332a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb37332a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb375a1600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7ffb3773fa10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb373069e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb373069e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb375a1600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ffb3774e390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ffb372d9b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ffb3775b600"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ffb372d8d70"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7ffb377332f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7ffb37734410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb376bd7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb376b4260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb376b4260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb365bc720"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7ffb376b4af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ffb365bb020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb365bc720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb365b5760"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ffb365bb020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ffb365ae1d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb365b5760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb36598340"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7ffb365a8b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ffb365b4020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ffb365b4020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ffb36598bd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ffb365aa690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb3769e080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ffb3769e080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb37699cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb36595dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb3659fe70"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb3659fe70"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb37a37990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb36592440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb3659c5d0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb3659c5d0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb37a35720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb36591760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb3659b8f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb3659b8f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb37a321d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7ffb376950f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ffb3812fd90"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7ffb37673020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37662710"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7ffb37672390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb3765d1d0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7ffb376bba70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb3766b020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7ffb376709b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37653b60"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb3766a2f0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7ffb38327810"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb37666de0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7ffb382fc9a0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb37661930"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7ffb3833c810"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb3765c480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7ffb38348800"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb37656020"/></from>
      <to><interface-ref name="Port57" scoped="" ref="0x7ffb382f69a0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb37652de0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7ffb38342810"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb3764d930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7ffb382f89a0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7ffb37638060"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ffb37630760"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ffb376378c0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7ffb375e1100"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb3761a2b0"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7ffb389030c0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7ffb376195d0"/></from>
      <to><interface-ref name="CaptureA1" scoped="" ref="0x7ffb388f3890"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37618480"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7ffb38342810"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ffb3760e450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb3769e080"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7ffb37616410"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ffb3760f180"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ffb375e9020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb37603110"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ffb37603110"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb375f2430"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="LocalTimeMicro" scoped="" ref="0x7ffb37615620"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ffb37604d30"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7ffb375e4c00"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7ffb37b988a0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7ffb375e1c00"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7ffb37ba5740"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7ffb375ef910"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7ffb375fe260"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7ffb375fe260"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb375faae0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb375f8c30"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7ffb3890d060"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ffb3735f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb37353880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ffb3734b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ffb373520a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ffb3733f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ffb37342500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ffb3735e490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ffb37348880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ffb37343500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ffb3734e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ffb3734f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb37362a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb375a0350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb375a0350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb37596660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ffb3735de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ffb3735c490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ffb37347c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ffb3735cbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ffb37343ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ffb373480a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ffb37357670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ffb373490a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ffb3734b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ffb37349880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ffb37341ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ffb37342ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ffb3734f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ffb3734a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ffb37344ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ffb37351880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ffb3733fce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ffb3759e2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ffb37361480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ffb37359670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ffb37356670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ffb3734c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ffb3734c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb373530a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ffb3735a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ffb37359020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ffb3735d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ffb37345500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ffb37341500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ffb3734e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ffb3734a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ffb3735fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ffb373500a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ffb3735a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ffb37350880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ffb373470a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ffb3733e9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ffb3759e2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7ffb3759e2c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ffb37594890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb37593ba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb37592a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb375a1600"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb37595510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb375918b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7ffb37584b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ffb37525770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ffb37525770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ffb375201d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ffb3758f060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb37502140"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb37502140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb36495770"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ffb3758cc70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ffb37502d90"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ffb37502d90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ffb36494be0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ffb375842e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ffb3738c410"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ffb3738c410"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ffb36493d70"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb3758da70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb38113020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7ffb37580bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ffb375201d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ffb3751cb70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ffb36493d70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ffb374ed850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ffb36494be0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ffb374ee020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb36495770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb374f1430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb36494440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb36488d90"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb36488d90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb373d02c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ffb374ee020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ffb37491a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7ffb364932b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7ffb374ee6a0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7ffb374ee6a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7ffb37490060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ffb374eba40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ffb364915a0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb36481020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb374ef6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7ffb374ec690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb36488140"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb36488140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb373d1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7ffb374e92a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ffb36482760"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ffb36482760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ffb373d31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb374ef6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb37491250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ffb374ed850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ffb37490c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb374f1430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb37493470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ffb3748e3e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ffb374eba40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7ffb3748f5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7ffb374ec690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7ffb37489480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7ffb374e92a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7ffb3748ea50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ffb3747e0c0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ffb3747e0c0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7ffb37474970"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb37489c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb38113020"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7ffb374872f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ffb37478d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ffb3746f460"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7ffb3747b840"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7ffb374740c0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7ffb3746fd30"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7ffb382d1cc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7ffb3746dcb0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7ffb382cfcc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7ffb3746bcb0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7ffb382cdcc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7ffb37469cb0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7ffb382c9cc0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7ffb37467cb0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7ffb382cbcc0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ffb36487d40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ffb3747e0c0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb364875a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb373d0ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb373d0ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb373c6e80"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb373cf8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb36481020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb373d02c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb373c79e0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb373c79e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb36428a60"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7ffb373d31d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ffb373cd060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb373d1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb373c8b60"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb373c8b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb36429c80"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb373c6e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb36427e80"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7ffb373cc060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ffb37478d10"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb373c5770"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb373cf8a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb373cce50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb373c6e80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb373aa5f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb373c6270"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb373c6270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb36427270"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7ffb373c0880"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7ffb3747b840"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb36426790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb373c5770"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7ffb36425020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7ffb3642ca70"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7ffb36423160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7ffb363f3900"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7ffb373c0880"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7ffb363f20e0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7ffb373aa020"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb363f26b0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb373aa5f0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb363f1400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb373a9270"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ffb37325c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ffb37330da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ffb37329b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb37323670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ffb3731ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ffb37323e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ffb3730f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ffb373112f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ffb3732e120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ffb37317670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ffb373122f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ffb37328c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ffb37326c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ffb3731d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ffb3731fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ffb37322670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb37331760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb375a0350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ffb3732caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ffb3732b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ffb37316a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ffb3732b870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ffb37312ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ffb3732edc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ffb37318e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ffb37326480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb37328480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ffb37330750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ffb37319e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ffb3731b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ffb37318670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ffb37310ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ffb37311ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ffb3731e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ffb3731be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ffb37314ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ffb37320670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ffb3730fad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ffb3759e2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ffb37330100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ffb37329370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ffb37325480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ffb3731de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ffb37322e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ffb3731c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ffb37324670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ffb3732f450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb37324e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ffb3732a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ffb3732acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ffb373142f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ffb37315ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ffb3732c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ffb373152f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ffb373102f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ffb3731ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ffb37319670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ffb3732faa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ffb3732e770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ffb37320e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ffb3732a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ffb3731f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ffb37317e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ffb3730e7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ffb3759e2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ffb372f9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ffb37303da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ffb372fcb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb372f6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ffb372efe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ffb372f6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ffb372e22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ffb372e52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ffb37301120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ffb372eb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ffb372e62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ffb372fbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ffb372fac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ffb372f0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ffb372f3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ffb372f5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb37305760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb375a0350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ffb37300aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ffb372ff120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ffb372e9a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ffb372ff870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ffb372e6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ffb37301dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ffb372ece50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ffb372fa480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb372fb480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ffb37303750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ffb372ede50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ffb372ee670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ffb372ec670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ffb372e4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ffb372e5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ffb372f2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ffb372eee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ffb372e7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ffb372f4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ffb372e2ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ffb3759e2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ffb37303100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ffb372fc370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ffb372f9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ffb372f0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ffb372f5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ffb372ef670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ffb372f7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ffb37302450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb372f7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ffb372fd020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ffb372fdcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ffb372e72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ffb372e8ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ffb37300450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ffb372e82f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ffb372e42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ffb372f2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ffb372ed670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ffb37302aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ffb37301770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ffb372f4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ffb372fd670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ffb372f3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ffb372ebe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ffb372e17a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ffb3759e2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7ffb372ab990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7ffb372a25e0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7ffb372ad150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7ffb372a2d70"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7ffb372a07f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7ffb376ba220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7ffb37294500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7ffb376bba70"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ffb3728e820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ffb37675cd0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7ffb3728db40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7ffb376709b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7ffb37295880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7ffb37638060"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ffb3728a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb371efc30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb371efc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb375a1600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb3728ad10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb371ee8f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb371ee8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb375a0350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ffb372876d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7ffb371ed2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ffb371ed2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ffb37287de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7ffb371eccc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ffb371eccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ffb37286530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7ffb371eb370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ffb371eb370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ffb37286c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7ffb371e9d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ffb371e9d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ffb37288e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7ffb371e3c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ffb371e3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ffb37289780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7ffb371cb7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ffb371cb7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ffb3759e2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ffb37288550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ffb371d02f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ffb371d02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb372853e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb371e5480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb371e5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb372845e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb371e1e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb371e1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb37283020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb371e0670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb371e0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ffb37285e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7ffb371e77b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ffb371e77b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ffb372829c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7ffb371cdad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ffb371cdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ffb37283890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7ffb371ce2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ffb371ce2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ffb37282130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7ffb371cead0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ffb371cead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7ffb3727cd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7ffb371bfdf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7ffb371bfdf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7ffb371b6550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb3729da00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb37138670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb3729b9a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb371340c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ffb3729a7c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ffb37133550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ffb3728fb30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ffb3712b480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ffb3712b480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ffb3711d8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb372806c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb38113020"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ffb371e2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ffb371ec020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ffb371e6c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ffb371d9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ffb371e0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ffb371cc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ffb371d4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ffb371e5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ffb371da670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ffb371dce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ffb371df670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ffb371e8370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ffb371d3a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ffb371e8ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ffb371d0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ffb371e9060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ffb371d5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ffb371e3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ffb371ed940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ffb371d6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ffb371d8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ffb371d5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ffb371db670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ffb371d8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ffb371d1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ffb371de670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ffb371ccad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ffb3759e2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ffb371e6490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ffb371e2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ffb371dae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ffb371dfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ffb371d9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ffb371e1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ffb371ec670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ffb371e7160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ffb371e7e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ffb371d12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ffb371d2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ffb371e96b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ffb371d22f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ffb371cd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ffb371dbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ffb371d6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ffb371eb9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ffb371dee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ffb371dc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ffb371d4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7ffb371bb020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7ffb371b57c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ffb371a0150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ffb38113020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ffb371b4020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ffb37675cd0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7ffb371b3380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7ffb37673020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7ffb371b26b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7ffb37672390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ffb371b1a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ffb376378c0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ffb371b06e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb370bb520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ffb370bb520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ffb375a1600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ffb371af530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7ffb37097480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ffb37097480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ffb3759e2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ffb371aead0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7ffb370b5060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ffb370b5060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ffb371ae3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7ffb370b5d00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ffb370b5d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb371ad330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb37138670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb371ac1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb371340c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ffb371aad70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ffb37133550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7ffb371acb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7ffb3777b020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb371a53e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb370ac840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb370ac840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb371a5cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb370ab060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb370ab060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ffb371a6b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7ffb370b3ae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ffb370b3ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ffb371a36d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7ffb37098c60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ffb37098c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ffb371a4590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7ffb3709bc60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ffb3709bc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ffb371a4e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7ffb3709a480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ffb3709a480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ffb371a1020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ffb3709b480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ffb3709b480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ffb371a18b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7ffb370b9c20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ffb370b9c20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7ffb371959d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ffb370c7020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ffb3769e080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7ffb3711b3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ffb370cacf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7ffb371196e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ffb37a521a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ffb370c30b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ffb37a64c60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ffb370ad620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ffb370b8940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ffb370b1620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ffb370a4840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ffb370ab840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ffb370b7cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ffb3709f060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ffb3709cc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ffb370b0620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ffb370af620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ffb370a5060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ffb370a8840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ffb370aa060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb370b92b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb375a0350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ffb370b56b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ffb3709e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ffb370b3490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ffb370b69c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ffb370a1840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ffb370b0e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb370b1e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ffb370b82f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ffb370a2840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ffb370a3060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ffb370a1060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ffb37098480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ffb370a7060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ffb370a3840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ffb3709c480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ffb370a9060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ffb370b2e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ffb370afe00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ffb370a5840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ffb370aa840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ffb370a4060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ffb370ac060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ffb370b7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ffb370b27b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ffb3709dc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ffb3709d480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ffb3709ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ffb3709ac60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ffb370a7840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ffb370a2060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ffb370b7670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ffb370b6370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ffb370a9840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ffb370b2160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ffb370a8060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ffb3709f840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ffb37096160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ffb3759e2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7ffb3706a920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7ffb37067940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ffb37071990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ffb37067080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ffb37049110"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ffb3704e3b0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ffb37049d60"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ffb3704bb00"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ffb3704bb00"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ffb375201d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ffb37048be0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7ffb3706da20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb370474b0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb371340c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7ffb3702c430"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7ffb370288f0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ffb37026770"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7ffb3702cb80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb37026df0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb371340c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ffb36fede20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ffb36ff8890"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ffb36fecb50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7ffb36ff8200"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb36feb2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb37138670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb36fea170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb371340c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7ffb36feab70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7ffb36f9d410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7ffb36fbedb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7ffb36f90800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ffb36f8c580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ffb36f8c580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ffb375201d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb36f781c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb37802670"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ffb362d5b60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ffb362c8bc0"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ffb362d48b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ffb37858080"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ffb36e98270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ffb362d3590"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ffb362d3590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ffb37858cf0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7ffb36e978f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7ffb362d2c10"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7ffb362d2c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb378564e0"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ffb362c7910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb36eb2450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ffb362c6590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ffb37858cf0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ffb36eb2450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ffb36eb0dd0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ffb36eafbe0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ffb3785cb10"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ffb36ead8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ffb37858cf0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ffb36eab020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ffb37858080"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7ffb36eabcb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7ffb36eaa500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ffb36e8a2f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ffb37858080"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ffb36e89020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ffb37858cf0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="38:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/shimmer2r/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="37:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P.UartP" loc="41(Msp430Uart0P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.2 $ $Date: 2010/07/29 13:19:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="46:../../../tos/platforms/shimmer2r/LedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="45:../../../tos/platforms/shimmer2r/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/platforms/shimmer2r/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="41:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="39(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2013/04/09 14:28:58 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ShimmerSerialP" loc="35:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:../../../tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimpleAccelGyroC" loc="42:SimpleAccelGyroC.nc">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="shimmerAnalogSetupC" loc="35:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <configuration/>
    </component>
    <component qname="shimmerAnalogSetupP" loc="39:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430DmaC" loc="46:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <documentation loc="33:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
        <short>&#10; Implementation of the HAL level component for the MSP430 DMA module.</short>
        <long>&#10; Implementation of the HAL level component for the MSP430 DMA module.&#10; This configuration provides the available DMA channels through the&#10; MSP430DMA parameterized interface.  If more channels are requested&#10; than available through unique(&#34;DMA&#34;), there will be no mapping for&#10; that channel and compilation will fail.&#10;&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430DmaC" loc="39:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <documentation loc="33:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430DmaP" loc="41:../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430DmaC.Dma0" loc="42(HplMsp430DmaC.Dma0):../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430DmaXP"/>
        <arguments>
          <value cst="I:480">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:482">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:484">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:486">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:15">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430DmaC.Dma1" loc="42(HplMsp430DmaC.Dma1):../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430DmaXP"/>
        <arguments>
          <value cst="I:488">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:490">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:492">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:494">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:240">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430DmaC.Dma2" loc="42(HplMsp430DmaC.Dma2):../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430DmaXP"/>
        <arguments>
          <value cst="I:496">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:498">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:500">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:502">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3840">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaC.Channel0P" loc="42(Msp430DmaC.Channel0P):../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430DmaChannelP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaC.Channel1P" loc="42(Msp430DmaC.Channel1P):../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430DmaChannelP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaC.Channel2P" loc="42(Msp430DmaC.Channel2P):../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430DmaChannelP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaControlP" loc="42:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AccelC" loc="36:../../../tos/platforms/shimmer2r/AccelC.nc">
      <configuration/>
    </component>
    <component qname="Mma7361P" loc="37:../../../tos/platforms/shimmer2r/Mma7361P.nc">
      <module/>
    </component>
    <component qname="GyroBoardC" loc="38:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <configuration/>
    </component>
    <component qname="GyroBoardP" loc="41:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GyroButtonC" loc="50:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplGyroButtonC" loc="42:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $&#10; (not much to) port to shimmer2 gyro&#10; @author Steve Ayer&#10; @date March, 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplGyroButtonC.UserButtonC" loc="42(HplGyroButtonC.UserButtonC):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplGyroButtonC.InterruptUserButtonC" loc="43(HplGyroButtonC.InterruptUserButtonC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="GyroButtonC.SwitchToggleC" loc="44(GyroButtonC.SwitchToggleC):../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="GyroButtonP" loc="44:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GyroButtonC.debounceTimer" loc="44(GyroButtonC.debounceTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TiltDetectorC" loc="48:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorC.nc">
        <short>&#10; Implementation of the user button for the telosb platform.</short>
        <long>&#10; Implementation of the user button for the telosb platform. Get&#10; returns the current state of the button by reading the pin,&#10; regardless of whether enable() or disable() has been called on the&#10; Interface. Notify.enable() and Notify.disable() modify the&#10; underlying interrupt state of the pin, and have the effect of&#10; enabling or disabling notifications that the button has changed&#10; state.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $&#10; port to shimmer2 tilt switch&#10; @author Steve Ayer&#10; @date   February, 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplTiltDetectorC" loc="42:../../../tos/platforms/shimmer2/chips/tilt/HplTiltDetectorC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2/chips/tilt/HplTiltDetectorC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10; (not much to) port to shimmer&#10; @author Steve Ayer&#10; @date February, 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplTiltDetectorC.TiltDetectorC" loc="42(HplTiltDetectorC.TiltDetectorC):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplTiltDetectorC.InterruptTiltDetectorC" loc="43(HplTiltDetectorC.InterruptTiltDetectorC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="TiltDetectorC.SwitchToggleC" loc="44(TiltDetectorC.SwitchToggleC):../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="TiltDetectorP" loc="44:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorP.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TiltDetectorC.debounceTimer" loc="44(TiltDetectorC.debounceTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleAccelGyroAppC.sampleTimer" loc="41(SimpleAccelGyroAppC.sampleTimer):../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleAccelGyroAppC.sampleTimer.AlarmFrom" loc="41(SimpleAccelGyroAppC.sampleTimer.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleAccelGyroAppC.sampleTimer.AlarmFrom.Msp430Timer" loc="37(SimpleAccelGyroAppC.sampleTimer.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleAccelGyroAppC.sampleTimer.AlarmFrom.Msp430Alarm" loc="43(SimpleAccelGyroAppC.sampleTimer.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli16C" loc="41:../../../tos/chips/msp430/timer/CounterMilli16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli16C.nc">
        <short>&#10; CounterMilli16C provides at 16-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli16C provides at 16-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli16C.Transform" loc="54(CounterMilli16C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SimpleAccelGyroAppC.sampleTimer.Transform" loc="51(SimpleAccelGyroAppC.sampleTimer.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SimpleAccelGyroAppC.motionTimer" loc="44(SimpleAccelGyroAppC.motionTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleAccelGyroAppC.blinkTimer" loc="44(SimpleAccelGyroAppC.blinkTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="56:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <documentation loc="48:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the SHIMMER platform.</short>
        <long>&#10; The Active Message layer on the SHIMMER platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2012-07-26 17:51:39 $&#10;&#10; mods to provide CC2420RxState interface, which allows application &#10; to disable radio reception and/or cca for manual control of high-density&#10; synchronization routines&#10; @author Steve Ayer&#10; @date   March, 2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2012-03-02 16:52:48 $&#10;&#10; mods to provide CC2420RxState interface, which allows application &#10; to disable radio reception and/or cca for manual control of high-density&#10; synchronization routines&#10; @author Steve Ayer&#10; @date   March, 2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-10 18:22:02 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10; @date May 14, 2008&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10; @date May 14, 2008&#10;&#10; @author Steve Ayer&#10; @date April, 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="44(HplCC2420InterruptsC.CaptureSFDC):../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Steve Ayer/Miklos Maroti&#10; @date   February, 2011&#10;&#10; re-named indicating that this HAL module is specifically required to handle anomalies in the &#10; cc2420 stack that require sfd capture to happen on a timerb pin;  designs that use a timera pin &#10; need this code to resolve the aliasing between timestamps from 32khz and 1mhz timers.&#10; thanks to miklos for providing this re-written captured event handler as a straight-forward work-around!&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.CounterToLocalTimeC" loc="46(HplCC2420InterruptsC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="41:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <documentation loc="33:../../../tos/platforms/shimmer/CounterMicro32C.nc">
        <short>&#10; CounterMicro32C provides at 32-bit counter at 1024000 ticks per second.</short>
        <long>&#10; CounterMicro32C provides at 32-bit counter at 1024000 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b26b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7ffb384b2a20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform" loc="54(CounterMicro32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b26b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7ffb384b2a20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b26b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7ffb384b2a20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.CounterMicroToLocalTime" loc="46(HplCC2420InterruptsC.CounterMicroToLocalTime):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b26b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7ffb384b2a20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="45(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma1P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma1P.SpiP" loc="73(Msp430SpiNoDma1P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="40(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:../../../tos/platforms/shimmer/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimpleAccelGyroAppC.AMSenderC" loc="47(SimpleAccelGyroAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:127">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleAccelGyroAppC.AMSenderC.SenderC" loc="47(SimpleAccelGyroAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleAccelGyroAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SimpleAccelGyroAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SimpleAccelGyroAppC.AMReceiverC" loc="43(SimpleAccelGyroAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:127">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7ffb388cf230" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7ffb388cf5d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7ffb388cf980" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7ffb388cfd00" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7ffb388ce0d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7ffb388ce440" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7ffb388ce7d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7ffb388ceb60" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7ffb388cd020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7ffb38891950" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7ffb38891d20" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7ffb3899b820" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7ffb387880d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7ffb387650d0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart0C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7ffb382ab190" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7ffb382ab540" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7ffb382ab8f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7ffb382abca0" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7ffb382a9060" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7ffb3812ae60" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7ffb3812ae60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7ffb3807e5b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7ffb380715b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7ffb38058d80" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7ffb37f04490" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7ffb37f04490"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7ffb37f04810" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430DmaXP" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="DMAxCTL_addr" ref="0x7ffb37d0e5e0" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxSA_addr" ref="0x7ffb37d0e990" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxDA_addr" ref="0x7ffb37d0ed40" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxSZ_addr" ref="0x7ffb37cf5180" loc="45:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxTSEL_mask" ref="0x7ffb37cf5550" loc="46:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxTSEL_shift" ref="0x7ffb37cf5920" loc="47:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430DmaChannelP" loc="42:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc" abstract="">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="44:../../../tos/platforms/shimmer/SwitchToggleC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7ffb37a149c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7ffb37a149c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7ffb379dbba0" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7ffb379dbba0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7ffb379d83b0" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7ffb379d83b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7ffb379d87a0" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7ffb379d87a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7ffb379d7020" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7ffb379d7020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7ffb379d73f0" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7ffb379d7bf0" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7ffb379d7bf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7ffb379b6020" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7ffb379b6020"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7ffb379b67f0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7ffb379b67f0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7ffb379b6be0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7ffb379b6be0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7ffb379b4400" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7ffb379b4400"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7ffb379b47d0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ffb379764f0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ffb379764f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ffb37946d70" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ffb37946d70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7ffb379430d0" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ffb378f21f0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ffb378f21f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli16C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-10 18:22:02 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="CC2420GpioCaptureC" loc="44:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Steve Ayer/Miklos Maroti&#10; @date   February, 2011&#10;&#10; re-named indicating that this HAL module is specifically required to handle anomalies in the &#10; cc2420 stack that require sfd capture to happen on a timerb pin;  designs that use a timera pin &#10; need this code to resolve the aliasing between timestamps from 32khz and 1mhz timers.&#10; thanks to miklos for providing this re-written captured event handler as a straight-forward work-around!&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi1C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7ffb36ec8ae0" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7ffb36ec16a0" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7ffb36e943f0" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7ffb389965d0" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb389965d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb38996950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ffb38999020" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ffb38999020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ffb389993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb389984a0" loc="40:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb389984a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb38998820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7ffb38988120" loc="6:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7ffb38988120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb389884a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb3898b2b0" loc="4:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb3898b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb3898b630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7ffb3898b9c0" loc="5:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7ffb3898b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb3898bd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7ffb38988800" loc="7:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7ffb38988800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb38988b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb38981080" loc="39:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb38981080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb38981400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7ffb38989500" loc="39:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7ffb38989500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb38989880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7ffb389519e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ffb389519e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7ffb38957980"/>
        <function-ref name="initTimerB" scoped="" ref="0x7ffb38957020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7ffb389571b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7ffb38957340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7ffb38951d60"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7ffb389574d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7ffb38957660"/>
        <function-ref name="initClocks" scoped="" ref="0x7ffb389577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb3895a440" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb3895a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb3895a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7ffb38940350" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ffb38940350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7ffb3893f340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7ffb38940860"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7ffb389409f0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7ffb38940b80"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7ffb389406d0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7ffb38940d10"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7ffb3893f020"/>
        <function-ref name="initClocks" scoped="" ref="0x7ffb3893f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7ffb3893f680" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7ffb3893f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7ffb3893fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb38942c00" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb38942c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb38940020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7ffb388fc5a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7ffb388fc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb388fc920"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb388fcab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb388fcc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb388fcdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb388fb020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb388fb1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb388fb340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb388fb4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb388fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7ffb388ea0c0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7ffb388ea0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb388ea440"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb388ea5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb388ea760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb388ea8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb388eaa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb388eac10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb388eada0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb388e9020"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb388e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7ffb388f3890" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7ffb388f3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388f3c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb388f3da0"/>
        <function-ref name="captured" scoped="" ref="0x7ffb388f2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388f21b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388f2340"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb388f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7ffb388d7a20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7ffb388d7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388d7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb388d6020"/>
        <function-ref name="captured" scoped="" ref="0x7ffb388d61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388d6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388d64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb388d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7ffb388faaa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7ffb388faaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388fae20"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb388f9020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388f91b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb388f9340"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7ffb388dd020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7ffb388dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388dd3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb388dd530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388dd6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb388dd850"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388dd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7ffb388d4a20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7ffb388d4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388d4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb388d3020"/>
        <function-ref name="captured" scoped="" ref="0x7ffb388d31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388d3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388d34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb388d3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7ffb388e55a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7ffb388e55a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb388e5920"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb388e5ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb388e5c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb388e5dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb388e4020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb388e41b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb388e4340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb388e44d0"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb388e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7ffb388fdb10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7ffb388fdb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb38904020"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb389041b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb38904340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb389044d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb38904660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb389047f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb38904980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb38904b10"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb38904ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7ffb388d9a20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7ffb388d9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388d9da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb388d8020"/>
        <function-ref name="captured" scoped="" ref="0x7ffb388d81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388d8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388d84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb388d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7ffb388e03e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7ffb388e03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388e0760"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb388e08f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388e0a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb388e0c10"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388e0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7ffb388e95a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7ffb388e95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb388e9a20"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb388e9bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb388e9d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb388e8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb388e81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb388e8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb388e84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb388e8660"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb388e87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7ffb388f2890" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7ffb388f2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388f2c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb388f2da0"/>
        <function-ref name="captured" scoped="" ref="0x7ffb388ec020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388ec1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388ec340"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb388ec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7ffb388d6a20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7ffb388d6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388d6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb388d5020"/>
        <function-ref name="captured" scoped="" ref="0x7ffb388d51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388d5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388d54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb388d5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7ffb388e8be0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7ffb388e8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb388e7020"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb388e71b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb388e7340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb388e74d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb388e7660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb388e77f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb388e7980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb388e7b10"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb388e7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7ffb388f9890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7ffb388f9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388f9c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb388f9da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388f4020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb388f41b0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7ffb3890d060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7ffb3890d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb3890d3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb3890d570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3890d700"/>
        <function-ref name="get" scoped="" ref="0x7ffb3890d890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3890da20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3890dbb0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb3890dd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3890c020"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb3890c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb3890c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb3890c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7ffb388ddda0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7ffb388ddda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388dc180"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb388dc310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388dc4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb388dc630"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388dc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7ffb389030c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7ffb389030c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb38903440"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb389035d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb38903760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb389038f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb38903a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb38903c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb38903da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb388fc020"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb388fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7ffb388e4a50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7ffb388e4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb388e4dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb388e3020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb388e31b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb388e3340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb388e34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb388e3660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb388e37f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb388e3980"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb388e3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7ffb388ed8d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7ffb388ed8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388edc50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb388edde0"/>
        <function-ref name="captured" scoped="" ref="0x7ffb388f3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388f31b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388f3340"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb388f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7ffb388d8a20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7ffb388d8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388d8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb388d7020"/>
        <function-ref name="captured" scoped="" ref="0x7ffb388d71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388d7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388d74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb388d7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7ffb388f5cf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7ffb388f5cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388fa0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb388fa230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388fa3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb388fa550"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388fa6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7ffb388de1f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7ffb388de1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388de570"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb388de700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388de890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb388dea20"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388debb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7ffb388d5a20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7ffb388d5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388d5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb388d4020"/>
        <function-ref name="captured" scoped="" ref="0x7ffb388d41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388d4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388d44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb388d4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7ffb388e60c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7ffb388e60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb388e6440"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb388e65d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb388e6760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb388e68f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb388e6a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb388e6c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb388e6da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb388e5020"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb388e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7ffb388ec850" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7ffb388ec850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb388ecbd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb388ecd60"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb388eb020"/>
        <function-ref name="get" scoped="" ref="0x7ffb388eb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb388eb340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388eb4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb388eb660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388eb7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb388eb980"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb388ebb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb388ebca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7ffb388dcb80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7ffb388dcb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388db020"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb388db1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388db340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb388db4d0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388db660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7ffb388daa20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7ffb388daa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388dada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb388d9020"/>
        <function-ref name="captured" scoped="" ref="0x7ffb388d91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388d9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388d94d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb388d9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7ffb388dba20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7ffb388dba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388da020"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb388da1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388da340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb388da4d0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388da660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7ffb388e1570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7ffb388e1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388e18f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb388e1a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388e1c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb388e1da0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7ffb388e2020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7ffb388e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb388e23a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb388e2530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb388e26c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb388e2850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb388e29e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb388e2b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb388e2d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb388e1020"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb388e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7ffb3889b2f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7ffb3889b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb3889b670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7ffb3889cc20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7ffb3889cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb3889b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7ffb3889b940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7ffb3889b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb3889bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7ffb3889c5b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ffb3889c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb3889c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ffb3889ec80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb3889ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb3889d0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb3889d230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3889d3c0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3889d550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3889d6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3889d870"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb3889da00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3889db90"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb3889dd20"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb3889c020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb3889c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7ffb388932f0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7ffb388932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb38893670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7ffb38895c20" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7ffb38895c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb38893020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7ffb38893940" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7ffb38893940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb38893cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7ffb388955b0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ffb388955b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb38895950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ffb38897c80" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb38897c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb388960a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb38896230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb388963c0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38896550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb388966e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb38896870"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb38896a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb38896b90"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb38896d20"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb38895020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb388951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ffb38847a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ffb38847a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb38847e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb38846020"/>
        <function-ref name="captured" scoped="" ref="0x7ffb388461b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb38846340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388464d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb38846660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ffb3888f9d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ffb3888f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb3888fd50"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb38848020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb388481b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb38848340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb388484d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb38848660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb388487f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb38848980"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb38848b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ffb38844020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ffb38844020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb388443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ffb38848de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ffb38848de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb38847180"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb38847310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388474a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb38847630"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388477c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ffb38846930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb38846930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb38846cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb38846e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb38845020"/>
        <function-ref name="get" scoped="" ref="0x7ffb388451b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb38845340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388454d0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb38845660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388457f0"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb38845980"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb38845b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb38845ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ffb3883f160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ffb3883f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb3883f4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb3883f670"/>
        <function-ref name="captured" scoped="" ref="0x7ffb3883f800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3883f990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3883fb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb3883fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ffb38841020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ffb38841020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb388413a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb38841530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb388416c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb38841850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb388419e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb38841b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb38841d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb38840020"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb388401b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ffb3883d7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ffb3883d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb3883db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ffb38840480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ffb38840480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb38840800"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb38840990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb38840b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb38840cb0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb38840e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ffb3883e020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb3883e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb3883e3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb3883e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3883e6c0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3883e850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3883e9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3883eb70"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb3883ed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3883d020"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb3883d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb3883d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb3883d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ffb388377a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ffb388377a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb38837b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb38837cb0"/>
        <function-ref name="captured" scoped="" ref="0x7ffb38837e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb38836020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388361b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb38836340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ffb3883a6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ffb3883a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb3883aa50"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb3883abe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3883ad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb38838020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb388381b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb38838340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb388384d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb38838660"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb388387f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ffb38835c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ffb38835c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb38834020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ffb38838ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ffb38838ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb38838e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb38837020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388371b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb38837340"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388374d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ffb38836610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb38836610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb38836990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb38836b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb38836cb0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38836e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb38835020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388351b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb38835340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388354d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb38835660"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb388357f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb38835980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ffb38830cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ffb38830cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb3882f0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb3882f230"/>
        <function-ref name="captured" scoped="" ref="0x7ffb3882f3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3882f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3882f6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb3882f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ffb38832b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ffb38832b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb38831020"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb388311b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb38831340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb388314d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb38831660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb388317f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb38831980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb38831b10"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb38831ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ffb3882d2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ffb3882d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb3882d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ffb38830020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ffb38830020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388303a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb38830530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388306c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb38830850"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388309e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ffb3882fb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb3882fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb3882e020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb3882e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3882e340"/>
        <function-ref name="get" scoped="" ref="0x7ffb3882e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3882e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3882e7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb3882e980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3882eb10"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb3882eca0"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb3882ee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb3882d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ffb388272f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ffb388272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb38827670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb38827800"/>
        <function-ref name="captured" scoped="" ref="0x7ffb38827990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb38827b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb38827cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb38827e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ffb3882a220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ffb3882a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb3882a5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb3882a730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3882a8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb3882aa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb3882abe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3882ad70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb38829020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb388291b0"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb38829340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ffb388257a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ffb388257a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb38825b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ffb38829610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ffb38829610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb38829990"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb38829b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb38829cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb38829e40"/>
        <function-ref name="fired" scoped="" ref="0x7ffb38827020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ffb38826160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb38826160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb388264e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb38826670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb38826800"/>
        <function-ref name="get" scoped="" ref="0x7ffb38826990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb38826b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb38826cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb38826e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb38825020"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb388251b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb38825340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb388254d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ffb388207a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ffb388207a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb38820b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb38820cb0"/>
        <function-ref name="captured" scoped="" ref="0x7ffb38820e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3881f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3881f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb3881f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ffb388226d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ffb388226d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb38822a50"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb38822be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb38822d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb38821020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb388211b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb38821340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb388214d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb38821660"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb388217f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ffb3881ec50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ffb3881ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb3881d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ffb38821ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ffb38821ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb38821e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb38820020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388201b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb38820340"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388204d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ffb3881f610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb3881f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb3881f990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb3881fb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3881fcb0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3881fe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3881e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3881e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb3881e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3881e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb3881e660"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb3881e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb3881e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ffb38819cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ffb38819cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388170a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb38817230"/>
        <function-ref name="captured" scoped="" ref="0x7ffb388173c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb38817550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388176e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb38817870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ffb3881bb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ffb3881bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb3881a020"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb3881a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3881a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb3881a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb3881a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3881a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb3881a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb3881ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb3881aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ffb388152f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ffb388152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb38815670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ffb38819020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ffb38819020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388193a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb38819530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388196c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb38819850"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388199e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ffb38817b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb38817b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb38816020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb388161b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb38816340"/>
        <function-ref name="get" scoped="" ref="0x7ffb388164d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb38816660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388167f0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb38816980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb38816b10"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb38816ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb38816e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb38815020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ffb388102f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ffb388102f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb38810670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb38810800"/>
        <function-ref name="captured" scoped="" ref="0x7ffb38810990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb38810b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb38810cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb38810e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ffb38812220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ffb38812220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb388125a0"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb38812730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb388128c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb38812a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb38812be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb38812d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb38811020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb388111b0"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb38811340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ffb3880e7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ffb3880e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb3880eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ffb38811610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ffb38811610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb38811990"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb38811b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb38811cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb38811e40"/>
        <function-ref name="fired" scoped="" ref="0x7ffb38810020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ffb3880f160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb3880f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb3880f4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb3880f670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3880f800"/>
        <function-ref name="get" scoped="" ref="0x7ffb3880f990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3880fb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3880fcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb3880fe40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3880e020"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb3880e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb3880e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb3880e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ffb388097a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ffb388097a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb38809b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb38809cb0"/>
        <function-ref name="captured" scoped="" ref="0x7ffb38809e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb38807020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388071b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb38807340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ffb3880b6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ffb3880b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb3880ba50"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb3880bbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3880bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb3880a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb3880a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3880a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb3880a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb3880a660"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb3880a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ffb38806c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ffb38806c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb38805020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ffb3880aac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ffb3880aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb3880ae40"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb38809020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388091b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb38809340"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388094d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ffb38807610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb38807610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb38807990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb38807b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb38807cb0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38807e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb38806020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb388061b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb38806340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388064d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb38806660"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb388067f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb38806980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ffb38801cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ffb38801cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388000a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb38800230"/>
        <function-ref name="captured" scoped="" ref="0x7ffb388003c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb38800550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb388006e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb38800870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ffb38803b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ffb38803b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb38802020"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb388021b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb38802340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb388024d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb38802660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb388027f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb38802980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb38802b10"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb38802ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ffb387fe2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ffb387fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb387fe670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ffb38801020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ffb38801020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb388013a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb38801530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb388016c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb38801850"/>
        <function-ref name="fired" scoped="" ref="0x7ffb388019e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ffb38800b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb38800b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb387ff020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb387ff1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb387ff340"/>
        <function-ref name="get" scoped="" ref="0x7ffb387ff4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb387ff660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb387ff7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb387ff980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb387ffb10"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb387ffca0"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb387ffe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb387fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7ffb387f8240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7ffb387f8240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb387f85c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7ffb387fca90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7ffb387fca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb387fce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7ffb387f9260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7ffb387f9260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb387f95e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7ffb387f99f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7ffb387f99f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb387f9d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7ffb38cdb4c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7ffb38cdb4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7ffb38cdb840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7ffb3904c3b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7ffb3904c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7ffb3904c730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7ffb3904c8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7ffb3904ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7ffb38eb5bc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7ffb38eb5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7ffb38ff1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7ffb387c1dc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7ffb387c1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb387c0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ffb387c2590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ffb387c2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ffb387c2910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7ffb387c16c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7ffb387c16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb387c1a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7ffb387c2c00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7ffb387c2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb387c1020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ffb387c11b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ffb387c1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7ffb390c9410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7ffb390c9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb390c9790"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb390c9920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7ffb3905a3a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7ffb3905a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb3905a720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ffb3905a8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ffb3905aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7ffb38a31b70" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7ffb38a31b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb38a30020"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb38a301b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7ffb38a2a2c0" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7ffb38a2a2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7ffb38a2a640"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7ffb38a2a7d0"/>
        <function-ref name="sleep" scoped="" ref="0x7ffb38a2a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7ffb38a32c30" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7ffb38a32c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb38a31020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ffb38a311b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ffb38a31340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ffb37f09020" loc="49:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ffb37f09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb37f093a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37f09530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb37f096c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb37f09850"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb37f099e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ffb37f09c30" loc="50:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb37f09c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37f08020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb37f081b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37f08340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb37f084d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb37f08660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ffb37f088b0" loc="51:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ffb37f088b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ffb37f08c30"/>
        <function-ref name="source" scoped="" ref="0x7ffb37f08dc0"/>
        <function-ref name="address" scoped="" ref="0x7ffb37f07020"/>
        <function-ref name="destination" scoped="" ref="0x7ffb37f071b0"/>
        <function-ref name="setSource" scoped="" ref="0x7ffb37f07340"/>
        <function-ref name="setDestination" scoped="" ref="0x7ffb37f074d0"/>
        <function-ref name="type" scoped="" ref="0x7ffb37f07660"/>
        <function-ref name="setType" scoped="" ref="0x7ffb37f077f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7ffb37f07980"/>
        <function-ref name="setGroup" scoped="" ref="0x7ffb37f07b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7ffb37f07ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ffb37f06020" loc="52:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ffb37f06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ffb37f063a0"/>
        <function-ref name="noAck" scoped="" ref="0x7ffb37f06530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ffb37f066c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ffb36cf2120" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ffb36cf2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36cf24a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36cf2630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36cf27c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36cf2950"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36cf2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7ffb36cf2d90" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb36cf2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36cf1180"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36cf1310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36cf14a0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36cf1630"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36cf17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7ffb36cf1a10" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ffb36cf1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ffb36cf1d90"/>
        <function-ref name="source" scoped="" ref="0x7ffb36cf0020"/>
        <function-ref name="address" scoped="" ref="0x7ffb36cf01b0"/>
        <function-ref name="destination" scoped="" ref="0x7ffb36cf0340"/>
        <function-ref name="setSource" scoped="" ref="0x7ffb36cf04d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7ffb36cf0660"/>
        <function-ref name="type" scoped="" ref="0x7ffb36cf07f0"/>
        <function-ref name="setType" scoped="" ref="0x7ffb36cf0980"/>
        <function-ref name="isForMe" scoped="" ref="0x7ffb36cf0b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7ffb36cf0ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7ffb36cf0e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb3876cce0" loc="44:../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb3876cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb387690a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb38769230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb387693c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb38769550"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb387696e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7ffb3871f400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ffb3871f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb3871f7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb3871f930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb3871fac0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb3871fc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb3871fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb38720580" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb38720580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb38720920"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb38720ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb38720c40"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb38720dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb3871f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7ffb3871c720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb3871c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb3871caa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb3871cc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb3871cdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb3871b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb3871b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7ffb3871b480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7ffb3871b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb3871b800"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb3871b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7ffb3871bc60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7ffb3871bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb3871a020"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb3871a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7ffb3871e060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ffb3871e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ffb3871e3e0"/>
        <function-ref name="source" scoped="" ref="0x7ffb3871e570"/>
        <function-ref name="address" scoped="" ref="0x7ffb3871e700"/>
        <function-ref name="destination" scoped="" ref="0x7ffb3871e890"/>
        <function-ref name="setSource" scoped="" ref="0x7ffb3871ea20"/>
        <function-ref name="setDestination" scoped="" ref="0x7ffb3871ebb0"/>
        <function-ref name="type" scoped="" ref="0x7ffb3871ed40"/>
        <function-ref name="setType" scoped="" ref="0x7ffb3871c020"/>
        <function-ref name="isForMe" scoped="" ref="0x7ffb3871c1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ffb3871c340"/>
        <function-ref name="localGroup" scoped="" ref="0x7ffb3871c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ffb387113b0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ffb387113b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ffb38711730"/>
        <function-ref name="stopDone" scoped="" ref="0x7ffb387118c0"/>
        <function-ref name="start" scoped="" ref="0x7ffb38711a50"/>
        <function-ref name="stop" scoped="" ref="0x7ffb38711be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ffb387153f0" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ffb387153f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb38715770"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb38715900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb38715a90"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb38715c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb38715db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ffb3870f7e0" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb3870f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb3870fb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb3870fcf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb3870fe80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb3870e030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb3870e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb3870f1d0" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb3870f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb3870f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb386fd330" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb386fd330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb386fd6b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb386fd840"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb386fd9d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb386fdb60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb386fdcf0"/>
        <function-ref name="get" scoped="" ref="0x7ffb386fde80"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb38708030"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb38708670"/>
        <function-ref name="set" scoped="" ref="0x7ffb387081c0"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb38708350"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb387084e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ffb3870cb20" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb3870cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ffb38709020"/>
        <function-ref name="noAck" scoped="" ref="0x7ffb387091b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ffb38709340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ffb3870e470" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ffb3870e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ffb3870e7f0"/>
        <function-ref name="source" scoped="" ref="0x7ffb3870e980"/>
        <function-ref name="address" scoped="" ref="0x7ffb3870eb10"/>
        <function-ref name="destination" scoped="" ref="0x7ffb3870eca0"/>
        <function-ref name="setSource" scoped="" ref="0x7ffb3870ee30"/>
        <function-ref name="setDestination" scoped="" ref="0x7ffb3870c020"/>
        <function-ref name="type" scoped="" ref="0x7ffb3870c1b0"/>
        <function-ref name="setType" scoped="" ref="0x7ffb3870c340"/>
        <function-ref name="isForMe" scoped="" ref="0x7ffb3870c4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ffb3870c660"/>
        <function-ref name="localGroup" scoped="" ref="0x7ffb3870c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ffb386a34a0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ffb386a34a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb386a3820"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb386a39b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb386a3b40"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb386a3cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb386a3e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ffb386a2120" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ffb386a2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb386a24a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ffb386fc300" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ffb386fc300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb386fc6a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb386fc830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb386fc9c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb386fcb50"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb386fcce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ffb386a5d60" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb386a5d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb386a4180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb386a4310"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb386a44a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb386a4630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb386a47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb386a70d0" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb386a70d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb386a7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ffb386a4a10" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb386a4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ffb386a4d90"/>
        <function-ref name="noAck" scoped="" ref="0x7ffb386a3020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ffb386a31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ffb386a76c0" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ffb386a76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ffb386a7a40"/>
        <function-ref name="source" scoped="" ref="0x7ffb386a7bd0"/>
        <function-ref name="address" scoped="" ref="0x7ffb386a7d60"/>
        <function-ref name="destination" scoped="" ref="0x7ffb386a5020"/>
        <function-ref name="setSource" scoped="" ref="0x7ffb386a51b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7ffb386a5340"/>
        <function-ref name="type" scoped="" ref="0x7ffb386a54d0"/>
        <function-ref name="setType" scoped="" ref="0x7ffb386a5660"/>
        <function-ref name="isForMe" scoped="" ref="0x7ffb386a57f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ffb386a5980"/>
        <function-ref name="localGroup" scoped="" ref="0x7ffb386a5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ffb386a0b90" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ffb386a0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ffb3869d020"/>
        <function-ref name="stopDone" scoped="" ref="0x7ffb3869d1b0"/>
        <function-ref name="start" scoped="" ref="0x7ffb3869d340"/>
        <function-ref name="stop" scoped="" ref="0x7ffb3869d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb3869c790" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb3869c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7ffb389b1810"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb3869cb10"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb3869cca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb3869ce30"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb3869b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb3869b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb386a0540" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb386a0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb386a08c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb3869dc60" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb3869dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7ffb389b1810"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb3869c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb386992b0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb386992b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb38699630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb386997c0"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb38699950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb38699ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb38699c70"/>
        <function-ref name="get" scoped="" ref="0x7ffb38699e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb38698020"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb38698660"/>
        <function-ref name="set" scoped="" ref="0x7ffb386981b0"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb38698340"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb386984d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7ffb38695970" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7ffb38695970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7ffb389b1810"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7ffb38695cf0"/>
        <function-ref name="offset" scoped="" ref="0x7ffb38695e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7ffb38699030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ffb3868ec40" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ffb3868ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ffb3868c020"/>
        <function-ref name="stopDone" scoped="" ref="0x7ffb3868c1b0"/>
        <function-ref name="start" scoped="" ref="0x7ffb3868c340"/>
        <function-ref name="stop" scoped="" ref="0x7ffb3868c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7ffb386256e0" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7ffb386256e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb38625a60"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb38625bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7ffb38678780" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7ffb38678780"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb38678b00"/>
        <function-ref name="stop" scoped="" ref="0x7ffb38678c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7ffb3865c4f0" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7ffb3865c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb3865c870"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb3865ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb3868e5f0" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb3868e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb3868e970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7ffb38676360" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7ffb38676360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7ffb386766e0"/>
        <function-ref name="flush" scoped="" ref="0x7ffb38676870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7ffb38629c70" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7ffb38629c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb38628020"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb386281b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7ffb3867c7e0" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7ffb3867c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7ffb3867cb60"/>
        <function-ref name="resetSend" scoped="" ref="0x7ffb3867ccf0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7ffb3867ce80"/>
        <function-ref name="resetReceive" scoped="" ref="0x7ffb38686030"/>
        <function-ref name="putData" scoped="" ref="0x7ffb386861c0"/>
        <function-ref name="putDone" scoped="" ref="0x7ffb38686350"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7ffb386864e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb38686760" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb38686760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb38686ae0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb38686c70"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb38686e00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb38681020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb386811b0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38681340"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb386814d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb38681b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38681660"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb386817f0"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb38681980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7ffb38622a00" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7ffb38622a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb38622d80"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb38620020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7ffb38687a40" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7ffb38687a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7ffb38687dc0"/>
        <function-ref name="nextByte" scoped="" ref="0x7ffb3868b020"/>
        <function-ref name="startSend" scoped="" ref="0x7ffb3868b1b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7ffb3868b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7ffb38682530" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7ffb38682530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7ffb386828b0"/>
        <function-ref name="byteReceived" scoped="" ref="0x7ffb38682a40"/>
        <function-ref name="endPacket" scoped="" ref="0x7ffb38682bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7ffb38556020" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7ffb38556020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb385563a0"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb38556530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb3855cde0" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb3855cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7ffb389b1810"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb3855b1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb3855b350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb3855b4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb3855b670"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb3855b800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7ffb38556800" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7ffb38556800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb38556b80"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb38556d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb3855c6c0" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb3855c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7ffb389b1810"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb3855ca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7ffb3855bc20" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7ffb3855bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7ffb389b1810"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7ffb3855a020"/>
        <function-ref name="offset" scoped="" ref="0x7ffb3855a1b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7ffb3855a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb38559920" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb38559920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb38559ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb38559e30"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb38557020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb385571b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb38557340"/>
        <function-ref name="get" scoped="" ref="0x7ffb385574d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb38557660"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb38557ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb38557980"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb385577f0"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb38557b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7ffb3855ae80" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7ffb3855ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7ffb38559220"/>
        <function-ref name="nextByte" scoped="" ref="0x7ffb385593b0"/>
        <function-ref name="startSend" scoped="" ref="0x7ffb38559540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7ffb385596d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7ffb3855a590" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7ffb3855a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7ffb3855a910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7ffb3855aaa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7ffb3855ac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7ffb38547d20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7ffb38547d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb3854f0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7ffb3854f270"/>
        <function-ref name="receive" scoped="" ref="0x7ffb3854f400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7ffb3854f590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7ffb3854f720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7ffb3854f8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb3854fa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7ffb38554e00" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7ffb38554e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7ffb385511c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7ffb38551350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7ffb385514e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7ffb38551670"/>
        <function-ref name="putData" scoped="" ref="0x7ffb38551800"/>
        <function-ref name="putDone" scoped="" ref="0x7ffb38551990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7ffb38551b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb3854fcc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb3854fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb3854e0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb3854e230"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb3854e3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb3854e550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb3854e6e0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3854e870"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb3854ea00"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb385441b0"/>
        <function-ref name="set" scoped="" ref="0x7ffb3854eb90"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb3854ed20"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb38544020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7ffb38527020" loc="40:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7ffb38527020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb385273a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7ffb38527530"/>
        <function-ref name="receive" scoped="" ref="0x7ffb385276c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7ffb38527850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7ffb385298d0" loc="39:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7ffb385298d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb38529c50"/>
        <function-ref name="receivedByte" scoped="" ref="0x7ffb38529de0"/>
        <function-ref name="receive" scoped="" ref="0x7ffb38528020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7ffb385281b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7ffb38528340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7ffb385284d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb38528660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ffb385290c0" loc="38:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ffb385290c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb38529440"/>
        <function-ref name="stop" scoped="" ref="0x7ffb385295d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ffb37f3dc70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb37f3dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ffb37f3c020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb37f3c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7ffb37f3b440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7ffb37f3b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb37f3b7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7ffb37f3b950"/>
        <function-ref name="receive" scoped="" ref="0x7ffb37f3bae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7ffb37f3bc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7ffb37f3a020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ffb37f3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ffb37f3a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7ffb37f3c440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7ffb37f3c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb37f3c7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7ffb37f3c950"/>
        <function-ref name="receive" scoped="" ref="0x7ffb37f3cae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7ffb37f3cc70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7ffb37f3ce00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7ffb37f3b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb37f3b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb37f3d020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb37f3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb37f3d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb37f3d530"/>
        <function-ref name="request" scoped="" ref="0x7ffb37f3d6c0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb37f3d850"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb37f3d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7ffb384bedd0" loc="42:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb384bedd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ffb384c0180"/>
        <function-ref name="configure" scoped="" ref="0x7ffb384c0310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7ffb384bc210" loc="44:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7ffb384bc210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb384bc590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7ffb384bc720"/>
        <function-ref name="receive" scoped="" ref="0x7ffb384bc8b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7ffb384bca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7ffb384ba600" loc="47:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ffb384ba600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ffb384ba980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7ffb384c0b50" loc="43:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7ffb384c0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb384bf020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7ffb384bf1b0"/>
        <function-ref name="receive" scoped="" ref="0x7ffb384bf340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7ffb384bf4d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7ffb384bf660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7ffb384bf7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb384bf980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7ffb384bb370" loc="46:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7ffb384bb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb384bb6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb384bb880"/>
        <function-ref name="request" scoped="" ref="0x7ffb384bba10"/>
        <function-ref name="granted" scoped="" ref="0x7ffb384bbba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb384bbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb384c2320" loc="41:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb384c2320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb384c26a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb384c2830"/>
        <function-ref name="request" scoped="" ref="0x7ffb384c29c0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb384c2b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb384c2ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7ffb384b5be0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7ffb384b5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb384b9020"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb384b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7ffb3842ae70" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb3842ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ffb38429240"/>
        <function-ref name="configure" scoped="" ref="0x7ffb384293d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7ffb38428890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7ffb38428890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb38428c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7ffb38428dc0"/>
        <function-ref name="receive" scoped="" ref="0x7ffb38427020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7ffb384271b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7ffb384263e0" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ffb384263e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ffb38426780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7ffb38426a50" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7ffb38426a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ffb38426dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ffb38425020"/>
        <function-ref name="setUctl" scoped="" ref="0x7ffb384251b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7ffb38425340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ffb384254d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ffb38425660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ffb384257f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ffb38425980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ffb38425b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ffb38425ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ffb38425e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ffb38424020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ffb384241b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7ffb38424440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ffb384245d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ffb38424760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ffb384248f0"/>
        <function-ref name="isUart" scoped="" ref="0x7ffb38424a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ffb38424c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7ffb38424da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ffb38423020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ffb384231b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ffb38423340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ffb384234d0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb38423660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ffb384239f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ffb38423b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7ffb38423d10"/>
        <function-ref name="tx" scoped="" ref="0x7ffb38422020"/>
        <function-ref name="getUctl" scoped="" ref="0x7ffb384221b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7ffb38422340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ffb384224d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ffb38422660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ffb384227f0"/>
        <function-ref name="rx" scoped="" ref="0x7ffb38422980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ffb38422b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ffb38422ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ffb38422e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ffb38421020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ffb384211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7ffb38429790" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7ffb38429790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb38429b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7ffb38429cc0"/>
        <function-ref name="receive" scoped="" ref="0x7ffb38429e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7ffb38428020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7ffb384281b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7ffb38428340"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb384284d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ffb38420020" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb38420020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb38420e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3841e800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3841e340"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb3841ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7ffb384275b0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7ffb384275b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb38427950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb38427ae0"/>
        <function-ref name="request" scoped="" ref="0x7ffb38427c70"/>
        <function-ref name="granted" scoped="" ref="0x7ffb38427e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb38426020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb3842a0d0" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb3842a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb3842a470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb3842a600"/>
        <function-ref name="request" scoped="" ref="0x7ffb3842a790"/>
        <function-ref name="granted" scoped="" ref="0x7ffb3842a920"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb3842aab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7ffb384215b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7ffb384215b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb38421950"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb38421ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb3841d120" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb3841d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb3841d4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb3841d630"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb3841d7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb3841d950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb3841dae0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3841dc70"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb3841de00"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb3841c4d0"/>
        <function-ref name="set" scoped="" ref="0x7ffb3841c1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb3841c020"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb3841c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7ffb3840fbd0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ffb3840fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb3840e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7ffb384106d0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ffb384106d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb38410a50"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb38410be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7ffb38417b60" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ffb38417b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ffb38414020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ffb384141b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7ffb38414340"/>
        <function-ref name="enableUart" scoped="" ref="0x7ffb384144d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ffb38414660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ffb384147f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ffb38414980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ffb38414b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ffb38414ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ffb38414e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ffb38413020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ffb384131b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ffb38413340"/>
        <function-ref name="getUbr" scoped="" ref="0x7ffb384135d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ffb38413760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ffb384138f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ffb38413a80"/>
        <function-ref name="isUart" scoped="" ref="0x7ffb38413c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ffb38413da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7ffb38412020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ffb384121b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ffb38412340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ffb384124d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ffb38412660"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb384127f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ffb38412b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ffb38412d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7ffb38411020"/>
        <function-ref name="tx" scoped="" ref="0x7ffb384111b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7ffb38411340"/>
        <function-ref name="disableUart" scoped="" ref="0x7ffb384114d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ffb38411660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ffb384117f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ffb38411980"/>
        <function-ref name="rx" scoped="" ref="0x7ffb38411b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ffb38411ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ffb38411e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ffb38410020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ffb384101b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ffb38410340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7ffb383c8800" loc="82:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7ffb383c8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb383c8b80"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb383c8d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb383c7020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383c71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb383c7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383c74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb383c7660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383c77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb383c7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb383c7b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb383c7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb383c7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb383c6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383c62b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb383c6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ffb38406020" loc="76:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ffb38406020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb384063a0"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb38406530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7ffb383c6800" loc="83:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7ffb383c6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb383c6b80"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb383c6d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb383c5020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383c51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb383c5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383c54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb383c5660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383c57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb383c5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb383c5b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb383c5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb383c5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb383c4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383c42b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb383c4440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7ffb383c4800" loc="84:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7ffb383c4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb383c4b80"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb383c4d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb383c3020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383c31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb383c3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383c34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb383c3660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383c37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb383c3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb383c3b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb383c3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb383c3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb383c2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383c22b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb383c2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7ffb3840b360" loc="75:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7ffb3840b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ffb3840b6e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ffb3840b870"/>
        <function-ref name="setUctl" scoped="" ref="0x7ffb3840ba00"/>
        <function-ref name="enableUart" scoped="" ref="0x7ffb3840bb90"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ffb3840bd20"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ffb3840a020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ffb3840a1b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ffb3840a340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ffb3840a4d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ffb3840a660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ffb3840a7f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ffb3840a980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ffb3840ab10"/>
        <function-ref name="getUbr" scoped="" ref="0x7ffb3840ada0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ffb38409020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ffb384091b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ffb38409340"/>
        <function-ref name="isUart" scoped="" ref="0x7ffb384094d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ffb38409660"/>
        <function-ref name="isSpi" scoped="" ref="0x7ffb384097f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ffb38409980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ffb38409b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ffb38409ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ffb38409e30"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb38408020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ffb384083b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ffb38408540"/>
        <function-ref name="setUbr" scoped="" ref="0x7ffb384086d0"/>
        <function-ref name="tx" scoped="" ref="0x7ffb38408860"/>
        <function-ref name="getUctl" scoped="" ref="0x7ffb384089f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7ffb38408b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ffb38408d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ffb38407020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ffb384071b0"/>
        <function-ref name="rx" scoped="" ref="0x7ffb38407340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ffb384074d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ffb38407660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ffb384077f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ffb38407980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ffb38407b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb383c2700" loc="86:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb383c2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb383c2a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb383c2c10"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb383c2da0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb383c1020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb383c11b0"/>
        <function-ref name="get" scoped="" ref="0x7ffb383c1340"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb383c14d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb383c1b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb383c1660"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb383c17f0"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb383c1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7ffb383dcbc0" loc="79:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7ffb383dcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ffb38404020"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ffb384041b0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ffb38404340"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ffb384044d0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ffb38404660"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ffb384047f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ffb38404980"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ffb38404b10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb38404ca0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ffb38404e30"/>
        <function-ref name="getData" scoped="" ref="0x7ffb38403020"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ffb384031b0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ffb38403340"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ffb384035d0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ffb38403760"/>
        <function-ref name="getIV" scoped="" ref="0x7ffb384038f0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ffb38403a80"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ffb38403c10"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ffb38403da0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ffb383da020"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ffb383da1b0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ffb383da340"/>
        <function-ref name="isI2C" scoped="" ref="0x7ffb383da4d0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ffb383da660"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ffb383da7f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ffb383dab80"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ffb383dad10"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ffb383d9020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ffb383d91b0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ffb383d9340"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ffb383d94d0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ffb383d9660"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ffb383d97f0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ffb383d9980"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ffb383d9b10"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ffb383d9ca0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ffb383d9e30"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ffb383d8020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ffb383d81b0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ffb383d8340"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ffb383d84d0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ffb383d8660"/>
        <function-ref name="setData" scoped="" ref="0x7ffb383d87f0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ffb383d8980"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ffb383d8b10"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ffb383d8ca0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ffb383d8e30"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ffb383d7020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ffb383d71b0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ffb383d7740"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ffb383d78d0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ffb383d7a60"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ffb383d7bf0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ffb383d7d80"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ffb383d6020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ffb383d61b0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ffb383d6340"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ffb383d64d0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ffb383d6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7ffb383d4800" loc="81:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7ffb383d4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb383d4b80"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb383d4d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb383c9020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383c91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb383c9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383c94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb383c9660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383c97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb383c9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb383c9b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb383c9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb383c9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb383c8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383c82b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb383c8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ffb38406970" loc="77:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ffb38406970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb38406cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7ffb383ca860" loc="80:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7ffb383ca860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb383cabe0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb383cad70"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb383d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383d51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb383d5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383d54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb383d5660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383d57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb383d5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb383d5b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb383d5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb383d5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb383d4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383d42b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb383d4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7ffb3833e810" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7ffb3833e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3833eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3833ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3833d020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3833d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3833d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3833d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3833d660"/>
        <function-ref name="get" scoped="" ref="0x7ffb3833d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3833d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3833db10"/>
        <function-ref name="set" scoped="" ref="0x7ffb3833dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3833de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3833c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3833c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3833c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7ffb38329810" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7ffb38329810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38329b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38329d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38328020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383281b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38328340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383284d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38328660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383287f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38328980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38328b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38328ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38328e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38327020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383272b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38327440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7ffb382e0ca0" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7ffb382e0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382df0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382df230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382df3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382df550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382df6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382df870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382dfa00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382dfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382dfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382de020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382de1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382de340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382de4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382de760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382de8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7ffb382bbcb0" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7ffb382bbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382ba0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382ba230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382ba3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382ba550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382ba6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382ba870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382baa00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382bab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382bad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382b9020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382b91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382b9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382b94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382b9760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7ffb382decc0" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7ffb382decc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382dd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382dd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382dd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382dd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382dd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382dd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382dda00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382ddb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382ddd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382dc020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382dc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382dc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382dc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382dc760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382dc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7ffb38325810" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7ffb38325810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38325b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38325d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38324020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383241b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38324340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383244d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38324660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383247f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38324980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38324b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38324ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38324e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38323020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383232b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38323440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7ffb383119a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7ffb383119a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38311d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38310020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb383101b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38310340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb383104d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38310660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb383107f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38310980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38310b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38310ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb38310e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3830f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3830f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3830f440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3830f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7ffb382fc9a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7ffb382fc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382fcd20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382fb020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382fb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382fb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382fb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382fb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382fb7f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382fb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382fbb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382fbca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382fbe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382fa020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382fa1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382fa440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382fa5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7ffb382ec9a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7ffb382ec9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382ecd20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382eb020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382eb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382eb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382eb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382eb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382eb7f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382eb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382ebb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382ebca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382ebe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382ea020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382ea1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382ea440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382ea5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7ffb382d7cc0" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7ffb382d7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382d60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382d6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382d63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382d6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382d66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382d6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382d6a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382d6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382d6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382d5020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382d51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382d5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382d54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382d5760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382d58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7ffb382c7cb0" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7ffb382c7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382c60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382c6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382c63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382c6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382c66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382c6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382c6a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382c6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382c6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382c5020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382c51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382c5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382c54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382c5760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382c58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7ffb382b3cc0" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7ffb382b3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382b20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382b2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382b23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382b2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382b26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382b2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382b2a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382b2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382b2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382b1020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382b11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382b1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382b14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382b1760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382b18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7ffb38338810" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7ffb38338810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38338b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38338d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38336020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383361b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38336340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383364d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38336660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383367f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38336980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38336b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38336ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38336e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38335020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383352b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38335440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7ffb382d5cc0" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7ffb382d5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382d40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382d4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382d43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382d4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382d46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382d4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382d4a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382d4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382d4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382d3020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382d31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382d3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382d34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382d3760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382d38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7ffb38333810" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7ffb38333810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38333b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38333d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38332020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383321b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38332340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383324d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38332660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383327f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38332980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38332b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38332ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38332e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38331020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383312b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38331440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7ffb3831f810" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7ffb3831f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3831fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3831fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3831e020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3831e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3831e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3831e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3831e660"/>
        <function-ref name="get" scoped="" ref="0x7ffb3831e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3831e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3831eb10"/>
        <function-ref name="set" scoped="" ref="0x7ffb3831eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3831ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3831d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3831d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3831d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7ffb3830b9a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7ffb3830b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3830bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3830a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3830a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3830a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3830a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3830a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3830a7f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3830a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3830ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3830aca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb3830ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38309020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb383091b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38309440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb383095d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7ffb382f69a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7ffb382f69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382f6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382f5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382f51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382f5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382f54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382f5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382f57f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382f5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382f5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382f5ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382f5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382f4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382f41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382f4440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382f45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7ffb382e69a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7ffb382e69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382e6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382e5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382e51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382e5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382e54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382e5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382e57f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382e5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382e5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382e5ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382e5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382e4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382e41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382e4440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382e45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7ffb38342810" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7ffb38342810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38342b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38342d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38341020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383411b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38341340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383414d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38341660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383417f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38341980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38341b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38341ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38341e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38340020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383402b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38340440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7ffb3832d810" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7ffb3832d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3832dc90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3832de20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3832c020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3832c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3832c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3832c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3832c660"/>
        <function-ref name="get" scoped="" ref="0x7ffb3832c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3832c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3832cb10"/>
        <function-ref name="set" scoped="" ref="0x7ffb3832cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3832ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3832b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3832b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3832b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7ffb38319810" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7ffb38319810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38319b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38319d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38318020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38318340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38318660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383187f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38318980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38318b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38318ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38318e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38317020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383172b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38317440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7ffb382e2cc0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7ffb382e2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382e10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382e1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382e13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382e1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382e16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382e1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382e1a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382e1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382e1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382e0020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382e01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382e0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382e04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382e0760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382e08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7ffb382c1cb0" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7ffb382c1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382c00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382c0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382c03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382c0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382c06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382c0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382c0a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382c0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382c0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382bf020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382bf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382bf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382bf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382bf760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382bf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7ffb382b5cb0" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7ffb382b5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382b40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382b4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382b43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382b4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382b46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382b4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382b4a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382b4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382b4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382b3020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382b31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382b3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382b34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382b3760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7ffb382cdcc0" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7ffb382cdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382cc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382cc230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382cc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382cc550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382cc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382cc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382cca00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382ccb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382ccd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382cb020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382cb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382cb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382cb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382cb760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382cb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7ffb38315810" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7ffb38315810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38315d90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38314020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb383141b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38314340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb383144d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38314660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb383147f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38314980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38314b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38314ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb38314e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38313020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb383131b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38313440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb383135d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7ffb383009a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7ffb383009a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38300d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382ff020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382ff1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382ff340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382ff4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382ff660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382ff7f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382ff980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382ffb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382ffca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382ffe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382fe020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382fe1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382fe440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382fe5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7ffb382f09a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7ffb382f09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382f0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382ef020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382ef1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382ef340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382ef4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382ef660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382ef7f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382ef980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382efb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382efca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382efe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382ee020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382ee1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382ee440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382ee5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7ffb382bfcb0" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7ffb382bfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382be0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382be230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382be3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382be550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382be6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382be870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382bea00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382beb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382bed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382bd020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382bd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382bd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382bd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382bd760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7ffb382d3cb0" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7ffb382d3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382d20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382d2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382d23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382d2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382d26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382d2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382d2a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382d2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382d2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382d1020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382d11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382d1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382d14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382d1760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382d18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7ffb3833c810" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7ffb3833c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3833cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3833cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3833b020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3833b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3833b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3833b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3833b660"/>
        <function-ref name="get" scoped="" ref="0x7ffb3833b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3833b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3833bb10"/>
        <function-ref name="set" scoped="" ref="0x7ffb3833bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3833be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3833a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3833a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3833a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7ffb38327810" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7ffb38327810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38327b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38327d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38326020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38326340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38326660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383267f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38326980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38326b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38326ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38326e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38325020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383252b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38325440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7ffb382f49a0" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7ffb382f49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382f4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382f3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382f31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382f3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382f34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382f3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382f37f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382f3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382f3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382f3ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382f3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382f2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382f21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382f2440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382f25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7ffb38323810" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7ffb38323810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38323b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38323d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38322020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383221b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38322340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383224d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38322660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383227f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38322980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38322b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38322ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38322e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38321020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383212b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38321440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7ffb3830f9a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7ffb3830f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3830fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3830e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3830e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3830e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3830e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3830e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3830e7f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3830e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3830eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3830eca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb3830ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3830d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3830d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3830d440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3830d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7ffb382fa9a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7ffb382fa9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382fad20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382f9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382f91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382f9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382f94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382f9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382f97f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382f9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382f9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382f9ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382f9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382f8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382f81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382f8440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382f85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7ffb382ea9a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7ffb382ea9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382ead20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382e9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382e91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382e9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382e94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382e9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382e97f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382e9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382e9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382e9ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382e9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382e8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382e81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382e8440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382e85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7ffb382cfcc0" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7ffb382cfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382ce0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382ce230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382ce3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382ce550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382ce6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382ce870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382cea00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382ceb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382ced20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382cd020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382cd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382cd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382cd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382cd760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382cd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7ffb38348800" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7ffb38348800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38348b80"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38348d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38345020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383451b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38345340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383454d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38345660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383457f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38345980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38345b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38345ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38345e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38344020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383442b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38344440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7ffb38331810" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7ffb38331810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38331b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38331d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38330020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383301b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38330340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383304d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38330660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383307f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38330980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38330b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38330ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38330e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3832f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3832f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3832f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7ffb3831d810" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7ffb3831d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3831db90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3831dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3831c020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3831c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3831c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3831c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3831c660"/>
        <function-ref name="get" scoped="" ref="0x7ffb3831c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3831c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3831cb10"/>
        <function-ref name="set" scoped="" ref="0x7ffb3831cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3831ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3831b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3831b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3831b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7ffb383099a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7ffb383099a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38309d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38307020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb383071b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38307340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb383074d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38307660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb383077f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38307980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38307b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38307ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb38307e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38306020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb383061b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38306440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb383065d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7ffb382cbcc0" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7ffb382cbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382ca0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382ca230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382ca3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382ca550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382ca6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382ca870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382caa00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382cab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382cad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382c9020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382c91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382c9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382c94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382c9760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382c98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7ffb382c5cb0" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7ffb382c5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382c40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382c4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382c43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382c4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382c46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382c4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382c4a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382c4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382c4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382c3020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382c31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382c3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382c34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382c3760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382c38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7ffb382b9cb0" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7ffb382b9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382b80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382b8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382b83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382b8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382b86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382b8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382b8a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382b8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382b8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382b7020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382b71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382b7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382b74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382b7760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382b78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7ffb383049a0" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7ffb383049a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38304d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38303020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb383031b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38303340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb383034d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38303660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb383037f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38303980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38303b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38303ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb38303e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38302020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb383021b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38302440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb383025d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7ffb382c9cc0" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7ffb382c9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382c80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382c8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382c83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382c8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382c86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382c8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382c8a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382c8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382c8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382c7020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382c71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382c7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382c74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382c7760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382c78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7ffb38340810" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7ffb38340810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38340b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38340d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3833f020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3833f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3833f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3833f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3833f660"/>
        <function-ref name="get" scoped="" ref="0x7ffb3833f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3833f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3833fb10"/>
        <function-ref name="set" scoped="" ref="0x7ffb3833fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3833fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3833e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3833e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3833e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7ffb3832b810" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7ffb3832b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3832bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3832bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3832a020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3832a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3832a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3832a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3832a660"/>
        <function-ref name="get" scoped="" ref="0x7ffb3832a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3832a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3832ab10"/>
        <function-ref name="set" scoped="" ref="0x7ffb3832aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3832ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38329020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383292b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38329440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7ffb38317810" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7ffb38317810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38317b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38317d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38316020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38316340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38316660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383167f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38316980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38316b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38316ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38316e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38315020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383152b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38315440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7ffb382d1cc0" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7ffb382d1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382d00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382d0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382d03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382d0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382d06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382d0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382d0a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382d0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382d0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382cf020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382cf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382cf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382cf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382cf760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382cf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7ffb382bdcb0" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7ffb382bdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382bc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382bc230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382bc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382bc550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382bc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382bc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382bca00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382bcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382bcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382bb020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382bb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382bb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382bb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382bb760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7ffb383139a0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7ffb383139a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38313d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38312020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb383121b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38312340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb383124d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38312660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb383127f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38312980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38312b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38312ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb38312e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38311020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb383111b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38311440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb383115d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7ffb382fe9a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7ffb382fe9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382fed20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382fd020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382fd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382fd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382fd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382fd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382fd7f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382fd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382fdb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382fdca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382fde30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382fc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382fc1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382fc440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382fc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7ffb382ee9a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7ffb382ee9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382eed20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382ed020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382ed1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382ed340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382ed4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382ed660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382ed7f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382ed980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382edb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382edca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382ede30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382ec020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382ec1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382ec440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382ec5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7ffb3833a810" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7ffb3833a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3833ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3833ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38339020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383391b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38339340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38339660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383397f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38339980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38339b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38339ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38339e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38338020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383382b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38338440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7ffb382f29a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7ffb382f29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382f2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382f1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382f11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382f1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382f14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382f1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382f17f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382f1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382f1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382f1ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382f1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382f0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382f01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382f0440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382f05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7ffb38335810" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7ffb38335810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38335b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38335d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38334020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383341b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38334340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383344d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38334660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383347f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38334980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38334b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38334ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38334e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38333020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383332b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38333440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7ffb38321810" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7ffb38321810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38321b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38321d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38320020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383201b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38320340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383204d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38320660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383207f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38320980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38320b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38320ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38320e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3831f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3831f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3831f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7ffb3830d9a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7ffb3830d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3830dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3830c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3830c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3830c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3830c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3830c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3830c7f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3830c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3830cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3830cca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb3830ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3830b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3830b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3830b440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3830b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7ffb382f89a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7ffb382f89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382f8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382f7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382f71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382f7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382f74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382f7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382f77f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382f7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382f7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382f7ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382f7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382f6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382f61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382f6440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382f65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7ffb382e89a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7ffb382e89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382e8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382e7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382e71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382e7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382e74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382e7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382e77f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb382e7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382e7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382e7ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb382e7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382e6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382e61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382e6440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382e65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7ffb38344810" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7ffb38344810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38344b90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38344d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38343020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb383431b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38343340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb383434d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38343660"/>
        <function-ref name="get" scoped="" ref="0x7ffb383437f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38343980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38343b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb38343ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38343e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38342020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383422b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38342440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7ffb3832f810" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7ffb3832f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3832fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3832fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3832e020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3832e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3832e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3832e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3832e660"/>
        <function-ref name="get" scoped="" ref="0x7ffb3832e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3832e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3832eb10"/>
        <function-ref name="set" scoped="" ref="0x7ffb3832eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3832ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3832d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3832d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3832d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7ffb3831b810" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7ffb3831b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3831bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3831bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3831a020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3831a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3831a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3831a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3831a660"/>
        <function-ref name="get" scoped="" ref="0x7ffb3831a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3831a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3831ab10"/>
        <function-ref name="set" scoped="" ref="0x7ffb3831aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3831ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38319020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb383192b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38319440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7ffb383069a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7ffb383069a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38306d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38305020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb383051b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38305340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb383054d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38305660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb383057f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38305980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38305b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38305ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb38305e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38304020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb383041b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38304440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb383045d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7ffb382daca0" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7ffb382daca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382d80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382d8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382d83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382d8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382d86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382d8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382d8a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382d8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382d8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382d7020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382d71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382d7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382d74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382d7760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382d78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7ffb382c3cb0" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7ffb382c3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382c20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382c2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382c23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382c2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382c26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382c2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382c2a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382c2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382c2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382c1020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382c1760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7ffb382dccc0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7ffb382dccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382db0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382db230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382db3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382db550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382db6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382db870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382dba00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382dbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382dbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382da020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382da1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382da340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382da4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382da760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382da8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7ffb383029a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7ffb383029a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38302d20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38301020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb383011b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38301340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb383014d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38301660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb383017f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38301980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38301b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38301ca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb38301e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38300020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb383001b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38300440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb383005d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7ffb382b7cb0" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7ffb382b7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382b60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382b6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382b63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382b6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382b66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382b6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382b6a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382b6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382b6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382b5020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382b51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382b5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382b54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382b5760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382b58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7ffb382b1cc0" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7ffb382b1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382b00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382b0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382b03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382b0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382b06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382b0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382b0a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb382b0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382b0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382af020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382af1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382af340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382af4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382af760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382af8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7ffb382e49f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7ffb382e49f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382e31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382e3350"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382e34e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382e3670"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382e3800"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382e3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382e3b20"/>
        <function-ref name="get" scoped="" ref="0x7ffb382e3cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382e3e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382e2020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382e21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382e2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382e24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382e2760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382e28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb382acd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb382acd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382840e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38284270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38284400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38284590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38284720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382848b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38284a40"/>
        <function-ref name="get" scoped="" ref="0x7ffb38284bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38284d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38283020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382831b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38283340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382834d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38283760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382838f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38280740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38280740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38280ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38280c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38280de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3827f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3827f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3827f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3827f4d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3827f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3827f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3827f980"/>
        <function-ref name="set" scoped="" ref="0x7ffb3827fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3827fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3827fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3827e120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3827e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb3827b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb3827b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3827b480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3827b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3827b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3827b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3827bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3827bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3827bde0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3827a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3827a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3827a340"/>
        <function-ref name="set" scoped="" ref="0x7ffb3827a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3827a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3827a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3827aa80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3827ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38277d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38277d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382760e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38276270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38276400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38276590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38276720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382768b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38276a40"/>
        <function-ref name="get" scoped="" ref="0x7ffb38276bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38276d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38275020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382751b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38275340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382754d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38275760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382758f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38272740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38272740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38272ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38272c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38272de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38271020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382711b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38271340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382714d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38271660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382717f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38271980"/>
        <function-ref name="set" scoped="" ref="0x7ffb38271b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38271ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38271e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38270120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382702b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb3826d100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb3826d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3826d480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3826d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3826d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3826d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3826dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3826dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3826dde0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3826c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3826c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3826c340"/>
        <function-ref name="set" scoped="" ref="0x7ffb3826c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3826c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3826c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3826ca80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3826cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38269d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38269d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382680e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38268270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38268400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38268590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38268720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382688b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38268a40"/>
        <function-ref name="get" scoped="" ref="0x7ffb38268bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38268d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38267020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382671b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38267340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382674d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38267760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382678f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38264740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38264740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38264ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38264c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38264de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38262020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382621b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38262340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382624d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38262660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382627f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38262980"/>
        <function-ref name="set" scoped="" ref="0x7ffb38262b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38262ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38262e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38261120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382612b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb3825e100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb3825e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3825e480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3825e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3825e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3825e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3825eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3825ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3825ede0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3825d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3825d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3825d340"/>
        <function-ref name="set" scoped="" ref="0x7ffb3825d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3825d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3825d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3825da80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3825dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb3825ad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb3825ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382590e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38259270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38259400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38259590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38259720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382598b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38259a40"/>
        <function-ref name="get" scoped="" ref="0x7ffb38259bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38259d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38258020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382581b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38258340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382584d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38258760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382588f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38255740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38255740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38255ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38255c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38255de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38254020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382541b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38254340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382544d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38254660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382547f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38254980"/>
        <function-ref name="set" scoped="" ref="0x7ffb38254b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38254ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38254e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38253120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382532b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38250100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38250100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38250480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38250610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382507a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38250930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38250ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38250c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38250de0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3824f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3824f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3824f340"/>
        <function-ref name="set" scoped="" ref="0x7ffb3824f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3824f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3824f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3824fa80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3824fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb3824cd80" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb3824cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3824b180"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3824b310"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3824b4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3824b630"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3824b7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3824b950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3824bae0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3824bc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3824be00"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3824a020"/>
        <function-ref name="set" scoped="" ref="0x7ffb3824a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3824a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3824a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3824a760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3824a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38247740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38247740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38247ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38247c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38247de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38246020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382461b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38246340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382464d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38246660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382467f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38246980"/>
        <function-ref name="set" scoped="" ref="0x7ffb38246b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38246ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38246e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38245120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38242100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38242100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38242480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38242610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382427a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38242930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38242ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38242c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38242de0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38241020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38241340"/>
        <function-ref name="set" scoped="" ref="0x7ffb382414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38241660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38241a80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38241c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb3823ed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb3823ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3823c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3823c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3823c400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3823c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3823c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3823c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3823ca40"/>
        <function-ref name="get" scoped="" ref="0x7ffb3823cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3823cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3823b020"/>
        <function-ref name="set" scoped="" ref="0x7ffb3823b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3823b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3823b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3823b760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3823b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38238740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38238740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38238ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38238c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38238de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38237020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382371b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38237340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382374d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38237660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382377f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38237980"/>
        <function-ref name="set" scoped="" ref="0x7ffb38237b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38237ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38237e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38236120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382362b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38233100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38233100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38233480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38233610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382337a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38233930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38233ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38233c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38233de0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38232020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38232340"/>
        <function-ref name="set" scoped="" ref="0x7ffb382324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38232660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38232a80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38232c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb3822fd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb3822fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3822e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3822e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3822e400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3822e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3822e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3822e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3822ea40"/>
        <function-ref name="get" scoped="" ref="0x7ffb3822ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3822ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3822d020"/>
        <function-ref name="set" scoped="" ref="0x7ffb3822d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3822d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3822d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3822d760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3822d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb3822a740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb3822a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3822aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3822ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3822ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38229020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb382291b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38229340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382294d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38229660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382297f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38229980"/>
        <function-ref name="set" scoped="" ref="0x7ffb38229b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38229ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38229e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38228120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382282b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38225100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38225100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38225480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38225610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382257a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38225930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38225ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38225c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38225de0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38224020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382241b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38224340"/>
        <function-ref name="set" scoped="" ref="0x7ffb382244d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38224660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382247f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38224a80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38224c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38221d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38221d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382200e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38220270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38220400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38220590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38220720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382208b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38220a40"/>
        <function-ref name="get" scoped="" ref="0x7ffb38220bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38220d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3821f020"/>
        <function-ref name="set" scoped="" ref="0x7ffb3821f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3821f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3821f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3821f760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3821f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb3821c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb3821c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3821cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3821cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3821cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3821b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3821b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3821b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3821b4d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3821b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3821b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3821b980"/>
        <function-ref name="set" scoped="" ref="0x7ffb3821bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3821bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3821be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3821a120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3821a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38216100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38216100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38216480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38216610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382167a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38216930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38216ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38216c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38216de0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38215020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382151b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38215340"/>
        <function-ref name="set" scoped="" ref="0x7ffb382154d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38215660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382157f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38215a80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38215c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38212e60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38212e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb38211210"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb382113a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38211530"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb382116c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38211850"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb382119e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38211b70"/>
        <function-ref name="get" scoped="" ref="0x7ffb38211d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38210020"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb382101b0"/>
        <function-ref name="set" scoped="" ref="0x7ffb38210340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb382104d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38210660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb382108f0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38210a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb3820d9f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb3820d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3820dd70"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3820c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3820c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3820c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3820c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3820c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3820c7f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3820c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3820cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3820cca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb3820ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3820b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3820b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3820b440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3820b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38208460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38208460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382087e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38208970"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb38208b00"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38208c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38208e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38207020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb382071b0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38207340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb382074d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38207660"/>
        <function-ref name="set" scoped="" ref="0x7ffb382077f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38207980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb38207b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38207da0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38206020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb38204e00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb38204e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb382031c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38203350"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb382034e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38203670"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38203800"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb38203990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38203b20"/>
        <function-ref name="get" scoped="" ref="0x7ffb38203cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb38203e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb38202020"/>
        <function-ref name="set" scoped="" ref="0x7ffb382021b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb38202340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb382024d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb38202760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb382028f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381ff740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381ff740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381ffac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381ffc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381ffde0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381fe020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381fe1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381fe340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381fe4d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381fe660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381fe7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381fe980"/>
        <function-ref name="set" scoped="" ref="0x7ffb381feb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381feca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381fee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381fd120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381fa100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381fa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381fa480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381fa610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381fa7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381fa930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381faac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381fac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381fade0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381f9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381f91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381f9340"/>
        <function-ref name="set" scoped="" ref="0x7ffb381f94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381f9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381f97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381f9a80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381f9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381f6d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381f6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381f40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381f4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381f4400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381f4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381f4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381f48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381f4a40"/>
        <function-ref name="get" scoped="" ref="0x7ffb381f4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381f4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381f3020"/>
        <function-ref name="set" scoped="" ref="0x7ffb381f31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381f3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381f34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381f3760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381f38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381f0740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381f0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381f0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381f0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381f0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381ef020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381ef1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381ef340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381ef4d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381ef660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381ef7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381ef980"/>
        <function-ref name="set" scoped="" ref="0x7ffb381efb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381efca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381efe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381ee120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381ee2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381eb100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381eb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381eb480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381eb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381eb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381eb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381ebac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381ebc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381ebde0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381ea020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381ea1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381ea340"/>
        <function-ref name="set" scoped="" ref="0x7ffb381ea4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381ea660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381ea7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381eaa80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381eac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381e7d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381e7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381e60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381e6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381e6400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381e6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381e6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381e68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381e6a40"/>
        <function-ref name="get" scoped="" ref="0x7ffb381e6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381e6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381e5020"/>
        <function-ref name="set" scoped="" ref="0x7ffb381e51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381e5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381e54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381e5760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381e58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381e2740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381e2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381e2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381e2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381e2de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381e1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381e11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381e1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381e14d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381e1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381e17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381e1980"/>
        <function-ref name="set" scoped="" ref="0x7ffb381e1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381e1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381e1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381e0120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381e02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381dd100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381dd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381dd480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381dd610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381dd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381dd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381ddac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381ddc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381ddde0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381dc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381dc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381dc340"/>
        <function-ref name="set" scoped="" ref="0x7ffb381dc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381dc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381dc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381dca80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381dcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381d9d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381d9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381d80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381d8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381d8400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381d8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381d8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381d88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381d8a40"/>
        <function-ref name="get" scoped="" ref="0x7ffb381d8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381d8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381d7020"/>
        <function-ref name="set" scoped="" ref="0x7ffb381d71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381d7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381d74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381d7760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381d78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381d4740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381d4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381d4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381d4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381d4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381d31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381d3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381d34d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381d3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381d37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381d3980"/>
        <function-ref name="set" scoped="" ref="0x7ffb381d3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381d3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381d3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381d2120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381cf100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381cf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381cf480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381cf610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381cf7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381cf930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381cfac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381cfc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381cfde0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381cd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381cd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381cd340"/>
        <function-ref name="set" scoped="" ref="0x7ffb381cd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381cd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381cd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381cda80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381cdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381cad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381cad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381c90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381c9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381c9400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381c9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381c9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381c98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381c9a40"/>
        <function-ref name="get" scoped="" ref="0x7ffb381c9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381c9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381c8020"/>
        <function-ref name="set" scoped="" ref="0x7ffb381c81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381c8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381c84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381c8760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381c88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381c5740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381c5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381c5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381c5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381c5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381c4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381c41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381c4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381c44d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381c4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381c47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381c4980"/>
        <function-ref name="set" scoped="" ref="0x7ffb381c4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381c4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381c4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381c3120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381c0100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381c0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381c0480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381c0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381c07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381c0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381c0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381c0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381c0de0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381bf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381bf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381bf340"/>
        <function-ref name="set" scoped="" ref="0x7ffb381bf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381bf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381bf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381bfa80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381bfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381bcd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381bcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381bb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381bb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381bb400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381bb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381bb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381bb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381bba40"/>
        <function-ref name="get" scoped="" ref="0x7ffb381bbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381bbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381ba020"/>
        <function-ref name="set" scoped="" ref="0x7ffb381ba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381ba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381ba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381ba760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381ba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381b7740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381b7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381b7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381b7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381b7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381b61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381b6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381b64d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381b6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381b67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381b6980"/>
        <function-ref name="set" scoped="" ref="0x7ffb381b6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381b6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381b6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381b5120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381b52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381b2100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381b2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381b2480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381b2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381b27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381b2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381b2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381b2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381b2de0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381b1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381b11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381b1340"/>
        <function-ref name="set" scoped="" ref="0x7ffb381b14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381b1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381b17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381b1a80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381b1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381aed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381aed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381ad0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381ad270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381ad400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381ad590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381ad720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381ad8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381ada40"/>
        <function-ref name="get" scoped="" ref="0x7ffb381adbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381add60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381ac020"/>
        <function-ref name="set" scoped="" ref="0x7ffb381ac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381ac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381ac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381ac760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381ac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381a8740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381a8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381a8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381a8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381a8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381a71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381a7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381a74d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381a7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381a77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381a7980"/>
        <function-ref name="set" scoped="" ref="0x7ffb381a7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381a7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381a7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381a6120"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ffb381a3100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ffb381a3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381a3480"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb381a3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb381a37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb381a3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb381a3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb381a3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb381a3de0"/>
        <function-ref name="get" scoped="" ref="0x7ffb381a2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb381a21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb381a2340"/>
        <function-ref name="set" scoped="" ref="0x7ffb381a24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb381a2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb381a27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb381a2a80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb381a2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ffb38135d20" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb38135d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb38132b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb38131550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb38131090"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb38131a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7ffb3812fd90" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ffb3812fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb3812cbc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3812b590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3812b0d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb3812ba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ffb38117020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb38117020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb381173a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb38117530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb381176c0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38117850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb381179e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb38117b70"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb38117d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb38116020"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb381161b0"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb38116340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb381164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ffb38129e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb38129e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb38119ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb38118670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb381181b0"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb38118b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7ffb38113020" loc="47:../../../tos/platforms/shimmer2r/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb38113020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb381133a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb38113530"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb381136c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb38113850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb381139e0"/>
        <function-ref name="get" scoped="" ref="0x7ffb38113b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb38113d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb381124d0"/>
        <function-ref name="set" scoped="" ref="0x7ffb38112020"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb381121b0"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb38112340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7ffb3810c060" loc="51:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7ffb3810c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3810c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3810c570"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3810c700"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3810c890"/>
        <function-ref name="get" scoped="" ref="0x7ffb3810ca20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3810cbb0"/>
        <function-ref name="set" scoped="" ref="0x7ffb3810cd40"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3810b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb3810f470" loc="47:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb3810f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb3810f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7ffb3810b340" loc="52:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7ffb3810b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3810b6c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3810b850"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3810b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3810bb70"/>
        <function-ref name="get" scoped="" ref="0x7ffb3810bd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38106020"/>
        <function-ref name="set" scoped="" ref="0x7ffb381061b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38106340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7ffb3810fa70" loc="48:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb3810fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb3810fdf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb3810e020"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb3810e1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb3810e340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb3810e4d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3810e660"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb3810e7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb3810ee30"/>
        <function-ref name="set" scoped="" ref="0x7ffb3810e980"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb3810eb10"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb3810eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7ffb38106660" loc="53:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7ffb38106660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb381069e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb38106b70"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb38106d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb38104020"/>
        <function-ref name="get" scoped="" ref="0x7ffb381041b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb38104340"/>
        <function-ref name="set" scoped="" ref="0x7ffb381044d0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb38104660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7ffb38110b10" loc="42:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7ffb38110b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb380e9020"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb380e91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb380e9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb380e94d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb380e9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb380e97f0"/>
        <function-ref name="set" scoped="" ref="0x7ffb380e9980"/>
        <function-ref name="clr" scoped="" ref="0x7ffb380e9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7ffb380e9e70" loc="43:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7ffb380e9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb380e8220"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb380e83b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb380e8540"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb380e86d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb380e8860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb380e89f0"/>
        <function-ref name="set" scoped="" ref="0x7ffb380e8b80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb380e8d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7ffb380e62e0" loc="45:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb380e62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb380e6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7ffb380e70f0" loc="44:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7ffb380e70f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb380e7470"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb380e7600"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb380e7790"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb380e7920"/>
        <function-ref name="get" scoped="" ref="0x7ffb380e7ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb380e7c40"/>
        <function-ref name="set" scoped="" ref="0x7ffb380e7dd0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb380e6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ffb380d22f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb380d22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb380d2670"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb380d2800"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb380d2990"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb380d2b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb380d2cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb380d2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb380d1020"/>
        <function-ref name="get" scoped="" ref="0x7ffb380d11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb380d1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb380d14d0"/>
        <function-ref name="set" scoped="" ref="0x7ffb380d1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb380d17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb380d1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb380d1c10"/>
        <function-ref name="clr" scoped="" ref="0x7ffb380d1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb380e3020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb380e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb380e33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb380e3530"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb380e36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb380e3850"/>
        <function-ref name="get" scoped="" ref="0x7ffb380e39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb380e3b70"/>
        <function-ref name="set" scoped="" ref="0x7ffb380e3d00"/>
        <function-ref name="clr" scoped="" ref="0x7ffb380d2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ffb380cdde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb380cdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb380cc180"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb380cc310"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb380cc4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb380cc630"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb380cc7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb380cc950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb380ccae0"/>
        <function-ref name="get" scoped="" ref="0x7ffb380ccc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb380cce00"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb380cb020"/>
        <function-ref name="set" scoped="" ref="0x7ffb380cb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb380cb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb380cb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb380cb760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb380cb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb380cfb90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb380cfb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb380cd020"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb380cd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb380cd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb380cd4d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb380cd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb380cd7f0"/>
        <function-ref name="set" scoped="" ref="0x7ffb380cd980"/>
        <function-ref name="clr" scoped="" ref="0x7ffb380cdb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ffb380c8930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb380c8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb380c8cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb380c8e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb380c7020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb380c71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb380c7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb380c74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb380c7660"/>
        <function-ref name="get" scoped="" ref="0x7ffb380c77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb380c7980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb380c7b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb380c7ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb380c7e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb380c6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb380c62b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb380c6440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb380c9710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb380c9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb380c9a90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb380c9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb380c9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb380c8020"/>
        <function-ref name="get" scoped="" ref="0x7ffb380c81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb380c8340"/>
        <function-ref name="set" scoped="" ref="0x7ffb380c84d0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb380c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ffb36c35a90" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb36c35a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ffb36c35e10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb36c34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7ffb36c2fbe0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ffb36c2fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb36c2e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ffb36c27020" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb36c27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ffb36c273a0"/>
        <function-ref name="configure" scoped="" ref="0x7ffb36c27530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7ffb36c2e2b0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ffb36c2e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ffb36c2e630"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ffb36c2e7c0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ffb36c2e950"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ffb36c2eae0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ffb36c2ec70"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ffb36c2ee00"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ffb36c2d020"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ffb36c2d1b0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb36c2d340"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ffb36c2d4d0"/>
        <function-ref name="getData" scoped="" ref="0x7ffb36c2d660"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ffb36c2d7f0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ffb36c2d980"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ffb36c2dc10"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ffb36c2dda0"/>
        <function-ref name="getIV" scoped="" ref="0x7ffb36c2c020"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ffb36c2c1b0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ffb36c2c340"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ffb36c2c4d0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ffb36c2c660"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ffb36c2c7f0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ffb36c2c980"/>
        <function-ref name="isI2C" scoped="" ref="0x7ffb36c2cb10"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ffb36c2cca0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ffb36c2ce30"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ffb36c2b220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ffb36c2b3b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ffb36c2b540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ffb36c2b6d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ffb36c2b860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ffb36c2b9f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ffb36c2bb80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ffb36c2bd10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ffb36c2a020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ffb36c2a1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ffb36c2a340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ffb36c2a4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ffb36c2a660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ffb36c2a7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ffb36c2a980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ffb36c2ab10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ffb36c2aca0"/>
        <function-ref name="setData" scoped="" ref="0x7ffb36c2ae30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ffb36c29020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ffb36c291b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ffb36c29340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ffb36c294d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ffb36c29660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ffb36c297f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ffb36c29d80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ffb36c28020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ffb36c281b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ffb36c28340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ffb36c284d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ffb36c28660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ffb36c287f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ffb36c28980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ffb36c28b10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ffb36c28ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7ffb36c2f440" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ffb36c2f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb36c2f7c0"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb36c2f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb36c36e00" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb36c36e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb36c351c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb36c35350"/>
        <function-ref name="request" scoped="" ref="0x7ffb36c354e0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb36c35670"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb36c35800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7ffb36c34a50" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ffb36c34a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ffb36c34dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ffb36c33020"/>
        <function-ref name="setUctl" scoped="" ref="0x7ffb36c331b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7ffb36c33340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ffb36c334d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ffb36c33660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ffb36c337f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ffb36c33980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ffb36c33b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ffb36c33ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ffb36c33e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ffb36c32020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ffb36c321b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7ffb36c32440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ffb36c325d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ffb36c32760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ffb36c328f0"/>
        <function-ref name="isUart" scoped="" ref="0x7ffb36c32a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ffb36c32c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7ffb36c32da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ffb36c31020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ffb36c311b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ffb36c31340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ffb36c314d0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb36c31660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ffb36c319f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ffb36c31b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7ffb36c31d10"/>
        <function-ref name="tx" scoped="" ref="0x7ffb36c30020"/>
        <function-ref name="getUctl" scoped="" ref="0x7ffb36c301b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7ffb36c30340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ffb36c304d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ffb36c30660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ffb36c307f0"/>
        <function-ref name="rx" scoped="" ref="0x7ffb36c30980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ffb36c30b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ffb36c30ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ffb36c30e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ffb36c2f020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ffb36c2f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ffb36c342b0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb36c342b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ffb36c34630"/>
        <function-ref name="userId" scoped="" ref="0x7ffb36c347c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ffb380992c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb380992c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ffb38099640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb380997d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ffb380988a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb380988a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ffb38098c20"/>
        <function-ref name="configure" scoped="" ref="0x7ffb38098db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ffb3809d4d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ffb3809d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb3809d850"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb3809d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb3809a020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb3809a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb3809a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb3809a530"/>
        <function-ref name="request" scoped="" ref="0x7ffb3809a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb3809a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb3809a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ffb3809b3f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ffb3809b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb3809b770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ffb38099ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb38099ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ffb38099e50"/>
        <function-ref name="userId" scoped="" ref="0x7ffb38098020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7ffb38083bf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb38083bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ffb38082020"/>
        <function-ref name="userId" scoped="" ref="0x7ffb380821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ffb38096d60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ffb38096d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb38095180"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb38095310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7ffb380835e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7ffb380835e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb38083960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ffb38095710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ffb38095710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb38095ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7ffb38095d80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7ffb38095d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb38083180"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb38083310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ffb38009020" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb38009020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ffb380093c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb38009550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ffb38007cd0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb38007cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ffb380060a0"/>
        <function-ref name="configure" scoped="" ref="0x7ffb38006230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7ffb380097a0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb380097a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb38009b20"/>
        <function-ref name="requested" scoped="" ref="0x7ffb38009cb0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb38009e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb38007020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb380071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb3800a210" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb3800a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb3800a5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb3800a740"/>
        <function-ref name="request" scoped="" ref="0x7ffb3800a8d0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb3800aa60"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb3800abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ffb38007400" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb38007400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ffb38007780"/>
        <function-ref name="userId" scoped="" ref="0x7ffb38007910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb3685ec00" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb3685ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb3685d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7ffb3685d2b0" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7ffb3685d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ffb3685d630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ffb3685d7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ffb3685d950"/>
        <function-ref name="dequeue" scoped="" ref="0x7ffb3685dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ffb3685a3a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb3685a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ffb3685a740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb3685a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ffb36857210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb36857210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ffb368575b0"/>
        <function-ref name="configure" scoped="" ref="0x7ffb36857740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ffb368579d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ffb368579d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ffb36857d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ffb36856020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ffb368561b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7ffb36856340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7ffb3685ab20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb3685ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb36859020"/>
        <function-ref name="requested" scoped="" ref="0x7ffb368591b0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb36859340"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb368594d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb36859660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb36856590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb36856590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb36856910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb36856aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb36856c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb36856dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb36855020"/>
        <function-ref name="get" scoped="" ref="0x7ffb368551b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb36855340"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb36855980"/>
        <function-ref name="set" scoped="" ref="0x7ffb36855660"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb368554d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb368557f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb3685b4d0" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb3685b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb3685b870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb3685ba00"/>
        <function-ref name="request" scoped="" ref="0x7ffb3685bb90"/>
        <function-ref name="granted" scoped="" ref="0x7ffb3685bd20"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb3685a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ffb368598b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb368598b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ffb36859c30"/>
        <function-ref name="userId" scoped="" ref="0x7ffb36859dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7ffb36855c50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7ffb36855c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb36854020"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb368541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7ffb38000d70" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ffb38000d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ffb37ffd180"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ffb37ffd310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ffb37ffd4a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ffb37ffd630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ffb37ffd7c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ffb37ffd950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ffb37ffdae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ffb37ffdc70"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb37ffde00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ffb37ffc020"/>
        <function-ref name="getData" scoped="" ref="0x7ffb37ffc1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ffb37ffc340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ffb37ffc4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ffb37ffc760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ffb37ffc8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7ffb37ffca80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ffb37ffcc10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ffb37ffcda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ffb37ffb020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ffb37ffb1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ffb37ffb340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ffb37ffb4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7ffb37ffb660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ffb37ffb7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ffb37ffb980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ffb37ffbd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ffb37ffa020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ffb37ffa1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ffb37ffa340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ffb37ffa4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ffb37ffa660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ffb37ffa7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ffb37ffa980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ffb37ffab10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ffb37ffaca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ffb37ffae30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ffb37ff9020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ffb37ff91b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ffb37ff9340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ffb37ff94d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ffb37ff9660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ffb37ff97f0"/>
        <function-ref name="setData" scoped="" ref="0x7ffb37ff9980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ffb37ff9b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ffb37ff9ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ffb37ff9e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ffb37ff8020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ffb37ff81b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ffb37ff8340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ffb37ff88d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ffb37ff8a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ffb37ff8bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ffb37ff8d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ffb37ff7020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ffb37ff71b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ffb37ff7340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ffb37ff74d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ffb37ff7660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ffb37ff77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7ffb37fed700" loc="41:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7ffb37fed700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ffb37feda80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ffb37fedc10"/>
        <function-ref name="setUctl" scoped="" ref="0x7ffb37fedda0"/>
        <function-ref name="enableUart" scoped="" ref="0x7ffb37fec020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ffb37fec1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ffb37fec340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ffb37fec4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ffb37fec660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ffb37fec7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ffb37fec980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ffb37fecb10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ffb37fecca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ffb37fece30"/>
        <function-ref name="getUbr" scoped="" ref="0x7ffb37feb120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ffb37feb2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ffb37feb440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ffb37feb5d0"/>
        <function-ref name="isUart" scoped="" ref="0x7ffb37feb760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ffb37feb8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7ffb37feba80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ffb37febc10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ffb37febda0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ffb37fea020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ffb37fea1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb37fea340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ffb37fea6d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ffb37fea860"/>
        <function-ref name="setUbr" scoped="" ref="0x7ffb37fea9f0"/>
        <function-ref name="tx" scoped="" ref="0x7ffb37feab80"/>
        <function-ref name="getUctl" scoped="" ref="0x7ffb37fead10"/>
        <function-ref name="disableUart" scoped="" ref="0x7ffb37fe9020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ffb37fe91b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ffb37fe9340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ffb37fe94d0"/>
        <function-ref name="rx" scoped="" ref="0x7ffb37fe9660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ffb37fe97f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ffb37fe9980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ffb37fe9b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ffb37fe9ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ffb37fe9e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7ffb37fe61f0" loc="43:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7ffb37fe61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37fe6570"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37fe6700"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb37fe6890"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37fe6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37fe6bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb37fe6d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37fe5020"/>
        <function-ref name="get" scoped="" ref="0x7ffb37fe51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb37fe5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb37fe54d0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37fe5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb37fe57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb37fe5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb37fe5c10"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37fe5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7ffb37ff6940" loc="39:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7ffb37ff6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ffb37ff6cc0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ffb37ff6e50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ffb37ff3020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ffb37ff31b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ffb37ff3340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ffb37ff34d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ffb37ff3660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ffb37ff37f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb37ff3980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ffb37ff3b10"/>
        <function-ref name="getData" scoped="" ref="0x7ffb37ff3ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ffb37ff3e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ffb37ff2020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ffb37ff22b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ffb37ff2440"/>
        <function-ref name="getIV" scoped="" ref="0x7ffb37ff25d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ffb37ff2760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ffb37ff28f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ffb37ff2a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ffb37ff2c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ffb37ff2da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ffb37ff1020"/>
        <function-ref name="isI2C" scoped="" ref="0x7ffb37ff11b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ffb37ff1340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ffb37ff14d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ffb37ff1860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ffb37ff19f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ffb37ff1b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ffb37ff1d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ffb37ff0020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ffb37ff01b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ffb37ff0340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ffb37ff04d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ffb37ff0660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ffb37ff07f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ffb37ff0980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ffb37ff0b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ffb37ff0ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ffb37ff0e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ffb37fef020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ffb37fef1b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ffb37fef340"/>
        <function-ref name="setData" scoped="" ref="0x7ffb37fef4d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ffb37fef660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ffb37fef7f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ffb37fef980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ffb37fefb10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ffb37fefca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ffb37fefe30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ffb37fee420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ffb37fee5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ffb37fee740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ffb37fee8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ffb37feea60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ffb37feebf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ffb37feed80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ffb37fed020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ffb37fed1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ffb37fed340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7ffb37fe8250" loc="42:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7ffb37fe8250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37fe85d0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37fe8760"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb37fe88f0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37fe8a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37fe8c10"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb37fe8da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37fe7020"/>
        <function-ref name="get" scoped="" ref="0x7ffb37fe71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb37fe7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb37fe74d0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37fe7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb37fe77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb37fe7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb37fe7c10"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37fe7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7ffb37f35920" loc="37:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ffb37f35920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ffb37f35ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7ffb37f34020" loc="38:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb37f34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb37f343a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb37f34530"/>
        <function-ref name="request" scoped="" ref="0x7ffb37f346c0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb37f34850"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb37f349e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ffb37f350c0" loc="36:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ffb37f350c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb37f35440"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37f355d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7ffb37f21a30" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7ffb37f21a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7ffb37f21db0"/>
        <function-ref name="offset" scoped="" ref="0x7ffb37f1e020"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7ffb37f1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7ffb37f03bf0" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ffb37f03bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7ffb37edeae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7ffb37edd880"/>
        <function-ref name="element" scoped="" ref="0x7ffb37edb020"/>
        <function-ref name="full" scoped="" ref="0x7ffb37f02ce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7ffb37ede660"/>
        <function-ref name="dequeue" scoped="" ref="0x7ffb37edd1d0"/>
        <function-ref name="empty" scoped="" ref="0x7ffb37f02860"/>
        <function-ref name="size" scoped="" ref="0x7ffb37ede1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ffb37ed3a20" loc="93:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ffb37ed3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7ffb37ed2920"/>
        <function-ref name="enqueue" scoped="" ref="0x7ffb37ed16d0"/>
        <function-ref name="element" scoped="" ref="0x7ffb37ed1d40"/>
        <function-ref name="full" scoped="" ref="0x7ffb37ed5af0"/>
        <function-ref name="maxSize" scoped="" ref="0x7ffb37ed24a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7ffb37ed1020"/>
        <function-ref name="empty" scoped="" ref="0x7ffb37ed5670"/>
        <function-ref name="size" scoped="" ref="0x7ffb37ed2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7ffb37ed0440" loc="94:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ffb37ed0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb37ed07c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37ed0950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb37ed0ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb37ed0c70"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb37ed0e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7ffb37ecf0c0" loc="95:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb37ecf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37ecf440"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb37ecf5d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37ecf760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb37ecf8f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb37ecfa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7ffb37ec9500" loc="114:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7ffb37ec9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb37ec9880"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb37ec9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37edaa60" loc="89:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37edaa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37edade0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb37ecfd00" loc="96:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb37ecfd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb37ecd0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb37ecd230"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb37ecd3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb37ecd550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb37ecd6e0"/>
        <function-ref name="get" scoped="" ref="0x7ffb37ecd870"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb37ecda00"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb37ecc1b0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37ecdb90"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb37ecdd20"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb37ecc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7ffb37ed31a0" loc="90:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7ffb37ed31a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7ffb37ed3520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7ffb37eb2be0" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7ffb37eb2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7ffb37eaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37eac020" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37eac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37eac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7ffb37eac680" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7ffb37eac680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7ffb37eaca00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7ffb37ea6380" loc="39:../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ffb37ea6380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ffb37ea6700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7ffb37ea6aa0" loc="40:../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7ffb37ea6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ffb37ea6e20"/>
        <function-ref name="stopDone" scoped="" ref="0x7ffb37ea3020"/>
        <function-ref name="start" scoped="" ref="0x7ffb37ea31b0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37ea3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GyroBoard" ref="0x7ffb37e62bf0" loc="60:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroBoard" scoped="" ref="0x7ffb37e62bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GyroBoard"/>
      </instance>
      <interface-functions>
        <function-ref name="autoZero" scoped="" ref="0x7ffb37e66020"/>
        <function-ref name="buttonPressed" scoped="" ref="0x7ffb37e661b0"/>
        <function-ref name="ledOn" scoped="" ref="0x7ffb37e66340"/>
        <function-ref name="ledOff" scoped="" ref="0x7ffb37e664d0"/>
        <function-ref name="ledToggle" scoped="" ref="0x7ffb37e66660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Go" ref="0x7ffb37e38610" loc="81:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Go" scoped="" ref="0x7ffb37e38610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb37e38990"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb37e38b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7ffb37e9bb90" loc="44:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ffb37e9bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ffb37e9a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sampleTimerInit" ref="0x7ffb37e61e70" loc="64:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sampleTimerInit" scoped="" ref="0x7ffb37e61e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37e5d220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7ffb37e99c70" loc="48:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb37e99c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37e98020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb37e981b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37e98340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb37e984d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb37e98660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Stop" ref="0x7ffb37e374f0" loc="82:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Stop" scoped="" ref="0x7ffb37e374f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb37e37870"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb37e37a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMRadioControl" ref="0x7ffb37e9a3c0" loc="46:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMRadioControl" scoped="" ref="0x7ffb37e9a3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ffb37e9a740"/>
        <function-ref name="stopDone" scoped="" ref="0x7ffb37e9a8d0"/>
        <function-ref name="start" scoped="" ref="0x7ffb37e9aa60"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37e9abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_data" ref="0x7ffb37e25da0" loc="154:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send_data" scoped="" ref="0x7ffb37e25da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb37e24180"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb37e24310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7ffb37e98900" loc="49:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb37e98900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb37e98c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DMA0" ref="0x7ffb37e74600" loc="51:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA0" scoped="" ref="0x7ffb37e74600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7ffb37e74980"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7ffb37e74b10"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7ffb37e74ca0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7ffb37e74e30"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7ffb37e96020"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37e961b0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7ffb37e96340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMRadioSend" ref="0x7ffb37e99020" loc="47:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMRadioSend" scoped="" ref="0x7ffb37e99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb37e993a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37e99530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb37e996c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb37e99850"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb37e999e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GyroStdControl" ref="0x7ffb37e69be0" loc="59:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroStdControl" scoped="" ref="0x7ffb37e69be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb37e68020"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37e681b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sampleTimer" ref="0x7ffb37e55be0" loc="65:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sampleTimer" scoped="" ref="0x7ffb37e55be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb37e534e0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37e5b4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb37e5be60"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb37e5b9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb37e539a0"/>
        <function-ref name="start" scoped="" ref="0x7ffb37e5ca80"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37e5b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="blinkTimer" ref="0x7ffb37e43020" loc="67:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="blinkTimer" scoped="" ref="0x7ffb37e43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb37e3f630"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37e42a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb37e41920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb37e414a0"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb37e3e020"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb37e3fab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb37e41020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb37e43c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb37e3f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb37e42110"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37e425e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb37e3e440" loc="69:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb37e3e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb37e3e7c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb37e3e950"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb37e3eae0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb37e3ec70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb37e3ee00"/>
        <function-ref name="get" scoped="" ref="0x7ffb37e3d020"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb37e3d1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb37e3d7f0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37e3d340"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb37e3d4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb37e3d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GyroInit" ref="0x7ffb37e694d0" loc="58:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroInit" scoped="" ref="0x7ffb37e694d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37e69850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tiltNotify" ref="0x7ffb37e651c0" loc="62:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="tiltNotify" scoped="" ref="0x7ffb37e651c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37eb0b40"/>
            <typename><typedef-ref name="button_state_t" ref="0x7ffb37e9c4b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7ffb37e614a0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37e61020"/>
        <function-ref name="notify" scoped="" ref="0x7ffb37e61920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelInit" ref="0x7ffb37e73c10" loc="55:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AccelInit" scoped="" ref="0x7ffb37e73c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37e6a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="motionTimer" ref="0x7ffb37e47a10" loc="66:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="motionTimer" scoped="" ref="0x7ffb37e47a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb37e44020"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37e50510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb37e45300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb37e50e10"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb37e44920"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb37e444a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb37e50990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb37e51670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb37e45910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb37e51b40"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37e50090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Accel" ref="0x7ffb37e67c20" loc="56:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Accel" scoped="" ref="0x7ffb37e67c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mma_Accel"/>
      </instance>
      <interface-functions>
        <function-ref name="setSensitivity" scoped="" ref="0x7ffb37e69020"/>
        <function-ref name="wake" scoped="" ref="0x7ffb37e691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="shimmerAnalogSetup" ref="0x7ffb37e95020" loc="53:SimpleAccelGyroC.nc">
      <component-ref qname="SimpleAccelGyroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7ffb37e95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="shimmerAnalogSetup"/>
      </instance>
      <interface-functions>
        <function-ref name="addAccelInputs" scoped="" ref="0x7ffb37e953a0"/>
        <function-ref name="triggerConversion" scoped="" ref="0x7ffb37e95530"/>
        <function-ref name="getNumberOfChannels" scoped="" ref="0x7ffb37e956c0"/>
        <function-ref name="addECGInputs" scoped="" ref="0x7ffb37e95850"/>
        <function-ref name="addAnExInput" scoped="" ref="0x7ffb37e959e0"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37e95b70"/>
        <function-ref name="addEMGInput" scoped="" ref="0x7ffb37e95d00"/>
        <function-ref name="addStrainGaugeInputs" scoped="" ref="0x7ffb37e73020"/>
        <function-ref name="addGSRInput" scoped="" ref="0x7ffb37e731b0"/>
        <function-ref name="finishADCSetup" scoped="" ref="0x7ffb37e73340"/>
        <function-ref name="addUVInputs" scoped="" ref="0x7ffb37e734d0"/>
        <function-ref name="addGyroInputs" scoped="" ref="0x7ffb37e73660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7ffb37e737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37dffd30" loc="37:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <component-ref qname="shimmerAnalogSetupC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37dffd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37dfc0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="shimmerAnalogSetup" ref="0x7ffb37dfc3f0" loc="38:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <component-ref qname="shimmerAnalogSetupC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7ffb37dfc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="shimmerAnalogSetup"/>
      </instance>
      <interface-functions>
        <function-ref name="addAccelInputs" scoped="" ref="0x7ffb37dfc770"/>
        <function-ref name="triggerConversion" scoped="" ref="0x7ffb37dfc900"/>
        <function-ref name="getNumberOfChannels" scoped="" ref="0x7ffb37dfca90"/>
        <function-ref name="addECGInputs" scoped="" ref="0x7ffb37dfcc20"/>
        <function-ref name="addAnExInput" scoped="" ref="0x7ffb37dfcdb0"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37dfa020"/>
        <function-ref name="addEMGInput" scoped="" ref="0x7ffb37dfa1b0"/>
        <function-ref name="addStrainGaugeInputs" scoped="" ref="0x7ffb37dfa340"/>
        <function-ref name="addGSRInput" scoped="" ref="0x7ffb37dfa4d0"/>
        <function-ref name="finishADCSetup" scoped="" ref="0x7ffb37dfa660"/>
        <function-ref name="addUVInputs" scoped="" ref="0x7ffb37dfa7f0"/>
        <function-ref name="addGyroInputs" scoped="" ref="0x7ffb37dfa980"/>
        <function-ref name="stopConversion" scoped="" ref="0x7ffb37dfab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430DmaControl" ref="0x7ffb37df18d0" loc="45:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430DmaControl" scoped="" ref="0x7ffb37df18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setFlags" scoped="" ref="0x7ffb37df1c50"/>
        <function-ref name="init" scoped="" ref="0x7ffb37df1de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430DmaChannel" ref="0x7ffb37df4170" loc="46:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430DmaChannel" scoped="" ref="0x7ffb37df4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7ffb37df44f0"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7ffb37df4680"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7ffb37df4810"/>
        <function-ref name="startTransfer" scoped="" ref="0x7ffb37df49a0"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7ffb37df4b30"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37df4cc0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7ffb37df4e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7ffb37df0020" loc="47:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7ffb37df0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7ffb37df03a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7ffb37df0530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7ffb37df06c0"/>
        <function-ref name="isBusy" scoped="" ref="0x7ffb37df0850"/>
        <function-ref name="conversionDone" scoped="" ref="0x7ffb37df09e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7ffb37df0b70"/>
        <function-ref name="setMCtl" scoped="" ref="0x7ffb37df0d00"/>
        <function-ref name="startConversion" scoped="" ref="0x7ffb37def020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7ffb37def1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7ffb37def340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7ffb37def4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7ffb37def660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7ffb37def7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7ffb37defa80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7ffb37defc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37df53a0" loc="42:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37df53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37df5720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb37dca020" loc="48:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb37dca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb37dca3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb37dca530"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb37dca6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb37dca850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb37dca9e0"/>
        <function-ref name="get" scoped="" ref="0x7ffb37dcab70"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb37dcad00"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb37dc94d0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37dc9020"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb37dc91b0"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb37dc9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="shimmerAnalogSetup" ref="0x7ffb37df9830" loc="41:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7ffb37df9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="shimmerAnalogSetup"/>
      </instance>
      <interface-functions>
        <function-ref name="addAccelInputs" scoped="" ref="0x7ffb37df9bb0"/>
        <function-ref name="triggerConversion" scoped="" ref="0x7ffb37df9d40"/>
        <function-ref name="getNumberOfChannels" scoped="" ref="0x7ffb37df6020"/>
        <function-ref name="addECGInputs" scoped="" ref="0x7ffb37df61b0"/>
        <function-ref name="addAnExInput" scoped="" ref="0x7ffb37df6340"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37df64d0"/>
        <function-ref name="addEMGInput" scoped="" ref="0x7ffb37df6660"/>
        <function-ref name="addStrainGaugeInputs" scoped="" ref="0x7ffb37df67f0"/>
        <function-ref name="addGSRInput" scoped="" ref="0x7ffb37df6980"/>
        <function-ref name="finishADCSetup" scoped="" ref="0x7ffb37df6b10"/>
        <function-ref name="addUVInputs" scoped="" ref="0x7ffb37df6ca0"/>
        <function-ref name="addGyroInputs" scoped="" ref="0x7ffb37df6e30"/>
        <function-ref name="stopConversion" scoped="" ref="0x7ffb37df5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7ffb37d82520" loc="46:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7ffb37d82520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7ffb37d828a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7ffb37d82a30"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7ffb37d82bc0"/>
        <function-ref name="isBusy" scoped="" ref="0x7ffb37d82d50"/>
        <function-ref name="conversionDone" scoped="" ref="0x7ffb37d7f020"/>
        <function-ref name="getCtl1" scoped="" ref="0x7ffb37d7f1b0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7ffb37d7f340"/>
        <function-ref name="startConversion" scoped="" ref="0x7ffb37d7f4d0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7ffb37d7f660"/>
        <function-ref name="getMem" scoped="" ref="0x7ffb37d7f7f0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7ffb37d7f980"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7ffb37d7fb10"/>
        <function-ref name="stopConversion" scoped="" ref="0x7ffb37d7fca0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7ffb37d7e020"/>
        <function-ref name="setCtl1" scoped="" ref="0x7ffb37d7e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7ffb37d468b0" loc="51:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel2" scoped="" ref="0x7ffb37d468b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7ffb37d46c30"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7ffb37d46dc0"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7ffb37d45020"/>
        <function-ref name="startTransfer" scoped="" ref="0x7ffb37d451b0"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7ffb37d45340"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37d454d0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7ffb37d45660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel0" ref="0x7ffb37d48590" loc="49:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel0" scoped="" ref="0x7ffb37d48590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7ffb37d48910"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7ffb37d48aa0"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7ffb37d48c30"/>
        <function-ref name="startTransfer" scoped="" ref="0x7ffb37d48dc0"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7ffb37d47020"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37d471b0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7ffb37d47340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ffb37d80b70" loc="48:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ffb37d80b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setFlags" scoped="" ref="0x7ffb37d48020"/>
        <function-ref name="init" scoped="" ref="0x7ffb37d481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7ffb37d47720" loc="50:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel1" scoped="" ref="0x7ffb37d47720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7ffb37d47aa0"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7ffb37d47c30"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7ffb37d47dc0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7ffb37d46020"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7ffb37d461b0"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37d46340"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7ffb37d464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7ffb37d160c0" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel2" scoped="" ref="0x7ffb37d160c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7ffb37d16440"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7ffb37d165d0"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7ffb37d16760"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7ffb37d168f0"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7ffb37d16a80"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37d16c10"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7ffb37d16da0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7ffb37d15020"/>
        <function-ref name="getDestination" scoped="" ref="0x7ffb37d151b0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7ffb37d15340"/>
        <function-ref name="aborted" scoped="" ref="0x7ffb37d154d0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7ffb37d15660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ffb37d157f0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7ffb37d15a80"/>
        <function-ref name="interruptPending" scoped="" ref="0x7ffb37d15c10"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7ffb37d15da0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7ffb37d14020"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7ffb37d141b0"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37d14340"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7ffb37d144d0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7ffb37d14660"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7ffb37d147f0"/>
        <function-ref name="setSrc" scoped="" ref="0x7ffb37d14980"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7ffb37d14b10"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7ffb37d14ca0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7ffb37d13220"/>
        <function-ref name="getSource" scoped="" ref="0x7ffb37d133b0"/>
        <function-ref name="getSize" scoped="" ref="0x7ffb37d13540"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7ffb37d136d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37d13860"/>
        <function-ref name="enableDMA" scoped="" ref="0x7ffb37d139f0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7ffb37d13b80"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7ffb37d13d10"/>
        <function-ref name="setSize" scoped="" ref="0x7ffb37d12020"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37d121b0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7ffb37d12340"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7ffb37d124d0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7ffb37d12660"/>
        <function-ref name="setDst" scoped="" ref="0x7ffb37d127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel0" ref="0x7ffb37d1edf0" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel0" scoped="" ref="0x7ffb37d1edf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7ffb37d3a1c0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7ffb37d3a350"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7ffb37d3a4e0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7ffb37d3a670"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7ffb37d3a800"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37d3a990"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7ffb37d3ab20"/>
        <function-ref name="setTrigger" scoped="" ref="0x7ffb37d3acb0"/>
        <function-ref name="getDestination" scoped="" ref="0x7ffb37d3ae40"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7ffb37d39020"/>
        <function-ref name="aborted" scoped="" ref="0x7ffb37d391b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7ffb37d39340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ffb37d394d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7ffb37d39760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7ffb37d398f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7ffb37d39a80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7ffb37d39c10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7ffb37d39da0"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37d1d020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7ffb37d1d1b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7ffb37d1d340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7ffb37d1d4d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7ffb37d1d660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7ffb37d1d7f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7ffb37d1d980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7ffb37d1dd10"/>
        <function-ref name="getSource" scoped="" ref="0x7ffb37d1c020"/>
        <function-ref name="getSize" scoped="" ref="0x7ffb37d1c1b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7ffb37d1c340"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37d1c4d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7ffb37d1c660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7ffb37d1c7f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7ffb37d1c980"/>
        <function-ref name="setSize" scoped="" ref="0x7ffb37d1cb10"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37d1cca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7ffb37d1ce30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7ffb37d1b020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7ffb37d1b1b0"/>
        <function-ref name="setDst" scoped="" ref="0x7ffb37d1b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ffb37d3bd90" loc="41:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ffb37d3bd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="clearRoundRobin" scoped="" ref="0x7ffb37d41e00"/>
        <function-ref name="setRoundRobin" scoped="" ref="0x7ffb37d41310"/>
        <function-ref name="clearOnFetch" scoped="" ref="0x7ffb37d414a0"/>
        <function-ref name="setENNMI" scoped="" ref="0x7ffb37d41630"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37d417c0"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37d41950"/>
        <function-ref name="setOnFetch" scoped="" ref="0x7ffb37d41ae0"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37d41c70"/>
        <function-ref name="clearENNMI" scoped="" ref="0x7ffb37d41180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7ffb37d1b730" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel1" scoped="" ref="0x7ffb37d1b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7ffb37d1bab0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7ffb37d1bc40"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7ffb37d1bdd0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7ffb37d1a020"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7ffb37d1a1b0"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37d1a340"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7ffb37d1a4d0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7ffb37d1a660"/>
        <function-ref name="getDestination" scoped="" ref="0x7ffb37d1a7f0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7ffb37d1a980"/>
        <function-ref name="aborted" scoped="" ref="0x7ffb37d1ab10"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7ffb37d1aca0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ffb37d1ae30"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7ffb37d19120"/>
        <function-ref name="interruptPending" scoped="" ref="0x7ffb37d192b0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7ffb37d19440"/>
        <function-ref name="getTrigger" scoped="" ref="0x7ffb37d195d0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7ffb37d19760"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37d198f0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7ffb37d19a80"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7ffb37d19c10"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7ffb37d19da0"/>
        <function-ref name="setSrc" scoped="" ref="0x7ffb37d18020"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7ffb37d181b0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7ffb37d18340"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7ffb37d186d0"/>
        <function-ref name="getSource" scoped="" ref="0x7ffb37d18860"/>
        <function-ref name="getSize" scoped="" ref="0x7ffb37d189f0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7ffb37d18b80"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37d18d10"/>
        <function-ref name="enableDMA" scoped="" ref="0x7ffb37d17020"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7ffb37d171b0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7ffb37d17340"/>
        <function-ref name="setSize" scoped="" ref="0x7ffb37d174d0"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37d17660"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7ffb37d177f0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7ffb37d17980"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7ffb37d17b10"/>
        <function-ref name="setDst" scoped="" ref="0x7ffb37d17ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DmaControl" ref="0x7ffb37d10510" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
      <component-ref qname="HplMsp430DmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DmaControl" scoped="" ref="0x7ffb37d10510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="clearRoundRobin" scoped="" ref="0x7ffb37d0d660"/>
        <function-ref name="setRoundRobin" scoped="" ref="0x7ffb37d10a20"/>
        <function-ref name="clearOnFetch" scoped="" ref="0x7ffb37d10bb0"/>
        <function-ref name="setENNMI" scoped="" ref="0x7ffb37d10d40"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37d0d020"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37d0d1b0"/>
        <function-ref name="setOnFetch" scoped="" ref="0x7ffb37d0d340"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37d0d4d0"/>
        <function-ref name="clearENNMI" scoped="" ref="0x7ffb37d10890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7ffb37d0a710" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
      <component-ref qname="HplMsp430DmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ffb37d0a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb37d0aa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMA" ref="0x7ffb37c89c90" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA" scoped="" ref="0x7ffb37c89c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7ffb37c880a0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7ffb37c88230"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7ffb37c883c0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7ffb37c88550"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7ffb37c886e0"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37c88870"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7ffb37c88a00"/>
        <function-ref name="setTrigger" scoped="" ref="0x7ffb37c88b90"/>
        <function-ref name="getDestination" scoped="" ref="0x7ffb37c88d20"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7ffb37c87020"/>
        <function-ref name="aborted" scoped="" ref="0x7ffb37c871b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7ffb37c87340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ffb37c874d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7ffb37c87760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7ffb37c878f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7ffb37c87a80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7ffb37c87c10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7ffb37c87da0"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37c86020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7ffb37c861b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7ffb37c86340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7ffb37c864d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7ffb37c86660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7ffb37c867f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7ffb37c86980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7ffb37c86d10"/>
        <function-ref name="getSource" scoped="" ref="0x7ffb37c85020"/>
        <function-ref name="getSize" scoped="" ref="0x7ffb37c851b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7ffb37c85340"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37c854d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7ffb37c85660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7ffb37c857f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7ffb37c85980"/>
        <function-ref name="setSize" scoped="" ref="0x7ffb37c85b10"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37c85ca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7ffb37c85e30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7ffb37c84020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7ffb37c841b0"/>
        <function-ref name="setDst" scoped="" ref="0x7ffb37c84340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x7ffb37c84610" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ffb37c84610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb37c84990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMA" ref="0x7ffb37c7f9b0" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA" scoped="" ref="0x7ffb37c7f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7ffb37c7fd30"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7ffb37c7e020"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7ffb37c7e1b0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7ffb37c7e340"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7ffb37c7e4d0"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37c7e660"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7ffb37c7e7f0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7ffb37c7e980"/>
        <function-ref name="getDestination" scoped="" ref="0x7ffb37c7eb10"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7ffb37c7eca0"/>
        <function-ref name="aborted" scoped="" ref="0x7ffb37c7ee30"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7ffb37c7d020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ffb37c7d1b0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7ffb37c7d440"/>
        <function-ref name="interruptPending" scoped="" ref="0x7ffb37c7d5d0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7ffb37c7d760"/>
        <function-ref name="getTrigger" scoped="" ref="0x7ffb37c7d8f0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7ffb37c7da80"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37c7dc10"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7ffb37c7dda0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7ffb37c7c020"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7ffb37c7c1b0"/>
        <function-ref name="setSrc" scoped="" ref="0x7ffb37c7c340"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7ffb37c7c4d0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7ffb37c7c660"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7ffb37c7c9f0"/>
        <function-ref name="getSource" scoped="" ref="0x7ffb37c7cb80"/>
        <function-ref name="getSize" scoped="" ref="0x7ffb37c7cd10"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7ffb37c7b020"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37c7b1b0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7ffb37c7b340"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7ffb37c7b4d0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7ffb37c7b660"/>
        <function-ref name="setSize" scoped="" ref="0x7ffb37c7b7f0"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37c7b980"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7ffb37c7bb10"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7ffb37c7bca0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7ffb37c7be30"/>
        <function-ref name="setDst" scoped="" ref="0x7ffb37c7a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x7ffb37c7a2f0" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ffb37c7a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb37c7a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMA" ref="0x7ffb37c763f0" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA" scoped="" ref="0x7ffb37c763f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7ffb37c76770"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7ffb37c76900"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7ffb37c76a90"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7ffb37c76c20"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7ffb37c76db0"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37c75020"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7ffb37c751b0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7ffb37c75340"/>
        <function-ref name="getDestination" scoped="" ref="0x7ffb37c754d0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7ffb37c75660"/>
        <function-ref name="aborted" scoped="" ref="0x7ffb37c757f0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7ffb37c75980"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ffb37c75b10"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7ffb37c75da0"/>
        <function-ref name="interruptPending" scoped="" ref="0x7ffb37c74020"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7ffb37c741b0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7ffb37c74340"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7ffb37c744d0"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37c74660"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7ffb37c747f0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7ffb37c74980"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7ffb37c74b10"/>
        <function-ref name="setSrc" scoped="" ref="0x7ffb37c74ca0"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7ffb37c74e30"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7ffb37c73020"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7ffb37c733b0"/>
        <function-ref name="getSource" scoped="" ref="0x7ffb37c73540"/>
        <function-ref name="getSize" scoped="" ref="0x7ffb37c736d0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7ffb37c73860"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37c739f0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7ffb37c73b80"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7ffb37c73d10"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7ffb37c72020"/>
        <function-ref name="setSize" scoped="" ref="0x7ffb37c721b0"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37c72340"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7ffb37c724d0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7ffb37c72660"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7ffb37c727f0"/>
        <function-ref name="setDst" scoped="" ref="0x7ffb37c72980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x7ffb37c72c50" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ffb37c72c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb37c71020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel" ref="0x7ffb37c3d020" loc="45:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel" scoped="" ref="0x7ffb37c3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7ffb37c3d3a0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7ffb37c3d530"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7ffb37c3d6c0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7ffb37c3d850"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7ffb37c3d9e0"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37c3db70"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7ffb37c3dd00"/>
        <function-ref name="setTrigger" scoped="" ref="0x7ffb37c3c020"/>
        <function-ref name="getDestination" scoped="" ref="0x7ffb37c3c1b0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7ffb37c3c340"/>
        <function-ref name="aborted" scoped="" ref="0x7ffb37c3c4d0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7ffb37c3c660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ffb37c3c7f0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7ffb37c3ca80"/>
        <function-ref name="interruptPending" scoped="" ref="0x7ffb37c3cc10"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7ffb37c3cda0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7ffb37c3b020"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7ffb37c3b1b0"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37c3b340"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7ffb37c3b4d0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7ffb37c3b660"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7ffb37c3b7f0"/>
        <function-ref name="setSrc" scoped="" ref="0x7ffb37c3b980"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7ffb37c3bb10"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7ffb37c3bca0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7ffb37c3a220"/>
        <function-ref name="getSource" scoped="" ref="0x7ffb37c3a3b0"/>
        <function-ref name="getSize" scoped="" ref="0x7ffb37c3a540"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7ffb37c3a6d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37c3a860"/>
        <function-ref name="enableDMA" scoped="" ref="0x7ffb37c3a9f0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7ffb37c3ab80"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7ffb37c3ad10"/>
        <function-ref name="setSize" scoped="" ref="0x7ffb37c39020"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37c391b0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7ffb37c39340"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7ffb37c394d0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7ffb37c39660"/>
        <function-ref name="setDst" scoped="" ref="0x7ffb37c397f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7ffb37c3e020" loc="44:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel" scoped="" ref="0x7ffb37c3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7ffb37c3e3a0"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7ffb37c3e530"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7ffb37c3e6c0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7ffb37c3e850"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7ffb37c3e9e0"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37c3eb70"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7ffb37c3ed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel" ref="0x7ffb37c357a0" loc="45:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel" scoped="" ref="0x7ffb37c357a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7ffb37c35b20"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7ffb37c35cb0"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7ffb37c35e40"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7ffb37c34020"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7ffb37c341b0"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37c34340"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7ffb37c344d0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7ffb37c34660"/>
        <function-ref name="getDestination" scoped="" ref="0x7ffb37c347f0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7ffb37c34980"/>
        <function-ref name="aborted" scoped="" ref="0x7ffb37c34b10"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7ffb37c34ca0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ffb37c34e30"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7ffb37c33120"/>
        <function-ref name="interruptPending" scoped="" ref="0x7ffb37c332b0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7ffb37c33440"/>
        <function-ref name="getTrigger" scoped="" ref="0x7ffb37c335d0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7ffb37c33760"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37c338f0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7ffb37c33a80"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7ffb37c33c10"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7ffb37c33da0"/>
        <function-ref name="setSrc" scoped="" ref="0x7ffb37c32020"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7ffb37c321b0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7ffb37c32340"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7ffb37c326d0"/>
        <function-ref name="getSource" scoped="" ref="0x7ffb37c32860"/>
        <function-ref name="getSize" scoped="" ref="0x7ffb37c329f0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7ffb37c32b80"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37c32d10"/>
        <function-ref name="enableDMA" scoped="" ref="0x7ffb37c31020"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7ffb37c311b0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7ffb37c31340"/>
        <function-ref name="setSize" scoped="" ref="0x7ffb37c314d0"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37c31660"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7ffb37c317f0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7ffb37c31980"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7ffb37c31b10"/>
        <function-ref name="setDst" scoped="" ref="0x7ffb37c31ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7ffb37c367a0" loc="44:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel" scoped="" ref="0x7ffb37c367a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7ffb37c36b20"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7ffb37c36cb0"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7ffb37c36e40"/>
        <function-ref name="startTransfer" scoped="" ref="0x7ffb37c35020"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7ffb37c351b0"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37c35340"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7ffb37c354d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel" ref="0x7ffb37c2ddb0" loc="45:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel2P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel" scoped="" ref="0x7ffb37c2ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7ffb37c2c180"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7ffb37c2c310"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7ffb37c2c4a0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7ffb37c2c630"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7ffb37c2c7c0"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37c2c950"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7ffb37c2cae0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7ffb37c2cc70"/>
        <function-ref name="getDestination" scoped="" ref="0x7ffb37c2ce00"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7ffb37c2b020"/>
        <function-ref name="aborted" scoped="" ref="0x7ffb37c2b1b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7ffb37c2b340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ffb37c2b4d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7ffb37c2b760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7ffb37c2b8f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7ffb37c2ba80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7ffb37c2bc10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7ffb37c2bda0"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37c2a020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7ffb37c2a1b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7ffb37c2a340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7ffb37c2a4d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7ffb37c2a660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7ffb37c2a7f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7ffb37c2a980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7ffb37c2ad10"/>
        <function-ref name="getSource" scoped="" ref="0x7ffb37c29020"/>
        <function-ref name="getSize" scoped="" ref="0x7ffb37c291b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7ffb37c29340"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37c294d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7ffb37c29660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7ffb37c297f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7ffb37c29980"/>
        <function-ref name="setSize" scoped="" ref="0x7ffb37c29b10"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37c29ca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7ffb37c29e30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7ffb37c28020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7ffb37c281b0"/>
        <function-ref name="setDst" scoped="" ref="0x7ffb37c28340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7ffb37c2ed80" loc="44:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel2P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel" scoped="" ref="0x7ffb37c2ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7ffb37c2d180"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7ffb37c2d310"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7ffb37c2d4a0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7ffb37c2d630"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7ffb37c2d7c0"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37c2d950"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7ffb37c2dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel1" ref="0x7ffb37c1c740" loc="48:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel1" scoped="" ref="0x7ffb37c1c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7ffb37c1cac0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7ffb37c1cc50"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7ffb37c1cde0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7ffb37c1b020"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7ffb37c1b1b0"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37c1b340"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7ffb37c1b4d0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7ffb37c1b660"/>
        <function-ref name="getDestination" scoped="" ref="0x7ffb37c1b7f0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7ffb37c1b980"/>
        <function-ref name="aborted" scoped="" ref="0x7ffb37c1bb10"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7ffb37c1bca0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ffb37c1be30"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7ffb37c1a120"/>
        <function-ref name="interruptPending" scoped="" ref="0x7ffb37c1a2b0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7ffb37c1a440"/>
        <function-ref name="getTrigger" scoped="" ref="0x7ffb37c1a5d0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7ffb37c1a760"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37c1a8f0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7ffb37c1aa80"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7ffb37c1ac10"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7ffb37c1ada0"/>
        <function-ref name="setSrc" scoped="" ref="0x7ffb37c19020"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7ffb37c191b0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7ffb37c19340"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7ffb37c196d0"/>
        <function-ref name="getSource" scoped="" ref="0x7ffb37c19860"/>
        <function-ref name="getSize" scoped="" ref="0x7ffb37c199f0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7ffb37c19b80"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37c19d10"/>
        <function-ref name="enableDMA" scoped="" ref="0x7ffb37c18020"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7ffb37c181b0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7ffb37c18340"/>
        <function-ref name="setSize" scoped="" ref="0x7ffb37c184d0"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37c18660"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7ffb37c187f0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7ffb37c18980"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7ffb37c18b10"/>
        <function-ref name="setDst" scoped="" ref="0x7ffb37c18ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplControl" ref="0x7ffb37c23970" loc="46:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplControl" scoped="" ref="0x7ffb37c23970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="clearRoundRobin" scoped="" ref="0x7ffb37c22990"/>
        <function-ref name="setRoundRobin" scoped="" ref="0x7ffb37c23e80"/>
        <function-ref name="clearOnFetch" scoped="" ref="0x7ffb37c22030"/>
        <function-ref name="setENNMI" scoped="" ref="0x7ffb37c221c0"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37c22350"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37c224e0"/>
        <function-ref name="setOnFetch" scoped="" ref="0x7ffb37c22670"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37c22800"/>
        <function-ref name="clearENNMI" scoped="" ref="0x7ffb37c23cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel2" ref="0x7ffb37c170d0" loc="49:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel2" scoped="" ref="0x7ffb37c170d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7ffb37c17450"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7ffb37c175e0"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7ffb37c17770"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7ffb37c17900"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7ffb37c17a90"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37c17c20"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7ffb37c17db0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7ffb37c16020"/>
        <function-ref name="getDestination" scoped="" ref="0x7ffb37c161b0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7ffb37c16340"/>
        <function-ref name="aborted" scoped="" ref="0x7ffb37c164d0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7ffb37c16660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ffb37c167f0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7ffb37c16a80"/>
        <function-ref name="interruptPending" scoped="" ref="0x7ffb37c16c10"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7ffb37c16da0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7ffb37c15020"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7ffb37c151b0"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37c15340"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7ffb37c154d0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7ffb37c15660"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7ffb37c157f0"/>
        <function-ref name="setSrc" scoped="" ref="0x7ffb37c15980"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7ffb37c15b10"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7ffb37c15ca0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7ffb37c14220"/>
        <function-ref name="getSource" scoped="" ref="0x7ffb37c143b0"/>
        <function-ref name="getSize" scoped="" ref="0x7ffb37c14540"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7ffb37c146d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37c14860"/>
        <function-ref name="enableDMA" scoped="" ref="0x7ffb37c149f0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7ffb37c14b80"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7ffb37c14d10"/>
        <function-ref name="setSize" scoped="" ref="0x7ffb37c13020"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37c131b0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7ffb37c13340"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7ffb37c134d0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7ffb37c13660"/>
        <function-ref name="setDst" scoped="" ref="0x7ffb37c137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ffb37c23060" loc="44:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ffb37c23060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setFlags" scoped="" ref="0x7ffb37c233e0"/>
        <function-ref name="init" scoped="" ref="0x7ffb37c23570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel0" ref="0x7ffb37c22d90" loc="47:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel0" scoped="" ref="0x7ffb37c22d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7ffb37c20180"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7ffb37c20310"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7ffb37c204a0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7ffb37c20630"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7ffb37c207c0"/>
        <function-ref name="getState" scoped="" ref="0x7ffb37c20950"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7ffb37c20ae0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7ffb37c20c70"/>
        <function-ref name="getDestination" scoped="" ref="0x7ffb37c20e00"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7ffb37c1f020"/>
        <function-ref name="aborted" scoped="" ref="0x7ffb37c1f1b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7ffb37c1f340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7ffb37c1f4d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7ffb37c1f760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7ffb37c1f8f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7ffb37c1fa80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7ffb37c1fc10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7ffb37c1fda0"/>
        <function-ref name="reset" scoped="" ref="0x7ffb37c1e020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7ffb37c1e1b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7ffb37c1e340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7ffb37c1e4d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7ffb37c1e660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7ffb37c1e7f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7ffb37c1e980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7ffb37c1ed10"/>
        <function-ref name="getSource" scoped="" ref="0x7ffb37c1d020"/>
        <function-ref name="getSize" scoped="" ref="0x7ffb37c1d1b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7ffb37c1d340"/>
        <function-ref name="transferDone" scoped="" ref="0x7ffb37c1d4d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7ffb37c1d660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7ffb37c1d7f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7ffb37c1d980"/>
        <function-ref name="setSize" scoped="" ref="0x7ffb37c1db10"/>
        <function-ref name="setState" scoped="" ref="0x7ffb37c1dca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7ffb37c1de30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7ffb37c1c020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7ffb37c1c1b0"/>
        <function-ref name="setDst" scoped="" ref="0x7ffb37c1c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37beb9f0" loc="39:../../../tos/platforms/shimmer2r/AccelC.nc">
      <component-ref qname="AccelC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37beb9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37bebd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Accel" ref="0x7ffb37beb260" loc="38:../../../tos/platforms/shimmer2r/AccelC.nc">
      <component-ref qname="AccelC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Accel" scoped="" ref="0x7ffb37beb260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mma_Accel"/>
      </instance>
      <interface-functions>
        <function-ref name="setSensitivity" scoped="" ref="0x7ffb37beb5e0"/>
        <function-ref name="wake" scoped="" ref="0x7ffb37beb770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37bea840" loc="39:../../../tos/platforms/shimmer2r/Mma7361P.nc">
      <component-ref qname="Mma7361P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37bea840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37beabc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Accel" ref="0x7ffb37be7020" loc="40:../../../tos/platforms/shimmer2r/Mma7361P.nc">
      <component-ref qname="Mma7361P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Accel" scoped="" ref="0x7ffb37be7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mma_Accel"/>
      </instance>
      <interface-functions>
        <function-ref name="setSensitivity" scoped="" ref="0x7ffb37be73a0"/>
        <function-ref name="wake" scoped="" ref="0x7ffb37be7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GyroBoard" ref="0x7ffb37bdec00" loc="42:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <component-ref qname="GyroBoardC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroBoard" scoped="" ref="0x7ffb37bdec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GyroBoard"/>
      </instance>
      <interface-functions>
        <function-ref name="autoZero" scoped="" ref="0x7ffb37bdc020"/>
        <function-ref name="buttonPressed" scoped="" ref="0x7ffb37bdc1b0"/>
        <function-ref name="ledOn" scoped="" ref="0x7ffb37bdc340"/>
        <function-ref name="ledOff" scoped="" ref="0x7ffb37bdc4d0"/>
        <function-ref name="ledToggle" scoped="" ref="0x7ffb37bdc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37bedd60" loc="40:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <component-ref qname="GyroBoardC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37bedd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37bde180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ffb37bde440" loc="41:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <component-ref qname="GyroBoardC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ffb37bde440"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb37bde7c0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37bde950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GyroBoard" ref="0x7ffb37bd8080" loc="45:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroBoard" scoped="" ref="0x7ffb37bd8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GyroBoard"/>
      </instance>
      <interface-functions>
        <function-ref name="autoZero" scoped="" ref="0x7ffb37bd8400"/>
        <function-ref name="buttonPressed" scoped="" ref="0x7ffb37bd8590"/>
        <function-ref name="ledOn" scoped="" ref="0x7ffb37bd8720"/>
        <function-ref name="ledOff" scoped="" ref="0x7ffb37bd88b0"/>
        <function-ref name="ledToggle" scoped="" ref="0x7ffb37bd8a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37bd9240" loc="43:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37bd9240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37bd95c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="buttonNotify" ref="0x7ffb37bd7020" loc="48:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="buttonNotify" scoped="" ref="0x7ffb37bd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37eb0b40"/>
            <typename><typedef-ref name="button_state_t" ref="0x7ffb37e9c4b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7ffb37bd60d0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37bd7c10"/>
        <function-ref name="notify" scoped="" ref="0x7ffb37bd6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ffb37bd9880" loc="44:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ffb37bd9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb37bd9c00"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37bd9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7ffb37bda8f0" loc="51:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <component-ref qname="GyroButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7ffb37bda8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37eb0b40"/>
            <typename><typedef-ref name="button_state_t" ref="0x7ffb37e9c4b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7ffb37bb79e0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37bb7560"/>
        <function-ref name="notify" scoped="" ref="0x7ffb37bb7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7ffb37bad5b0" loc="44:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <component-ref qname="HplGyroButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7ffb37bad5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb37bad930"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37badac0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ffb37badc50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ffb37badde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb37bb6c90" loc="43:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <component-ref qname="HplGyroButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37bb6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37bb30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37bb3230"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37bb33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37bb3550"/>
        <function-ref name="get" scoped="" ref="0x7ffb37bb36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37bb3870"/>
        <function-ref name="set" scoped="" ref="0x7ffb37bb3a00"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37bb3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7ffb37ba3710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7ffb37ba3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37ba3a90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37ba3c20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37ba3db0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37ba2020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37ba21b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37ba2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7ffb37b998a0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7ffb37b998a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b99c20"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b99db0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b98020"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b981b0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b98340"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7ffb37ba0710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7ffb37ba0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37ba0a90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37ba0c20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37ba0db0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b9f020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b9f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b9f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7ffb37b9e710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7ffb37b9e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b9ea90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b9ec20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b9edb0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b9d020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b9d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b9d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7ffb37ba9710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7ffb37ba9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37ba9a90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37ba9c20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37ba9db0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37ba4020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37ba41b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37ba4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7ffb37b9b710" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7ffb37b9b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b9bb90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b9bd20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b9a020"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b9a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b9a340"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b9a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7ffb37ba2710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7ffb37ba2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37ba2a90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37ba2c20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37ba2db0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37ba1020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37ba11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37ba1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7ffb37b988a0" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7ffb37b988a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b98c20"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b98db0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b97020"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b971b0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b97340"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7ffb37ba5740" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7ffb37ba5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37ba5ac0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37ba5c50"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37ba5de0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37baa020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37baa1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37baa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7ffb37b9d710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7ffb37b9d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b9da90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b9dc20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b9ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b9c020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b9c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b9c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7ffb37ba4710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7ffb37ba4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37ba4a90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37ba4c20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37ba4db0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37ba3020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37ba31b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37ba3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7ffb37b9a8a0" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7ffb37b9a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b9ac20"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b9adb0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b99020"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b991b0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b99340"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b994d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7ffb37ba1710" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7ffb37ba1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37ba1a90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37ba1c20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37ba1db0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37ba0020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37ba01b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37ba0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7ffb37b9f710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7ffb37b9f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b9fa90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b9fc20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b9fdb0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b9e020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b9e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b9e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7ffb37baa710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7ffb37baa710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37baaa90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37baac20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37baadb0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37ba9020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37ba91b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37ba9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7ffb37b9c710" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7ffb37b9c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b9ca90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b9cc20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b9cdb0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b9b020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b9b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b9b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7ffb37b8f710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7ffb37b8f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b8fa90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b8fc20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b8fdb0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b8e020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b8e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b8e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7ffb37b858a0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7ffb37b858a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b85c20"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b85db0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b84020"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b841b0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b84340"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7ffb37b8c710" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7ffb37b8c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b8ca90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b8cc20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b8cdb0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b8b020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b8b1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b8b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7ffb37b8a710" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7ffb37b8a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b8aa90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b8ac20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b8adb0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b89020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b891b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7ffb37b91710" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7ffb37b91710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b91a90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b91c20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b91db0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b90020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b901b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b90340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7ffb37b87710" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7ffb37b87710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b87b90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b87d20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b86020"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b861b0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b86340"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7ffb37b8e710" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7ffb37b8e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b8ea90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b8ec20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b8edb0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b8d020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b8d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b8d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7ffb37b848a0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7ffb37b848a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b84c20"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b84db0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b83020"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b831b0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b83340"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b834d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7ffb37b936b0" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7ffb37b936b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b93a30"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b93bc0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b93d50"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b92020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b921b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b92340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7ffb37b89710" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7ffb37b89710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b89a90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b89c20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b89db0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b88020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b881b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b88340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7ffb37b90710" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7ffb37b90710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b90a90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b90c20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b90db0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b8f020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b8f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b8f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7ffb37b868a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7ffb37b868a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b86c20"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b86db0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b85020"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b851b0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b85340"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b854d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7ffb37b8d710" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7ffb37b8d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b8da90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b8dc20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b8ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b8c020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b8c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b8c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7ffb37b8b710" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7ffb37b8b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b8ba90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b8bc20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b8bdb0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b8a020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b8a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b8a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7ffb37b92710" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7ffb37b92710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b92a90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b92c20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b92db0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b91020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b911b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b91340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7ffb37b88710" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7ffb37b88710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37b88a90"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37b88c20"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37b88db0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37b87020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37b871b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37b87340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ffb37ab0020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplGyroButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb37ab0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37ab03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37ab0530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb37ab06c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37ab0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37ab09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb37ab0b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37ab0d00"/>
        <function-ref name="get" scoped="" ref="0x7ffb37aaf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb37aaf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb37aaf340"/>
        <function-ref name="set" scoped="" ref="0x7ffb37aaf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb37aaf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb37aaf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb37aafa80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37aafc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb37ab2d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplGyroButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37ab2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37ab1180"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37ab1310"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37ab14a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37ab1630"/>
        <function-ref name="get" scoped="" ref="0x7ffb37ab17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37ab1950"/>
        <function-ref name="set" scoped="" ref="0x7ffb37ab1ae0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37ab1c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7ffb37a9e020" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplGyroButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7ffb37a9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37a9e3a0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37a9e530"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37a9e6c0"/>
        <function-ref name="edge" scoped="" ref="0x7ffb37a9e850"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37a9e9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb37a9eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7ffb37aab490" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplGyroButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ffb37aab490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb37aab810"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37aab9a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ffb37aabb30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ffb37aabcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7ffb37a862f0" loc="51:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7ffb37a862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb37a86670"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb37a86800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7ffb37a87760" loc="48:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7ffb37a87760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb37a87ae0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37a87c70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ffb37a87e00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ffb37a86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7ffb37a8ab10" loc="45:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7ffb37a8ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7ffb37a89bd0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37a89750"/>
        <function-ref name="notify" scoped="" ref="0x7ffb37a88090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7ffb37a88510" loc="47:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37a88510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37a88890"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37a88a20"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37a88bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37a88d40"/>
        <function-ref name="get" scoped="" ref="0x7ffb37a87020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37a871b0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37a87340"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37a874d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="debounce" ref="0x7ffb37a73c40" loc="64:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="debounce" scoped="" ref="0x7ffb37a73c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb37a72020"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb37a721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7ffb37a84af0" loc="45:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7ffb37a84af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37eb0b40"/>
            <typename><typedef-ref name="button_state_t" ref="0x7ffb37e9c4b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7ffb37a81bd0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37a81750"/>
        <function-ref name="notify" scoped="" ref="0x7ffb37a7f090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7ffb37a7f750" loc="47:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7ffb37a7f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7ffb37a7e810"/>
        <function-ref name="enable" scoped="" ref="0x7ffb37a7e390"/>
        <function-ref name="notify" scoped="" ref="0x7ffb37a7ec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="debounceTimer" ref="0x7ffb37a7d3d0" loc="48:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="debounceTimer" scoped="" ref="0x7ffb37a7d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb37a79870"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37a7ce40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb37a7ac00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb37a7a780"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb37a781e0"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb37a79cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb37a7a300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb37a7c020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb37a79260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb37a7c4f0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37a7c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ffb37a6a640" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="GyroButtonC.debounceTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb37a6a640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb378dfc40"/>
        <function-ref name="fired" scoped="" ref="0x7ffb378e01e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb378df020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb378e0ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb378dd590"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb378dd110"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb378e0660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb378e1390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb378df630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb378e1860"/>
        <function-ref name="stop" scoped="" ref="0x7ffb378e1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7ffb37a64c60" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7ffb37a64c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb37a5d170"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37a60720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb37a5f510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb37a5f090"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb37a5da70"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb37a5d5f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb37a60ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb37a618a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb37a5fb20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb37a61d70"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37a602a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7ffb37a58700" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7ffb37a58700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb37a55c40"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37a561e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb37a55020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb37a56ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb37a54590"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb37a54110"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb37a56660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb37a57390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb37a55630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb37a57860"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37a57d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ffb37a521a0" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ffb37a521a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb37a52dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37a5c8c0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37a5c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37a5cc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ffb3797d020" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ffb3797d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb3797b870"/>
        <function-ref name="fired" scoped="" ref="0x7ffb3797c840"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb3797b220"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb3797cd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb3797bd30"/>
        <function-ref name="start" scoped="" ref="0x7ffb3797de30"/>
        <function-ref name="stop" scoped="" ref="0x7ffb3797c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb3797e760" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb3797e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb3797eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ffb366fa870" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ffb366fa870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb366f7090"/>
        <function-ref name="fired" scoped="" ref="0x7ffb366f8090"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb366f8a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb366f8550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb366f7550"/>
        <function-ref name="start" scoped="" ref="0x7ffb366f96a0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb366f9bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb366fa020" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb366fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb366fa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ffb366e2da0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb366e2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb366e1180"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb366e1310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb366e14a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb366e1630"/>
        <function-ref name="fired" scoped="" ref="0x7ffb366e17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ffb366e4340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb366e4340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb366e46c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb366e4850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb366e49e0"/>
        <function-ref name="get" scoped="" ref="0x7ffb366e4b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb366e4d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb366e3020"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb366e31b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb366e3340"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb366e34d0"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb366e3660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb366e37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ffb366e3a80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb366e3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb366e3e00"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb366e2020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb366e21b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb366e2340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb366e24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb366e2660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb366e27f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb366e2980"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb366e2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ffb37a321d0" loc="52:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb37a321d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb37a32550"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb37a326e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb37a32870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb37a32a00"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37a32b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ffb37a37990" loc="50:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb37a37990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37a37d10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb37a36020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb37a361b0"/>
        <function-ref name="get" scoped="" ref="0x7ffb37a36340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb37a364d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb37a36660"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb37a367f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb37a36980"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb37a36b10"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb37a36ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb37a36e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ffb37a35720" loc="51:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb37a35720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb37a35aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb37a35c30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb37a35dc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb37a34020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb37a341b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb37a34340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb37a344d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb37a34660"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb37a347f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7ffb366d8a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb366d8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb366d8e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb366d7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb366d71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb366d7340"/>
        <function-ref name="fired" scoped="" ref="0x7ffb366d74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ffb366da190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb366da190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb366da510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb366da6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb366da830"/>
        <function-ref name="get" scoped="" ref="0x7ffb366da9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb366dab50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb366dace0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb366dae70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb366d9030"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb366d91c0"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb366d9350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb366d94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ffb366dd020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ffb366dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb366db870"/>
        <function-ref name="fired" scoped="" ref="0x7ffb366dc840"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb366db220"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb366dcd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb366dbd30"/>
        <function-ref name="start" scoped="" ref="0x7ffb366dde30"/>
        <function-ref name="stop" scoped="" ref="0x7ffb366dc380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb366df660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb366df660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb366df9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ffb366d9770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb366d9770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb366d9af0"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb366d9c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb366d9e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb366d8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb366d81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb366d8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb366d84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb366d8660"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb366d87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ffb379df020" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb379df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb379dfe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb379de800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb379de340"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb379decc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7ffb379bd950" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7ffb379bd950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb379bb780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb379ba150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb379bbc40"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb379ba610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ffb379bf5f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb379bf5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb379be430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb379bedb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb379be8f0"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb379bd2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ffb366f4a90" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ffb366f4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb366f12e0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb366f22e0"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb366f2c60"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb366f27a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb366f17a0"/>
        <function-ref name="start" scoped="" ref="0x7ffb366f38d0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb366f3de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7ffb366ed210" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7ffb366ed210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb366ebb30"/>
        <function-ref name="fired" scoped="" ref="0x7ffb366eca60"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb366eb4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb366eb020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb366ea020"/>
        <function-ref name="start" scoped="" ref="0x7ffb366ec090"/>
        <function-ref name="stop" scoped="" ref="0x7ffb366ec5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ffb366f1e10" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb366f1e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb366f0ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb366ee670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb366ee1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb366eeb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7ffb37948490" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7ffb37948490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb37948810"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb379489a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7ffb3794c1d0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ffb3794c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb37949b30"/>
        <function-ref name="fired" scoped="" ref="0x7ffb3794b9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb379494e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb37949020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb37948020"/>
        <function-ref name="start" scoped="" ref="0x7ffb3794b020"/>
        <function-ref name="stop" scoped="" ref="0x7ffb3794b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ffb37952cf0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb37952cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb3794d220"/>
        <function-ref name="fired" scoped="" ref="0x7ffb379507c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb3794e590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb3794e110"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb3794db20"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb3794d6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb37950c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb37951940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb3794eba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb37951e10"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37950340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7ffb378f8e80" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7ffb378f8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb378f7220"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb378f73b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7ffb378fdc30" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7ffb378fdc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb378f8110"/>
        <function-ref name="fired" scoped="" ref="0x7ffb378fa6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb378f94a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb378f9020"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb378f8a10"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb378f8590"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb378fab20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb378fc860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb378f9ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb378fcd30"/>
        <function-ref name="stop" scoped="" ref="0x7ffb378fa220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ffb37903690" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb37903690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb378ffcf0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37900260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb378ff090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb37900ba0"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb378fd680"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb378fd1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb37900700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb37902390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb378ff6c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb37902880"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37902d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ffb378f4cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ffb378f4cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb378f3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ffb378e9020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb378e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb378e9e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb378e8800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb378e8340"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb378e8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7ffb37be8e60" loc="49:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorC.nc">
      <component-ref qname="TiltDetectorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7ffb37be8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37eb0b40"/>
            <typename><typedef-ref name="button_state_t" ref="0x7ffb37e9c4b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7ffb378d6020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb378d7a80"/>
        <function-ref name="notify" scoped="" ref="0x7ffb378d64a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7ffb378d2660" loc="44:../../../tos/platforms/shimmer2/chips/tilt/HplTiltDetectorC.nc">
      <component-ref qname="HplTiltDetectorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7ffb378d2660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb378d29e0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb378d2b70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ffb378d2d00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ffb378d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb378d3340" loc="43:../../../tos/platforms/shimmer2/chips/tilt/HplTiltDetectorC.nc">
      <component-ref qname="HplTiltDetectorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb378d3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb378d36c0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb378d3850"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb378d39e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb378d3b70"/>
        <function-ref name="get" scoped="" ref="0x7ffb378d3d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb378d2020"/>
        <function-ref name="set" scoped="" ref="0x7ffb378d21b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb378d2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ffb378ceac0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplTiltDetectorC.TiltDetectorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb378ceac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb378cee40"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb378cd020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb378cd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb378cd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb378cd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb378cd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb378cd7f0"/>
        <function-ref name="get" scoped="" ref="0x7ffb378cd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb378cdb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb378cdca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb378cde30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb378cc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb378cc1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb378cc440"/>
        <function-ref name="clr" scoped="" ref="0x7ffb378cc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb378cf850" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplTiltDetectorC.TiltDetectorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb378cf850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb378cfbd0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb378cfd60"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb378ce020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb378ce1b0"/>
        <function-ref name="get" scoped="" ref="0x7ffb378ce340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb378ce4d0"/>
        <function-ref name="set" scoped="" ref="0x7ffb378ce660"/>
        <function-ref name="clr" scoped="" ref="0x7ffb378ce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7ffb378c97a0" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplTiltDetectorC.InterruptTiltDetectorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7ffb378c97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb378c9b20"/>
        <function-ref name="fired" scoped="" ref="0x7ffb378c9cb0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb378c9e40"/>
        <function-ref name="edge" scoped="" ref="0x7ffb378c8020"/>
        <function-ref name="enable" scoped="" ref="0x7ffb378c81b0"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb378c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7ffb378cab50" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplTiltDetectorC.InterruptTiltDetectorC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ffb378cab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb378c9020"/>
        <function-ref name="disable" scoped="" ref="0x7ffb378c91b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ffb378c9340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ffb378c94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7ffb378c0020" loc="51:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="TiltDetectorC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7ffb378c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb378c03a0"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb378c0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7ffb378c1440" loc="48:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="TiltDetectorC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7ffb378c1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb378c17c0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb378c1950"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ffb378c1ae0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ffb378c1c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7ffb378c5880" loc="45:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="TiltDetectorC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7ffb378c5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7ffb378c4940"/>
        <function-ref name="enable" scoped="" ref="0x7ffb378c44c0"/>
        <function-ref name="notify" scoped="" ref="0x7ffb378c4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7ffb378c3290" loc="47:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="TiltDetectorC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb378c3290"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb378c3610"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb378c37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb378c3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb378c3ac0"/>
        <function-ref name="get" scoped="" ref="0x7ffb378c3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb378c3de0"/>
        <function-ref name="set" scoped="" ref="0x7ffb378c1020"/>
        <function-ref name="clr" scoped="" ref="0x7ffb378c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="debounce" ref="0x7ffb378adbb0" loc="64:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorP.nc">
      <component-ref qname="TiltDetectorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="debounce" scoped="" ref="0x7ffb378adbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb378ac020"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb378ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7ffb378be8a0" loc="45:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorP.nc">
      <component-ref qname="TiltDetectorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7ffb378be8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37eb0b40"/>
            <typename><typedef-ref name="button_state_t" ref="0x7ffb37e9c4b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7ffb378bb940"/>
        <function-ref name="enable" scoped="" ref="0x7ffb378bb4c0"/>
        <function-ref name="notify" scoped="" ref="0x7ffb378bbdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7ffb378ba4d0" loc="47:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorP.nc">
      <component-ref qname="TiltDetectorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7ffb378ba4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7ffb378b9590"/>
        <function-ref name="enable" scoped="" ref="0x7ffb378b9110"/>
        <function-ref name="notify" scoped="" ref="0x7ffb378b9a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="debounceTimer" ref="0x7ffb378b7150" loc="48:../../../tos/platforms/shimmer2/chips/tilt/TiltDetectorP.nc">
      <component-ref qname="TiltDetectorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="debounceTimer" scoped="" ref="0x7ffb378b7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb378b4630"/>
        <function-ref name="fired" scoped="" ref="0x7ffb378b6bb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb378b5990"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb378b5510"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb378b2020"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb378b4ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb378b5090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb378b7d40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb378b4020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb378b6260"/>
        <function-ref name="stop" scoped="" ref="0x7ffb378b6730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ffb378a7970" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TiltDetectorC.debounceTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb378a7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb378a3e80"/>
        <function-ref name="fired" scoped="" ref="0x7ffb378a54a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb378a3260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb378a5da0"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb378a27a0"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb378a2320"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb378a5920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb378a65a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb378a3870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb378a6a70"/>
        <function-ref name="stop" scoped="" ref="0x7ffb378a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ffb37872020" loc="44:../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ffb37872020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb3786f870"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37870840"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb3786f220"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb37870d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb3786fd30"/>
        <function-ref name="start" scoped="" ref="0x7ffb37872e30"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37870380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37873760" loc="43:../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37873760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37873ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ffb36644020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ffb36644020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb36642870"/>
        <function-ref name="fired" scoped="" ref="0x7ffb36643840"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb36642220"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb36643d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb36642d30"/>
        <function-ref name="start" scoped="" ref="0x7ffb36644e30"/>
        <function-ref name="stop" scoped="" ref="0x7ffb36643380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb36646680" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb36646680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb36646a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ffb3662c8f0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb3662c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb3662cc70"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb3662ce00"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb3662b020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb3662b1b0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb3662b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ffb36630e70" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb36630e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb3662e220"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb3662e3b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3662e540"/>
        <function-ref name="get" scoped="" ref="0x7ffb3662e6d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3662e860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3662e9f0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb3662eb80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3662ed10"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb3662d020"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb3662d1b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb3662d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ffb3662d5d0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb3662d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb3662d950"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb3662dae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3662dc70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb3662de00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb3662c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3662c1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb3662c340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb3662c4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb3662c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7ffb36622760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb36622760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb36622ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb36622c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb36622e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb36621020"/>
        <function-ref name="fired" scoped="" ref="0x7ffb366211b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ffb36625dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb36625dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb36624180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb36624310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb366244a0"/>
        <function-ref name="get" scoped="" ref="0x7ffb36624630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb366247c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb36624950"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb36624ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb36624c70"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb36624e00"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb36623020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb366231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ffb36629bd0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ffb36629bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb366254e0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb366274e0"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb36627e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb366279a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb366259a0"/>
        <function-ref name="start" scoped="" ref="0x7ffb36628a80"/>
        <function-ref name="stop" scoped="" ref="0x7ffb36627020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb36629340" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb36629340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb366296c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ffb36623440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb36623440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb366237c0"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb36623950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb36623ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb36623c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb36623e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb36622020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb366221b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb36622340"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb366224d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ffb3788f650" loc="43:../../../tos/chips/msp430/timer/CounterMilli16C.nc">
      <component-ref qname="CounterMilli16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb3788f650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb3788e5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3788c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3788ea70"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb3788c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7ffb378866d0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli16C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7ffb378866d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb378855b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb37883020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb37885a70"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb378834e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ffb378892e0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli16C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb378892e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb37887110"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb37887a90"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb378875d0"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb37886020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ffb3663f1d0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ffb3663f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb3663cb30"/>
        <function-ref name="fired" scoped="" ref="0x7ffb3663e9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb3663c4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb3663c020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb3663b020"/>
        <function-ref name="start" scoped="" ref="0x7ffb3663e020"/>
        <function-ref name="stop" scoped="" ref="0x7ffb3663e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7ffb36639b90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7ffb36639b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb366354e0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb366364e0"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb36636e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb366369a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb366359a0"/>
        <function-ref name="start" scoped="" ref="0x7ffb366389d0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb36636020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ffb3663b690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="SimpleAccelGyroAppC.sampleTimer.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb3663b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb3663a5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb36639020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3663aa70"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb366394e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ffb3786c020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SimpleAccelGyroAppC.motionTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb3786c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb37868630"/>
        <function-ref name="fired" scoped="" ref="0x7ffb3786ba60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb37869920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb378694a0"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb37867020"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb37868ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb37869020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb3786cc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb37868020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb3786b110"/>
        <function-ref name="stop" scoped="" ref="0x7ffb3786b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ffb37865020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SimpleAccelGyroAppC.blinkTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb37865020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb37861630"/>
        <function-ref name="fired" scoped="" ref="0x7ffb37864a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb37862920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb378624a0"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb37860020"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb37861ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb37862020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb37865c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb37861020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb37864110"/>
        <function-ref name="stop" scoped="" ref="0x7ffb378645e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ffb3785fa70" loc="58:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ffb3785fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ffb3785fdf0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ffb3785c020"/>
        <function-ref name="start" scoped="" ref="0x7ffb3785c1b0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb3785c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ffb3785cb10" loc="60:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ffb3785cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb3785b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb3785b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb3785b340"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb3785b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb3785b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ffb37859a40" loc="62:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7ffb37859a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb37859dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ffb37858080" loc="64:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb37858080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb37858400"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb37858590"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37858720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb378588b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb37858a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7ffb3784b6b0" loc="67:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ffb3784b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ffb37854ce0"/>
        <function-ref name="clear" scoped="" ref="0x7ffb37853460"/>
        <function-ref name="isValid" scoped="" ref="0x7ffb378545b0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37853b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ffb3783d5b0" loc="69:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ffb3783d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ffb3783d930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ffb3783dac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ffb3783dc50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ffb3783dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb3785be40" loc="61:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb3785be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb378591e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ffb378564e0" loc="66:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb378564e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ffb37856860"/>
        <function-ref name="noAck" scoped="" ref="0x7ffb378569f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ffb37856b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ffb37858cf0" loc="65:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ffb37858cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ffb378570a0"/>
        <function-ref name="source" scoped="" ref="0x7ffb37857230"/>
        <function-ref name="address" scoped="" ref="0x7ffb378573c0"/>
        <function-ref name="destination" scoped="" ref="0x7ffb37857550"/>
        <function-ref name="setSource" scoped="" ref="0x7ffb378576e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7ffb37857870"/>
        <function-ref name="type" scoped="" ref="0x7ffb37857a00"/>
        <function-ref name="setType" scoped="" ref="0x7ffb37857b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7ffb37857d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7ffb37856020"/>
        <function-ref name="localGroup" scoped="" ref="0x7ffb378561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7ffb3784a840" loc="68:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ffb3784a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ffb37849dd0"/>
        <function-ref name="clear" scoped="" ref="0x7ffb37848540"/>
        <function-ref name="isValid" scoped="" ref="0x7ffb378496a0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37848c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ffb378322f0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ffb378322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ffb37832670"/>
        <function-ref name="stopDone" scoped="" ref="0x7ffb37832800"/>
        <function-ref name="start" scoped="" ref="0x7ffb37832990"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37832b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ffb3782a2c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb3782a2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ffb3782a640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ffb3782a7d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ffb3782a960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ffb3782aaf0"/>
        <function-ref name="setCca" scoped="" ref="0x7ffb3782ac80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ffb3782ae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7ffb378161d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7ffb378161d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7ffb37816650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ffb3782c020" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb3782c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb3782c3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb3782c530"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb3782c6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb3782c850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb3782c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ffb37831320" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ffb37831320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb378316a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37831830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb378319c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb37831b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb37831ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ffb3782f1d0" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7ffb3782f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb3782f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ffb378230f0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb378230f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ffb37823470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ffb37823600"/>
        <function-ref name="getRssi" scoped="" ref="0x7ffb37823790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ffb37823920"/>
        <function-ref name="getPower" scoped="" ref="0x7ffb37823ab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ffb37823c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ffb37818170" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ffb37818170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ffb378184f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ffb37818680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ffb37818810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ffb378189a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb37830510" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb37830510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb37830890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ffb3782b020" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb3782b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ffb3782b3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7ffb3782b530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ffb3782b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ffb3780e430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ffb3780e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ffb3780e7b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7ffb3780e940"/>
        <function-ref name="getRetries" scoped="" ref="0x7ffb3780ead0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ffb3780ec60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ffb3780edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ffb3782f800" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ffb3782f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ffb3782fb80"/>
        <function-ref name="source" scoped="" ref="0x7ffb3782fd10"/>
        <function-ref name="address" scoped="" ref="0x7ffb3782d020"/>
        <function-ref name="destination" scoped="" ref="0x7ffb3782d1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7ffb3782d340"/>
        <function-ref name="setDestination" scoped="" ref="0x7ffb3782d4d0"/>
        <function-ref name="type" scoped="" ref="0x7ffb3782d660"/>
        <function-ref name="setType" scoped="" ref="0x7ffb3782d7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7ffb3782d980"/>
        <function-ref name="setGroup" scoped="" ref="0x7ffb3782db10"/>
        <function-ref name="localGroup" scoped="" ref="0x7ffb3782dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ffb3781e170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ffb3781e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ffb3781e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ffb37809020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ffb37809020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ffb378093a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ffb37809530"/>
        <function-ref name="start" scoped="" ref="0x7ffb378096c0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb37809850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ffb37801080" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ffb37801080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ffb37801400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ffb378002e0" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ffb378002e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ffb37800660"/>
        <function-ref name="setRetries" scoped="" ref="0x7ffb378007f0"/>
        <function-ref name="getRetries" scoped="" ref="0x7ffb37800980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ffb37800b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ffb37800ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ffb37803670" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb37803670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ffb378039f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ffb37803b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7ffb37803d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ffb37802020"/>
        <function-ref name="getPower" scoped="" ref="0x7ffb378021b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ffb37802340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7ffb37804170" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7ffb37804170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb378044f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37804680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb37804810"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb378049a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb37804b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ffb37801700" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ffb37801700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ffb37801a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ffb37801c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ffb37801da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ffb37800020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7ffb37806d30" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7ffb37806d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb378050e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ffb37802670" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb37802670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ffb378029f0"/>
        <function-ref name="noAck" scoped="" ref="0x7ffb37802b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ffb37802d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb378081d0" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb378081d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb37808550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb378086e0"/>
        <function-ref name="request" scoped="" ref="0x7ffb37808870"/>
        <function-ref name="granted" scoped="" ref="0x7ffb37808a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb37808b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7ffb37806020" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7ffb37806020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb378063a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37806530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb378066c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb37806850"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb378069e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7ffb37805420" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7ffb37805420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb378057a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb37805930"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37805ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb37805c50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb37805de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7ffb37803020" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7ffb37803020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb378033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ffb377ffac0" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ffb377ffac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ffb377ffe40"/>
        <function-ref name="stopDone" scoped="" ref="0x7ffb377fc020"/>
        <function-ref name="start" scoped="" ref="0x7ffb377fc1b0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb377fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ffb377fb990" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb377fb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ffb377fbd10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ffb377fa020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ffb377fa1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ffb377fa340"/>
        <function-ref name="setCca" scoped="" ref="0x7ffb377fa4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ffb377fa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb377fc600" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb377fc600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb377fc980"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb377fcb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb377fcca0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb377fce30"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb377fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb377fb300" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb377fb300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb377fb680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420RxState" ref="0x7ffb377f62d0" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420RxState" scoped="" ref="0x7ffb377f62d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420RxState"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x7ffb377f6650"/>
        <function-ref name="enableCca" scoped="" ref="0x7ffb377f67e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ffb377f88d0" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ffb377f88d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ffb377f8c50"/>
        <function-ref name="stopDone" scoped="" ref="0x7ffb377f8de0"/>
        <function-ref name="start" scoped="" ref="0x7ffb377f3020"/>
        <function-ref name="stop" scoped="" ref="0x7ffb377f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ffb377f21a0" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb377f21a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ffb377f2520"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ffb377f26b0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ffb377f2840"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ffb377f29d0"/>
        <function-ref name="setCca" scoped="" ref="0x7ffb377f2b60"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ffb377f2cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7ffb377e8ae0" loc="55:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7ffb377e8ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ffb377e8e60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ffb377e7020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ffb377e71b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ffb377e7340"/>
        <function-ref name="setCca" scoped="" ref="0x7ffb377e74d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ffb377e7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ffb377dc020" loc="58:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb377dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ffb377dc3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ffb377dc530"/>
        <function-ref name="getRssi" scoped="" ref="0x7ffb377dc6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ffb377dc850"/>
        <function-ref name="getPower" scoped="" ref="0x7ffb377dc9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ffb377dcb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7ffb377e1d30" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7ffb377e1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb377e80e0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb377e8270"/>
        <function-ref name="modify" scoped="" ref="0x7ffb377e8400"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb377e8590"/>
        <function-ref name="resend" scoped="" ref="0x7ffb377e8720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb377f3470" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb377f3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb377f37f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb377f3980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb377f3b10"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb377f3ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb377f3e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7ffb377e0020" loc="56:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ffb377e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ffb377e03a0"/>
        <function-ref name="rand32" scoped="" ref="0x7ffb377e0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7ffb377ee0d0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7ffb377ee0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb377ee450"/>
        <function-ref name="stop" scoped="" ref="0x7ffb377ee5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ffb377d5660" loc="59:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb377d5660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ffb377d5ae0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ffb377d5c70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ffb377d5e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7ffb377e9e30" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7ffb377e9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7ffb377ef1e0"/>
        <function-ref name="rfOff" scoped="" ref="0x7ffb377ef370"/>
        <function-ref name="rxOn" scoped="" ref="0x7ffb377ef500"/>
        <function-ref name="startVReg" scoped="" ref="0x7ffb377ef690"/>
        <function-ref name="stopVReg" scoped="" ref="0x7ffb377ef820"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7ffb377ef9b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7ffb377efb40"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7ffb377efcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb377e07f0" loc="57:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb377e07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb377e0b70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb377e0d00"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb377df020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb377df1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb377df340"/>
        <function-ref name="get" scoped="" ref="0x7ffb377df4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb377df660"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb377dfca0"/>
        <function-ref name="set" scoped="" ref="0x7ffb377df7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb377df980"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb377dfb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7ffb377f1880" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb377f1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb377f1c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb377f1d90"/>
        <function-ref name="request" scoped="" ref="0x7ffb377f0020"/>
        <function-ref name="granted" scoped="" ref="0x7ffb377f01b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb377f0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7ffb377d0e40" loc="60:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7ffb377d0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ffb377d91e0"/>
        <function-ref name="toIdle" scoped="" ref="0x7ffb377d9370"/>
        <function-ref name="isState" scoped="" ref="0x7ffb377d9500"/>
        <function-ref name="isIdle" scoped="" ref="0x7ffb377d9690"/>
        <function-ref name="requestState" scoped="" ref="0x7ffb377d9820"/>
        <function-ref name="forceState" scoped="" ref="0x7ffb377d99b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7ffb377cbb70" loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7ffb377cbb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb377ca020"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb377ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420RxState" ref="0x7ffb377f1080" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420RxState" scoped="" ref="0x7ffb377f1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420RxState"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x7ffb377f1400"/>
        <function-ref name="enableCca" scoped="" ref="0x7ffb377f1590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7ffb377cdc60" loc="85:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7ffb377cdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb377cb020"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb377cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7ffb377ced20" loc="84:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7ffb377ced20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb377cd0e0"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb377cd270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7ffb3777b020" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ffb3777b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ffb3777b3a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ffb3777b530"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ffb3777b6c0"/>
        <function-ref name="syncDone" scoped="" ref="0x7ffb3777b850"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ffb3777b9e0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ffb3777bb70"/>
        <function-ref name="setChannel" scoped="" ref="0x7ffb3777bd00"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ffb37779020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ffb377791b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ffb37779340"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ffb377794d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ffb37779660"/>
        <function-ref name="sync" scoped="" ref="0x7ffb377797f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7ffb37779a80"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ffb37779c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7ffb377675c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7ffb377675c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3776a200"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb3776a680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7ffb3776c020" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7ffb3776c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7ffb3776c3a0"/>
        <function-ref name="rfOff" scoped="" ref="0x7ffb3776c530"/>
        <function-ref name="rxOn" scoped="" ref="0x7ffb3776c6c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7ffb3776c850"/>
        <function-ref name="stopVReg" scoped="" ref="0x7ffb3776c9e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7ffb3776cb70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7ffb3776cd00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7ffb3776b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb3777f9d0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb3777f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb3777fd50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb3777c020"/>
        <function-ref name="request" scoped="" ref="0x7ffb3777c1b0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb3777c340"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb3777c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7ffb37764e50" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ffb37764e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ffb37762210"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ffb377623a0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ffb37762530"/>
        <function-ref name="syncDone" scoped="" ref="0x7ffb377626c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ffb37762850"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ffb377629e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7ffb37762b70"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ffb37762d00"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ffb37761020"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ffb377611b0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ffb37761340"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ffb377614d0"/>
        <function-ref name="sync" scoped="" ref="0x7ffb37761660"/>
        <function-ref name="getChannel" scoped="" ref="0x7ffb377618f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ffb37761a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7ffb377451e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ffb377451e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37745560"/>
        <function-ref name="write" scoped="" ref="0x7ffb377456f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7ffb3775b600" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ffb3775b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7ffb3775b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7ffb3775d020" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7ffb3775d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb37759870"/>
        <function-ref name="fired" scoped="" ref="0x7ffb3775c840"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb37759220"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb3775cd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb37759d30"/>
        <function-ref name="start" scoped="" ref="0x7ffb3775de30"/>
        <function-ref name="stop" scoped="" ref="0x7ffb3775c380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7ffb37748020" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ffb37748020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb377483a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37748530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7ffb37757510" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7ffb37757510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37757890"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37757a20"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37757bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37757d40"/>
        <function-ref name="get" scoped="" ref="0x7ffb37756020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb377561b0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37756340"/>
        <function-ref name="clr" scoped="" ref="0x7ffb377564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7ffb3775f1b0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7ffb3775f1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3775fda0"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb3775e260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7ffb377332f0" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7ffb377332f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb37733670"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb37733800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7ffb37745a80" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ffb37745a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37745e00"/>
        <function-ref name="write" scoped="" ref="0x7ffb37743020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7ffb377433c0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ffb377433c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37743740"/>
        <function-ref name="write" scoped="" ref="0x7ffb377438d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7ffb37746cd0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ffb37746cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3774d0a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb3774d230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7ffb3774e390" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ffb3774e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7ffb3774e710"/>
        <function-ref name="changed" scoped="" ref="0x7ffb3774e8a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7ffb3774ea30"/>
        <function-ref name="setAddress" scoped="" ref="0x7ffb3774ebc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7ffb37758250" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ffb37758250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb377585d0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37758760"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb377588f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37758a80"/>
        <function-ref name="get" scoped="" ref="0x7ffb37758c10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37758da0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37757020"/>
        <function-ref name="clr" scoped="" ref="0x7ffb377571b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7ffb37742ae0" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ffb37742ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb377410a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7ffb37756830" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7ffb37756830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37756bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37756d40"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37755020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb377551b0"/>
        <function-ref name="get" scoped="" ref="0x7ffb37755340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb377554d0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37755660"/>
        <function-ref name="clr" scoped="" ref="0x7ffb377557f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37769ab0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37769ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37769e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7ffb377488f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb377488f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37748c70"/>
        <function-ref name="write" scoped="" ref="0x7ffb37748e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7ffb37741440" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ffb37741440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb377417c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ffb37741b60" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ffb37741b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb3773f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb3773f1b0"/>
        <function-ref name="request" scoped="" ref="0x7ffb3773f340"/>
        <function-ref name="granted" scoped="" ref="0x7ffb3773f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb3773f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7ffb3773e880" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7ffb3773e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb3773ec00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb3773ed90"/>
        <function-ref name="request" scoped="" ref="0x7ffb3773d020"/>
        <function-ref name="granted" scoped="" ref="0x7ffb3773d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb3773d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7ffb37761d80" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7ffb37761d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7ffb37760180"/>
        <function-ref name="rfOff" scoped="" ref="0x7ffb37760310"/>
        <function-ref name="rxOn" scoped="" ref="0x7ffb377604a0"/>
        <function-ref name="startVReg" scoped="" ref="0x7ffb37760630"/>
        <function-ref name="stopVReg" scoped="" ref="0x7ffb377607c0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7ffb37760950"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7ffb37760ae0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7ffb37760c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7ffb3774d5d0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ffb3774d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3774d950"/>
        <function-ref name="write" scoped="" ref="0x7ffb3774dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7ffb37746420" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ffb37746420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb377467a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37746930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7ffb37740b60" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ffb37740b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37742020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb3773d600" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb3773d600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb3773d980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb3773db10"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb3773dca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb3773de30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb3773c020"/>
        <function-ref name="get" scoped="" ref="0x7ffb3773c1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb3773c340"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb3773c980"/>
        <function-ref name="set" scoped="" ref="0x7ffb3773c4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb3773c660"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb3773c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7ffb37734410" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7ffb37734410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb37734790"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb37734920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb37764180" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb37764180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb37764500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb37764690"/>
        <function-ref name="request" scoped="" ref="0x7ffb37764820"/>
        <function-ref name="granted" scoped="" ref="0x7ffb377649b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb37764b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7ffb37749e20" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ffb37749e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb377521c0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37752350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7ffb377494a0" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ffb377494a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37749920"/>
        <function-ref name="write" scoped="" ref="0x7ffb37749ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7ffb37755bd0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7ffb37755bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb37754020"/>
        <function-ref name="disable" scoped="" ref="0x7ffb377541b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ffb37754340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ffb377544d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7ffb3773fa10" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7ffb3773fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb3773fd90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb3773e020"/>
        <function-ref name="request" scoped="" ref="0x7ffb3773e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb3773e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb3773e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7ffb377423b0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ffb377423b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37742730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb376bd7e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb376bd7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb376bdb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7ffb376ba220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7ffb376ba220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb376b7b30"/>
        <function-ref name="fired" scoped="" ref="0x7ffb376b8a60"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb376b74e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb376b7020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb376b6020"/>
        <function-ref name="start" scoped="" ref="0x7ffb376b8090"/>
        <function-ref name="stop" scoped="" ref="0x7ffb376b85a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb376b4260" loc="42:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb376b4260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb376b45e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7ffb376b4af0" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7ffb376b4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb37679390"/>
        <function-ref name="fired" scoped="" ref="0x7ffb3767a360"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb3767ace0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb3767a820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb37679850"/>
        <function-ref name="start" scoped="" ref="0x7ffb3767b970"/>
        <function-ref name="stop" scoped="" ref="0x7ffb3767be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ffb365bb020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ffb365bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb365b9870"/>
        <function-ref name="fired" scoped="" ref="0x7ffb365ba840"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb365b9220"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb365bad00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb365b9d30"/>
        <function-ref name="start" scoped="" ref="0x7ffb365bbe30"/>
        <function-ref name="stop" scoped="" ref="0x7ffb365ba380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb365bc720" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb365bc720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb365bcaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ffb365b4020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ffb365b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb365b1870"/>
        <function-ref name="fired" scoped="" ref="0x7ffb365b3840"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb365b1220"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb365b3d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb365b1d30"/>
        <function-ref name="start" scoped="" ref="0x7ffb365b4e30"/>
        <function-ref name="stop" scoped="" ref="0x7ffb365b3380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb365b5760" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb365b5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb365b5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ffb3659b8f0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb3659b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb3659bc70"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb3659be00"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb3659a020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb3659a1b0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb3659a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ffb3659fe70" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb3659fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb3659e220"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb3659e3b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3659e540"/>
        <function-ref name="get" scoped="" ref="0x7ffb3659e6d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3659e860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3659e9f0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb3659eb80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3659ed10"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb3659c020"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb3659c1b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb3659c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ffb3659c5d0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb3659c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb3659c950"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb3659cae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3659cc70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb3659ce00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb3659b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3659b1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb3659b340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb3659b4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb3659b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7ffb36591760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ffb36591760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb36591ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ffb36591c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ffb36591e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ffb36590020"/>
        <function-ref name="fired" scoped="" ref="0x7ffb365901b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ffb36595dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb36595dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb36593180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb36593310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb365934a0"/>
        <function-ref name="get" scoped="" ref="0x7ffb36593630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb365937c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb36593950"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb36593ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb36593c70"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb36593e00"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb36592020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb365921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ffb36598bd0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ffb36598bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb365954e0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb365964e0"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb36596e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb365969a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb365959a0"/>
        <function-ref name="start" scoped="" ref="0x7ffb36597a80"/>
        <function-ref name="stop" scoped="" ref="0x7ffb36596020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb36598340" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb36598340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb365986c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ffb36592440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb36592440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb365927c0"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb36592950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb36592ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb36592c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb36592e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb36591020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb365911b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb36591340"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb365914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ffb3769e080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb3769e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb3769c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3769c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3769c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb3769ce60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7ffb376950f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7ffb376950f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb37693020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb376939a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb376934e0"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb37693e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ffb37699cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb37699cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb37697b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb37696550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb37696090"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb37696a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ffb365ae1d0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ffb365ae1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb365acb30"/>
        <function-ref name="fired" scoped="" ref="0x7ffb365ad9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb365ac4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb365ac020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb365aa020"/>
        <function-ref name="start" scoped="" ref="0x7ffb365ad020"/>
        <function-ref name="stop" scoped="" ref="0x7ffb365ad530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7ffb365a8b90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7ffb365a8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb365a44e0"/>
        <function-ref name="fired" scoped="" ref="0x7ffb365a64e0"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb365a6e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb365a69a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb365a49a0"/>
        <function-ref name="start" scoped="" ref="0x7ffb365a79d0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb365a6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ffb365aa690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb365aa690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb365a95b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb365a8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb365a9a70"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb365a84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7ffb37673020" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7ffb37673020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb376733a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37673530"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb376736c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37673850"/>
        <function-ref name="get" scoped="" ref="0x7ffb376739e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37673b70"/>
        <function-ref name="set" scoped="" ref="0x7ffb37673d00"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37672020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7ffb37672390" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7ffb37672390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37672710"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb376728a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37672a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37672bc0"/>
        <function-ref name="get" scoped="" ref="0x7ffb37672d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37671020"/>
        <function-ref name="set" scoped="" ref="0x7ffb376711b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37671340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7ffb376716a0" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7ffb376716a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37671a20"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37671bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37671d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37670020"/>
        <function-ref name="get" scoped="" ref="0x7ffb376701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37670340"/>
        <function-ref name="set" scoped="" ref="0x7ffb376704d0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37670660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7ffb37675cd0" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ffb37675cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb376740a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37674230"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb376743c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37674550"/>
        <function-ref name="get" scoped="" ref="0x7ffb376746e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37674870"/>
        <function-ref name="set" scoped="" ref="0x7ffb37674a00"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37674b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7ffb3766fce0" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7ffb3766fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3766e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3766e230"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3766e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3766e550"/>
        <function-ref name="get" scoped="" ref="0x7ffb3766e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3766e870"/>
        <function-ref name="set" scoped="" ref="0x7ffb3766ea00"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3766eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7ffb376bba70" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7ffb376bba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb376bbdf0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37675020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb376751b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37675340"/>
        <function-ref name="get" scoped="" ref="0x7ffb376754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37675660"/>
        <function-ref name="set" scoped="" ref="0x7ffb376757f0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37675980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7ffb376709b0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7ffb376709b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37670d30"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3766f020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3766f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3766f340"/>
        <function-ref name="get" scoped="" ref="0x7ffb3766f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3766f660"/>
        <function-ref name="set" scoped="" ref="0x7ffb3766f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3766f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ffb3766a2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb3766a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3766a670"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3766a800"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3766a990"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3766ab20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3766acb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3766ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37669020"/>
        <function-ref name="get" scoped="" ref="0x7ffb376691b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb37669340"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb376694d0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37669660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb376697f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb37669980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb37669c10"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37669da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb3766b020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb3766b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3766b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3766b530"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3766b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3766b850"/>
        <function-ref name="get" scoped="" ref="0x7ffb3766b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3766bb70"/>
        <function-ref name="set" scoped="" ref="0x7ffb3766bd00"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3766a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ffb37666de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb37666de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37665180"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37665310"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb376654a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37665630"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb376657c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb37665950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37665ae0"/>
        <function-ref name="get" scoped="" ref="0x7ffb37665c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb37665e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb37664020"/>
        <function-ref name="set" scoped="" ref="0x7ffb376641b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb37664340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb376644d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb37664760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb376648f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb37667b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37667b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37666020"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb376661b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37666340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb376664d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb37666660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb376667f0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37666980"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37666b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ffb37661930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb37661930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37661cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37661e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb37660020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb376601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37660340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb376604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37660660"/>
        <function-ref name="get" scoped="" ref="0x7ffb376607f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb37660980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb37660b10"/>
        <function-ref name="set" scoped="" ref="0x7ffb37660ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb37660e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3765f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3765f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3765f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb37662710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37662710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37662a90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37662c20"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37662db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37661020"/>
        <function-ref name="get" scoped="" ref="0x7ffb376611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37661340"/>
        <function-ref name="set" scoped="" ref="0x7ffb376614d0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37661660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ffb3765c480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb3765c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3765c800"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3765c990"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3765cb20"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3765ccb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3765ce40"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3765b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3765b1b0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3765b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3765b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3765b660"/>
        <function-ref name="set" scoped="" ref="0x7ffb3765b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3765b980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3765bb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3765bda0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3765a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb3765d1d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb3765d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3765d550"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3765d6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3765d870"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3765da00"/>
        <function-ref name="get" scoped="" ref="0x7ffb3765db90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3765dd20"/>
        <function-ref name="set" scoped="" ref="0x7ffb3765c020"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3765c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ffb37656020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb37656020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb376563a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37656530"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb376566c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37656850"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb376569e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb37656b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37656d00"/>
        <function-ref name="get" scoped="" ref="0x7ffb37655020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb376551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb37655340"/>
        <function-ref name="set" scoped="" ref="0x7ffb376554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb37655660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb376557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb37655a80"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37655c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb37659d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37659d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37657180"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37657310"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb376574a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37657630"/>
        <function-ref name="get" scoped="" ref="0x7ffb376577c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37657950"/>
        <function-ref name="set" scoped="" ref="0x7ffb37657ae0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37657c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ffb37652de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb37652de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37651180"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37651310"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb376514a0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37651630"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb376517c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb37651950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37651ae0"/>
        <function-ref name="get" scoped="" ref="0x7ffb37651c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb37651e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb37650020"/>
        <function-ref name="set" scoped="" ref="0x7ffb376501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb37650340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb376504d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb37650760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb376508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb37653b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37653b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37652020"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb376521b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37652340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb376524d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb37652660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb376527f0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37652980"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37652b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ffb3764d930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ffb3764d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3764dcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3764de40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3764c020"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3764c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3764c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3764c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3764c660"/>
        <function-ref name="get" scoped="" ref="0x7ffb3764c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3764c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3764cb10"/>
        <function-ref name="set" scoped="" ref="0x7ffb3764cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3764ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3764b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3764b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3764b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ffb3764e710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb3764e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3764ea90"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3764ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3764edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3764d020"/>
        <function-ref name="get" scoped="" ref="0x7ffb3764d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3764d340"/>
        <function-ref name="set" scoped="" ref="0x7ffb3764d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3764d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7ffb37638060" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7ffb37638060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7ffb376383e0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37638570"/>
        <function-ref name="captured" scoped="" ref="0x7ffb37638700"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7ffb37638890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7ffb37638c70" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7ffb37638c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb37637020"/>
        <function-ref name="disable" scoped="" ref="0x7ffb376371b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ffb37637340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ffb376374d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7ffb376378c0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ffb376378c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb37637c40"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37637dd0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ffb37633020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ffb376331b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7ffb376195d0" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7ffb376195d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ffb37619950"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ffb37619ae0"/>
        <function-ref name="captured" scoped="" ref="0x7ffb37619c70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb37619e00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb37618020"/>
        <function-ref name="setEdge" scoped="" ref="0x7ffb376181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ffb37630760" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ffb37630760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7ffb37630ae0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37630c70"/>
        <function-ref name="captured" scoped="" ref="0x7ffb37630e00"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7ffb3761a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMicro" ref="0x7ffb37615620" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMicro" scoped="" ref="0x7ffb37615620"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b26b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7ffb384b2a20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb376133d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7ffb37616410" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7ffb37616410"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb37615090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ffb3761a2b0" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ffb3761a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ffb3761a630"/>
        <function-ref name="getControl" scoped="" ref="0x7ffb3761a7c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb3761a950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ffb3761aae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ffb3761ac70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb3761ae00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ffb37619020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ffb376191b0"/>
        <function-ref name="setControl" scoped="" ref="0x7ffb37619340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7ffb37618480" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ffb37618480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37618800"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37618990"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb37618b20"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37618cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37618e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb37617020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb376171b0"/>
        <function-ref name="get" scoped="" ref="0x7ffb37617340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb376174d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb37617660"/>
        <function-ref name="set" scoped="" ref="0x7ffb376177f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb37617980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb37617b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb37617da0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb37616020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ffb3760f180" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ffb3760f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb3760fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ffb3760e450" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb3760e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb3760d3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb3760dd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb3760d890"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb3760b260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ffb37603110" loc="43:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb37603110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b26b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7ffb384b2a20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb37602020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb376029a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb376024e0"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb37602e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7ffb375fe260" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7ffb375fe260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b26b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7ffb384b2a20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb375fd090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb375fda10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb375fd550"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb375fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ffb375f8c30" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ffb375f8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb375f6020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ffb375f61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ffb375f6340"/>
        <function-ref name="get" scoped="" ref="0x7ffb375f64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ffb375f6660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb375f67f0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb375f6980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb375f6b10"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb375f6ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7ffb375f6e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ffb375f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ffb375faae0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb375faae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b26b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7ffb384b2a20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb375f9970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb375f8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb375f9e30"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb375f8800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7ffb375ef910" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7ffb375ef910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b26b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7ffb384b2a20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb375ee780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb375ec150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb375eec40"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb375ec610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ffb375f2430" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb375f2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b26b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7ffb384b2a20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb375f03d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb375f0d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb375f0890"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb375ef260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ffb37604d30" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterMicroToLocalTime"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ffb37604d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b26b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7ffb384b2a20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb375ea980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ffb375e9020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterMicroToLocalTime"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb375e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b26b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7ffb384b2a20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb375e9e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb375e8800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb375e8340"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb375e8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7ffb375e4c00" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7ffb375e4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb375e3020"/>
        <function-ref name="fired" scoped="" ref="0x7ffb375e31b0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb375e3340"/>
        <function-ref name="edge" scoped="" ref="0x7ffb375e34d0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb375e3660"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb375e37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7ffb375e4100" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ffb375e4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb375e4480"/>
        <function-ref name="disable" scoped="" ref="0x7ffb375e4610"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ffb375e47a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ffb375e4930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7ffb375e1c00" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7ffb375e1c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb375e0020"/>
        <function-ref name="fired" scoped="" ref="0x7ffb375e01b0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb375e0340"/>
        <function-ref name="edge" scoped="" ref="0x7ffb375e04d0"/>
        <function-ref name="enable" scoped="" ref="0x7ffb375e0660"/>
        <function-ref name="getValue" scoped="" ref="0x7ffb375e07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7ffb375e1100" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ffb375e1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb375e1480"/>
        <function-ref name="disable" scoped="" ref="0x7ffb375e1610"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ffb375e17a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ffb375e1930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ffb37356e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ffb37356e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37355410"/>
        <function-ref name="write" scoped="" ref="0x7ffb373555a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ffb3735f160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ffb3735f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3735f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ffb37359e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ffb37359e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37358210"/>
        <function-ref name="write" scoped="" ref="0x7ffb373583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ffb37353880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb37353880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37353c00"/>
        <function-ref name="write" scoped="" ref="0x7ffb37353d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ffb3734b0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ffb3734b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3734b420"/>
        <function-ref name="write" scoped="" ref="0x7ffb3734b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ffb373520a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ffb373520a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37352420"/>
        <function-ref name="write" scoped="" ref="0x7ffb373525b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ffb3733f500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ffb3733f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3733f880"/>
        <function-ref name="write" scoped="" ref="0x7ffb3733fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ffb37342500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ffb37342500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37342880"/>
        <function-ref name="write" scoped="" ref="0x7ffb37342a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ffb3735e490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ffb3735e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3735e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ffb37348880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ffb37348880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37348c00"/>
        <function-ref name="write" scoped="" ref="0x7ffb37348d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ffb37343500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ffb37343500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37343880"/>
        <function-ref name="write" scoped="" ref="0x7ffb37343a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ffb37358e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ffb37358e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37357210"/>
        <function-ref name="write" scoped="" ref="0x7ffb373573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ffb37357e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ffb37357e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37356210"/>
        <function-ref name="write" scoped="" ref="0x7ffb373563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ffb3734e880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ffb3734e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3734ec00"/>
        <function-ref name="write" scoped="" ref="0x7ffb3734ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ffb3734f0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ffb3734f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3734f420"/>
        <function-ref name="write" scoped="" ref="0x7ffb3734f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ffb37352880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ffb37352880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37352c00"/>
        <function-ref name="write" scoped="" ref="0x7ffb37352d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ffb37362a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb37362a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ffb37362e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ffb37361020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ffb373611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ffb3735de00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ffb3735de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3735c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ffb3735c490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ffb3735c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3735c910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ffb37347c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ffb37347c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373450a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37345230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ffb3735cbe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ffb3735cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3735a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ffb37343ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ffb37343ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373420a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37342230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ffb3735d160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ffb3735d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3735d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ffb373480a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ffb373480a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37348420"/>
        <function-ref name="write" scoped="" ref="0x7ffb373485b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ffb37357670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ffb37357670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373579f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37357b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ffb37358670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb37358670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373589f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37358b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ffb37361ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ffb37361ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37361e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ffb373490a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ffb373490a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37349420"/>
        <function-ref name="write" scoped="" ref="0x7ffb373495b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ffb3734b880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ffb3734b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3734bc00"/>
        <function-ref name="write" scoped="" ref="0x7ffb3734bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ffb37349880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ffb37349880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37349c00"/>
        <function-ref name="write" scoped="" ref="0x7ffb37349d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ffb37341ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ffb37341ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3733f0a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb3733f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ffb37342ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ffb37342ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373410a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37341230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ffb3734f880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ffb3734f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3734fc00"/>
        <function-ref name="write" scoped="" ref="0x7ffb3734fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ffb3734a0a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ffb3734a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3734a420"/>
        <function-ref name="write" scoped="" ref="0x7ffb3734a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ffb37344ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ffb37344ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373430a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37343230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ffb37351880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ffb37351880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37351c00"/>
        <function-ref name="write" scoped="" ref="0x7ffb37351d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ffb3733fce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ffb3733fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb3733e0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb3733e230"/>
        <function-ref name="write" scoped="" ref="0x7ffb3733e3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb3733e550"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb3733e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ffb37361480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ffb37361480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37361800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ffb37359670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ffb37359670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373599f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37359b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ffb37356670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ffb37356670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373569f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37356b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ffb3734c0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ffb3734c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3734c420"/>
        <function-ref name="write" scoped="" ref="0x7ffb3734c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ffb373510a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ffb373510a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37351420"/>
        <function-ref name="write" scoped="" ref="0x7ffb373515b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ffb3734c880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ffb3734c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3734cc00"/>
        <function-ref name="write" scoped="" ref="0x7ffb3734cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ffb37355870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ffb37355870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37355bf0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37355d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ffb3735f7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ffb3735f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3735fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ffb373530a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb373530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37353420"/>
        <function-ref name="write" scoped="" ref="0x7ffb373535b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb37363e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb37363e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb373621c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb37362350"/>
        <function-ref name="request" scoped="" ref="0x7ffb373624e0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb37362670"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb37362800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ffb3735a2f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ffb3735a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3735a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ffb37359020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ffb37359020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb373593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ffb37344500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ffb37344500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37344880"/>
        <function-ref name="write" scoped="" ref="0x7ffb37344a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ffb37345ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ffb37345ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373440a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37344230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ffb3735d7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ffb3735d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3735db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ffb37345500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ffb37345500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37345880"/>
        <function-ref name="write" scoped="" ref="0x7ffb37345a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ffb37341500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ffb37341500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37341880"/>
        <function-ref name="write" scoped="" ref="0x7ffb37341a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ffb3734e0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ffb3734e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3734e420"/>
        <function-ref name="write" scoped="" ref="0x7ffb3734e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ffb3734a880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ffb3734a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3734ac00"/>
        <function-ref name="write" scoped="" ref="0x7ffb3734ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ffb3735fe00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ffb3735fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3735e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ffb3735eae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ffb3735eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3735ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ffb373500a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ffb373500a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37350420"/>
        <function-ref name="write" scoped="" ref="0x7ffb373505b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ffb3735a940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ffb3735a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3735acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ffb37350880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ffb37350880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37350c00"/>
        <function-ref name="write" scoped="" ref="0x7ffb37350d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ffb373470a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ffb373470a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37347820"/>
        <function-ref name="write" scoped="" ref="0x7ffb373479b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ffb3733e9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ffb3733e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb3733ed30"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb3733d020"/>
        <function-ref name="write" scoped="" ref="0x7ffb3733d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb3733d340"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb3733d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7ffb3759e2c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7ffb3759e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb3759e640"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb3759e7d0"/>
        <function-ref name="write" scoped="" ref="0x7ffb3759e960"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb3759eaf0"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb3759ec80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ffb375a0350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb375a0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ffb375a06d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ffb375a0860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ffb375a09f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7ffb3759d540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7ffb3759d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3759d8c0"/>
        <function-ref name="write" scoped="" ref="0x7ffb3759da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7ffb3759c370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7ffb3759c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3759c6f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb3759c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb375a1600" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb375a1600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb375a1980"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb375a1b10"/>
        <function-ref name="request" scoped="" ref="0x7ffb375a1ca0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb375a1e30"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb375a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7ffb3759b1d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7ffb3759b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3759b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7ffb375842e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ffb375842e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb37584660"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb375847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7ffb37594890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7ffb37594890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb37594c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb37594da0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37593020"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb375931b0"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb37593340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ffb37596660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb37596660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ffb375969e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ffb37596b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ffb37596d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7ffb3758cc70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ffb3758cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ffb3758e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7ffb37584b40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7ffb37584b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ffb3758d020"/>
        <function-ref name="toIdle" scoped="" ref="0x7ffb3758d1b0"/>
        <function-ref name="isState" scoped="" ref="0x7ffb3758d340"/>
        <function-ref name="isIdle" scoped="" ref="0x7ffb3758d4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7ffb3758d660"/>
        <function-ref name="forceState" scoped="" ref="0x7ffb3758d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ffb3758f060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ffb3758f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb3758f3e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb3758f570"/>
        <function-ref name="request" scoped="" ref="0x7ffb3758f700"/>
        <function-ref name="granted" scoped="" ref="0x7ffb3758f890"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb3758fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7ffb37593ba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7ffb37593ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37592020"/>
        <function-ref name="write" scoped="" ref="0x7ffb375921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7ffb37592a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7ffb37592a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37592db0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37591020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb3758da70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb3758da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb3758ddf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb37585020"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb375851b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb37585340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb375854d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb37585660"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb375857f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb37585e30"/>
        <function-ref name="set" scoped="" ref="0x7ffb37585980"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb37585b10"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb37585ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb37595510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb37595510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb37595890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb37595a20"/>
        <function-ref name="request" scoped="" ref="0x7ffb37595bb0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb37595d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb37594020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7ffb37580bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7ffb37580bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb3757f020"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb3757f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7ffb375918b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7ffb375918b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37591c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ffb37525770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ffb37525770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ffb37525af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7ffb37525c80"/>
        <function-ref name="isState" scoped="" ref="0x7ffb37525e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7ffb37521020"/>
        <function-ref name="requestState" scoped="" ref="0x7ffb375211b0"/>
        <function-ref name="forceState" scoped="" ref="0x7ffb37521340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ffb375201d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ffb375201d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ffb37520550"/>
        <function-ref name="toIdle" scoped="" ref="0x7ffb375206e0"/>
        <function-ref name="isState" scoped="" ref="0x7ffb37520870"/>
        <function-ref name="isIdle" scoped="" ref="0x7ffb37520a00"/>
        <function-ref name="requestState" scoped="" ref="0x7ffb37520b90"/>
        <function-ref name="forceState" scoped="" ref="0x7ffb37520d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb3751c020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb3751c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb3751c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ffb3751cb70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ffb3751cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ffb3751b020"/>
        <function-ref name="toIdle" scoped="" ref="0x7ffb3751b1b0"/>
        <function-ref name="isState" scoped="" ref="0x7ffb3751b340"/>
        <function-ref name="isIdle" scoped="" ref="0x7ffb3751b4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7ffb3751b660"/>
        <function-ref name="forceState" scoped="" ref="0x7ffb3751b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ffb3738c410" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ffb3738c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb3738c790"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb3738c920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ffb37502d90" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ffb37502d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ffb3738c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb37502140" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb37502140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb375024c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb37502650"/>
        <function-ref name="request" scoped="" ref="0x7ffb375027e0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb37502970"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb37502b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ffb36494440" loc="82:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb36494440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ffb364947c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb36494950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ffb36493d70" loc="87:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ffb36493d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36491180"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36491310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7ffb364915a0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ffb364915a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ffb36491920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ffb36494be0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ffb36494be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ffb36493020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb36495770" loc="81:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb36495770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb36495af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb36495c80"/>
        <function-ref name="request" scoped="" ref="0x7ffb36495e10"/>
        <function-ref name="granted" scoped="" ref="0x7ffb36494020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb364941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7ffb364932b0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7ffb364932b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7ffb36493630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7ffb364937c0"/>
        <function-ref name="splitRead" scoped="" ref="0x7ffb36493950"/>
        <function-ref name="write" scoped="" ref="0x7ffb36493ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7ffb374ef6b0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb374ef6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ffb374efa30"/>
        <function-ref name="configure" scoped="" ref="0x7ffb374efbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ffb374ed850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ffb374ed850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb374edbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb374edd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7ffb374eba40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ffb374eba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ffb374ebdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ffb374ee020" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ffb374ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ffb374ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7ffb374ec690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7ffb374ec690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb374eca10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb374ecba0"/>
        <function-ref name="request" scoped="" ref="0x7ffb374ecd30"/>
        <function-ref name="granted" scoped="" ref="0x7ffb374eb020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb374eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb374f1430" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb374f1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb374f17b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb374f1940"/>
        <function-ref name="request" scoped="" ref="0x7ffb374f1ad0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb374f1c60"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb374f1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7ffb374ee6a0" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7ffb374ee6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7ffb374eea20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7ffb374eebb0"/>
        <function-ref name="splitRead" scoped="" ref="0x7ffb374eed40"/>
        <function-ref name="write" scoped="" ref="0x7ffb374ed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7ffb374e92a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7ffb374e92a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb374e9620"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb374e97b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7ffb37491250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb37491250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ffb374915f0"/>
        <function-ref name="configure" scoped="" ref="0x7ffb37491780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ffb37490c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ffb37490c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb3748f020"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb3748f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7ffb3748e3e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ffb3748e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ffb3748e780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ffb37491a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ffb37491a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ffb37491d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7ffb3748ea50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7ffb3748ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ffb3748edd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ffb3748d020"/>
        <function-ref name="setUctl" scoped="" ref="0x7ffb3748d1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7ffb3748d340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ffb3748d4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ffb3748d660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ffb3748d7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ffb3748d980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ffb3748db10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ffb3748dca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ffb3748de30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ffb3748c020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ffb3748c1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7ffb3748c440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ffb3748c5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ffb3748c760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ffb3748c8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7ffb3748ca80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ffb3748cc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7ffb3748cda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ffb3748b020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ffb3748b1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ffb3748b340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ffb3748b4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb3748b660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ffb3748b9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ffb3748bb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7ffb3748bd10"/>
        <function-ref name="tx" scoped="" ref="0x7ffb3748a020"/>
        <function-ref name="getUctl" scoped="" ref="0x7ffb3748a1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7ffb3748a340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ffb3748a4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ffb3748a660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ffb3748a7f0"/>
        <function-ref name="rx" scoped="" ref="0x7ffb3748a980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ffb3748ab10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ffb3748aca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ffb3748ae30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ffb37489020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ffb374891b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb37489c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb37489c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb37488020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb374881b0"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb37488340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb374884d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb37488660"/>
        <function-ref name="get" scoped="" ref="0x7ffb374887f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb37488980"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb37487020"/>
        <function-ref name="set" scoped="" ref="0x7ffb37488ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb37488b10"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb37488e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7ffb3748f5b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7ffb3748f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb3748f950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb3748fae0"/>
        <function-ref name="request" scoped="" ref="0x7ffb3748fc70"/>
        <function-ref name="granted" scoped="" ref="0x7ffb3748fe00"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb3748e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb37493470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb37493470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb37493810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb374939a0"/>
        <function-ref name="request" scoped="" ref="0x7ffb37493b30"/>
        <function-ref name="granted" scoped="" ref="0x7ffb37493cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb37493e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7ffb37490060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7ffb37490060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7ffb374903e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7ffb37490570"/>
        <function-ref name="splitRead" scoped="" ref="0x7ffb37490700"/>
        <function-ref name="write" scoped="" ref="0x7ffb37490890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7ffb37489480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7ffb37489480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb37489800"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb37489990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7ffb374872f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7ffb374872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb37487670"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb37487800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7ffb37478d10" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ffb37478d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb374770e0"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb37477270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7ffb3747b840" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7ffb3747b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb3747bbc0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb3747bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7ffb3747e0c0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ffb3747e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ffb3747e440"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ffb3747e5d0"/>
        <function-ref name="setUctl" scoped="" ref="0x7ffb3747e760"/>
        <function-ref name="enableUart" scoped="" ref="0x7ffb3747e8f0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ffb3747ea80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ffb3747ec10"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ffb3747eda0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ffb3747d020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ffb3747d1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ffb3747d340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ffb3747d4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ffb3747d660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ffb3747d7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7ffb3747da80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ffb3747dc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ffb3747dda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ffb3747a020"/>
        <function-ref name="isUart" scoped="" ref="0x7ffb3747a1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ffb3747a340"/>
        <function-ref name="isSpi" scoped="" ref="0x7ffb3747a4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ffb3747a660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ffb3747a7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ffb3747a980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ffb3747ab10"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb3747aca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ffb37479220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ffb374793b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7ffb37479540"/>
        <function-ref name="tx" scoped="" ref="0x7ffb374796d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7ffb37479860"/>
        <function-ref name="disableUart" scoped="" ref="0x7ffb374799f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ffb37479b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ffb37479d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ffb37478020"/>
        <function-ref name="rx" scoped="" ref="0x7ffb374781b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ffb37478340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ffb374784d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ffb37478660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ffb374787f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ffb37478980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7ffb3746bcb0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7ffb3746bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3746a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3746a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3746a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3746a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3746a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3746a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3746aa00"/>
        <function-ref name="get" scoped="" ref="0x7ffb3746ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3746ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb37469020"/>
        <function-ref name="set" scoped="" ref="0x7ffb374691b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb37469340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb374694d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb37469760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb374698f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ffb3746f460" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ffb3746f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb3746f7e0"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb3746f970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7ffb37469cb0" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7ffb37469cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb374680a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37468230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb374683c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37468550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb374686e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb37468870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37468a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb37468b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb37468d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb37467020"/>
        <function-ref name="set" scoped="" ref="0x7ffb374671b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb37467340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb374674d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb37467760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb374678f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7ffb37467cb0" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7ffb37467cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb374660a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37466230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb374663c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37466550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb374666e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb37466870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb37466a00"/>
        <function-ref name="get" scoped="" ref="0x7ffb37466b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb37466d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb37465020"/>
        <function-ref name="set" scoped="" ref="0x7ffb374651b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb37465340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb374654d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb37465760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb374658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7ffb37474970" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7ffb37474970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ffb37474cf0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ffb37474e80"/>
        <function-ref name="setUctl" scoped="" ref="0x7ffb37473030"/>
        <function-ref name="enableUart" scoped="" ref="0x7ffb374731c0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ffb37473350"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ffb374734e0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ffb37473670"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ffb37473800"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ffb37473990"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ffb37473b20"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ffb37473cb0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ffb37473e40"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ffb37472020"/>
        <function-ref name="getUbr" scoped="" ref="0x7ffb374722b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ffb37472440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ffb374725d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ffb37472760"/>
        <function-ref name="isUart" scoped="" ref="0x7ffb374728f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ffb37472a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7ffb37472c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ffb37472da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ffb37471020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ffb374711b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ffb37471340"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb374714d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ffb37471860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ffb374719f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7ffb37471b80"/>
        <function-ref name="tx" scoped="" ref="0x7ffb37471d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7ffb37470020"/>
        <function-ref name="disableUart" scoped="" ref="0x7ffb374701b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ffb37470340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ffb374704d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ffb37470660"/>
        <function-ref name="rx" scoped="" ref="0x7ffb374707f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ffb37470980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ffb37470b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ffb37470ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ffb37470e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ffb3746f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7ffb374740c0" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7ffb374740c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb37474440"/>
        <function-ref name="stop" scoped="" ref="0x7ffb374745d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7ffb3746dcb0" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7ffb3746dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3746c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3746c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3746c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3746c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3746c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3746c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3746ca00"/>
        <function-ref name="get" scoped="" ref="0x7ffb3746cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3746cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3746b020"/>
        <function-ref name="set" scoped="" ref="0x7ffb3746b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3746b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3746b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3746b760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3746b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7ffb3746fd30" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7ffb3746fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3746e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3746e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7ffb3746e400"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3746e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3746e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7ffb3746e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3746ea40"/>
        <function-ref name="get" scoped="" ref="0x7ffb3746ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ffb3746ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ffb3746d020"/>
        <function-ref name="set" scoped="" ref="0x7ffb3746d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ffb3746d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ffb3746d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ffb3746d760"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3746d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ffb36488d90" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb36488d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ffb36487180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb36487310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ffb36481020" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb36481020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ffb364813a0"/>
        <function-ref name="configure" scoped="" ref="0x7ffb36481530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7ffb36482760" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ffb36482760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb36482ae0"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb36482c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb36488140" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb36488140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb364884c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb36488650"/>
        <function-ref name="request" scoped="" ref="0x7ffb364887e0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb36488970"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb36488b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7ffb36487d40" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ffb36487d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ffb364860e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ffb36486270"/>
        <function-ref name="setUctl" scoped="" ref="0x7ffb36486400"/>
        <function-ref name="enableUart" scoped="" ref="0x7ffb36486590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ffb36486720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ffb364868b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ffb36486a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ffb36486bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ffb36486d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ffb36485020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ffb364851b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ffb36485340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ffb364854d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7ffb36485760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ffb364858f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ffb36485a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ffb36485c10"/>
        <function-ref name="isUart" scoped="" ref="0x7ffb36485da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ffb36484020"/>
        <function-ref name="isSpi" scoped="" ref="0x7ffb364841b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ffb36484340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ffb364844d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ffb36484660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ffb364847f0"/>
        <function-ref name="getMode" scoped="" ref="0x7ffb36484980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ffb36484d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ffb36483020"/>
        <function-ref name="setUbr" scoped="" ref="0x7ffb364831b0"/>
        <function-ref name="tx" scoped="" ref="0x7ffb36483340"/>
        <function-ref name="getUctl" scoped="" ref="0x7ffb364834d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7ffb36483660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ffb364837f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ffb36483980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ffb36483b10"/>
        <function-ref name="rx" scoped="" ref="0x7ffb36483ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ffb36483e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ffb36482020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ffb364821b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ffb36482340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ffb364824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ffb364875a0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb364875a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ffb36487920"/>
        <function-ref name="userId" scoped="" ref="0x7ffb36487ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ffb373d02c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb373d02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ffb373d0640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb373d07d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ffb373cf8a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb373cf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ffb373cfc20"/>
        <function-ref name="configure" scoped="" ref="0x7ffb373cfdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ffb373d31d0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ffb373d31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb373d3550"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb373d36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb373d1020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb373d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb373d13a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb373d1530"/>
        <function-ref name="request" scoped="" ref="0x7ffb373d16c0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb373d1850"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb373d19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ffb373d0ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb373d0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ffb373d0e50"/>
        <function-ref name="userId" scoped="" ref="0x7ffb373cf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7ffb373cce50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb373cce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ffb373ca210"/>
        <function-ref name="userId" scoped="" ref="0x7ffb373ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ffb373cd060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ffb373cd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb373cd400"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb373cd590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7ffb373cc840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7ffb373cc840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb373ccbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ffb373cd990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ffb373cd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb373cdd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7ffb373cc060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7ffb373cc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ffb373cc3e0"/>
        <function-ref name="txDone" scoped="" ref="0x7ffb373cc570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ffb373c79e0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb373c79e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ffb373c7d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb373c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ffb373c5770" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb373c5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ffb373c5b10"/>
        <function-ref name="configure" scoped="" ref="0x7ffb373c5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7ffb373c6270" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb373c6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb373c65f0"/>
        <function-ref name="requested" scoped="" ref="0x7ffb373c6780"/>
        <function-ref name="granted" scoped="" ref="0x7ffb373c6910"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb373c6aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb373c6c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb373c8b60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb373c8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb373c7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb373c71b0"/>
        <function-ref name="request" scoped="" ref="0x7ffb373c7340"/>
        <function-ref name="granted" scoped="" ref="0x7ffb373c74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb373c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ffb373c6e80" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb373c6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ffb373c5220"/>
        <function-ref name="userId" scoped="" ref="0x7ffb373c53b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb3642c460" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb3642c460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb3642c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7ffb3642ca70" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7ffb3642ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ffb3642cdf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ffb3642b020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ffb3642b1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7ffb3642b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ffb36428a60" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ffb36428a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ffb36428e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb36427020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ffb36426790" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ffb36426790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ffb36426b30"/>
        <function-ref name="configure" scoped="" ref="0x7ffb36426cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ffb36425020" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ffb36425020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ffb364253a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ffb36425530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ffb364256c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7ffb36425850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7ffb36427270" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb36427270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb364275f0"/>
        <function-ref name="requested" scoped="" ref="0x7ffb36427780"/>
        <function-ref name="granted" scoped="" ref="0x7ffb36427910"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb36427aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb36427c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb36425aa0" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb36425aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb36425e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb36424020"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb364241b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb36424340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb364244d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb36424660"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb364247f0"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb36424e30"/>
        <function-ref name="set" scoped="" ref="0x7ffb36424b10"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb36424980"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb36424ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb36429c80" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb36429c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb364280a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb36428230"/>
        <function-ref name="request" scoped="" ref="0x7ffb364283c0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb36428550"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb364286e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ffb36427e80" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb36427e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ffb36426220"/>
        <function-ref name="userId" scoped="" ref="0x7ffb364263b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7ffb36423160" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7ffb36423160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb364234e0"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb36423670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7ffb373aa020" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7ffb373aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7ffb373aa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7ffb373aa5f0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb373aa5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb373aa970"/>
        <function-ref name="requested" scoped="" ref="0x7ffb373aab00"/>
        <function-ref name="granted" scoped="" ref="0x7ffb373aac90"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb373aae20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb373a9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7ffb373c0880" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7ffb373c0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb373c0c00"/>
        <function-ref name="stop" scoped="" ref="0x7ffb373c0d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7ffb373a9270" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb373a9270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ffb373a95f0"/>
        <function-ref name="userId" scoped="" ref="0x7ffb373a9780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7ffb363f20e0" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7ffb363f20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7ffb363f2460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7ffb363f26b0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ffb363f26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb363f2a30"/>
        <function-ref name="requested" scoped="" ref="0x7ffb363f2bc0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb363f2d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb363f1020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ffb363f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7ffb363f3900" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7ffb363f3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb363f3c80"/>
        <function-ref name="stop" scoped="" ref="0x7ffb363f3e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7ffb363f1400" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ffb363f1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ffb363f1780"/>
        <function-ref name="userId" scoped="" ref="0x7ffb363f1910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ffb37325c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ffb37325c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37324210"/>
        <function-ref name="write" scoped="" ref="0x7ffb373243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ffb37330da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ffb37330da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3732f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ffb37329b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ffb37329b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37328020"/>
        <function-ref name="write" scoped="" ref="0x7ffb373281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ffb37323670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb37323670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373239f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37323b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ffb3731ce50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ffb3731ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3731b210"/>
        <function-ref name="write" scoped="" ref="0x7ffb3731b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ffb37323e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ffb37323e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37322210"/>
        <function-ref name="write" scoped="" ref="0x7ffb373223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ffb3730f2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ffb3730f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3730f670"/>
        <function-ref name="write" scoped="" ref="0x7ffb3730f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ffb373112f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ffb373112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37311670"/>
        <function-ref name="write" scoped="" ref="0x7ffb37311800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ffb3732e120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ffb3732e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3732e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ffb37317670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ffb37317670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373179f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37317b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ffb373122f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ffb373122f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37312670"/>
        <function-ref name="write" scoped="" ref="0x7ffb37312800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ffb37328c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ffb37328c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37326020"/>
        <function-ref name="write" scoped="" ref="0x7ffb373261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ffb37326c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ffb37326c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37325020"/>
        <function-ref name="write" scoped="" ref="0x7ffb373251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ffb3731d670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ffb3731d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3731d9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb3731db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ffb3731fe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ffb3731fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3731e210"/>
        <function-ref name="write" scoped="" ref="0x7ffb3731e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ffb37322670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ffb37322670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373229f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37322b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ffb37331760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb37331760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ffb37331ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ffb37331c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ffb37331e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ffb3732caa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ffb3732caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3732ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ffb3732b120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ffb3732b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3732b5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ffb37316a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ffb37316a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37316df0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37315020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ffb3732b870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ffb3732b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3732bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ffb37312ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ffb37312ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37312e50"/>
        <function-ref name="write" scoped="" ref="0x7ffb37311020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ffb3732edc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ffb3732edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3732c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ffb37318e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ffb37318e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37317210"/>
        <function-ref name="write" scoped="" ref="0x7ffb373173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ffb37326480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ffb37326480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37326800"/>
        <function-ref name="write" scoped="" ref="0x7ffb37326990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ffb37328480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb37328480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37328800"/>
        <function-ref name="write" scoped="" ref="0x7ffb37328990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ffb37330750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ffb37330750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37330ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ffb37319e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ffb37319e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37318210"/>
        <function-ref name="write" scoped="" ref="0x7ffb373183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ffb3731b670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ffb3731b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3731b9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb3731bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ffb37318670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ffb37318670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373189f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37318b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ffb37310ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ffb37310ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37310e50"/>
        <function-ref name="write" scoped="" ref="0x7ffb3730f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ffb37311ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ffb37311ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37311e50"/>
        <function-ref name="write" scoped="" ref="0x7ffb37310020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ffb3731e670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ffb3731e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3731e9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb3731eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ffb3731be50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ffb3731be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37319210"/>
        <function-ref name="write" scoped="" ref="0x7ffb373193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ffb37314ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ffb37314ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37314e50"/>
        <function-ref name="write" scoped="" ref="0x7ffb37312020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ffb37320670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ffb37320670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373209f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37320b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ffb3730fad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ffb3730fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb3730fe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb3730e020"/>
        <function-ref name="write" scoped="" ref="0x7ffb3730e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb3730e340"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb3730e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ffb37330100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ffb37330100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37330480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ffb37329370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ffb37329370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373296f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37329880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ffb37325480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ffb37325480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37325800"/>
        <function-ref name="write" scoped="" ref="0x7ffb37325990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ffb3731de50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ffb3731de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3731c210"/>
        <function-ref name="write" scoped="" ref="0x7ffb3731c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ffb37322e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ffb37322e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37320210"/>
        <function-ref name="write" scoped="" ref="0x7ffb373203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ffb3731c670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ffb3731c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3731c9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb3731cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ffb37324670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ffb37324670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373249f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37324b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ffb3732f450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ffb3732f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3732f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ffb37324e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb37324e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37323210"/>
        <function-ref name="write" scoped="" ref="0x7ffb373233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb37332a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb37332a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb37332e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb37331020"/>
        <function-ref name="request" scoped="" ref="0x7ffb373311b0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb37331340"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb373314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ffb3732a020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ffb3732a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3732a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ffb3732acc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ffb3732acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb373290a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ffb373142f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ffb373142f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37314670"/>
        <function-ref name="write" scoped="" ref="0x7ffb37314800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ffb37315ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ffb37315ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37315e50"/>
        <function-ref name="write" scoped="" ref="0x7ffb37314020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ffb3732c450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ffb3732c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3732c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ffb373152f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ffb373152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37315670"/>
        <function-ref name="write" scoped="" ref="0x7ffb37315800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ffb373102f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ffb373102f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37310670"/>
        <function-ref name="write" scoped="" ref="0x7ffb37310800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ffb3731ee50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ffb3731ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3731d210"/>
        <function-ref name="write" scoped="" ref="0x7ffb3731d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ffb37319670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ffb37319670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb373199f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37319b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ffb3732faa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ffb3732faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3732fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ffb3732e770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ffb3732e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3732eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ffb37320e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ffb37320e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3731f210"/>
        <function-ref name="write" scoped="" ref="0x7ffb3731f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ffb3732a670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ffb3732a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb3732a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ffb3731f670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ffb3731f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3731f9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb3731fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ffb37317e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ffb37317e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37316610"/>
        <function-ref name="write" scoped="" ref="0x7ffb373167a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ffb3730e7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ffb3730e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb3730eb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb3730ecb0"/>
        <function-ref name="write" scoped="" ref="0x7ffb3730ee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb3730d020"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb3730d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ffb372f9c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ffb372f9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f7210"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ffb37303da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ffb37303da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37302180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ffb372fcb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ffb372fcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372fb020"/>
        <function-ref name="write" scoped="" ref="0x7ffb372fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ffb372f6670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb372f6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f69f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ffb372efe50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ffb372efe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372ee210"/>
        <function-ref name="write" scoped="" ref="0x7ffb372ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ffb372f6e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ffb372f6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f5210"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ffb372e22f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ffb372e22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372e2670"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ffb372e52f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ffb372e52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372e5670"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ffb37301120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ffb37301120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb373014a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ffb372eb670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ffb372eb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372eb9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372ebb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ffb372e62f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ffb372e62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372e6670"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ffb372fbc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ffb372fbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372fa020"/>
        <function-ref name="write" scoped="" ref="0x7ffb372fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ffb372fac60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ffb372fac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f9020"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ffb372f0670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ffb372f0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f09f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ffb372f3e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ffb372f3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f2210"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ffb372f5670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ffb372f5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f59f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ffb37305760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb37305760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ffb37305ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ffb37305c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ffb37305e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ffb37300aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ffb37300aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37300e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ffb372ff120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ffb372ff120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb372ff5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ffb372e9a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ffb372e9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372e9df0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ffb372ff870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ffb372ff870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb372ffbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ffb372e6ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ffb372e6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372e6e50"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ffb37301dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ffb37301dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37300180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ffb372ece50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ffb372ece50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372eb210"/>
        <function-ref name="write" scoped="" ref="0x7ffb372eb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ffb372fa480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ffb372fa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372fa800"/>
        <function-ref name="write" scoped="" ref="0x7ffb372fa990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ffb372fb480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb372fb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372fb800"/>
        <function-ref name="write" scoped="" ref="0x7ffb372fb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ffb37303750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ffb37303750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37303ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ffb372ede50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ffb372ede50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372ec210"/>
        <function-ref name="write" scoped="" ref="0x7ffb372ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ffb372ee670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ffb372ee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372ee9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372eeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ffb372ec670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ffb372ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372ec9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372ecb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ffb372e4ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ffb372e4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372e4e50"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ffb372e5ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ffb372e5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372e5e50"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ffb372f2670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ffb372f2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f29f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ffb372eee50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ffb372eee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372ed210"/>
        <function-ref name="write" scoped="" ref="0x7ffb372ed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ffb372e7ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ffb372e7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372e7e50"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ffb372f4670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ffb372f4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f49f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ffb372e2ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ffb372e2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb372e2e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb372e1020"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e11b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb372e1340"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb372e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ffb37303100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ffb37303100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37303480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ffb372fc370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ffb372fc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372fc6f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372fc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ffb372f9480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ffb372f9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f9800"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ffb372f0e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ffb372f0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372ef210"/>
        <function-ref name="write" scoped="" ref="0x7ffb372ef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ffb372f5e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ffb372f5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f4210"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ffb372ef670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ffb372ef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372ef9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372efb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ffb372f7670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ffb372f7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f79f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ffb37302450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ffb37302450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb373027d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ffb372f7e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb372f7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f6210"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb373069e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb373069e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb37306d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb37305020"/>
        <function-ref name="request" scoped="" ref="0x7ffb373051b0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb37305340"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb373054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ffb372fd020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ffb372fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb372fd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ffb372fdcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ffb372fdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb372fc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ffb372e72f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ffb372e72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372e7670"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ffb372e8ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ffb372e8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372e8e50"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ffb37300450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ffb37300450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb373007d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ffb372e82f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ffb372e82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372e8670"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ffb372e42f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ffb372e42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372e4670"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ffb372f2e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ffb372f2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f0210"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ffb372ed670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ffb372ed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372ed9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372edb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ffb37302aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ffb37302aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37302e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ffb37301770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ffb37301770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37301af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ffb372f4e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ffb372f4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f3210"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ffb372fd670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ffb372fd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb372fd9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ffb372f3670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ffb372f3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372f39f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372f3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ffb372ebe50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ffb372ebe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372e9610"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e97a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ffb372e17a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ffb372e17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb372e1b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb372e1cb0"/>
        <function-ref name="write" scoped="" ref="0x7ffb372e1e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb372e0020"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb372e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7ffb372d9b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ffb372d9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7ffb372d6020"/>
        <function-ref name="changed" scoped="" ref="0x7ffb372d61b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7ffb372d6340"/>
        <function-ref name="setAddress" scoped="" ref="0x7ffb372d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7ffb372d8d70" loc="40:../../../tos/platforms/shimmer/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ffb372d8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7ffb372c2180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ffb372afcb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb372afcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ffb372ae0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ffb372ae230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ffb372ae3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ffb372ae550"/>
        <function-ref name="setCca" scoped="" ref="0x7ffb372ae6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ffb372ae870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7ffb372ab990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7ffb372ab990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ffb372abd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7ffb372af020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7ffb372af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb372af3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb372af530"/>
        <function-ref name="modify" scoped="" ref="0x7ffb372af6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb372af850"/>
        <function-ref name="resend" scoped="" ref="0x7ffb372af9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ffb372b26c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ffb372b26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb372b2a40"/>
        <function-ref name="stop" scoped="" ref="0x7ffb372b2bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7ffb372ad150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7ffb372ad150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ffb372ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ffb372a5650" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb372a5650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ffb372a59d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ffb372a5b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ffb372a5cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ffb372a5e80"/>
        <function-ref name="setCca" scoped="" ref="0x7ffb372a2030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ffb372a21c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7ffb3729a7c0" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ffb3729a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ffb37299d50"/>
        <function-ref name="clear" scoped="" ref="0x7ffb372984c0"/>
        <function-ref name="isValid" scoped="" ref="0x7ffb37299620"/>
        <function-ref name="set" scoped="" ref="0x7ffb37298bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7ffb37283020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb37283020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372833a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37283530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7ffb37283890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ffb37283890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37283c10"/>
        <function-ref name="write" scoped="" ref="0x7ffb37283da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7ffb372a25e0" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7ffb372a25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ffb372a2960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7ffb37286530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ffb37286530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb372868b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7ffb37295880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7ffb37295880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7ffb37295c00"/>
        <function-ref name="disable" scoped="" ref="0x7ffb37295d90"/>
        <function-ref name="captured" scoped="" ref="0x7ffb37294020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7ffb372941b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7ffb372a07f0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7ffb372a07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb3729d090"/>
        <function-ref name="fired" scoped="" ref="0x7ffb3729e090"/>
        <function-ref name="startAt" scoped="" ref="0x7ffb3729ea10"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb3729e550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ffb3729d550"/>
        <function-ref name="start" scoped="" ref="0x7ffb3729f6a0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb3729fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ffb3729da00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb3729da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ffb3729dd80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ffb3729b020"/>
        <function-ref name="getRssi" scoped="" ref="0x7ffb3729b1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ffb3729b340"/>
        <function-ref name="getPower" scoped="" ref="0x7ffb3729b4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ffb3729b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7ffb37288550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ffb37288550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372888d0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37288a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7ffb37288e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ffb37288e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372871c0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37287350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7ffb3727cd40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7ffb3727cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb372800e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7ffb37280270"/>
        <function-ref name="sfd" scoped="" ref="0x7ffb37280400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb372a68c0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb372a68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb372a6c40"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb372a6dd0"/>
        <function-ref name="modify" scoped="" ref="0x7ffb372a5020"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb372a51b0"/>
        <function-ref name="resend" scoped="" ref="0x7ffb372a5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7ffb3728ad10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb3728ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ffb372890e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ffb37289270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ffb37289400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7ffb37286c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ffb37286c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37285020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7ffb3728e820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ffb3728e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3728eba0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3728ed30"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3728d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3728d1b0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3728d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3728d4d0"/>
        <function-ref name="set" scoped="" ref="0x7ffb3728d660"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3728d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb372a7820" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb372a7820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb372a7ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ffb3729b9a0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb3729b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ffb3729bd20"/>
        <function-ref name="getHeader" scoped="" ref="0x7ffb3729a020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ffb3729a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7ffb3728fb30" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ffb3728fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb37295020"/>
        <function-ref name="isSet" scoped="" ref="0x7ffb372951b0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb37295340"/>
        <function-ref name="set" scoped="" ref="0x7ffb372954d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7ffb372853e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb372853e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37285960"/>
        <function-ref name="write" scoped="" ref="0x7ffb37285af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ffb3728a020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ffb3728a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb3728a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb3728a530"/>
        <function-ref name="request" scoped="" ref="0x7ffb3728a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb3728a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb3728a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7ffb37294500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7ffb37294500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb37294980"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb37294b10"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb37294ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb37294e30"/>
        <function-ref name="get" scoped="" ref="0x7ffb3728e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3728e1b0"/>
        <function-ref name="set" scoped="" ref="0x7ffb3728e340"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3728e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7ffb37282130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ffb37282130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb372824b0"/>
        <function-ref name="write" scoped="" ref="0x7ffb37282640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7ffb372829c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ffb372829c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37282d40"/>
        <function-ref name="write" scoped="" ref="0x7ffb37281020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7ffb372876d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ffb372876d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37287a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7ffb3728db40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7ffb3728db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb3728c020"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb3728c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb3728c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb3728c4d0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3728c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb3728c7f0"/>
        <function-ref name="set" scoped="" ref="0x7ffb3728c980"/>
        <function-ref name="clr" scoped="" ref="0x7ffb3728cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb372806c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb372806c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb37280a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb37280bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb37280d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb3727f020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb3727f1b0"/>
        <function-ref name="get" scoped="" ref="0x7ffb3727f340"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb3727f4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb3727fb10"/>
        <function-ref name="set" scoped="" ref="0x7ffb3727f660"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb3727f7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb3727f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7ffb372845e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb372845e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37284960"/>
        <function-ref name="write" scoped="" ref="0x7ffb37284af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ffb372a6020" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ffb372a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb372a63a0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb372a6530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7ffb37289780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ffb37289780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb37289b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb37289c90"/>
        <function-ref name="write" scoped="" ref="0x7ffb37289e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb37288020"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb372881b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7ffb37287de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ffb37287de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37286180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7ffb37285e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ffb37285e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb37284220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7ffb372a2d70" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7ffb372a2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ffb372a0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ffb371e2c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ffb371e2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371e1210"/>
        <function-ref name="write" scoped="" ref="0x7ffb371e13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ffb371ec020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ffb371ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ffb371e6c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ffb371e6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371e5020"/>
        <function-ref name="write" scoped="" ref="0x7ffb371e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ffb371e0670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb371e0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371e09f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371e0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ffb371d9e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ffb371d9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d8210"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ffb371e0e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ffb371e0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371df210"/>
        <function-ref name="write" scoped="" ref="0x7ffb371df3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ffb371cc2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ffb371cc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371cc670"/>
        <function-ref name="write" scoped="" ref="0x7ffb371cc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ffb371ce2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ffb371ce2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371ce670"/>
        <function-ref name="write" scoped="" ref="0x7ffb371ce800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ffb371eb370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ffb371eb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371eb6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ffb371d4670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ffb371d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d49f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ffb371d02f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ffb371d02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d0670"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ffb371e5c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ffb371e5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371e3020"/>
        <function-ref name="write" scoped="" ref="0x7ffb371e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ffb371e3c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ffb371e3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371e2020"/>
        <function-ref name="write" scoped="" ref="0x7ffb371e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ffb371da670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ffb371da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371da9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371dab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ffb371dce50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ffb371dce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371db210"/>
        <function-ref name="write" scoped="" ref="0x7ffb371db3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ffb371df670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ffb371df670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371df9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371dfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ffb371ee8f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb371ee8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ffb371eec70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ffb371eee00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ffb371ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ffb371e9d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ffb371e9d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371e80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ffb371e8370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ffb371e8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371e87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ffb371d3a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ffb371d3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d3df0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ffb371e8ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ffb371e8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371e8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ffb371d0ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ffb371d0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d0e50"/>
        <function-ref name="write" scoped="" ref="0x7ffb371ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ffb371e9060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ffb371e9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371e93e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ffb371d5e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ffb371d5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d4210"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ffb371e3480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ffb371e3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371e3800"/>
        <function-ref name="write" scoped="" ref="0x7ffb371e3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ffb371e5480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb371e5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371e5800"/>
        <function-ref name="write" scoped="" ref="0x7ffb371e5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ffb371ed940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ffb371ed940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371edcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ffb371d6e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ffb371d6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d5210"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ffb371d8670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ffb371d8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d89f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ffb371d5670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ffb371d5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d59f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ffb371cdad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ffb371cdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371cde50"/>
        <function-ref name="write" scoped="" ref="0x7ffb371cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ffb371cead0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ffb371cead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371cee50"/>
        <function-ref name="write" scoped="" ref="0x7ffb371cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ffb371db670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ffb371db670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371db9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371dbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ffb371d8e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ffb371d8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d6210"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ffb371d1ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ffb371d1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d1e50"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ffb371de670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ffb371de670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371de9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371deb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ffb371ccad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ffb371ccad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb371cce50"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb371cb020"/>
        <function-ref name="write" scoped="" ref="0x7ffb371cb1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb371cb340"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb371cb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ffb371ed2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ffb371ed2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371ed670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ffb371e6490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ffb371e6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371e6810"/>
        <function-ref name="write" scoped="" ref="0x7ffb371e69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ffb371e2480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ffb371e2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371e2800"/>
        <function-ref name="write" scoped="" ref="0x7ffb371e2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ffb371dae50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ffb371dae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d9210"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ffb371dfe50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ffb371dfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371de210"/>
        <function-ref name="write" scoped="" ref="0x7ffb371de3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ffb371d9670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ffb371d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d99f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ffb371e1670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ffb371e1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371e19f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371e1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ffb371ec670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ffb371ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371ec9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ffb371e1e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb371e1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371e0210"/>
        <function-ref name="write" scoped="" ref="0x7ffb371e03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb371efc30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb371efc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb371ee020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb371ee1b0"/>
        <function-ref name="request" scoped="" ref="0x7ffb371ee340"/>
        <function-ref name="granted" scoped="" ref="0x7ffb371ee4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb371ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ffb371e7160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ffb371e7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371e74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ffb371e7e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ffb371e7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371e61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ffb371d12f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ffb371d12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d1670"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ffb371d2ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ffb371d2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d2e50"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ffb371e96b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ffb371e96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371e9a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ffb371d22f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ffb371d22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d2670"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ffb371cd2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ffb371cd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371cd670"/>
        <function-ref name="write" scoped="" ref="0x7ffb371cd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ffb371dbe50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ffb371dbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371da210"/>
        <function-ref name="write" scoped="" ref="0x7ffb371da3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ffb371d6670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ffb371d6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d69f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ffb371eccc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ffb371eccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371eb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ffb371eb9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ffb371eb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371ebd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ffb371dee50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ffb371dee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371dc210"/>
        <function-ref name="write" scoped="" ref="0x7ffb371dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ffb371e77b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ffb371e77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371e7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ffb371dc670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ffb371dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371dc9f0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371dcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ffb371d4e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ffb371d4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371d3610"/>
        <function-ref name="write" scoped="" ref="0x7ffb371d37a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ffb371cb7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ffb371cb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb371cbb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb371cbcb0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371cbe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb371ca020"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb371ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7ffb371bfdf0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7ffb371bfdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb371bc1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7ffb371bc350"/>
        <function-ref name="sfd" scoped="" ref="0x7ffb371bc4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb371bc7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb371bc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb371bcb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7ffb371bb020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7ffb371bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ffb371bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ffb371bf5c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ffb371bf5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb371bf940"/>
        <function-ref name="stop" scoped="" ref="0x7ffb371bfad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7ffb371b3380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7ffb371b3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb371b3700"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb371b3890"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb371b3a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb371b3bb0"/>
        <function-ref name="get" scoped="" ref="0x7ffb371b3d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb371b2020"/>
        <function-ref name="set" scoped="" ref="0x7ffb371b21b0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb371b2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7ffb371acb90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ffb371acb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ffb371ab020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ffb371ab1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ffb371ab340"/>
        <function-ref name="syncDone" scoped="" ref="0x7ffb371ab4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ffb371ab660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ffb371ab7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7ffb371ab980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ffb371abb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ffb371abca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ffb371abe30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ffb371aa020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ffb371aa1b0"/>
        <function-ref name="sync" scoped="" ref="0x7ffb371aa340"/>
        <function-ref name="getChannel" scoped="" ref="0x7ffb371aa5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ffb371aa760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7ffb371959d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7ffb371959d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb37195d50"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb37194020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7ffb371aad70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ffb371aad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ffb371a7330"/>
        <function-ref name="clear" scoped="" ref="0x7ffb371a7a60"/>
        <function-ref name="isValid" scoped="" ref="0x7ffb371a9ba0"/>
        <function-ref name="set" scoped="" ref="0x7ffb371a6210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7ffb371b26b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7ffb371b26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb371b2a30"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb371b2bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb371b2d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb371b1020"/>
        <function-ref name="get" scoped="" ref="0x7ffb371b11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb371b1340"/>
        <function-ref name="set" scoped="" ref="0x7ffb371b14d0"/>
        <function-ref name="clr" scoped="" ref="0x7ffb371b1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7ffb371a5cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb371a5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371a40a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371a4230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7ffb371a4590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ffb371a4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371a4910"/>
        <function-ref name="write" scoped="" ref="0x7ffb371a4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7ffb371a36d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ffb371a36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371a3a50"/>
        <function-ref name="write" scoped="" ref="0x7ffb371a3be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ffb371ad330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb371ad330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ffb371ad6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ffb371ad840"/>
        <function-ref name="getRssi" scoped="" ref="0x7ffb371ad9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ffb371adb60"/>
        <function-ref name="getPower" scoped="" ref="0x7ffb371adcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ffb371ade80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7ffb371b6550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7ffb371b6550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb371b68d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7ffb371b6a60"/>
        <function-ref name="sfd" scoped="" ref="0x7ffb371b6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7ffb371ae3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ffb371ae3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371ae720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7ffb371b4020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ffb371b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ffb371b43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ffb371b4530"/>
        <function-ref name="toggle" scoped="" ref="0x7ffb371b46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ffb371b4850"/>
        <function-ref name="get" scoped="" ref="0x7ffb371b49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ffb371b4b70"/>
        <function-ref name="set" scoped="" ref="0x7ffb371b4d00"/>
        <function-ref name="clr" scoped="" ref="0x7ffb371b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7ffb371a1020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ffb371a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371a13a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371a1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb371b7620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb371b7620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb371b79a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ffb371ac1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb371ac1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ffb371ac560"/>
        <function-ref name="getHeader" scoped="" ref="0x7ffb371ac6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ffb371ac880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb371b5020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb371b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb371b53a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ffb371b06e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ffb371b06e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb371b0a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb371b0bf0"/>
        <function-ref name="request" scoped="" ref="0x7ffb371b0d80"/>
        <function-ref name="granted" scoped="" ref="0x7ffb371af020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb371af1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7ffb371a4e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ffb371a4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371a31c0"/>
        <function-ref name="write" scoped="" ref="0x7ffb371a3350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7ffb371af530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ffb371af530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb371af8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb371afa40"/>
        <function-ref name="write" scoped="" ref="0x7ffb371afbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb371afd60"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb371ae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7ffb371a18b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ffb371a18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371a1e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7ffb371b57c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7ffb371b57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ffb371b5b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb371a0150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb371a0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb371a04d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb371a0660"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb371a07f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb371a0980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb371a0b10"/>
        <function-ref name="get" scoped="" ref="0x7ffb371a0ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb371a0e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb3719f4d0"/>
        <function-ref name="set" scoped="" ref="0x7ffb3719f020"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb3719f1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb3719f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7ffb371a53e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb371a53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb371a5760"/>
        <function-ref name="write" scoped="" ref="0x7ffb371a58f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7ffb371a6b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ffb371a6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7ffb371b1a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ffb371b1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ffb371b1dd0"/>
        <function-ref name="disable" scoped="" ref="0x7ffb371b0020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ffb371b01b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ffb371b0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7ffb371aead0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ffb371aead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb371ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ffb371b7ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ffb371b7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ffb371b60a0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb371b6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ffb37134a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ffb37134a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ffb37134df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ffb37138670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb37138670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ffb371389f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ffb37138b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7ffb37138d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ffb37135020"/>
        <function-ref name="getPower" scoped="" ref="0x7ffb371351b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ffb37135340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7ffb37133550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ffb37133550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ffb37132b00"/>
        <function-ref name="clear" scoped="" ref="0x7ffb371302a0"/>
        <function-ref name="isValid" scoped="" ref="0x7ffb371323d0"/>
        <function-ref name="set" scoped="" ref="0x7ffb371309d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7ffb371340c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb371340c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37134440"/>
        <function-ref name="getHeader" scoped="" ref="0x7ffb371345d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ffb37134760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7ffb3712b480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ffb3712b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb3712b800"/>
        <function-ref name="isSet" scoped="" ref="0x7ffb3712b990"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb3712bb20"/>
        <function-ref name="set" scoped="" ref="0x7ffb3712bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7ffb3712f660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ffb3712f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ffb3712ece0"/>
        <function-ref name="clear" scoped="" ref="0x7ffb3712c460"/>
        <function-ref name="isValid" scoped="" ref="0x7ffb3712e5b0"/>
        <function-ref name="set" scoped="" ref="0x7ffb3712cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ffb371356e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ffb371356e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ffb37135a60"/>
        <function-ref name="noAck" scoped="" ref="0x7ffb37135bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ffb37135d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ffb37125020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ffb37125020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ffb371253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ffb3712ad20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb3712ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ffb371270e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ffb37127270"/>
        <function-ref name="getRssi" scoped="" ref="0x7ffb37127400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ffb37127590"/>
        <function-ref name="getPower" scoped="" ref="0x7ffb37127720"/>
        <function-ref name="getLqi" scoped="" ref="0x7ffb371278b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7ffb3711c4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb3711c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb3711c820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb3711c9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb3711cb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb3711ccd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb3711ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7ffb37125a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ffb37125a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ffb37122020"/>
        <function-ref name="clear" scoped="" ref="0x7ffb37122750"/>
        <function-ref name="isValid" scoped="" ref="0x7ffb371248d0"/>
        <function-ref name="set" scoped="" ref="0x7ffb37122e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7ffb37126640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb37126640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ffb371269c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ffb37126b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ffb37126ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7ffb3711d8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ffb3711d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb3711dc30"/>
        <function-ref name="isSet" scoped="" ref="0x7ffb3711ddc0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb3711c020"/>
        <function-ref name="set" scoped="" ref="0x7ffb3711c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7ffb3711b3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7ffb3711b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb37119020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7ffb371196e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7ffb371196e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb371183d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7ffb37121af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ffb37121af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ffb3711e0d0"/>
        <function-ref name="clear" scoped="" ref="0x7ffb3711e800"/>
        <function-ref name="isValid" scoped="" ref="0x7ffb37120970"/>
        <function-ref name="set" scoped="" ref="0x7ffb3711d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ffb37127c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ffb37127c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ffb37126020"/>
        <function-ref name="noAck" scoped="" ref="0x7ffb371261b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ffb37126340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ffb370cacf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ffb370cacf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb370c9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ffb370c7020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ffb370c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3ed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7ffb384b2270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ffb370c7e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ffb370c6800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ffb370c6340"/>
        <function-ref name="overflow" scoped="" ref="0x7ffb370c6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ffb370c30b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ffb370c30b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb384b3720"/>
            <typename><typedef-ref name="TMilli" ref="0x7ffb384b3a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ffb370bf630"/>
        <function-ref name="fired" scoped="" ref="0x7ffb370c2b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ffb370c0920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ffb370c04a0"/>
        <function-ref name="getdt" scoped="" ref="0x7ffb370be020"/>
        <function-ref name="gett0" scoped="" ref="0x7ffb370bfab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ffb370c0020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ffb370c3ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ffb370bf020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ffb370c21b0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb370c2680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ffb370ad620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ffb370ad620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370adba0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370add30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ffb370b8940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ffb370b8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ffb370b1620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ffb370b1620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370b19a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370b1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ffb370ab060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ffb370ab060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370ab3e0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370ab570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ffb370a4840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ffb370a4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a4bc0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a4d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ffb370ab840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ffb370ab840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370abbc0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370abd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ffb37098c60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ffb37098c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37097020"/>
        <function-ref name="write" scoped="" ref="0x7ffb370971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ffb3709bc60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ffb3709bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3709a020"/>
        <function-ref name="write" scoped="" ref="0x7ffb3709a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ffb370b7cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ffb370b7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ffb3709f060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ffb3709f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3709f3e0"/>
        <function-ref name="write" scoped="" ref="0x7ffb3709f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ffb3709cc60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ffb3709cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3709b020"/>
        <function-ref name="write" scoped="" ref="0x7ffb3709b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ffb370b0620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ffb370b0620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370b09a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370b0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ffb370af620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ffb370af620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370af9a0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370afb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ffb370a5060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ffb370a5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a53e0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a5570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ffb370a8840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ffb370a8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a8bc0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a8d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ffb370aa060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ffb370aa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370aa3e0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370aa570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ffb370b92b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ffb370b92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ffb370b9630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ffb370b97c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ffb370b9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ffb370b56b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ffb370b56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b5a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ffb370b5d00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ffb370b5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b31c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ffb3709e480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ffb3709e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3709e800"/>
        <function-ref name="write" scoped="" ref="0x7ffb3709e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ffb370b3490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ffb370b3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b3810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ffb3709b480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ffb3709b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3709b800"/>
        <function-ref name="write" scoped="" ref="0x7ffb3709b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ffb370b69c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ffb370b69c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b6d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ffb370a1840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ffb370a1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a1bc0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a1d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ffb370b0e00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ffb370b0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370af1c0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370af350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ffb370b1e00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ffb370b1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370b01c0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370b0350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ffb370b82f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ffb370b82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ffb370a2840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ffb370a2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a2bc0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a2d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ffb370a3060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ffb370a3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a33e0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a3570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ffb370a1060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ffb370a1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a13e0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a1570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ffb37098480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ffb37098480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37098800"/>
        <function-ref name="write" scoped="" ref="0x7ffb37098990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ffb3709a480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ffb3709a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3709a800"/>
        <function-ref name="write" scoped="" ref="0x7ffb3709a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ffb370a7060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ffb370a7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a73e0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a7570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ffb370a3840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ffb370a3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a3bc0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ffb3709c480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ffb3709c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3709c800"/>
        <function-ref name="write" scoped="" ref="0x7ffb3709c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ffb370a9060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ffb370a9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a93e0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a9570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ffb37097480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ffb37097480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb37097800"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb37097990"/>
        <function-ref name="write" scoped="" ref="0x7ffb37097b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb37097cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb37097e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ffb370b9c20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ffb370b9c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ffb370b2e00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ffb370b2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370b11c0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370b1350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ffb370afe00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ffb370afe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370ad1c0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370ad350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ffb370a5840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ffb370a5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a5bc0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a5d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ffb370aa840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ffb370aa840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370aabc0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370aad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ffb370a4060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ffb370a4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a43e0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a4570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ffb370ac060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ffb370ac060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370ac3e0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370ac570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ffb370b7020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ffb370b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ffb370ac840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ffb370ac840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370acbc0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370acd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb370bb520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb370bb520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb370bb8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb370bba30"/>
        <function-ref name="request" scoped="" ref="0x7ffb370bbbc0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb370bbd50"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb370b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ffb370b3ae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ffb370b3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ffb370b27b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ffb370b27b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b2b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ffb3709dc60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ffb3709dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3709c020"/>
        <function-ref name="write" scoped="" ref="0x7ffb3709c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ffb3709d480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ffb3709d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3709d800"/>
        <function-ref name="write" scoped="" ref="0x7ffb3709d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ffb370b5060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ffb370b5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b53e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ffb3709ec60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ffb3709ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3709d020"/>
        <function-ref name="write" scoped="" ref="0x7ffb3709d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ffb3709ac60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ffb3709ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb37098020"/>
        <function-ref name="write" scoped="" ref="0x7ffb370981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ffb370a7840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ffb370a7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a7bc0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a7d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ffb370a2060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ffb370a2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a23e0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a2570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ffb370b7670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ffb370b7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ffb370b6370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ffb370b6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b66f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ffb370a9840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ffb370a9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a9bc0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a9d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ffb370b2160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ffb370b2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ffb370b24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ffb370a8060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ffb370a8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb370a83e0"/>
        <function-ref name="write" scoped="" ref="0x7ffb370a8570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ffb3709f840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ffb3709f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ffb3709e020"/>
        <function-ref name="write" scoped="" ref="0x7ffb3709e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ffb37096160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ffb37096160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ffb370964e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7ffb37096670"/>
        <function-ref name="write" scoped="" ref="0x7ffb37096800"/>
        <function-ref name="beginRead" scoped="" ref="0x7ffb37096990"/>
        <function-ref name="readDone" scoped="" ref="0x7ffb37096b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7ffb3706da20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ffb3706da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ffb3706dda0"/>
        <function-ref name="rand32" scoped="" ref="0x7ffb3706c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7ffb3706a920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7ffb3706a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb3706d560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37071990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37071990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37071d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7ffb37066a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ffb37066a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ffb37066da0"/>
        <function-ref name="rand32" scoped="" ref="0x7ffb37065020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7ffb37067940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7ffb37067940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37066560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37067080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37067080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb37067400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ffb3706faa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ffb3706faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ffb3706fe20"/>
        <function-ref name="toIdle" scoped="" ref="0x7ffb37058020"/>
        <function-ref name="isState" scoped="" ref="0x7ffb370581b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7ffb37058340"/>
        <function-ref name="requestState" scoped="" ref="0x7ffb370584d0"/>
        <function-ref name="forceState" scoped="" ref="0x7ffb37058660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ffb3704e3b0" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ffb3704e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb3704e730"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb3704e8c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb3704ea50"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb3704ebe0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb3704ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb370514d0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb370514d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb37051850"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb370519e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb37051b70"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb37051d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb3704e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ffb37049110" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ffb37049110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb37049490"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37049620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb370497b0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb37049940"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb37049ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb3704dd50" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb3704dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb3704a100"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb3704a290"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb3704a420"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb3704a5b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb3704a740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7ffb37048be0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ffb37048be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ffb37047020"/>
        <function-ref name="rand32" scoped="" ref="0x7ffb370471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb3704a9c0" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb3704a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb3704ad40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ffb370474b0" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb370474b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ffb37047830"/>
        <function-ref name="getHeader" scoped="" ref="0x7ffb370479c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ffb37047b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7ffb37049d60" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ffb37049d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ffb37048180"/>
        <function-ref name="toIdle" scoped="" ref="0x7ffb37048310"/>
        <function-ref name="isState" scoped="" ref="0x7ffb370484a0"/>
        <function-ref name="isIdle" scoped="" ref="0x7ffb37048630"/>
        <function-ref name="requestState" scoped="" ref="0x7ffb370487c0"/>
        <function-ref name="forceState" scoped="" ref="0x7ffb37048950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ffb3704bb00" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ffb3704bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ffb3704be80"/>
        <function-ref name="toIdle" scoped="" ref="0x7ffb37032030"/>
        <function-ref name="isState" scoped="" ref="0x7ffb370321c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7ffb37032350"/>
        <function-ref name="requestState" scoped="" ref="0x7ffb370324e0"/>
        <function-ref name="forceState" scoped="" ref="0x7ffb37032670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ffb3702cb80" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ffb3702cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb3702b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb3702fd00" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb3702fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb3702c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7ffb3702c430" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7ffb3702c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb3702c7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ffb37026770" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ffb37026770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb37026af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb37026020" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb37026020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb370263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb370281e0" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb370281e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb37028560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ffb37026df0" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb37026df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ffb370251c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ffb37025350"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ffb370254e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7ffb370288f0" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7ffb370288f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb37028c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ffb36ff8200" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ffb36ff8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb36ff8580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ffb36ff8890" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ffb36ff8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36ff8c10"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36ff8da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36ff7020"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36ff71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36ff7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb36ffcc60" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb36ffcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36ffb020"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36ffb1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36ffb340"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36ffb4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36ffb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7ffb36ffa020" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7ffb36ffa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36ffa3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36ffa530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36ffa6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36ffa850"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36ffa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb36ffb900" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb36ffb900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb36ffbc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb36ffc020" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb36ffc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb36ffc3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb36ffc530"/>
        <function-ref name="request" scoped="" ref="0x7ffb36ffc6c0"/>
        <function-ref name="granted" scoped="" ref="0x7ffb36ffc850"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb36ffc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7ffb36ffad50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7ffb36ffad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb36ff9100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7ffb36ff9440" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7ffb36ff9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb36ff97c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb36ff9950"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36ff9ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36ff9c70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb36ff9e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ffb36fede20" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ffb36fede20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36fec1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36fec350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36fec4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36fec670"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36fec800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ffb36fecb50" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ffb36fecb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb36feb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7ffb36fbedb0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7ffb36fbedb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb36fbd180"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb36fbd310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ffb36feb2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb36feb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ffb36feb670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ffb36feb800"/>
        <function-ref name="getRssi" scoped="" ref="0x7ffb36feb990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ffb36febb20"/>
        <function-ref name="getPower" scoped="" ref="0x7ffb36febcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ffb36febe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7ffb36fefbb0" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7ffb36fefbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36fee020"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36fee1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36fee340"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36fee4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36fee660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ffb36feab70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ffb36feab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ffb36fe9020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ffb36fe91b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ffb36fe9340"/>
        <function-ref name="dequeue" scoped="" ref="0x7ffb36fe94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ffb36fea170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb36fea170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36fea4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ffb36fea680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ffb36fea810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7ffb36fef500" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7ffb36fef500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb36fef880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ffb36ff2910" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ffb36ff2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb36ff2c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb36ff2e20"/>
        <function-ref name="request" scoped="" ref="0x7ffb36ff1020"/>
        <function-ref name="granted" scoped="" ref="0x7ffb36ff11b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb36ff1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7ffb36ff1660" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7ffb36ff1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36ff19e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36ff1b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36ff1d00"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36fef020"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36fef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7ffb36fee9d0" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7ffb36fee9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb36feed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7ffb36fed0d0" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7ffb36fed0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb36fed450"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb36fed5e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36fed770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36fed900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb36feda90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ffb36f9edd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ffb36f9edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ffb36f9d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7ffb36f9d410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7ffb36f9d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ffb36f9d790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ffb36f9d920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ffb36f9dab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7ffb36f9dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ffb36f91b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ffb36f91b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ffb36f90020"/>
        <function-ref name="stopDone" scoped="" ref="0x7ffb36f901b0"/>
        <function-ref name="start" scoped="" ref="0x7ffb36f90340"/>
        <function-ref name="stop" scoped="" ref="0x7ffb36f904d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ffb36f8f860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ffb36f8f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36f8fbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36f8fd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36f8e020"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36f8e1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36f8e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ffb36f8e690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ffb36f8e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb36f8ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb36f95ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb36f95ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36f920a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36f92230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36f923c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36f92550"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36f926e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ffb36f91080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ffb36f91080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ffb36f91400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ffb36f91590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ffb36f91720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ffb36f918b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7ffb36f90800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7ffb36f90800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ffb36f90b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7ffb36f90d10"/>
        <function-ref name="isState" scoped="" ref="0x7ffb36f8f020"/>
        <function-ref name="isIdle" scoped="" ref="0x7ffb36f8f1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7ffb36f8f340"/>
        <function-ref name="forceState" scoped="" ref="0x7ffb36f8f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7ffb36f8ed90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7ffb36f8ed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ffb36f8d180"/>
        <function-ref name="stopDone" scoped="" ref="0x7ffb36f8d310"/>
        <function-ref name="start" scoped="" ref="0x7ffb36f8d4a0"/>
        <function-ref name="stop" scoped="" ref="0x7ffb36f8d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb36f92980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb36f92980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb36f92d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ffb36f8a2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ffb36f8a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ffb36f8a650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ffb36f8a7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ffb36f8a970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ffb36f8ab00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ffb36f8c580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ffb36f8c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ffb36f8c900"/>
        <function-ref name="toIdle" scoped="" ref="0x7ffb36f8ca90"/>
        <function-ref name="isState" scoped="" ref="0x7ffb36f8cc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7ffb36f8cdb0"/>
        <function-ref name="requestState" scoped="" ref="0x7ffb36f8b020"/>
        <function-ref name="forceState" scoped="" ref="0x7ffb36f8b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ffb36f7dd70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ffb36f7dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36f7c180"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36f7c310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36f7c4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36f7c630"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36f7c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb36f80350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb36f80350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36f806d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36f80860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36f809f0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36f80b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36f80d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ffb36f7d020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ffb36f7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ffb36f7d3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7ffb36f7d530"/>
        <function-ref name="getRetries" scoped="" ref="0x7ffb36f7d6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ffb36f7d850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ffb36f7d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7ffb36f781c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ffb36f781c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ffb36f78540"/>
        <function-ref name="noAck" scoped="" ref="0x7ffb36f786d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ffb36f78860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ffb36f7b410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ffb36f7b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ffb36f7b790"/>
        <function-ref name="setRetries" scoped="" ref="0x7ffb36f7b920"/>
        <function-ref name="getRetries" scoped="" ref="0x7ffb36f7bab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ffb36f7bc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ffb36f7bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ffb36f58690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ffb36f58690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb36f58a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ffb36f59860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ffb36f59860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36f59be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36f59d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36f58020"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36f581b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36f58340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7ffb36f56610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ffb36f56610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ffb36f56990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ffb36f56b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ffb36f56cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7ffb36f56e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ffb36f55020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ffb36f551b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7ffb36f55340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ffb36f554d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ffb36f55660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ffb36f557f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ffb36f55980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ffb36f55b10"/>
        <function-ref name="sync" scoped="" ref="0x7ffb36f55ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7ffb36f54020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ffb36f541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ffb36f5a8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ffb36f5a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ffb36f5ac30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ffb36f5adc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ffb36f59020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ffb36f591b0"/>
        <function-ref name="setCca" scoped="" ref="0x7ffb36f59340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ffb36f594d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7ffb36f5bce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7ffb36f5bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7ffb36f5a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7ffb36f531f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7ffb36f531f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ffb36f53570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ffb36f53700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ffb36f53890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ffb36f53a20"/>
        <function-ref name="setCca" scoped="" ref="0x7ffb36f53bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ffb36f53d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ffb36f5ca80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb36f5ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb36f5ce00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb36f5b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36f5b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36f5b340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb36f5b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ffb36f60020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ffb36f60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36f603a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36f60530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36f606c0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36f60850"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36f609e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ffb36f5fdf0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7ffb36f5fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb36f5d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ffb36f58ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ffb36f58ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ffb36f570a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ffb36f57230"/>
        <function-ref name="getRssi" scoped="" ref="0x7ffb36f573c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ffb36f57550"/>
        <function-ref name="getPower" scoped="" ref="0x7ffb36f576e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7ffb36f57870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7ffb36f544d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ffb36f544d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7ffb36f54950"/>
        <function-ref name="changed" scoped="" ref="0x7ffb36f54ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7ffb36f54c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7ffb36f54e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ffb36f57b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ffb36f57b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36f56020"/>
        <function-ref name="getHeader" scoped="" ref="0x7ffb36f561b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ffb36f56340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb36f5f210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb36f5f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb36f5f590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ffb36f52d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ffb36f52d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ffb36f500e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ffb36f50270"/>
        <function-ref name="led1On" scoped="" ref="0x7ffb36f50400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ffb36f50590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ffb36f50720"/>
        <function-ref name="get" scoped="" ref="0x7ffb36f508b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ffb36f50a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7ffb36f4f1b0"/>
        <function-ref name="set" scoped="" ref="0x7ffb36f50bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7ffb36f50d60"/>
        <function-ref name="led2On" scoped="" ref="0x7ffb36f4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ffb36f5d470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ffb36f5d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ffb36f5d7f0"/>
        <function-ref name="source" scoped="" ref="0x7ffb36f5d980"/>
        <function-ref name="address" scoped="" ref="0x7ffb36f5db10"/>
        <function-ref name="destination" scoped="" ref="0x7ffb36f5dca0"/>
        <function-ref name="setSource" scoped="" ref="0x7ffb36f5de30"/>
        <function-ref name="setDestination" scoped="" ref="0x7ffb36f5c020"/>
        <function-ref name="type" scoped="" ref="0x7ffb36f5c1b0"/>
        <function-ref name="setType" scoped="" ref="0x7ffb36f5c340"/>
        <function-ref name="isForMe" scoped="" ref="0x7ffb36f5c4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ffb36f5c660"/>
        <function-ref name="localGroup" scoped="" ref="0x7ffb36f5c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7ffb36f520f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7ffb36f520f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ffb36f52470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ffb36f52600"/>
        <function-ref name="request" scoped="" ref="0x7ffb36f52790"/>
        <function-ref name="granted" scoped="" ref="0x7ffb36f52920"/>
        <function-ref name="isOwner" scoped="" ref="0x7ffb36f52ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ffb36e9a970" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ffb36e9a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36e9acf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36e9ae80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36e99030"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36e991c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36e99350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ffb36e995a0" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb36e995a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb36e99920"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb36e99ab0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36e99c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36e99dd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb36e98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ffb36e98270" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ffb36e98270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ffb36e985f0"/>
        <function-ref name="source" scoped="" ref="0x7ffb36e98780"/>
        <function-ref name="address" scoped="" ref="0x7ffb36e98910"/>
        <function-ref name="destination" scoped="" ref="0x7ffb36e98aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7ffb36e98c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7ffb36e98dc0"/>
        <function-ref name="type" scoped="" ref="0x7ffb36e97020"/>
        <function-ref name="setType" scoped="" ref="0x7ffb36e971b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7ffb36e97340"/>
        <function-ref name="setGroup" scoped="" ref="0x7ffb36e974d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7ffb36e97660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ffb36e978f0" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ffb36e978f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ffb36e97c70"/>
        <function-ref name="noAck" scoped="" ref="0x7ffb36e97e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ffb36e96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ffb362d5b60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ffb362d5b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb362d4020"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb362d41b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb362d4340"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb362d44d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb362d4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ffb362d48b0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb362d48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb362d4c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb362d4dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb362d3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb362d31b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb362d3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ffb362d3590" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ffb362d3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ffb362d3910"/>
        <function-ref name="source" scoped="" ref="0x7ffb362d3aa0"/>
        <function-ref name="address" scoped="" ref="0x7ffb362d3c30"/>
        <function-ref name="destination" scoped="" ref="0x7ffb362d3dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7ffb362d2020"/>
        <function-ref name="setDestination" scoped="" ref="0x7ffb362d21b0"/>
        <function-ref name="type" scoped="" ref="0x7ffb362d2340"/>
        <function-ref name="setType" scoped="" ref="0x7ffb362d24d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7ffb362d2660"/>
        <function-ref name="setGroup" scoped="" ref="0x7ffb362d27f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7ffb362d2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ffb362d2c10" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ffb362d2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ffb362d1020"/>
        <function-ref name="noAck" scoped="" ref="0x7ffb362d11b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ffb362d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ffb362c8bc0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ffb362c8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb362c7020"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb362c71b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb362c7340"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb362c74d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb362c7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7ffb362c7910" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb362c7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb362c7c90"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb362c7e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb362c6020"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb362c61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb362c6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7ffb362c6590" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ffb362c6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ffb362c6910"/>
        <function-ref name="source" scoped="" ref="0x7ffb362c6aa0"/>
        <function-ref name="address" scoped="" ref="0x7ffb362c6c30"/>
        <function-ref name="destination" scoped="" ref="0x7ffb362c6dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7ffb362c5020"/>
        <function-ref name="setDestination" scoped="" ref="0x7ffb362c51b0"/>
        <function-ref name="type" scoped="" ref="0x7ffb362c5340"/>
        <function-ref name="setType" scoped="" ref="0x7ffb362c54d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7ffb362c5660"/>
        <function-ref name="setGroup" scoped="" ref="0x7ffb362c57f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7ffb362c5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb36eb2450" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb36eb2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36eb27d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36eb2960"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36eb2af0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36eb2c80"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36eb2e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7ffb36eafbe0" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ffb36eafbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36ead020"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36ead1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36ead340"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36ead4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36ead660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ffb36eb0dd0" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ffb36eb0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ffb36eaf1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36eaf350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36eaf4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7ffb36eaf670"/>
        <function-ref name="sendDone" scoped="" ref="0x7ffb36eaf800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7ffb36eab020" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb36eab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb36eab3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb36eab530"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36eab6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36eab850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb36eab9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7ffb36eabcb0" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7ffb36eabcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb36eaa0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb36eaa230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7ffb36eaa500" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7ffb36eaa500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ffb36eaa880"/>
        <function-ref name="runTask" scoped="" ref="0x7ffb36eaaa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7ffb36ead8b0" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ffb36ead8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ffb36eadc30"/>
        <function-ref name="source" scoped="" ref="0x7ffb36eaddc0"/>
        <function-ref name="address" scoped="" ref="0x7ffb36eac020"/>
        <function-ref name="destination" scoped="" ref="0x7ffb36eac1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7ffb36eac340"/>
        <function-ref name="setDestination" scoped="" ref="0x7ffb36eac4d0"/>
        <function-ref name="type" scoped="" ref="0x7ffb36eac660"/>
        <function-ref name="setType" scoped="" ref="0x7ffb36eac7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7ffb36eac980"/>
        <function-ref name="setGroup" scoped="" ref="0x7ffb36eacb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7ffb36eacca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ffb36e8a2f0" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ffb36e8a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ffb36e8a670"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ffb36e8a800"/>
        <function-ref name="getPayload" scoped="" ref="0x7ffb36e8a990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ffb36e8ab20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ffb36e8acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ffb36e90cc0" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ffb36e90cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ffb36e8a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ffb36e89020" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SimpleAccelGyroAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ffb36e89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ffb36e893a0"/>
        <function-ref name="source" scoped="" ref="0x7ffb36e89530"/>
        <function-ref name="address" scoped="" ref="0x7ffb36e896c0"/>
        <function-ref name="destination" scoped="" ref="0x7ffb36e89850"/>
        <function-ref name="setSource" scoped="" ref="0x7ffb36e899e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7ffb36e89b70"/>
        <function-ref name="type" scoped="" ref="0x7ffb36e89d00"/>
        <function-ref name="setType" scoped="" ref="0x7ffb36e88020"/>
        <function-ref name="isForMe" scoped="" ref="0x7ffb36e881b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7ffb36e88340"/>
        <function-ref name="localGroup" scoped="" ref="0x7ffb36e884d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ffb38996120" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ffb3899abc0" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7ffb38951740" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7ffb38954990" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7ffb38951020" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7ffb389542b0" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7ffb38952120" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7ffb389554d0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7ffb38955bb0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7ffb38952840" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7ffb38cdb020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7ffb38f9c3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7ffb388fe020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7ffb38900cc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7ffb38902390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ffb389495a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7ffb38947020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7ffb388fe890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7ffb388fd7b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7ffb38900560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7ffb388fd020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7ffb38902b30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7ffb38901350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7ffb38901da0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ffb389495a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7ffb38947020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ffb38901b20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ffb389495a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7ffb38947020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7ffb388f12b0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7ffb388ee8d0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7ffb388ee650" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7ffb388ed4e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ffb388ed260" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ffb388f0e80" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ffb388f05c0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7ffb388f1c60" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7ffb388f19e0" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7ffb388f83e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7ffb388f8d60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ffb388f8ae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7ffb388f7790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7ffb388f7510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7ffb388f52a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7ffb388f5020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ffb388f5990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7ffb38908810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7ffb389062a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7ffb38906020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7ffb38907020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ffb3890eaa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7ffb38907760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ffb3890b9b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7ffb38908120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ffb3890b270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ffb389090e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7ffb389099f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ffb38909770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7ffb38906cb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7ffb38906a30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7ffb388ca9f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7ffb38a2d7f0" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7ffb38a2a020" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7ffb38a2d020" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7ffb38eb5810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ffb3905b020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7ffb3905a020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7ffb3905b790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7ffb3904f270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7ffb3904fac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ffb387b2020" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ffb387b3690" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ffb387b3a10" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb387b3d40" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ffb387ae660" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb387ae060" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb387ae390" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ffb387ad790" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ffb387b1390" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb387b1110" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ffb387b08b0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb387b02d0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ffb387b0620" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7ffb387a9020" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb387b5c60" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7ffb387a8110" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb387a9e10" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ffb387a4490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb387a5e50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb387a41c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ffb387a5560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7ffb387a75e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb387a7020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb387a7350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7ffb38794d30" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ffb389ff140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ffb38794ab0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7ffb3879ea10" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ffb3879e790" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7ffb387b4e50" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7ffb387a0950" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ffb387a06d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7ffb3879b3a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ffb3879dd70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7ffb3879b110" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7ffb3879ce50" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ffb3879c870" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7ffb3879cbc0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7ffb38798810" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ffb38798590" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7ffb38796b90" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ffb387965e0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7ffb38796900" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ffb38a00d30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7ffb38799600" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ffb38799380" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7ffb387922f0" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ffb389ff140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ffb38795cf0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7ffb38792060" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ffb389ff140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7ffb38790190" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ffb389ff140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7ffb3878ead0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb3878e850" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7ffb3878ccd0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb3878ca50" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7ffb3878a020" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb3878bce0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ffb387845e0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb38784020" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb38784350" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ffb3877fbb0" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb3877f5b0" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb3877f8e0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ffb38782d20" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ffb38781900" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb38781680" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ffb38780e00" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb38780820" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ffb38780b70" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7ffb38713ab0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ffb38713830" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7ffb38711020" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ffb38712d30" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ffb38716d60" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ffb38712350" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7ffb3870d410" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
              <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb38710a80" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7ffb38710dd0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb3870d130" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="52:../../../tos/platforms/shimmer2r/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7ffb38703270" loc="62:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="59:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7ffb38703a20" loc="68:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="64:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7ffb38702270" loc="73:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="70:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7ffb387001f0" loc="84:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="80:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7ffb386ff940" loc="101:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="97:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ffb386fe190" loc="117:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="103:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7ffb38702a00" loc="78:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="75:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ffb386fed00" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="120:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7ffb386fea80" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7ffb38704a60" loc="57:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="54:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7ffb387009d0" loc="90:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="87:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7ffb386ff190" loc="95:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="92:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7ffb38695020" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb38696960" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7ffb38696ce0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7ffb38697020" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7ffb38696020" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb386978b0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7ffb38697c20" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7ffb3867ba40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ffb38678270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7ffb38676070" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7ffb3867a8e0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7ffb3868ab20" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7ffb3867f020" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7ffb3867ec20" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb3867e9a0" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7ffb3867f8a0" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7ffb386806d0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb38680450" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7ffb3867c4b0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7ffb3867e190" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7ffb386880e0" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7ffb38688a10" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7ffb38689720" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7ffb386894a0" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7ffb386875c0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ffb38687340" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7ffb386857a0" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7ffb38684400" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb38684180" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7ffb38682020" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7ffb38684c50" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ffb38550dd0" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7ffb38550800" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb38550b40" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7ffb3854aac0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7ffb3854a840" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7ffb38548930" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7ffb38548360" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb385486a0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7ffb38549740" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7ffb385472c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7ffb38546920" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb38546c60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ffb38547020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7ffb3854a070" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ffb3854c720" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7ffb3854ddb0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb3854c130" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ffb3854c480" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ffb385255b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7ffb38525330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7ffb38525df0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7ffb38524cf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7ffb38524700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7ffb38524a60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7ffb38521b50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7ffb384c9270" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7ffb384c9ba0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7ffb384c5070" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ffb384ed450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7ffb384ed870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7ffb384cd9c0" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7ffb384ce990" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7ffb384ce020" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7ffb384cd1f0" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7ffb384cb470" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7ffb384be510" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7ffb384c1cb0" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7ffb384b52a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb384b5020" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7ffb384b7780" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7ffb3848eaf0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7ffb38499790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7ffb384a6530" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ffb3851d360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7ffb3851dba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ffb384a62b0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ffb3851d360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7ffb3851dba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7ffb3849c870" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7ffb384a3a40" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ffb385182d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7ffb38518b10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ffb384a37c0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ffb385182d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7ffb38518b10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7ffb38493e70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7ffb3848f480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7ffb384a3020" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ffb3851a230"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7ffb3851a9c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7ffb384a2270" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ffb385182d0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7ffb38518b10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7ffb3849e020" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7ffb3849fd30" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7ffb3849f610" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7ffb38493740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7ffb384a5780" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ffb3851a230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7ffb3851a9c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ffb384a5500" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ffb3851a230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7ffb3851a9c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7ffb384a1420" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7ffb384925d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7ffb384a1e00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7ffb384a1b80" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7ffb3849d910" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7ffb3849c0e0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7ffb38494840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7ffb38497790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7ffb3849a7e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7ffb38493020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7ffb38498020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7ffb38492cf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7ffb3849e800" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb38526320"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7ffb3851fa10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7ffb384904c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7ffb3848e350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7ffb384a2c10" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7ffb384a2990" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7ffb3848c4d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb3848c250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7ffb384a6d10" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ffb3851d360"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7ffb3851dba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7ffb3849a020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7ffb38498770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7ffb38494020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ffb384ed450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7ffb384ed870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ffb38495cf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ffb384ed450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7ffb384ed870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7ffb384952a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7ffb38500420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7ffb38500840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ffb38495020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7ffb38500420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7ffb38500840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7ffb3848cd90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7ffb38490cb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7ffb3849d070" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7ffb3848fbe0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7ffb38497020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7ffb38499020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ffb38485410" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ffb38485410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ffb38485650" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb38485650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ffb38484020" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb38485650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ffb38483120" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ffb384848a0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ffb38483880" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7ffb3840f930" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ffb383d1a50" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ffb383d01f0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7ffb383ccb10" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ffb383cc890" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ffb383d22d0" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ffb383ce0e0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7ffb383ca490" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ffb383d0930" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ffb383d12b0" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7ffb383cd7c0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7ffb383d2a70" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ffb383d3420" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7ffb383ce860" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7ffb383cc020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7ffb383cd070" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ffb383d3b50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/platforms/shimmer/chips/msp430/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7ffb383e4780" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7ffb383f7c90" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7ffb383eb020" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ffb383ecca0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7ffb383ff390" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7ffb383e87a0" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7ffb383f0020" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7ffb383f9da0" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7ffb383f6b70" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7ffb383fad40" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7ffb383faac0" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7ffb383fb270" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7ffb383f4900" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7ffb383e9020" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7ffb383e4020" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7ffb383ec560" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7ffb383df1f0" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7ffb383dc880" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7ffb383fe270" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7ffb383f4190" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7ffb383f2a90" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7ffb383f9650" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7ffb38400190" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7ffb383edd40" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ffb383edac0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7ffb384059f0" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7ffb383e8020" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7ffb383e3020" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7ffb383de9a0" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7ffb383dc120" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7ffb383e7790" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7ffb383e3750" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7ffb383eb7b0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7ffb383e11f0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7ffb383fe990" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7ffb383ef1f0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7ffb383e2630" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7ffb383e6790" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7ffb383f1760" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7ffb383f14e0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7ffb383dd190" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7ffb383ed390" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7ffb383e7020" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7ffb38400c10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ffb384d9240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7ffb384d9660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ffb38400990" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ffb384d9240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7ffb384d9660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7ffb383f5a00" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7ffb383fca80" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ffb383fc800" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7ffb383f22a0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb383f2020" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7ffb383e19c0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7ffb383fa3b0" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7ffb383fc120" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7ffb383efbb0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7ffb383ef930" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7ffb383ffac0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7ffb383e3e70" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7ffb383e6020" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7ffb383e9790" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7ffb383f09f0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7ffb383f0770" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7ffb383f52b0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7ffb383f7530" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7ffb383dd900" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7ffb383fbbf0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ffb383fb970" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7ffb383df9b0" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7ffb383f6420" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7ffb383de1f0" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ffb38108730" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ffb38108e60" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ffb38109880" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ffb38107cf0" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ffb38108020" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ffb381075b0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ffb3810da90" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ffb38109190" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7ffb380ad020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7ffb380ad880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7ffb38078e00" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7ffb38075020" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7ffb38078570" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7ffb380776d0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7ffb38075950" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7ffb3806a020" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ffb38071090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7ffb3806bd20" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ffb38071090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7ffb3806d020" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7ffb3806db20" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ffb38071090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7ffb3806d8a0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ffb38071090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7ffb3806b470" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7ffb38071090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7ffb37f01ad0" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ffb37f01ad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7ffb37efb270" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ffb37f01ad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7ffb37efacb0" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ffb37f01ad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7ffb37efaa30" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ffb37f01ad0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7ffb39a3bc30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7ffb39a3bc30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7ffb37ef8c70" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ffb37f01ad0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7ffb37ef89f0" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7ffb37efeb20" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7ffb37efdad0" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7ffb37efbe50" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7ffb37f01ad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7ffb37efe3b0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7ffb37efd2d0" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7ffb37ed6dd0" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7ffb37ed6b50" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GyroBoard" loc="39:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
      <function command="" provided="0" name="autoZero" ref="0x7ffb37e621f0" loc="47:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="buttonPressed" ref="0x7ffb37e62950" loc="50:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledOn" ref="0x7ffb37e68cf0" loc="43:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledOff" ref="0x7ffb37e643e0" loc="44:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledToggle" ref="0x7ffb37e64ab0" loc="45:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430DmaChannel" loc="41:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
      <function command="" provided="0" name="stopTransfer" ref="0x7ffb37e757f0" loc="102:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Stop a DMA transfer in progress&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="repeatTransfer" ref="0x7ffb37e77630" loc="91:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Repeat a DMA transfer using previous settings but new pointers&#10; and transfer size.</short>
          <long>&#10; Repeat a DMA transfer using previous settings but new pointers&#10; and transfer size.  Automatically starts the transfer (sets the&#10; enable bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src_addr" ref="0x7ffb37e78c20" loc="91:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dst_addr" ref="0x7ffb37e77020" loc="91:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7ffb37e77390" loc="92:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setupTransfer" ref="0x7ffb37e7b090" loc="49:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="43:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Setup a transfer using explicit argument (most robust and simple&#10; mechanism and recommended for novice users)&#10;&#10; See MSP430DMA.h for parameter options&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e88a70"/>
              <typename><typedef-ref name="dma_transfer_mode_t" ref="0x7ffb37e86740"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e911c0"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7ffb37e8ee00"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e83600"/>
              <typename><typedef-ref name="dma_level_t" ref="0x7ffb37e82090"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e84860"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7ffb37e83350"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e84860"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7ffb37e83350"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e85700"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7ffb37e845d0"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e85700"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7ffb37e845d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="transfer_mode" ref="0x7ffb37e7ec50" loc="49:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e88a70"/>
              <typename><typedef-ref name="dma_transfer_mode_t" ref="0x7ffb37e86740"/></typename>
            </type-tag>
          </variable>
          <variable name="trigger" ref="0x7ffb37e7d060" loc="50:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e911c0"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7ffb37e8ee00"/></typename>
            </type-tag>
          </variable>
          <variable name="level" ref="0x7ffb37e7d3f0" loc="51:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e83600"/>
              <typename><typedef-ref name="dma_level_t" ref="0x7ffb37e82090"/></typename>
            </type-tag>
          </variable>
          <variable name="src_addr" ref="0x7ffb37e7d770" loc="52:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dst_addr" ref="0x7ffb37e7daf0" loc="53:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7ffb37e7de60" loc="54:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
          <variable name="src_byte" ref="0x7ffb37e7c240" loc="55:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e84860"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7ffb37e83350"/></typename>
            </type-tag>
          </variable>
          <variable name="dst_byte" ref="0x7ffb37e7c5f0" loc="56:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e84860"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7ffb37e83350"/></typename>
            </type-tag>
          </variable>
          <variable name="src_incr" ref="0x7ffb37e7c9a0" loc="57:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e85700"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7ffb37e845d0"/></typename>
            </type-tag>
          </variable>
          <variable name="dst_incr" ref="0x7ffb37e7cd50" loc="58:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e85700"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7ffb37e845d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startTransfer" ref="0x7ffb37e783e0" loc="84:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="80:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Enable the DMA module.</short>
          <long>&#10; Enable the DMA module.  Equivalent to setting the DMA enable bit.&#10; This function does not force a transfer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setupTransferRaw" ref="0x7ffb37e79900" loc="77:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="60:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Raw interface for setting up a DMA transfer.</short>
          <long>&#10; Raw interface for setting up a DMA transfer.  This function is&#10; intended to provide as much raw performance as possible but&#10; sacrifices type checking in the process.  Recommended ONLY for&#10; advanced users that have very intricate knowledge of the MSP430&#10; DMA module described in the user's guide.&#10;&#10; @param state The control register value, as specified by &#10;              dma_control_state_t in MSP430DMA.h&#10; @param trigger The trigger for the DMA transfer.  Should be one&#10;                of the options from dma_trigger_t in MSP430DMA.h&#10; @param src Pointer to the source address&#10; @param dest Pointer to the destination address&#10; @param size Size of the DMA transfer&#10;&#10; See MSP430DMA.h for parameter options&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="state" ref="0x7ffb37e7b8b0" loc="77:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
          <variable name="trigger" ref="0x7ffb37e7bc20" loc="77:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
          <variable name="src" ref="0x7ffb37e79020" loc="78:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7ffb37e79350" loc="78:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7ffb37e79640" loc="78:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="transferDone" ref="0x7ffb37e742a0" loc="107:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="104:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Notification that the transfer has completed&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="success" ref="0x7ffb37e74020" loc="107:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="softwareTrigger" ref="0x7ffb37e75020" loc="97:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="94:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Trigger a DMA transfer using software&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ffb37e5dcd0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ffb37e5dcd0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ffb37e5a020" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb37e5a020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7ffb37e56c50" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb37e5a020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ffb37e59ba0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7ffb37e562b0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb37e5a020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb37e5a020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ffb37e57bd0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb37e5a020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7ffb37e56020" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb37e5a020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7ffb37e573b0" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7ffb37e55480" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb37e5a020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ffb37e5ab80" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb37e5a020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ffb37e5a900" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb37e5a020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ffb37e593e0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ffb37e525c0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ffb37e525c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7ffb37e48420" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ffb37e4dd60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7ffb37e4bb10" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ffb37e4b540" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ffb37e4b880" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7ffb37e4cd60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7ffb37e47460" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7ffb37e48bb0" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7ffb37e4c570" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7ffb37e4f2a0" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ffb37e4f020" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7ffb37e4aaa0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ffb37e4a4d0" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ffb37e4a810" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7ffb37e4fd60" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ffb37e4fae0" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ffb37e4d650" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7ffb37e60070" loc="52:../../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ffb37e60070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7ffb37e5f190" loc="67:../../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7ffb37e60940" loc="59:../../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7ffb37e5fba0" loc="74:../../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ffb37e60070"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7ffb37e5f920" loc="74:../../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ffb37e60070"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mma_Accel" loc="40:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
      <function command="" provided="0" name="setSensitivity" ref="0x7ffb37e67850" loc="54:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
        <documentation loc="49:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
          <short>&#10; Sets the sensitivity (gain) of the sensors.</short>
          <long>&#10; Sets the sensitivity (gain) of the sensors.&#10;&#10; @param sensitivity the sensitivity (gain)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Mma_Accel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sensitivity" ref="0x7ffb37e675d0" loc="54:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wake" ref="0x7ffb37e6ada0" loc="47:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
        <documentation loc="42:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
          <short>&#10; Turns the accelerometer on or off.</short>
          <long>&#10; Turns the accelerometer on or off.&#10;&#10; @param wakeup if &#60;code>TRUE&#60;/code> turns it on; if &#60;code>FALSE&#60;/code> turns it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Mma_Accel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="wakeup" ref="0x7ffb37e6ab20" loc="47:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="shimmerAnalogSetup" loc="43:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
      <function command="" provided="0" name="addAccelInputs" ref="0x7ffb37e72020" loc="46:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerConversion" ref="0x7ffb37e6dd30" loc="79:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNumberOfChannels" ref="0x7ffb37e6bc30" loc="83:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addECGInputs" ref="0x7ffb37e72e50" loc="52:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addAnExInput" ref="0x7ffb37e6fd40" loc="64:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7ffb37e6fac0" loc="64:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7ffb37e6ebc0" loc="70:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addEMGInput" ref="0x7ffb37e6f3b0" loc="61:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addStrainGaugeInputs" ref="0x7ffb37e6e4f0" loc="67:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addGSRInput" ref="0x7ffb37e71c90" loc="58:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="finishADCSetup" ref="0x7ffb37e6d610" loc="77:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7ffb37e6d390" loc="77:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addUVInputs" ref="0x7ffb37e71590" loc="55:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addGyroInputs" ref="0x7ffb37e72740" loc="49:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7ffb37e6b4b0" loc="81:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430DmaControl" loc="40:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setFlags" ref="0x7ffb37df1630" loc="42:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
        <interfacedef-ref qname="Msp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable_nmi" ref="0x7ffb37df2be0" loc="42:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
          <variable name="round_robin" ref="0x7ffb37df1020" loc="42:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
          <variable name="on_fetch" ref="0x7ffb37df1390" loc="43:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7ffb37df24d0" loc="41:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
        <interfacedef-ref qname="Msp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <function command="" provided="0" name="getCtl0" ref="0x7ffb37dd48d0" loc="63:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb37dd90f0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7ffb37dd9b30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7ffb37dd1b20" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ffb37dea520"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7ffb37dea9f0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7ffb37dd18a0" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7ffb37dcd190" loc="106:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7ffb37dcc390" loc="118:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7ffb37dcdb90" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7ffb37dcd910" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7ffb37dd2120" loc="68:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb37dd61d0"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7ffb37dd6ab0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7ffb37dd1020" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ffb37dea520"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7ffb37dea9f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7ffb37dd2890" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7ffb37dd2c50" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ffb37dea520"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7ffb37dea9f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7ffb37dcb420" loc="128:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7ffb37dd5600" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb37dd90f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7ffb37dd9b30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7ffb37dd5380" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb37dd90f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7ffb37dd9b30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7ffb37dd0630" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7ffb37dd03b0" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7ffb37dcf110" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7ffb37dd0e30" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7ffb37dcf980" loc="101:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7ffb37dccb50" loc="123:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7ffb37dcbbc0" loc="133:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7ffb37dd40b0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb37dd61d0"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7ffb37dd6ab0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7ffb37dd5de0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ffb37dd61d0"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7ffb37dd6ab0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430DmaChannel" loc="38:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
      <documentation loc="33:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableDMA" ref="0x7ffb37d2ce50" loc="61:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTrigger" ref="0x7ffb37d385c0" loc="40:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDstDecrement" ref="0x7ffb37d317c0" loc="51:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLevelSensitive" ref="0x7ffb37d2c020" loc="58:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcIncrement" ref="0x7ffb37d328e0" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getState" ref="0x7ffb37d22ab0" loc="77:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_state_s" ref="0x7ffb37e82420"/>
            <typename><typedef-ref name="dma_channel_state_t" ref="0x7ffb37e7e2e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordToWord" ref="0x7ffb37d307b0" loc="53:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTrigger" ref="0x7ffb37d40e50" loc="39:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e911c0"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7ffb37e8ee00"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="trigger" ref="0x7ffb37d40bd0" loc="39:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ffb37e911c0"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7ffb37e8ee00"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestination" ref="0x7ffb37d219b0" loc="79:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatedBlockMode" ref="0x7ffb37d35b10" loc="45:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="aborted" ref="0x7ffb37d2ae40" loc="68:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setByteToByte" ref="0x7ffb37d2d020" loc="56:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7ffb37d2b5e0" loc="63:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterrupt" ref="0x7ffb37d2bd40" loc="64:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="interruptPending" ref="0x7ffb37d2a510" loc="66:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStateRaw" ref="0x7ffb37d222e0" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="state" ref="0x7ffb37d23270" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
          <variable name="trigger" ref="0x7ffb37d235e0" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
          <variable name="src" ref="0x7ffb37d23900" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7ffb37d23c30" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7ffb37d22020" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTrigger" ref="0x7ffb37d1f990" loc="81:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_trigger_s" ref="0x7ffb37e8d200"/>
            <typename><typedef-ref name="dma_channel_trigger_t" ref="0x7ffb37e8dd50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDstIncrement" ref="0x7ffb37d30070" loc="52:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7ffb37d1e0e0" loc="83:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSingleMode" ref="0x7ffb37d38d00" loc="41:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerDMA" ref="0x7ffb37d285b0" loc="69:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setByteToWord" ref="0x7ffb37d2f020" loc="54:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrc" ref="0x7ffb37d27020" loc="71:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="saddr" ref="0x7ffb37d28c80" loc="71:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatedSingleMode" ref="0x7ffb37d35390" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcNoIncrement" ref="0x7ffb37d34a10" loc="47:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setBurstMode" ref="0x7ffb37d36bd0" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSource" ref="0x7ffb37d21230" loc="78:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0x7ffb37d1f190" loc="80:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcDecrement" ref="0x7ffb37d32190" loc="48:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="transferDone" ref="0x7ffb37d1ea90" loc="85:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="success" ref="0x7ffb37d1e810" loc="85:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableDMA" ref="0x7ffb37d2c730" loc="60:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatedBurstMode" ref="0x7ffb37d342b0" loc="46:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setBlockMode" ref="0x7ffb37d364a0" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSize" ref="0x7ffb37d26350" loc="73:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sz" ref="0x7ffb37d260d0" loc="73:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setState" ref="0x7ffb37d24af0" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_state_s" ref="0x7ffb37e82420"/>
              <typename><typedef-ref name="dma_channel_state_t" ref="0x7ffb37e7e2e0"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_trigger_s" ref="0x7ffb37e8d200"/>
              <typename><typedef-ref name="dma_channel_trigger_t" ref="0x7ffb37e8dd50"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7ffb37d26a90" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_state_s" ref="0x7ffb37e82420"/>
              <typename><typedef-ref name="dma_channel_state_t" ref="0x7ffb37e7e2e0"/></typename>
            </type-tag>
          </variable>
          <variable name="t" ref="0x7ffb37d26e40" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_trigger_s" ref="0x7ffb37e8d200"/>
              <typename><typedef-ref name="dma_channel_trigger_t" ref="0x7ffb37e8dd50"/></typename>
            </type-tag>
          </variable>
          <variable name="src" ref="0x7ffb37d241b0" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7ffb37d244e0" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7ffb37d24830" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDstNoIncrement" ref="0x7ffb37d31070" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdgeSensitive" ref="0x7ffb37d2d780" loc="57:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordToByte" ref="0x7ffb37d2f760" loc="55:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDst" ref="0x7ffb37d27970" loc="72:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="daddr" ref="0x7ffb37d276f0" loc="72:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430DmaControl" loc="40:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearENNMI" ref="0x7ffb37d3c1f0" loc="47:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoundRobin" ref="0x7ffb37d3fc20" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOnFetch" ref="0x7ffb37d3f4e0" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setENNMI" ref="0x7ffb37d3eaa0" loc="46:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getState" ref="0x7ffb37d3b350" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_state_s" ref="0x7ffb37e8bc30"/>
            <typename><typedef-ref name="dma_state_t" ref="0x7ffb37e8ae40"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7ffb37d3ba40" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOnFetch" ref="0x7ffb37d42d70" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setState" ref="0x7ffb37d3cb60" loc="48:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_state_s" ref="0x7ffb37e8bc30"/>
              <typename><typedef-ref name="dma_state_t" ref="0x7ffb37e8ae40"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7ffb37d3c8e0" loc="48:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_state_s" ref="0x7ffb37e8bc30"/>
              <typename><typedef-ref name="dma_state_t" ref="0x7ffb37e8ae40"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearRoundRobin" ref="0x7ffb37d3e390" loc="45:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430DmaInterrupt" loc="38:../../../tos/chips/msp430/dma/HplMsp430DmaInterrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/dma/HplMsp430DmaInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7ffb37d0a3b0" loc="39:../../../tos/chips/msp430/dma/HplMsp430DmaInterrupt.nc">
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7ffb37bad270" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7ffb37baea20" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7ffb37bae2b0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7ffb37bb29b0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7ffb37ba8870" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ffb37ba5390" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7ffb37ba80e0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7ffb37ba7b20" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7ffb37ba78a0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7ffb37bab900" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7ffb37ba70e0" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ffb37a50350" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ffb37a50350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ffb37a50c70" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7ffb37855320" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ffb37855320"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ffb37855560" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb37855560"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7ffb37851510" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb37855560"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb37851290" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7ffb3784f6c0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb3784f440" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7ffb378522a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb37852020" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ffb3784e9c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb37855560"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb3784e3d0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7ffb3784e730" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ffb37855560"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7ffb37841b50" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb37841530" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7ffb378418c0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7ffb3783fd00" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb3783fa80" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7ffb37842c60" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7ffb378422a0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7ffb37842020" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7ffb37819980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb37819700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7ffb3781cc30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb3781c9b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7ffb3781d350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7ffb3781d0d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7ffb3781f800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7ffb3781f580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7ffb3781dd80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7ffb3781db00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7ffb3781ab10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb3781a890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7ffb3780c2b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7ffb37817c50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ffb3780c020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7ffb37828810" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ffb37828230" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7ffb37828580" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7ffb37824e20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ffb37824820" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7ffb37824b90" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7ffb37827350" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7ffb39a36110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ffb378270d0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7ffb37825d30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ffb37825ab0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7ffb378299c0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ffb37829740" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7ffb37827e80" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ffb37827c00" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7ffb37810b30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb378108b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7ffb37815bc0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb378155a0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7ffb37815930" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7ffb37814ad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb37814850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7ffb37814020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb378139c0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7ffb37813d50" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7ffb3780fb70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb3780f8f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7ffb37821780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb37821500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420RxState" loc="41:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
      <documentation loc="33:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <short>&#10; strictly for manipulating the receiver prior to radio start-up&#10; so that we can run without reception and/or cca under certain circumstances&#10;&#10; </short>
        <long>&#10; strictly for manipulating the receiver prior to radio start-up&#10; so that we can run without reception and/or cca under certain circumstances&#10;&#10; @author Steve Ayer&#10; @date   February, 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="enableRx" ref="0x7ffb377f7680" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <interfacedef-ref qname="CC2420RxState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7ffb377f7400" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x7ffb377f6030" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <interfacedef-ref qname="CC2420RxState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7ffb377f7d80" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ffb377e6ce0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ffb377e6720" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7ffb377e6a50" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ffb377e4030" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7ffb377e1930" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7ffb377e2ab0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7ffb377e1360" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb377e1690" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ffb377e22b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ffb377e4bc0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ffb377e2020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7ffb377e57c0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7ffb377e5540" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7ffb377deb50" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7ffb377de350" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7ffb377d7020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb377d8c90" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7ffb377d8490" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7ffb389ebdf0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7ffb389e97d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb377d8190" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7ffb377d5360" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7ffb389e73e0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7ffb389e6c90"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb377d5060" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7ffb377eca30" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7ffb377e9b20" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7ffb377e9350" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7ffb377ed190" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7ffb377ec1f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7ffb377eb2d0" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7ffb377ebaf0" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7ffb377ed9f0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7ffb377d0a70" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7ffb377d2020" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7ffb377d02a0" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7ffb377d0020" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7ffb377d2790" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7ffb377dad20" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7ffb377daaa0" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7ffb377d3800" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7ffb377d3580" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7ffb3776f9b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7ffb3776f3d0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7ffb3776f720" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7ffb377703b0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7ffb37771a50" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7ffb377713e0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7ffb377717c0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7ffb37778d70" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ffb37778af0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7ffb37770c30" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7ffb37774a00" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7ffb37774780" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7ffb37775020" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7ffb37776c40" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7ffb3776ec10" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7ffb37773b90" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7ffb37773910" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7ffb3776e3e0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7ffb377757a0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7ffb3783c020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7ffb3783c780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7ffb37774020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7ffb37778350" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7ffb37776520" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7ffb377731f0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7ffb3776b920" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ffb3776b920"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7ffb37768270" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7ffb37767020" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ffb3776b920"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7ffb377689f0" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7ffb37768d10" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ffb3776b920"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ffb37747520" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ffb389ec020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb377472a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ffb37746030" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ffb389ec020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb37747d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7ffb3775b2d0" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7ffb3783c020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7ffb3783c780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7ffb3774f0e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7ffb3774e070" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7ffb3774f8c0" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ffb389ff140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7ffb37751860" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ffb389ff140"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7ffb37751280" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ffb389ff140"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7ffb377515d0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ffb389ff520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7ffb37740710" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ffb389ec020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ffb3774c840" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ffb389ec020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7ffb377539b0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7ffb3774c250" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ffb3774c5a0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ffb37749020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ffb389ec020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7ffb3774b150" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7ffb3774b9c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ffb3774bd10" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7ffb37636ad0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7ffb37635c90" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7ffb376354e0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ffb37635260" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7ffb37636270" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7ffb375d5a40" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7ffb375d22b0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7ffb375d2af0" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7ffb375aa6b0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb375aa0d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ffb375aa420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7ffb375a59a0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb375a5060" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ffb375a53b0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ffb375a5700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ffb375a62b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ffb389ec020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb375a8c10" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ffb375a6020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7ffb375ab2b0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ffb389ec020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb375adbf0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ffb375ab020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7ffb375a9dd0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb375a9490" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ffb375a97e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ffb375a9b30" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ffb3758aa40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7ffb3758a0d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7ffb3758a460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb3758a7a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ffb37586020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7ffb375892a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7ffb37589630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ffb37589970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ffb39a35520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ffb37589ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7ffb3758c8f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7ffb3758c670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7ffb374f3120" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7ffb38500420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7ffb38500840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7ffb374fbd60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb374fbae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7ffb374f62a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb374f6020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7ffb374f7610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ffb374f6d30" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ffb374f6ab0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7ffb3747fb80" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ffb3747b420" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7ffb373bc2b0" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7ffb372ab580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7ffb3727c9e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7ffb3727c020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7ffb3727c750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7ffb3727e7f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7ffb3727e020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ffb37281d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ffb39a35920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7ffb372922a0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ffb39a35160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb37292020" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7ffb372932a0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ffb3905f090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb37293020" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ffb3728f2a0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb3728f020" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ffb372912a0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ffb37291020" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:124" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ffb389a30c0"/>
                <typename><typedef-ref name="message_t" ref="0x7ffb389a26f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7ffb3706e5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7ffb3706e5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7ffb3706a2a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ffb39056c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7ffb3706e5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7ffb3706a020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7ffb3706e5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
