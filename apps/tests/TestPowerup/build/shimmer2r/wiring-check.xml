<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="57:PowerupAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd4874c4510"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd4874c1830"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd4874c1830"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd4872f9590"/></to>
    </wire>
    <wire loc="60:PowerupAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd4872dd9a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd48748e8b0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd48748e8b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd4872d62a0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd4872f9c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd487b203a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd487b203a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd4874f8c30"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd4872f46c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4874c2cb0"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd4874c2cb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4874beb00"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd4872f4dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fd4874c3cd0"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fd4874ba230"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fd4874bc900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fd4874bc900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd48748d840"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fd4874ba910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4874bd8a0"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fd4874b9020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4872aec40"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd48748d840"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4874757e0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd487484de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd487473020"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd4877a14c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd487472360"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fd48742f5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd48736d6d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fd48741d020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd487365b30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fd487426700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd487372160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fd48740aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd48734ccb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fd48742daa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd487373480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fd487411020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd48734c020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fd487407a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd487334cb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fd4874185a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd487345220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fd487430b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd4873c29d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fd48740da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd48735b2f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fd4874133e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd48735c610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fd48741c5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd48735d220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fd487425700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd48736b7a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fd487409a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd4873432f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fd48741bbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd4873556d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fd48742c890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd48736cac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fd487440060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4873d0540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fd487411da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd487344610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fd4874370c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd487374020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fd487417a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd48733e6d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fd4874206d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd48737ba90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fd48740ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd4873537a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fd487429cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd48737cde0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fd4874121f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd487354ac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fd487408a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd48733c7a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fd4874190c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd48734eb30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fd48741f6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4873c93e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fd487410b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd48733dac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fd48740ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd487363cb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fd48740fa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd487334020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fd487414570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd487363020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fd487415020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd487337b30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fd4873ce450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd4873cfd80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd4873ceaa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fd48732fa90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd4873cd120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fd48732c260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd48737a930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4873d0540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd487377020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd4873cfd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd487371020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4873d0540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd4873707a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd4873cfd80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd48736a610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4873d0540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd487369c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd4873cfd80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fd4873c72f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd4873c8bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd4873c7940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fd48732c9f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd4873c6020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fd48732b240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd487362b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4873c93e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd4873602f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd4873c8bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd48735a160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4873c93e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd4873597a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd4873c8bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd487352610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4873c93e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd487351c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd4873c8bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd48734bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4873c93e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd4873492f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd4873c8bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd487342160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4873c93e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd4873417a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd4873c8bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd48733b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4873c93e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd48733ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd4873c8bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd487333b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd4873c93e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd4873312f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd4873c8bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fd487b8f410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd4874f7b70"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fd4874f02c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fd487b123b0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd4872aec40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd4872d9c40"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd4872ce910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fd4872b1380"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd4872b1380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd487095020"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd4872d3b10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fd4872b06a0"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd4872b06a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd487081b90"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd4872d2e30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fd4872af9c0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd4872af9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd48707c710"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd4870842f0"/></from>
      <to><interface-ref name="Port40" scoped="" ref="0x7fd48726e020"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fd48726e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48716ba60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd487080de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fd487269200"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fd487269200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487162e00"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd48707a930"/></from>
      <to><interface-ref name="Port43" scoped="" ref="0x7fd487267200"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fd487267200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48715d740"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fd487296020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871cb100"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fd487282020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48719bd10"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fd487238560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48718dd10"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fd487214570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487101100"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fd487236580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487188740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fd48727e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487191100"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fd487255200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487132740"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fd487245200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48710cd10"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fd487230580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48717fd10"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fd487220570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48711e100"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fd48720b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4870fdd10"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fd487290020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871bc100"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fd48722e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48717a740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fd48728c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871b3740"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fd487278020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487183100"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fd487263200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487153d10"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fd48724f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487123740"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fd48723f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4870fdd10"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fd48729a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871d5d10"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fd487286020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871a5860"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fd487272020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487174100"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fd48723a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48718dd10"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fd48721a570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487110100"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fd48720e570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4870fdd10"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fd487226580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487137d10"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fd487259200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48713b100"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fd487249200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487115740"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fd487218570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48710cd10"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fd48722c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487145d10"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fd487294020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871c7d10"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fd487280020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487196740"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fd48724d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48711e100"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fd48727c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48718dd10"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fd487253200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48712c100"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fd487243200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487106740"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fd487228580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48713b100"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fd4872a9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871de6d0"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fd48728a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871ae100"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fd487276020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48717fd10"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fd487261200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48714e740"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fd487224580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487174100"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fd48721e570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48711ad10"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fd487212570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4870fdd10"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fd48725d200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487145d10"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fd487222580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487170d10"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fd487298020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871d0740"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fd487284020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871a0270"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fd487270020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487170d10"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fd48722a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487140740"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fd487216570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487106740"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fd48726b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487166460"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fd487257200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487137d10"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fd487247200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487110100"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fd487292020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871c1740"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fd48724b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48711ad10"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fd48728e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871b8d10"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fd48727a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487188740"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fd487265200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487158100"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fd487251200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487128d10"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fd487241200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487101100"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fd48729d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871d9100"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fd487288020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd4871aad10"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fd487274020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd48717a740"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fd48725f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487149100"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fd487232560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487183100"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fd48721c570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487115740"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fd487234580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487183100"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fd48725b200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487140740"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fd487210570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487101100"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fd487209580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487123740"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fd48723c1f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd487191100"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="38:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/shimmer2r/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="PowerupC" loc="45:PowerupC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="46:../../../tos/platforms/shimmer2r/LedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="45:../../../tos/platforms/shimmer2r/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/platforms/shimmer2r/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="41:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fd487402890" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fd487402c30" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fd487401020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fd4874013a0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fd487401720" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fd487401a90" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fd487401e20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fd487400200" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fd4874005d0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fd4873c4e70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fd4873c1270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fd4872049f0" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fd487204da0" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fd4872031a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fd487203550" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fd4872038c0" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fd4874c3cd0" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd4874c3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4874c20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd4874c1830" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fd4874c1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd4874c1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd4874c2cb0" loc="40:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd4874c2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4874be0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fd4874ba910" loc="6:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fd4874ba910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4874bac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd4874beb00" loc="4:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd4874beb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4874bee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fd4874ba230" loc="5:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fd4874ba230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4874ba5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fd4874b9020" loc="7:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fd4874b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4874b93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd4874bd8a0" loc="39:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd4874bd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4874bdc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fd4874bc900" loc="39:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fd4874bc900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4874bcc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fd487484de0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd487484de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fd487489c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fd487489310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fd4874894a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fd487489630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fd487489180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fd4874897c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fd487489950"/>
        <function-ref name="initClocks" scoped="" ref="0x7fd487489ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd48748d840" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd48748d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd48748dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fd487473020" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd487473020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fd487472020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fd487473530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fd4874736c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fd487473850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fd4874733a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fd4874739e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fd487473b70"/>
        <function-ref name="initClocks" scoped="" ref="0x7fd487473d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fd487472360" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd487472360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd4874726e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd4874757e0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd4874757e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd487475b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fd48742f5a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fd48742f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd48742f920"/>
        <function-ref name="getControl" scoped="" ref="0x7fd48742fab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48742fc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd48742fdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd48742e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd48742e1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd48742e340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd48742e4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd48742e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fd48741d020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fd48741d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd48741d3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd48741d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48741d6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd48741d850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd48741d9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd48741db70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd48741dd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd48741c020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd48741c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fd487426700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fd487426700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487426a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd487426c10"/>
        <function-ref name="captured" scoped="" ref="0x7fd487426da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487425020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4874251b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd487425340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fd48740aa20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fd48740aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48740ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd487409020"/>
        <function-ref name="captured" scoped="" ref="0x7fd4874091b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487409340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4874094d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd487409660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fd48742daa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fd48742daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48742de20"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd48742c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd48742c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd48742c340"/>
        <function-ref name="fired" scoped="" ref="0x7fd48742c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fd487411020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fd487411020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd4874113a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd487411530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd4874116c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd487411850"/>
        <function-ref name="fired" scoped="" ref="0x7fd4874119e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fd487407a20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fd487407a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487407da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd487406020"/>
        <function-ref name="captured" scoped="" ref="0x7fd4874061b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487406340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4874064d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd487406660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fd4874185a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fd4874185a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd487418920"/>
        <function-ref name="getControl" scoped="" ref="0x7fd487418ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd487418c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd487418dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd487417020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd4874171b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd487417340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd4874174d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd487417660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fd487430b10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fd487430b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd487438020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd4874381b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd487438340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd4874384d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd487438660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd4874387f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd487438980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd487438b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd487438ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fd48740da20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fd48740da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48740dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd48740b020"/>
        <function-ref name="captured" scoped="" ref="0x7fd48740b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd48740b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd48740b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd48740b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fd4874133e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fd4874133e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487413760"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd4874138f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd487413a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd487413c10"/>
        <function-ref name="fired" scoped="" ref="0x7fd487413da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fd48741c5a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fd48741c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd48741ca20"/>
        <function-ref name="getControl" scoped="" ref="0x7fd48741cbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48741cd40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd48741b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd48741b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd48741b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd48741b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd48741b660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd48741b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fd487425700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fd487425700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487425a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd487425c10"/>
        <function-ref name="captured" scoped="" ref="0x7fd487425da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd48741f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd48741f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd48741f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fd487409a20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fd487409a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487409da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd487408020"/>
        <function-ref name="captured" scoped="" ref="0x7fd4874081b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487408340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4874084d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd487408660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fd48741bbe0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fd48741bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd48741a020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd48741a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48741a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd48741a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd48741a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd48741a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd48741a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd48741ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd48741aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fd48742c890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fd48742c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48742cc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd48742cda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd487427020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd4874271b0"/>
        <function-ref name="fired" scoped="" ref="0x7fd487427340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fd487440060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fd487440060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd4874403e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd487440570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd487440700"/>
        <function-ref name="get" scoped="" ref="0x7fd487440890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487440a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487440bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd487440d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd48743f020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd48743f1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd48743f340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd48743f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fd487411da0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fd487411da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487410180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd487410310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd4874104a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd487410630"/>
        <function-ref name="fired" scoped="" ref="0x7fd4874107c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fd4874370c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fd4874370c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd487437440"/>
        <function-ref name="getControl" scoped="" ref="0x7fd4874375d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd487437760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd4874378f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd487437a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487437c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd487437da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd48742f020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd48742f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fd487417a50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fd487417a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd487417dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd487416020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd4874161b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd487416340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd4874164d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487416660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd4874167f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd487416980"/>
        <function-ref name="setControl" scoped="" ref="0x7fd487416b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fd4874206d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fd4874206d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487420a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd487420be0"/>
        <function-ref name="captured" scoped="" ref="0x7fd487420d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487426020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4874261b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd487426340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fd48740ba20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fd48740ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48740bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd48740a020"/>
        <function-ref name="captured" scoped="" ref="0x7fd48740a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd48740a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd48740a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd48740a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fd487429cf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fd487429cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48742d0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd48742d230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd48742d3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd48742d550"/>
        <function-ref name="fired" scoped="" ref="0x7fd48742d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fd4874121f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fd4874121f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487412570"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd487412700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd487412890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd487412a20"/>
        <function-ref name="fired" scoped="" ref="0x7fd487412bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fd487408a20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fd487408a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487408da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd487407020"/>
        <function-ref name="captured" scoped="" ref="0x7fd4874071b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487407340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4874074d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd487407660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fd4874190c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fd4874190c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd487419440"/>
        <function-ref name="getControl" scoped="" ref="0x7fd4874195d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd487419760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd4874198f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd487419a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487419c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd487419da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd487418020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd4874181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fd48741f6c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fd48741f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd48741fa40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd48741fbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48741fd60"/>
        <function-ref name="get" scoped="" ref="0x7fd48741e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd48741e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd48741e340"/>
        <function-ref name="getMode" scoped="" ref="0x7fd48741e4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd48741e660"/>
        <function-ref name="overflow" scoped="" ref="0x7fd48741e7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd48741e980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd48741eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fd487410b80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fd487410b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48740f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd48740f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd48740f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd48740f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fd48740f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fd48740ea20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fd48740ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48740eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd48740d020"/>
        <function-ref name="captured" scoped="" ref="0x7fd48740d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd48740d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd48740d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd48740d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fd48740fa20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fd48740fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48740e020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd48740e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd48740e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd48740e4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fd48740e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fd487414570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fd487414570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd4874148f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd487414a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd487414c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd487414da0"/>
        <function-ref name="fired" scoped="" ref="0x7fd487413020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fd487415020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fd487415020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd4874153a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd487415530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd4874156c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd487415850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd4874159e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487415b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd487415d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd487414020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd4874141b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fd4873ceaa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd4873ceaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd4873cee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fd4873ce450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fd4873ce450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd4873ce7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fd4873cd120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd4873cd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd4873cd4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fd4873cfd80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd4873cfd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd4873ce180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd4873d0540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd4873d0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd4873d08c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd4873d0a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd4873d0be0"/>
        <function-ref name="get" scoped="" ref="0x7fd4873d0d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd4873cf020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd4873cf1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd4873cf340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4873cf4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd4873cf660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd4873cf7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd4873cf980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fd4873c7940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd4873c7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd4873c7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fd4873c72f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fd4873c72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd4873c7670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fd4873c6020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd4873c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd4873c63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fd4873c8bf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd4873c8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd4873c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd4873c93e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd4873c93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd4873c9760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd4873c98f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd4873c9a80"/>
        <function-ref name="get" scoped="" ref="0x7fd4873c9c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd4873c9da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd4873c8020"/>
        <function-ref name="getMode" scoped="" ref="0x7fd4873c81b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4873c8340"/>
        <function-ref name="overflow" scoped="" ref="0x7fd4873c84d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd4873c8660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd4873c87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd48737ba90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd48737ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48737be10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd48737a020"/>
        <function-ref name="captured" scoped="" ref="0x7fd48737a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd48737a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd48737a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd48737a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd4873c29d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd4873c29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd4873c2d50"/>
        <function-ref name="getControl" scoped="" ref="0x7fd48737c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48737c1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd48737c340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd48737c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd48737c660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd48737c7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd48737c980"/>
        <function-ref name="setControl" scoped="" ref="0x7fd48737cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd487377020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd487377020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd4873773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd48737cde0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd48737cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48737b180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd48737b310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd48737b4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd48737b630"/>
        <function-ref name="fired" scoped="" ref="0x7fd48737b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd48737a930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd48737a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd48737acb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd48737ae40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd487378020"/>
        <function-ref name="get" scoped="" ref="0x7fd4873781b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487378340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd4873784d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd487378660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4873787f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd487378980"/>
        <function-ref name="setMode" scoped="" ref="0x7fd487378b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd487378ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd487372160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd487372160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd4873724e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd487372670"/>
        <function-ref name="captured" scoped="" ref="0x7fd487372800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487372990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd487372b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd487372cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd487374020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd487374020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd4873743a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd487374530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd4873746c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd487374850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd4873749e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487374b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd487374d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd487373020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd4873731b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd4873707a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd4873707a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd487370b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd487373480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd487373480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487373800"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd487373990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd487373b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd487373cb0"/>
        <function-ref name="fired" scoped="" ref="0x7fd487373e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd487371020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd487371020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd4873713a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd487371530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd4873716c0"/>
        <function-ref name="get" scoped="" ref="0x7fd487371850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd4873719e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487371b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fd487371d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd487370020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd4873701b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd487370340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd4873704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd48736b7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd48736b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48736bb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd48736bcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fd48736be40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd48736a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd48736a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd48736a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd48736d6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd48736d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd48736da50"/>
        <function-ref name="getControl" scoped="" ref="0x7fd48736dbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48736dd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd48736c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd48736c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd48736c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd48736c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd48736c660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd48736c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd487369c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd487369c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd487367020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd48736cac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd48736cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48736ce40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd48736b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd48736b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd48736b340"/>
        <function-ref name="fired" scoped="" ref="0x7fd48736b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd48736a610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd48736a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd48736a990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd48736ab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48736acb0"/>
        <function-ref name="get" scoped="" ref="0x7fd48736ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487369020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd4873691b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd487369340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4873694d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd487369660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd4873697f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd487369980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd487363cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd487363cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd4873620a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd487362230"/>
        <function-ref name="captured" scoped="" ref="0x7fd4873623c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487362550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4873626e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd487362870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd487365b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd487365b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd487364020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd4873641b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd487364340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd4873644d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd487364660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd4873647f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd487364980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd487364b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd487364ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd4873602f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd4873602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd487360670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd487363020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd487363020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd4873633a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd487363530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd4873636c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd487363850"/>
        <function-ref name="fired" scoped="" ref="0x7fd4873639e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd487362b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd487362b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd487361020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd4873611b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd487361340"/>
        <function-ref name="get" scoped="" ref="0x7fd4873614d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487361660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd4873617f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd487361980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd487361b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fd487361ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd487361e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd487360020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd48735b2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd48735b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48735b670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd48735b800"/>
        <function-ref name="captured" scoped="" ref="0x7fd48735b990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd48735bb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd48735bcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd48735be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd48735d220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd48735d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd48735d5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd48735d730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48735d8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd48735da50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd48735dbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd48735dd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd48735c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd48735c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd48735c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd4873597a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd4873597a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd487359b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd48735c610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd48735c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48735c990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd48735cb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd48735ccb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd48735ce40"/>
        <function-ref name="fired" scoped="" ref="0x7fd48735b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd48735a160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd48735a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd48735a4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd48735a670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48735a800"/>
        <function-ref name="get" scoped="" ref="0x7fd48735a990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd48735ab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd48735acb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd48735ae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd487359020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd4873591b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd487359340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd4873594d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd4873537a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd4873537a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487353b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd487353cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fd487353e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487352020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4873521b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd487352340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd4873556d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd4873556d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd487355a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fd487355be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd487355d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd487354020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd4873541b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487354340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd4873544d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd487354660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd4873547f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd487351c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd487351c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd487350020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd487354ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd487354ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487354e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd487353020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd4873531b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd487353340"/>
        <function-ref name="fired" scoped="" ref="0x7fd4873534d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd487352610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd487352610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd487352990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd487352b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd487352cb0"/>
        <function-ref name="get" scoped="" ref="0x7fd487352e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487351020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd4873511b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd487351340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4873514d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd487351660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd4873517f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd487351980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd48734ccb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd48734ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48734b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd48734b230"/>
        <function-ref name="captured" scoped="" ref="0x7fd48734b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd48734b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd48734b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd48734b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd48734eb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd48734eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd48734d020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd48734d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48734d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd48734d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd48734d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd48734d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd48734d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd48734db10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd48734dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd4873492f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd4873492f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd487349670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd48734c020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd48734c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48734c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd48734c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd48734c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd48734c850"/>
        <function-ref name="fired" scoped="" ref="0x7fd48734c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd48734bb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd48734bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd48734a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd48734a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48734a340"/>
        <function-ref name="get" scoped="" ref="0x7fd48734a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd48734a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd48734a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd48734a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd48734ab10"/>
        <function-ref name="overflow" scoped="" ref="0x7fd48734aca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd48734ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd487349020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd4873432f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd4873432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487343670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd487343800"/>
        <function-ref name="captured" scoped="" ref="0x7fd487343990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487343b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd487343cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd487343e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd487345220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd487345220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd4873455a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd487345730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd4873458c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd487345a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd487345be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487345d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd487344020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd4873441b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd487344340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd4873417a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd4873417a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd487341b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd487344610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd487344610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd487344990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd487344b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd487344cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd487344e40"/>
        <function-ref name="fired" scoped="" ref="0x7fd487343020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd487342160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd487342160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd4873424e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd487342670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd487342800"/>
        <function-ref name="get" scoped="" ref="0x7fd487342990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487342b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487342cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd487342e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd487341020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd4873411b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd487341340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd4873414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd48733c7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd48733c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48733cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd48733ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7fd48733ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd48733b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd48733b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd48733b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd48733e6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd48733e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd48733ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7fd48733ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48733ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd48733d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd48733d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd48733d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd48733d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd48733d660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd48733d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd48733ac50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd48733ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd487339020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd48733dac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd48733dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd48733de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd48733c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd48733c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd48733c340"/>
        <function-ref name="fired" scoped="" ref="0x7fd48733c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd48733b610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd48733b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd48733b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd48733bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd48733bcb0"/>
        <function-ref name="get" scoped="" ref="0x7fd48733be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd48733a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd48733a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd48733a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd48733a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd48733a660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd48733a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd48733a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd487334cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd487334cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd4873330a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd487333230"/>
        <function-ref name="captured" scoped="" ref="0x7fd4873333c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd487333550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd4873336e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd487333870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd487337b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd487337b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd487335020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd4873351b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd487335340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd4873354d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd487335660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd4873357f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd487335980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd487335b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd487335ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd4873312f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd4873312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd487331670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd487334020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd487334020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd4873343a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd487334530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd4873346c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd487334850"/>
        <function-ref name="fired" scoped="" ref="0x7fd4873349e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd487333b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd487333b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd487332020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd4873321b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd487332340"/>
        <function-ref name="get" scoped="" ref="0x7fd4873324d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd487332660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd4873327f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd487332980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd487332b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fd487332ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd487332e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd487331020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fd48732b240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fd48732b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd48732b5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fd48732fa90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fd48732fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd48732fe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fd48732c260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fd48732c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd48732c5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fd48732c9f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fd48732c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd48732cd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fd4877a14c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd4877a14c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd4877a1840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fd487b123b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fd487b123b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fd487b12730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fd487b128c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fd487b12a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fd48797bbc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fd48797bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd487ab7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fd4872f4dc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd4872f4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4872f3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd4872f9590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fd4872f9590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd4872f9910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fd4872f46c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fd4872f46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4872f4a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fd4872f9c00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fd4872f9c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4872f4020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd4872f41b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd4872f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd487b8f410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fd487b8f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd487b8f790"/>
        <function-ref name="runTask" scoped="" ref="0x7fd487b8f920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd487b203a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fd487b203a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd487b20720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd487b208b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd487b20a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd4874f7b70" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fd4874f7b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd4874f6020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd4874f61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fd4874f02c0" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fd4874f02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fd4874f0640"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fd4874f07d0"/>
        <function-ref name="sleep" scoped="" ref="0x7fd4874f0960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd4874f8c30" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fd4874f8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4874f7020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd4874f71b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd4874f7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fd4874c4510" loc="47:PowerupC.nc">
      <component-ref qname="PowerupC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fd4874c4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd4874c4890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd4872dd9a0" loc="48:PowerupC.nc">
      <component-ref qname="PowerupC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd4872dd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd4872ddd20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd4872e9020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd4872e91b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd4872e9340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd4872e94d0"/>
        <function-ref name="get" scoped="" ref="0x7fd4872e9660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd4872e97f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd4872e9e30"/>
        <function-ref name="set" scoped="" ref="0x7fd4872e9980"/>
        <function-ref name="led0On" scoped="" ref="0x7fd4872e9b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fd4872e9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd48748e8b0" loc="47:../../../tos/platforms/shimmer2r/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd48748e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd48748ec30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd48748edc0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd4872da020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd4872da1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd4872da340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872da4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd4872da660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd4872daca0"/>
        <function-ref name="set" scoped="" ref="0x7fd4872da7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fd4872da980"/>
        <function-ref name="led2On" scoped="" ref="0x7fd4872dab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fd4872ce910" loc="51:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fd4872ce910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872cec90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4872cee20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4872d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872d31b0"/>
        <function-ref name="get" scoped="" ref="0x7fd4872d3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4872d34d0"/>
        <function-ref name="set" scoped="" ref="0x7fd4872d3660"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872d37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd4872d9c40" loc="47:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd4872d9c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4872d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fd4872d3b10" loc="52:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fd4872d3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872d2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4872d21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4872d2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872d24d0"/>
        <function-ref name="get" scoped="" ref="0x7fd4872d2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4872d27f0"/>
        <function-ref name="set" scoped="" ref="0x7fd4872d2980"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872d2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd4872d62a0" loc="48:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd4872d62a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd4872d6620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd4872d67b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd4872d6940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd4872d6ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd4872d6c60"/>
        <function-ref name="get" scoped="" ref="0x7fd4872d6df0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd4872d5020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd4872d5660"/>
        <function-ref name="set" scoped="" ref="0x7fd4872d51b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fd4872d5340"/>
        <function-ref name="led2On" scoped="" ref="0x7fd4872d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fd4872d2e30" loc="53:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fd4872d2e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872cc1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4872cc370"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4872cc500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872cc690"/>
        <function-ref name="get" scoped="" ref="0x7fd4872cc820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4872cc9b0"/>
        <function-ref name="set" scoped="" ref="0x7fd4872ccb40"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872cccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fd4872b1380" loc="42:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fd4872b1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872b1700"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4872b1890"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4872b1a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872b1bb0"/>
        <function-ref name="get" scoped="" ref="0x7fd4872b1d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4872b0020"/>
        <function-ref name="set" scoped="" ref="0x7fd4872b01b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872b0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fd4872b06a0" loc="43:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fd4872b06a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872b0a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4872b0bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4872b0d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872af020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872af1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4872af340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872af4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872af660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fd4872aec40" loc="45:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd4872aec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd4872ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fd4872af9c0" loc="44:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fd4872af9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872afd40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4872ae020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4872ae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872ae340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872ae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4872ae660"/>
        <function-ref name="set" scoped="" ref="0x7fd4872ae7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872ae980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fd487296020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fd487296020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872963a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487296530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872966c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487296850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872969e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487296b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487296d00"/>
        <function-ref name="get" scoped="" ref="0x7fd487295020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872951b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487295340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872954d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487295660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872957f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487295a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487295c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fd487282020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fd487282020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872823a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487282530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872826c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487282850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872829e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487282b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487282d00"/>
        <function-ref name="get" scoped="" ref="0x7fd487281020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872811b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487281340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872814d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487281660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872817f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487281a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487281c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fd487238560" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fd487238560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872388e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487238a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487238c00"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487238d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487237020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872371b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487237340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872374d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487237660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872377f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487237980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487237b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487237ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487236020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fd487214570" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fd487214570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872148f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487214a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487214c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487214da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487213020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872131b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487213340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872134d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487213660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872137f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487213980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487213b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487213ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487212020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fd487236580" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fd487236580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487236900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487236a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487236c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487236db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487235020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487235340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872354d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487235660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872357f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487235980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487235b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487235ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487234020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fd48727e020" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fd48727e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48727e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48727e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48727e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48727e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48727e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48727eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48727ed00"/>
        <function-ref name="get" scoped="" ref="0x7fd48727d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48727d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48727d340"/>
        <function-ref name="set" scoped="" ref="0x7fd48727d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48727d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48727d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48727da80"/>
        <function-ref name="clr" scoped="" ref="0x7fd48727dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fd487269200" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fd487269200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487269580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487269710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872698a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487269a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487269bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487269d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487268020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872681b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487268340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872684d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487268660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872687f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487268980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487268c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487268da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fd487255200" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fd487255200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487255580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487255710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872558a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487255a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487255bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487255d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487254020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872541b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487254340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872544d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487254660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872547f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487254980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487254c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487254da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fd487245200" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fd487245200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487245580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487245710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872458a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487245a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487245bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487245d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487244020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872441b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487244340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872444d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487244660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872447f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487244980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487244c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487244da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fd487230580" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fd487230580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487230900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487230a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487230c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487230db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48722f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48722f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48722f340"/>
        <function-ref name="get" scoped="" ref="0x7fd48722f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48722f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48722f7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd48722f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48722fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48722fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48722e020"/>
        <function-ref name="clr" scoped="" ref="0x7fd48722e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fd487220570" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fd487220570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872208f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487220a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487220c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487220da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48721f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48721f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48721f340"/>
        <function-ref name="get" scoped="" ref="0x7fd48721f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48721f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48721f7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd48721f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48721fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48721fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48721e020"/>
        <function-ref name="clr" scoped="" ref="0x7fd48721e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fd48720b580" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fd48720b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48720b900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48720ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48720bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48720bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48720a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48720a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48720a340"/>
        <function-ref name="get" scoped="" ref="0x7fd48720a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48720a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48720a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd48720a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48720ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48720aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487209020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fd487290020" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fd487290020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872903a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487290530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872906c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487290850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872909e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487290b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487290d00"/>
        <function-ref name="get" scoped="" ref="0x7fd48728f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48728f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48728f340"/>
        <function-ref name="set" scoped="" ref="0x7fd48728f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48728f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48728f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48728fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fd48728fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fd48722e580" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fd48722e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48722e900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48722ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48722ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48722edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48722d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48722d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48722d340"/>
        <function-ref name="get" scoped="" ref="0x7fd48722d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48722d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48722d7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd48722d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48722db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48722dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48722c020"/>
        <function-ref name="clr" scoped="" ref="0x7fd48722c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fd48728c020" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fd48728c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48728c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48728c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48728c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48728c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48728c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48728cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48728cd00"/>
        <function-ref name="get" scoped="" ref="0x7fd48728b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48728b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48728b340"/>
        <function-ref name="set" scoped="" ref="0x7fd48728b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48728b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48728b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48728ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fd48728bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fd487278020" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fd487278020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872783a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487278530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872786c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487278850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872789e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487278b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487278d00"/>
        <function-ref name="get" scoped="" ref="0x7fd487277020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872771b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487277340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872774d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487277660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872777f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487277a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487277c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fd487263200" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fd487263200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487263580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487263710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872638a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487263a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487263bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487263d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487262020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872621b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487262340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872624d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487262660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872627f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487262980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487262c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487262da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fd48724f200" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fd48724f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48724f580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48724f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48724f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48724fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48724fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48724fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48724e020"/>
        <function-ref name="get" scoped="" ref="0x7fd48724e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48724e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48724e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd48724e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48724e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48724e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48724ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fd48724eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fd48723f200" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fd48723f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48723f580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48723f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48723f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48723fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48723fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48723fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48723e020"/>
        <function-ref name="get" scoped="" ref="0x7fd48723e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48723e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48723e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd48723e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48723e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48723e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48723ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fd48723eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fd48729a020" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fd48729a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48729a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48729a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48729a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48729a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48729a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48729ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48729ad00"/>
        <function-ref name="get" scoped="" ref="0x7fd487299020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872991b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487299340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872994d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487299660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872997f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487299a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487299c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fd487286020" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fd487286020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872864a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487286630"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872867c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487286950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487286ae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487286c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487286e00"/>
        <function-ref name="get" scoped="" ref="0x7fd487285020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872851b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487285340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872854d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487285660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872857f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487285a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487285c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fd487272020" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fd487272020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872723a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487272530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872726c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487272850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872729e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487272b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487272d00"/>
        <function-ref name="get" scoped="" ref="0x7fd487271020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872711b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487271340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872714d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487271660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872717f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487271a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487271c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fd48723a580" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fd48723a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48723a900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48723aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48723ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48723adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487239020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872391b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487239340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872394d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487239660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872397f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487239980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487239b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487239ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487238020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fd48721a570" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fd48721a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48721a8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48721aa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48721ac10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48721ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487219020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872191b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487219340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872194d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487219660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872197f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487219980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487219b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487219ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487218020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fd48720e570" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fd48720e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48720e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48720ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48720ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48720eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48720c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48720c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48720c340"/>
        <function-ref name="get" scoped="" ref="0x7fd48720c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48720c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48720c7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd48720c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48720cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48720cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48720b020"/>
        <function-ref name="clr" scoped="" ref="0x7fd48720b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fd487226580" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fd487226580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487226900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487226a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487226c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487226db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487225020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872251b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487225340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872254d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487225660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872257f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487225980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487225b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487225ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487224020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fd48726e020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fd48726e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48726e5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48726e730"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48726e8c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48726ea50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48726ebe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48726ed70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48726d020"/>
        <function-ref name="get" scoped="" ref="0x7fd48726d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48726d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48726d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd48726d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48726d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48726d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48726dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fd48726dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fd487259200" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fd487259200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487259580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487259710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872598a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487259a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487259bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487259d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487258020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872581b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487258340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872584d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487258660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872587f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487258980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487258c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487258da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fd487249200" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fd487249200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487249580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487249710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872498a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487249a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487249bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487249d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487248020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872481b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487248340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872484d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487248660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872487f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487248980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487248c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487248da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fd487218570" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fd487218570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872188f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487218a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487218c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487218da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487217020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872171b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487217340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872174d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487217660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872177f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487217980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487217b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487217ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487216020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fd48722c570" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fd48722c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48722c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48722ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48722cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48722cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48722b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48722b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48722b340"/>
        <function-ref name="get" scoped="" ref="0x7fd48722b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48722b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48722b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd48722b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48722bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48722bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48722a020"/>
        <function-ref name="clr" scoped="" ref="0x7fd48722a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fd487294020" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fd487294020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872943a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487294530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872946c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487294850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872949e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487294b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487294d00"/>
        <function-ref name="get" scoped="" ref="0x7fd487293020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872931b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487293340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872934d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487293660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872937f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487293a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487293c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fd487280020" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fd487280020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872803a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487280530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872806c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487280850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872809e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487280b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487280d00"/>
        <function-ref name="get" scoped="" ref="0x7fd48727f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48727f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48727f340"/>
        <function-ref name="set" scoped="" ref="0x7fd48727f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48727f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48727f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48727fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fd48727fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fd48724d200" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fd48724d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48724d580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48724d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48724d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48724da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48724dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48724dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48724c020"/>
        <function-ref name="get" scoped="" ref="0x7fd48724c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48724c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48724c4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd48724c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48724c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48724c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48724cc10"/>
        <function-ref name="clr" scoped="" ref="0x7fd48724cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fd48727c020" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fd48727c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48727c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48727c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48727c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48727c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48727c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48727cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48727cd00"/>
        <function-ref name="get" scoped="" ref="0x7fd48727b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48727b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48727b340"/>
        <function-ref name="set" scoped="" ref="0x7fd48727b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48727b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48727b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48727ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fd48727bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fd487267200" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fd487267200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487267580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487267710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872678a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487267a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487267bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487267d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487266020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872661b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487266340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872664d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487266660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872667f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487266980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487266c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487266da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fd487253200" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fd487253200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487253580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487253710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872538a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487253a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487253bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487253d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487252020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872521b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487252340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872524d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487252660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872527f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487252980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487252c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487252da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fd487243200" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fd487243200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487243580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487243710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872438a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487243a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487243bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487243d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487242020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872421b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487242340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872424d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487242660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872427f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487242980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487242c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487242da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fd487228580" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fd487228580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487228900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487228a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487228c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487228db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487227020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872271b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487227340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872274d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487227660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872277f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487227980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487227b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487227ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487226020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fd4872a9020" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fd4872a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872a93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4872a9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872a96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4872a9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872a99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872a9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4872a9d00"/>
        <function-ref name="get" scoped="" ref="0x7fd4872a7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872a71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872a7340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872a74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872a7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872a77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4872a7a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872a7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fd48728a020" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fd48728a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48728a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48728a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48728a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48728a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48728a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48728ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48728ad00"/>
        <function-ref name="get" scoped="" ref="0x7fd487289020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872891b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487289340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872894d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487289660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872897f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487289a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487289c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fd487276020" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fd487276020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872763a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487276530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872766c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487276850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872769e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487276b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487276d00"/>
        <function-ref name="get" scoped="" ref="0x7fd487275020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872751b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487275340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872754d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487275660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872757f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487275a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487275c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fd487261200" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fd487261200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487261580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487261710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872618a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487261a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487261bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487261d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487260020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872601b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487260340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872604d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487260660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872607f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487260980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487260c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487260da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fd487224580" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fd487224580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487224900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487224a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487224c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487224db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487223020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487223340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872234d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487223660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872237f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487223980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487223b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487223ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487222020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fd48721e570" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fd48721e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48721e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48721ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48721ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48721eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48721d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48721d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48721d340"/>
        <function-ref name="get" scoped="" ref="0x7fd48721d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48721d660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48721d7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd48721d980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48721db10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48721dca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48721c020"/>
        <function-ref name="clr" scoped="" ref="0x7fd48721c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fd487212570" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fd487212570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872128f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487212a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487212c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487212da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487211020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487211340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872114d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487211660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872117f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487211980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487211b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487211ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487210020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fd48725d200" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fd48725d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48725d580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48725d710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48725d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48725da30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48725dbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48725dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48725c020"/>
        <function-ref name="get" scoped="" ref="0x7fd48725c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48725c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48725c4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd48725c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48725c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48725c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48725cc10"/>
        <function-ref name="clr" scoped="" ref="0x7fd48725cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fd487222580" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fd487222580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487222900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487222a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487222c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487222db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487221020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872211b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487221340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872214d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487221660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872217f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487221980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487221b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487221ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487220020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fd487298020" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fd487298020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872983a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487298530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872986c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487298850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872989e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487298b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487298d00"/>
        <function-ref name="get" scoped="" ref="0x7fd487297020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872971b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487297340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872974d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487297660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872977f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487297a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487297c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fd487284020" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fd487284020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872843a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487284530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872846c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487284850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872849e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487284b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487284d00"/>
        <function-ref name="get" scoped="" ref="0x7fd487283020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872831b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487283340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872834d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487283660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872837f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487283a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487283c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fd487270020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fd487270020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872703a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487270530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872706c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487270850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872709e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487270b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487270d00"/>
        <function-ref name="get" scoped="" ref="0x7fd48726f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48726f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48726f340"/>
        <function-ref name="set" scoped="" ref="0x7fd48726f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48726f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48726f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48726fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fd48726fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fd48722a580" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fd48722a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48722a900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48722aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48722ac20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48722adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487229020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872291b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487229340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872294d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487229660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872297f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487229980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487229b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487229ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487228020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fd487216570" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fd487216570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872168f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487216a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487216c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487216da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487215020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872151b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487215340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872154d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487215660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872157f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487215980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487215b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487215ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487214020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fd48726b200" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fd48726b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48726b580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48726b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48726b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48726ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48726bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48726bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48726a020"/>
        <function-ref name="get" scoped="" ref="0x7fd48726a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48726a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48726a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd48726a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48726a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48726a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48726ac10"/>
        <function-ref name="clr" scoped="" ref="0x7fd48726ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fd487257200" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fd487257200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487257580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487257710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872578a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487257a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487257bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487257d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487256020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872561b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487256340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872564d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487256660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872567f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487256980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487256c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487256da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fd487247200" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fd487247200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487247580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487247710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872478a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487247a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487247bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487247d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487246020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872461b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487246340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872464d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487246660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872467f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487246980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487246c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487246da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fd487292020" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fd487292020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872923a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487292530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872926c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487292850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872929e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487292b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487292d00"/>
        <function-ref name="get" scoped="" ref="0x7fd487291020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872911b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487291340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872914d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487291660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872917f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487291a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487291c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fd48724b200" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fd48724b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48724b580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48724b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48724b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48724ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48724bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48724bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48724a020"/>
        <function-ref name="get" scoped="" ref="0x7fd48724a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48724a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48724a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd48724a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48724a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48724a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48724ac10"/>
        <function-ref name="clr" scoped="" ref="0x7fd48724ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fd48728e020" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fd48728e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48728e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48728e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48728e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48728e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48728e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48728eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48728ed00"/>
        <function-ref name="get" scoped="" ref="0x7fd48728d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48728d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48728d340"/>
        <function-ref name="set" scoped="" ref="0x7fd48728d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48728d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48728d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48728da80"/>
        <function-ref name="clr" scoped="" ref="0x7fd48728dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fd48727a020" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fd48727a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48727a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48727a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48727a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48727a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48727a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48727ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48727ad00"/>
        <function-ref name="get" scoped="" ref="0x7fd487279020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872791b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487279340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872794d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487279660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872797f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487279a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487279c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fd487265200" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fd487265200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487265580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487265710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872658a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487265a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487265bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487265d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487264020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872641b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487264340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872644d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487264660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872647f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487264980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487264c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487264da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fd487251200" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fd487251200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487251580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487251710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872518a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487251a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487251bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487251d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487250020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872501b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487250340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872504d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487250660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872507f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487250980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487250c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487250da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fd487241200" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fd487241200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487241580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487241710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872418a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487241a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487241bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487241d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487240020"/>
        <function-ref name="get" scoped="" ref="0x7fd4872401b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487240340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872404d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487240660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4872407f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487240980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487240c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487240da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fd48729d020" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fd48729d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48729d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48729d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48729d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48729d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48729d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48729db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48729dd00"/>
        <function-ref name="get" scoped="" ref="0x7fd48729c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48729c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48729c340"/>
        <function-ref name="set" scoped="" ref="0x7fd48729c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48729c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48729c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48729ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fd48729cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fd487288020" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fd487288020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872883a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487288530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872886c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487288850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872889e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487288b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487288d00"/>
        <function-ref name="get" scoped="" ref="0x7fd487287020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872871b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487287340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872874d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487287660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872877f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487287a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487287c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fd487274020" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fd487274020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872743a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487274530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4872746c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487274850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4872749e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487274b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487274d00"/>
        <function-ref name="get" scoped="" ref="0x7fd487273020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4872731b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487273340"/>
        <function-ref name="set" scoped="" ref="0x7fd4872734d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487273660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4872737f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487273a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487273c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fd48725f200" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fd48725f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48725f580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48725f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48725f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48725fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48725fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48725fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48725e020"/>
        <function-ref name="get" scoped="" ref="0x7fd48725e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48725e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48725e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd48725e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48725e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48725e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48725ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fd48725eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fd487232560" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fd487232560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872328e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487232a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487232c00"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487232d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487231020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872311b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487231340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872314d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487231660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872317f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487231980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487231b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487231ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487230020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fd48721c570" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fd48721c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48721c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48721ca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48721cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48721cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48721b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48721b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48721b340"/>
        <function-ref name="get" scoped="" ref="0x7fd48721b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48721b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48721b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd48721b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48721bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48721bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48721a020"/>
        <function-ref name="clr" scoped="" ref="0x7fd48721a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fd487234580" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fd487234580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487234900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487234a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487234c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487234db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487233020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872331b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487233340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872334d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487233660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872337f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487233980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487233b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487233ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487232020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fd48725b200" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fd48725b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48725b580"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48725b710"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48725b8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48725ba30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48725bbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48725bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48725a020"/>
        <function-ref name="get" scoped="" ref="0x7fd48725a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48725a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48725a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd48725a660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48725a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48725a980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48725ac10"/>
        <function-ref name="clr" scoped="" ref="0x7fd48725ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fd487210570" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fd487210570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4872108f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487210a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487210c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487210da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48720f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48720f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48720f340"/>
        <function-ref name="get" scoped="" ref="0x7fd48720f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48720f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48720f7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd48720f980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48720fb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48720fca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48720e020"/>
        <function-ref name="clr" scoped="" ref="0x7fd48720e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fd487209580" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fd487209580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487209900"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487209a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487209c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487209db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487208020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4872081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487208340"/>
        <function-ref name="get" scoped="" ref="0x7fd4872084d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487208660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4872087f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487208980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487208b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487208ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487207020"/>
        <function-ref name="clr" scoped="" ref="0x7fd4872071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fd48723c1f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fd48723c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48723c970"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48723cb00"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48723cc90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48723ce20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48723b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48723b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48723b340"/>
        <function-ref name="get" scoped="" ref="0x7fd48723b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48723b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48723b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd48723b980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48723bb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48723bca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48723a020"/>
        <function-ref name="clr" scoped="" ref="0x7fd48723a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871de6d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871de6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871dea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871debe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871ded70"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871dd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871dd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871dd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871dd4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd4871dd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871dd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4871dd980"/>
        <function-ref name="set" scoped="" ref="0x7fd4871ddb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4871ddca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871dde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4871dc120"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871d9100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871d9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871d9480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871d9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871d97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871d9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871d9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871d9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871d9de0"/>
        <function-ref name="get" scoped="" ref="0x7fd4871d8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871d81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4871d8340"/>
        <function-ref name="set" scoped="" ref="0x7fd4871d84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4871d8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871d87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4871d8a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871d8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871d5d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871d5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871d40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871d4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871d4400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871d4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871d4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871d48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871d4a40"/>
        <function-ref name="get" scoped="" ref="0x7fd4871d4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871d4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4871d3020"/>
        <function-ref name="set" scoped="" ref="0x7fd4871d31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4871d3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871d34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4871d3760"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871d38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871d0740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871d0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871d0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871d0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871d0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871cf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871cf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871cf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871cf4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd4871cf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871cf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4871cf980"/>
        <function-ref name="set" scoped="" ref="0x7fd4871cfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4871cfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871cfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4871ce120"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871ce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871cb100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871cb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871cb480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871cb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871cb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871cb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871cbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871cbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871cbde0"/>
        <function-ref name="get" scoped="" ref="0x7fd4871ca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871ca1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4871ca340"/>
        <function-ref name="set" scoped="" ref="0x7fd4871ca4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4871ca660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871ca7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4871caa80"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871cac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871c7d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871c7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871c60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871c6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871c6400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871c6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871c6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871c68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871c6a40"/>
        <function-ref name="get" scoped="" ref="0x7fd4871c6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871c6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4871c5020"/>
        <function-ref name="set" scoped="" ref="0x7fd4871c51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4871c5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871c54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4871c5760"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871c58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871c1740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871c1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871c1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871c1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871c1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871c0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871c01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871c0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871c04d0"/>
        <function-ref name="get" scoped="" ref="0x7fd4871c0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871c07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4871c0980"/>
        <function-ref name="set" scoped="" ref="0x7fd4871c0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4871c0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871c0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4871bf120"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871bf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871bc100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871bc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871bc480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871bc610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871bc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871bc930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871bcac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871bcc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871bcde0"/>
        <function-ref name="get" scoped="" ref="0x7fd4871bb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871bb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4871bb340"/>
        <function-ref name="set" scoped="" ref="0x7fd4871bb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4871bb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871bb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4871bba80"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871bbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871b8d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871b8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871b70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871b7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871b7400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871b7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871b7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871b78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871b7a40"/>
        <function-ref name="get" scoped="" ref="0x7fd4871b7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871b7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4871b6020"/>
        <function-ref name="set" scoped="" ref="0x7fd4871b61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4871b6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871b64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4871b6760"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871b68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871b3740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871b3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871b3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871b3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871b3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871b2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871b21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871b2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871b24d0"/>
        <function-ref name="get" scoped="" ref="0x7fd4871b2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871b27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4871b2980"/>
        <function-ref name="set" scoped="" ref="0x7fd4871b2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4871b2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871b2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4871b1120"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871b12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871ae100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871ae100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871ae480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871ae610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871ae7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871ae930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871aeac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871aec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871aede0"/>
        <function-ref name="get" scoped="" ref="0x7fd4871ad020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871ad1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4871ad340"/>
        <function-ref name="set" scoped="" ref="0x7fd4871ad4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4871ad660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871ad7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4871ada80"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871adc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871aad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871aad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871a90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871a9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871a9400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871a9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871a9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871a98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871a9a40"/>
        <function-ref name="get" scoped="" ref="0x7fd4871a9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871a9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4871a8020"/>
        <function-ref name="set" scoped="" ref="0x7fd4871a81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4871a8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871a84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4871a8760"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871a88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871a5860" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871a5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871a5be0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871a5d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871a4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871a41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871a4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871a44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871a4660"/>
        <function-ref name="get" scoped="" ref="0x7fd4871a47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871a4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4871a4b10"/>
        <function-ref name="set" scoped="" ref="0x7fd4871a4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4871a4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871a3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4871a32b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871a3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4871a0270" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4871a0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871a05f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4871a0780"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871a0910"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4871a0aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871a0c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871a0dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48719e020"/>
        <function-ref name="get" scoped="" ref="0x7fd48719e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48719e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48719e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd48719e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48719e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48719e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48719ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fd48719eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd48719bd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd48719bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48719a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48719a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48719a400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48719a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48719a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48719a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48719aa40"/>
        <function-ref name="get" scoped="" ref="0x7fd48719abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48719ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487199020"/>
        <function-ref name="set" scoped="" ref="0x7fd4871991b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487199340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871994d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487199760"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871998f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487196740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487196740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487196ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487196c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487196de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487195020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871951b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487195340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871954d0"/>
        <function-ref name="get" scoped="" ref="0x7fd487195660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871957f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487195980"/>
        <function-ref name="set" scoped="" ref="0x7fd487195b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487195ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487195e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487194120"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871942b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487191100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487191100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487191480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487191610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871917a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487191930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487191ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487191c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487191de0"/>
        <function-ref name="get" scoped="" ref="0x7fd487190020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871901b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487190340"/>
        <function-ref name="set" scoped="" ref="0x7fd4871904d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487190660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871907f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487190a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487190c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd48718dd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd48718dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48718c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48718c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48718c400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48718c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48718c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48718c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48718ca40"/>
        <function-ref name="get" scoped="" ref="0x7fd48718cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48718cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48718b020"/>
        <function-ref name="set" scoped="" ref="0x7fd48718b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48718b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48718b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48718b760"/>
        <function-ref name="clr" scoped="" ref="0x7fd48718b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487188740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487188740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487188ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487188c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487188de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487187020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871871b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487187340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871874d0"/>
        <function-ref name="get" scoped="" ref="0x7fd487187660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871877f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487187980"/>
        <function-ref name="set" scoped="" ref="0x7fd487187b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487187ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487187e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487186120"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871862b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487183100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487183100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487183480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487183610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871837a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487183930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487183ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487183c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487183de0"/>
        <function-ref name="get" scoped="" ref="0x7fd487182020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871821b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487182340"/>
        <function-ref name="set" scoped="" ref="0x7fd4871824d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487182660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871827f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487182a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487182c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd48717fd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd48717fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48717e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48717e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48717e400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48717e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48717e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48717e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48717ea40"/>
        <function-ref name="get" scoped="" ref="0x7fd48717ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48717ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48717d020"/>
        <function-ref name="set" scoped="" ref="0x7fd48717d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48717d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48717d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48717d760"/>
        <function-ref name="clr" scoped="" ref="0x7fd48717d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd48717a740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd48717a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48717aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48717ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48717ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487178020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871781b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487178340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871784d0"/>
        <function-ref name="get" scoped="" ref="0x7fd487178660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871787f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487178980"/>
        <function-ref name="set" scoped="" ref="0x7fd487178b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487178ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487178e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487177120"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871772b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487174100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487174100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487174480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487174610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871747a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487174930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487174ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487174c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487174de0"/>
        <function-ref name="get" scoped="" ref="0x7fd487173020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871731b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487173340"/>
        <function-ref name="set" scoped="" ref="0x7fd4871734d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487173660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871737f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487173a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487173c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487170d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487170d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48716f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48716f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48716f400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48716f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48716f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48716f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48716fa40"/>
        <function-ref name="get" scoped="" ref="0x7fd48716fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48716fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48716e020"/>
        <function-ref name="set" scoped="" ref="0x7fd48716e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48716e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48716e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48716e760"/>
        <function-ref name="clr" scoped="" ref="0x7fd48716e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd48716ba60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd48716ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48716bde0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48716a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48716a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48716a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48716a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48716a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48716a7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd48716a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48716ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48716aca0"/>
        <function-ref name="set" scoped="" ref="0x7fd48716ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487169020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871691b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487169440"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871695d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487166460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487166460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871667e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487166970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487166b00"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487166c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487166e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487165020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871651b0"/>
        <function-ref name="get" scoped="" ref="0x7fd487165340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871654d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487165660"/>
        <function-ref name="set" scoped="" ref="0x7fd4871657f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487165980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487165b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487165da0"/>
        <function-ref name="clr" scoped="" ref="0x7fd487164020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487162e00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487162e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871611c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487161350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871614e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487161670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487161800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487161990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487161b20"/>
        <function-ref name="get" scoped="" ref="0x7fd487161cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487161e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487160020"/>
        <function-ref name="set" scoped="" ref="0x7fd4871601b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487160340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871604d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487160760"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871608f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd48715d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd48715d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48715dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48715dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48715dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48715c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48715c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48715c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48715c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd48715c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48715c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48715c980"/>
        <function-ref name="set" scoped="" ref="0x7fd48715cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48715cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48715ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48715b120"/>
        <function-ref name="clr" scoped="" ref="0x7fd48715b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487158100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487158100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487158480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487158610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871587a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487158930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487158ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487158c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487158de0"/>
        <function-ref name="get" scoped="" ref="0x7fd487157020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871571b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487157340"/>
        <function-ref name="set" scoped="" ref="0x7fd4871574d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487157660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871577f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487157a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487157c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487153d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487153d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871520e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487152270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487152400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487152590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487152720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871528b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487152a40"/>
        <function-ref name="get" scoped="" ref="0x7fd487152bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487152d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487151020"/>
        <function-ref name="set" scoped="" ref="0x7fd4871511b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487151340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871514d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487151760"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd48714e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd48714e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48714eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48714ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48714ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48714d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48714d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48714d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48714d4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd48714d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48714d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48714d980"/>
        <function-ref name="set" scoped="" ref="0x7fd48714db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48714dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48714de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48714c120"/>
        <function-ref name="clr" scoped="" ref="0x7fd48714c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487149100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487149100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487149480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487149610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871497a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487149930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487149ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487149c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487149de0"/>
        <function-ref name="get" scoped="" ref="0x7fd487148020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871481b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487148340"/>
        <function-ref name="set" scoped="" ref="0x7fd4871484d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487148660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871487f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487148a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487148c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487145d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487145d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871440e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487144270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487144400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487144590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487144720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871448b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487144a40"/>
        <function-ref name="get" scoped="" ref="0x7fd487144bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487144d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487143020"/>
        <function-ref name="set" scoped="" ref="0x7fd4871431b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487143340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871434d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487143760"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871438f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487140740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487140740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487140ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487140c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487140de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48713f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48713f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48713f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48713f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd48713f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48713f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48713f980"/>
        <function-ref name="set" scoped="" ref="0x7fd48713fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48713fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48713fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48713e120"/>
        <function-ref name="clr" scoped="" ref="0x7fd48713e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd48713b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd48713b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48713b480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48713b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48713b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48713b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48713bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48713bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48713bde0"/>
        <function-ref name="get" scoped="" ref="0x7fd48713a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48713a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48713a340"/>
        <function-ref name="set" scoped="" ref="0x7fd48713a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48713a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48713a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48713aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fd48713ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487137d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487137d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871360e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487136270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487136400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487136590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487136720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871368b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487136a40"/>
        <function-ref name="get" scoped="" ref="0x7fd487136bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487136d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487135020"/>
        <function-ref name="set" scoped="" ref="0x7fd4871351b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487135340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871354d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487135760"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871358f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487132740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487132740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487132ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487132c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487132de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487130020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871301b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487130340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871304d0"/>
        <function-ref name="get" scoped="" ref="0x7fd487130660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871307f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487130980"/>
        <function-ref name="set" scoped="" ref="0x7fd487130b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487130ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487130e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48712f120"/>
        <function-ref name="clr" scoped="" ref="0x7fd48712f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd48712c100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd48712c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48712c480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48712c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48712c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48712c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48712cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48712cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48712cde0"/>
        <function-ref name="get" scoped="" ref="0x7fd48712b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48712b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48712b340"/>
        <function-ref name="set" scoped="" ref="0x7fd48712b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48712b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48712b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48712ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fd48712bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487128d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487128d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871270e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487127270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487127400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487127590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487127720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871278b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487127a40"/>
        <function-ref name="get" scoped="" ref="0x7fd487127bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487127d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487126020"/>
        <function-ref name="set" scoped="" ref="0x7fd4871261b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487126340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871264d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487126760"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871268f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487123740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487123740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487123ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487123c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487123de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487122020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871221b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487122340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871224d0"/>
        <function-ref name="get" scoped="" ref="0x7fd487122660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871227f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487122980"/>
        <function-ref name="set" scoped="" ref="0x7fd487122b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487122ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487122e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487121120"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871212b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd48711e100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd48711e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48711e480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48711e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48711e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48711e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48711eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48711ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48711ede0"/>
        <function-ref name="get" scoped="" ref="0x7fd48711d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48711d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48711d340"/>
        <function-ref name="set" scoped="" ref="0x7fd48711d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48711d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48711d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48711da80"/>
        <function-ref name="clr" scoped="" ref="0x7fd48711dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd48711ad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd48711ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4871190e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487119270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487119400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487119590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487119720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4871198b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487119a40"/>
        <function-ref name="get" scoped="" ref="0x7fd487119bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487119d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487118020"/>
        <function-ref name="set" scoped="" ref="0x7fd4871181b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487118340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871184d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487118760"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871188f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487115740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487115740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487115ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487115c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487115de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487114020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871141b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487114340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871144d0"/>
        <function-ref name="get" scoped="" ref="0x7fd487114660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871147f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487114980"/>
        <function-ref name="set" scoped="" ref="0x7fd487114b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487114ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487114e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487113120"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871132b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487110100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487110100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487110480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487110610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871107a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487110930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487110ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487110c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487110de0"/>
        <function-ref name="get" scoped="" ref="0x7fd48710f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48710f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48710f340"/>
        <function-ref name="set" scoped="" ref="0x7fd48710f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48710f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48710f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48710fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fd48710fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd48710cd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd48710cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48710a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48710a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48710a400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48710a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48710a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48710a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48710aa40"/>
        <function-ref name="get" scoped="" ref="0x7fd48710abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48710ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487109020"/>
        <function-ref name="set" scoped="" ref="0x7fd4871091b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487109340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871094d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487109760"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871098f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487106740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487106740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487106ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487106c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487106de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487105020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4871051b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487105340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4871054d0"/>
        <function-ref name="get" scoped="" ref="0x7fd487105660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871057f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487105980"/>
        <function-ref name="set" scoped="" ref="0x7fd487105b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487105ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487105e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487104120"/>
        <function-ref name="clr" scoped="" ref="0x7fd4871042b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd487101100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd487101100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487101480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487101610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4871017a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487101930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487101ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487101c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487101de0"/>
        <function-ref name="get" scoped="" ref="0x7fd487100020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4871001b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487100340"/>
        <function-ref name="set" scoped="" ref="0x7fd4871004d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487100660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4871007f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487100a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd487100c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd4870fdd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd4870fdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4870fc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4870fc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd4870fc400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4870fc590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4870fc720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4870fc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4870fca40"/>
        <function-ref name="get" scoped="" ref="0x7fd4870fcbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd4870fcd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4870fb020"/>
        <function-ref name="set" scoped="" ref="0x7fd4870fb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4870fb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd4870fb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4870fb760"/>
        <function-ref name="clr" scoped="" ref="0x7fd4870fb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd4870842f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd4870842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487084670"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487084800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487084990"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487084b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487084cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd487084e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487083020"/>
        <function-ref name="get" scoped="" ref="0x7fd4870831b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487083340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd4870834d0"/>
        <function-ref name="set" scoped="" ref="0x7fd487083660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd4870837f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487083980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd487083c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd487083da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd487095020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd487095020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd4870953a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd487095530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4870956c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487095850"/>
        <function-ref name="get" scoped="" ref="0x7fd4870959e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487095b70"/>
        <function-ref name="set" scoped="" ref="0x7fd487095d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd487084020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd487080de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd487080de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48707f180"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48707f310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd48707f4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48707f630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48707f7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd48707f950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48707fae0"/>
        <function-ref name="get" scoped="" ref="0x7fd48707fc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd48707fe00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd48707e020"/>
        <function-ref name="set" scoped="" ref="0x7fd48707e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd48707e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd48707e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd48707e760"/>
        <function-ref name="clr" scoped="" ref="0x7fd48707e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd487081b90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd487081b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd487080020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd4870801b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd487080340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd4870804d0"/>
        <function-ref name="get" scoped="" ref="0x7fd487080660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd4870807f0"/>
        <function-ref name="set" scoped="" ref="0x7fd487080980"/>
        <function-ref name="clr" scoped="" ref="0x7fd487080b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd48707a930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd48707a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48707acb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48707ae40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd487079020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd4870791b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd487079340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd4870794d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd487079660"/>
        <function-ref name="get" scoped="" ref="0x7fd4870797f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd487079980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd487079b10"/>
        <function-ref name="set" scoped="" ref="0x7fd487079ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd487079e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd487078020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd4870782b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd487078440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd48707c710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd48707c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd48707ca90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd48707cc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd48707cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd48707a020"/>
        <function-ref name="get" scoped="" ref="0x7fd48707a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd48707a340"/>
        <function-ref name="set" scoped="" ref="0x7fd48707a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd48707a660"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd4874c3820" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd487b1cc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fd4874c1460" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fd487484b40" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fd487487de0" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fd487484420" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fd487487700" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fd4874865a0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fd48748a900" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fd487487020" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fd487486cc0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fd4877a1020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fd487a623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fd487432020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fd487433cc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fd487436390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd48747c5a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fd48747b020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fd487432890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fd4874307b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fd487433560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fd487430020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fd487436b30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fd487434350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fd487434da0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd48747c5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fd48747b020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd487434b20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd48747c5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fd48747b020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fd4874240e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fd487422730" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fd4874224b0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fd4874202e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd487420060" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd487423ca0" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd4874233e0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fd487424a90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fd487424810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fd48742b3e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fd48742bd60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd48742bae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fd48742a790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fd48742a510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fd4874292a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fd487429020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd487429990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd48743b810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fd4874392a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fd487439020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fd48743a020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd487441aa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fd48743a760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd48743e9b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fd48743b120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd48743e270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd48743d0e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fd48743d9f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd48743d770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fd487439cb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fd487439a30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd4884fb520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd4873fb1f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fd4874f37f0" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fd4874f0020" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fd4874f3020" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fd48797b810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd487b21020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fd487b20020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fd487b21790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fd487b15270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd487b1cc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fd487b15ac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="52:../../../tos/platforms/shimmer2r/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fd4872e4a00" loc="62:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="59:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fd4872e21f0" loc="68:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="64:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fd4872e29d0" loc="73:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="70:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fd4872e1940" loc="84:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="80:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fd4872de120" loc="101:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="97:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd4872de930" loc="117:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="103:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fd4872e1190" loc="78:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="75:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd4872dd4c0" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="120:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fd4872dd240" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fd4872e4270" loc="57:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="54:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fd4872e0190" loc="90:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="87:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fd4872e0920" loc="95:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="92:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fd4872cf020" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fd4872cf750" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fd4872d00e0" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fd4872ce5e0" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd4872d07e0" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fd4872cfe70" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd4872d12b0" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fd4872d1980" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fd4872a3020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fd4872a3770" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fd48729e2e0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd487b1cc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd48729e060" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fd4872a5750" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fd4872a2780" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fd48729ebd0" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fd4872a2020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd4872a4820" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fd48729f020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fd4872a4020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd4884fb160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd4872aa8b0" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fd4872a0020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fd48729f7c0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fd4872a07e0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd487b25090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fd4872a5020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
