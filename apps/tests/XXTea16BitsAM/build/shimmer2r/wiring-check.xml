<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="16:XXTea16BitsAmAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f3989648020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f398b1d7080"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f398b1d7080"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f398b002590"/></to>
    </wire>
    <wire loc="17:XXTea16BitsAmAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f3989648790"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f39896518c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f39896518c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f398a3ac020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:XXTea16BitsAmAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f39896439b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f398a94f020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f398a94f020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f398a94ba70"/></to>
    </wire>
    <wire loc="19:XXTea16BitsAmAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f398963e2e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f398a6d8e00"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f398a6d8e00"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f3988fb1020"/></to>
    </wire>
    <wire loc="20:XXTea16BitsAmAppC.nc">
      <from><interface-ref name="XXTEA" scoped="" ref="0x7f398963da60"/></from>
      <to><interface-ref name="XXTEA" scoped="" ref="0x7f398a6d4bc0"/></to>
    </wire>
    <wire loc="6:../../../tos/platforms/shimmer2r/XXTEAC.nc">
      <from><interface-ref name="XXTEA" scoped="" ref="0x7f398a6d4bc0"/></from>
      <to><interface-ref name="XXTEA" scoped="" ref="0x7f398a6d22f0"/></to>
    </wire>
    <wire loc="21:XXTea16BitsAmAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f398963c5d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f398a0ea430"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:XXTea16BitsAmAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f398963bdb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f398a0e8820"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f398a0e8820"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f398a0bc760"/></to>
    </wire>
    <wire loc="23:XXTea16BitsAmAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f398963b2f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f398a0eb400"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f398a0eb400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f398a0c2880"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3989728dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f39897af020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f39897cf9c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f39897ec080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3989940620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3989a30820"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3989f4b7e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3988c33ca0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3989ca2020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3989ffadf0"/></to>
    </wire>
    <wire loc="37:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398a1d6bc0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398a3a7e50"/></to>
    </wire>
    <wire loc="96:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3988f67060"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398a5f2660"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398a6e9020"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3988ffee50"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398aedc540"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398a715a60"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f398b002c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f398b8993a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f398b8993a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f398b271c30"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f398b0016c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398b1d64e0"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f398b1d64e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398b1c92f0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b001dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f398b1c9a00"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f398b1c7500"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f398b1c7500"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398b198440"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f398b1c6120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398b1bf080"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f398b1c6800"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398a9222e0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f398b198440"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398b1803c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f398b18f9e0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f398b180a70"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f398b51a4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f398b17ecc0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f398b13ba50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f398b0796d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f398b129410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f398b071b30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f398b132d10"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f398b07e160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f398b115020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f398b058cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f398b137020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f398b07f480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f398b11d570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f398b058020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f398b112020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f398b041cb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f398b124a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f398b052220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f398b143020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f398b0cf9d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f398b118020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f398b0672f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f398b11f890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f398b068610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f398b1288c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f398b069220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f398b131c70"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f398b0777a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f398b114020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f398b04f2f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f398b126020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f398b0626d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f398b137da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f398b078ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f398b1447b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398b0dc540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f398b11c3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f398b050610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f398b1425a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f398b080020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f398b122020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f398b04a6d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f398b12ddc0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f398b087a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f398b117020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f398b05f7a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f398b138140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f398b088de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f398b11e700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f398b060ac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f398b113020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f398b0487a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f398b1255a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f398b05ab30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f398b12bb70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398b0d53e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f398b11b1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f398b049ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f398b119020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f398b06fcb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f398b11a020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f398b041020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f398b120a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f398b06f020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f398b1215a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f398b043b30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f398b0da450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f398b0dbd80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f398b0daaa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f398b03ba90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f398b0d9120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f398b038260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398b086930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398b0dc540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f398b084020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f398b0dbd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398b07d020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398b0dc540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f398b07c7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f398b0dbd80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398b076610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398b0dc540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f398b075c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f398b0dbd80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f398b0d32f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f398b0d4bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f398b0d3940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f398b0389f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f398b0d2020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f398b037240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398b06eb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398b0d53e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f398b06c2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f398b0d4bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398b066160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398b0d53e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f398b0657a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f398b0d4bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398b05e610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398b0d53e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f398b05dc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f398b0d4bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398b057b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398b0d53e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f398b0552f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f398b0d4bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398b04e160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398b0d53e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f398b04d7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f398b0d4bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398b047610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398b0d53e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f398b046c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f398b0d4bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398b03fb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398b0d53e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f398b03d2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f398b0d4bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b270b70"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f398b2692c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f398b88b3b0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f398a70fa20"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f398a73fbf0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f398a70c440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f398a746020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f398a746020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f3989497580"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f398a70b0c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f398a746c30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f398a746c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f398af4c7e0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f398a6efbe0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f398a70f1a0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f398af4c7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f398aee2d60"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f398a7458b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f398af4b470"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f398af4b470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f398aee36c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f398a743020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398af46b20"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398af46b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398aee1a10"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f39894962d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f398afa8ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f3989494020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f398af4b470"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f398afa8ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f398af5c580"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f398af5b400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f398af523f0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f398af523f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f398af38300"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f398af5a060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f398af4b470"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f398af59720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f398af4c7e0"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f398af58480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f398af58c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f398af4d3b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f398aedcb90"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f398aedcb90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f398aecac40"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f398af4c1d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f398aee30d0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f398aedc540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398aeca5f0"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f398aed62b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f398af39330"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f398aee04a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f398aed8790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f398aede120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f398aed9c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f398aed1970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f398a75da30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f398aed8790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f398ad98de0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f398aed9c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f398ad986c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f398ad97c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f398aed1970"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f398aec2760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f398aed62b0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f398ad95920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f398aed62b0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f398ad8bcc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f398aed62b0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f398ad96590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f398aebf530"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f398ad96e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f398aec3a40"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f398aeb97e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f398ad91e00"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f398aeb4780"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f398ad650c0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f398ad650c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f398a7700c0"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f398ad82d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f398ad658d0"/></to>
    </wire>
    <wire loc="45:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f398ad658d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f398a778440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f398ae626e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f398ae994f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f398ae65c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f398ae5ea00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f398ad93020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f398ad93800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f398ad63020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f398a777440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f398a777440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f398acf9210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f398a778440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f398acfcb50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f398a776020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f398a770920"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f398a76f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f398a779020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f398a779020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f398acff320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f398a779c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f39893d4020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f39893d4020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f398a8d52c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f398acf6600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f398a776020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f39893c6760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f398acfadd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f398acf7370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f39893d5340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f39893d5340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f398a8d7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f398acf2be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f39893cec10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f39893cec10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f398a8d94d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f398acfadd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f398ac67e70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f398acf9210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f398ac64890"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f398acfcb50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f398ac65790"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f398acff320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f398ac670d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f398ac623e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f398acf6600"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f398ac635b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f398acf7370"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f398ac5d5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f398acf2be0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f398ac62a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f398ac53b60"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f398ac53b60"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f398ac46360"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f398ac5c020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f398a971d20"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f398a971d20"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f398a96cd90"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f398ac59120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f398a94f020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f398ac4bbd0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f398ac41970"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f398ac4c6d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f398ac41020"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f398ac07860"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f398ab1ecc0"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f398ab1ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa70100"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f398ac11800"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f398ab1acc0"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f398ab1acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa6bd10"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f398ac05800"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f398ab18cc0"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f398ab18cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa66740"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f398ac03800"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f398ab12cc0"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f398ab12cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa5dd10"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f398ac01800"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f398ab14cc0"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f398ab14cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa61100"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f398ac18bc0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f398a832940"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f398ab7a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aaae740"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f398ab66810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa7e100"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f398ab1cca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa70100"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f398aaf7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9e5740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f398ab61810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa75740"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f398ab4d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa44460"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f398ab399a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa15d10"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f398ab289a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9ee100"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f398ab03cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa02740"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f398aaefcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9e0100"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f398ab74810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aaa0740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f398ab70810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa97d10"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f398ab5b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa66740"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f398ab479a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa36100"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f398ab329a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa07d10"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f398ab229a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9e0100"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f398ab7e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aab8100"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f398ab6a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa88d80"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f398ab55810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa58740"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f398aafdcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9f3740"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f398aaf1cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9e0100"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f398ab0acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa19100"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f398ab51810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa4fe60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f398ab3d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa1e740"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f398ab2c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9f8d10"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f398aafbcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9ee100"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f398ab10cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa28100"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f398ab78810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aaa9100"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f398ab64810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa7ad10"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f398ab309a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa02740"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f398ab5f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa70100"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f398ab4b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa40e00"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f398ab379a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa10740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f398ab269a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9ead10"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f398ab0ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa1e740"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f398ab84800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aae8d10"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f398ab6e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa92740"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f398ab59810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa61100"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f398ab459a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa32d10"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f398ab08cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa58740"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f398ab01cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9fc100"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f398aaf5cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9e0100"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f398ab419a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa28100"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f398ab06cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa53100"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f398ab7c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aab3d10"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f398ab68810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa83740"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f398ab53810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa53100"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f398ab0ecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa24d10"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f398aaf9cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9ead10"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f398ab4f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa4a9f0"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f398ab3b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa19100"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f398ab2a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9f3740"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f398ab76810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aaa5d10"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f398ab2e9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9fc100"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f398ab72810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa9b100"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f398ab5d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa6bd10"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f398ab499a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa3b740"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f398ab359a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa0b100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f398ab249a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9e5740"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f398ab80810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aabd740"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f398ab6c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa8c100"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f398ab57810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa5dd10"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f398ab439a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa2d740"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f398ab16ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa66740"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f398aaffcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9f8d10"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f398ab3f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa24d10"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f398aaf3cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398a9e5740"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f398aaedcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa07d10"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f398ab209f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f398aa75740"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f398a96cd90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f398a963e50"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f398a953020"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f398b12bb70"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f398a9222e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398a94b470"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f398a948060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f398a94cb10"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f398a94cb10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f398a91f020"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f398a947340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f398a925e70"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f398a925e70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f398a90bb90"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f398a942660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f398a9230f0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f398a9230f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f398a906710"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f398a90e2f0"/></from>
      <to><interface-ref name="Port40" scoped="" ref="0x7f398ab51810"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f398a90ade0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f398ab4d9a0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f398a905930"/></from>
      <to><interface-ref name="Port43" scoped="" ref="0x7f398ab4b9a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f39893cd440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f398a8d83f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f39893cda50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f398a83cd70"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f398a83cd70"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f398a832940"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f39893d2020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f398ac53b60"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f39893d47c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f398a8d5ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f398a8d5ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f398a844400"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f398a8d48a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f39893c6760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f398a8d52c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f398a845020"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f398a845020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f3988ff9530"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f398a8d94d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f398a8d2d60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f398a8d7020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f398a846210"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f398a846210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3988ffa740"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f398a8d83f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f398a8c0710"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f398a844400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3988ff8930"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f398a844cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f398a8d48a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f398a8bfbf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f398a844400"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f398a8c0d80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f398ac4c6d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f398a8bf5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f398ac4bbd0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f398a8457a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3988ff9cb0"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3988ff7270"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f398a844cd0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f3988ff7a30"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f3988ffd4a0"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f3988ff5c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f398a829700"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f398ac46360"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f398a824250"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f398ab1ecc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f398a8221f0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f398ab18cc0"/></to>
    </wire>
    <wire loc="114:../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f398a705500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f398a6e9680"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f398a6efbe0"/></to>
    </wire>
    <wire loc="44:../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f398a6e2380"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f398b1d7080"/></to>
    </wire>
    <wire loc="47:../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f398a6e2aa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f398af4d3b0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f3988fb1020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f3988fae020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f3988fae020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f3988fa38d0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f3988fa38d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f398a670390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f3988fa8140"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f3988f979d0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f3988f979d0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f398a66d210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f3988fac7b0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f3988f9e4f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f3988f9e4f0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f398a1e29f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3988fa9340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3988f98c60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3988f98c60"/></from>
      <to><interface-ref name="ResourceReadNow" scoped="" ref="0x7f398a66b020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988fa11c0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f398a119a10"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988f9b260"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f398a119a10"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988f95280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f398a119a10"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f398a667d40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988fa11c0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f398a664450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f3988f8e400"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f3988f8e400"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f398a5fc1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7f398a66a390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3988f8f660"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3988f8f660"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f398a461d20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988f8c660"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988fa11c0"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7f398a637e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f3988f8d400"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f398a5fb960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f3988f8dcf0"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f398a5f9920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f398a45d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f398a602cc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f3988f7b2a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988f8c660"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f398a45b740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f3988f7d020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7f398a5fb960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f398a5f0af0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7f398a5f61d0"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7f398a5ee910"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f398a5f9920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f398a5efab0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f398a5fc1d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f398a5f1370"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f398a602cc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f398a47c520"/></to>
    </wire>
    <wire loc="98:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f398a47c520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3988f656c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f398a5ec280"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f398a47bb20"/></to>
    </wire>
    <wire loc="100:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f398a47bb20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3988f63cb0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f398a5de0d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f398a50b020"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f398a5d9be0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7f398ab309a0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f398a5d7c80"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7f398ab2e9a0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f398a5d5c80"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7f398ab2c9a0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f398a5d3c80"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7f398ab2a9a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f398a5d1c80"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7f398ab289a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f398a5cfc80"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7f398ab269a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f398a5ccc80"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7f398ab249a0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f398a5cac80"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7f398ab229a0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f398a5ea020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f398b1447b0"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f398a5dd880"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7f398b143020"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f398a5dcd30"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7f398b1425a0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f398a5da120"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7f398b138140"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f398a5dae60"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7f398b137020"/></to>
    </wire>
    <wire loc="99:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f398a47b3a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f3988f63530"/></to>
    </wire>
    <wire loc="101:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3988f62610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f398a47a570"/></to>
    </wire>
    <wire loc="103:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f3988f62dd0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f3988f67670"/></to>
    </wire>
    <wire loc="68:../../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f3988f61900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7f398a461d20"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f398a3ed6f0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f398a3ecad0"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7f398a45d1d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f398a3e8920"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f398a45b740"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f398a3eb860"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f398a457240"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f398a3e9540"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f398a457e00"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f398a4532b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398a225370"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398a225370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f398a3ac020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f398a445840"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398a21fd10"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398a21fd10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f398a3ac020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f398a440d00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398a217750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398a217750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f398a3ac020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f398a4569a0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f398a50b020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7f398a3e52a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f398a3ac020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f398a3a3c30"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f398a3a3c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398a245150"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f398a3a7e50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f398a2c1020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f398a399500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f398a237790"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f398a2c1020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3988f2e860"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f398a23f640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f398a2942f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f398a28f850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f398a2c1870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f398a2c1870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3988f275f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f398a236a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f398a325b70"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f398a325b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f398a31dcf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3988f2e860"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3988f11360"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f3988f21d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3988f2d140"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3988f2d140"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3988f11bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3988f249b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f398a325b70"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988f0edd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988f17020"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988f17020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f398a37ecd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988f0b440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988f16760"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988f16760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f398a379a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988f0a760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988f14a80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988f14a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f398a3763f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f398a37ecd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f398b12bb70"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f398a379a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f398b129410"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f398a3763f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f398b120a20"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f398a37ecd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f398b12bb70"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f398a379a40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f398b1288c0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f398a3763f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB1" scoped="" ref="0x7f398b11f890"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f398a37ecd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f398b12bb70"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f398a379a40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f398b126020"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f398a3763f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f398b11e700"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f398a37ecd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f398b12bb70"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f398a379a40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f398b1255a0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f398a3763f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f398b11d570"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f398a37ecd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f398b12bb70"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f398a379a40"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f398b124a50"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f398a3763f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f398b11c3e0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f398a37ecd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f398b12bb70"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f398a379a40"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f398b122020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f398a3763f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f398b11b1f0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f398a37ecd0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f398b12bb70"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f398a379a40"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f398b1215a0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f398a3763f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f398b11a020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f398a2ff0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f398a96cd90"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f398a28c9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f398a23aa00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988e87020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988f9b260"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f398a1dd020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988f9b260"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f398a1dace0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3988e8a020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3988e8a020"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f398a461d20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f398a1db720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f3988e8ac30"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f3988e8ac30"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f398a5fc1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f398a1e29f0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f398a160cb0"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f398a1ce580"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f398a1dd020"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f398a12f8f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f398a1dace0"/></to>
    </wire>
    <wire loc="35:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f398a133bf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f398a1d49c0"/></to>
    </wire>
    <wire loc="38:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f398a1d1d50"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f398a1db720"/></to>
    </wire>
    <wire loc="39:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f398a1cd900"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f398a1674f0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f398a1674f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3988e75a90"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7f398a1a3020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7f398a1b1600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7f398a1acd50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f398a168b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3988e7a020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3988e7a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3988e5f660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f3988e6e210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3988e7a870"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3988e7a870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3988e5e020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3988e71e10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f398a325b70"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988e5a190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988e64450"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988e64450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f398a37ecd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988e59770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988e63a80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988e63a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f398a379a40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988e58a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988e62da0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988e62da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f398a3763f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f3988e89bd0"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f398a5fb960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f3988e88590"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f398a5f9920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f398a45d1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f398a602cc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f3988e15cc0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988e87020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f398a45b740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f3988e17a60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f398a667d40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988f95280"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f398a664450"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f3988e0ade0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f3988e0ade0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f398a5fc1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="SubResourceReadNow" scoped="" ref="0x7f398a6686e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3988e0a1d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3988e0a1d0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f398a461d20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988e07020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988f95280"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f3988e09d30"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f398a5fb960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f3988e08650"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f398a5f9920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f398a45d1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f398a602cc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f3988df89e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988e07020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f398a45b740"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f3988df9670"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f398a0c2880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f398a09ab70"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f398a0ea430"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f398a0c1980"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f398a0c1980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f39896e9020"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f398a0e8210"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f398a0be900"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f398a0be900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f39896e8df0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f398a0bc760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f39896e5a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f398a0ddd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f39898bc550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f39898bc550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f39898aea80"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f398a0cfb20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f398a0b0bb0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f398a0b0bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f398a090080"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f398a0e9600"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f398a0c0cb0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f398a0c0cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f39896e8210"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398a0e6cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398a0ba810"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398a0ba810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398a091020"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f398a0e75f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f398a0bd020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f398a0bd020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f39896e6470"/></to>
    </wire>
    <wire loc="87:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f398a0dae60"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f39898b8660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f39898b8660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f39898aaaf0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f398a09ab70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f398971bb80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f398a0a8d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f39896e38b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f398a09bd20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f39896e4ce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f398a0b3970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f398a092140"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f398a092140"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f39898c1670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f398a090080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f398971b080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398a091020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f39898be6e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f398a0a6020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f398a090b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f398a090b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f3989706020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f398a0afa80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f398a0919d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f398a0919d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f39898bda70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f39896db0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f398a097d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f39896e2860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f398a094d10"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f398a094d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f3989783020"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f39896e1690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f398a093a90"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f398a093a90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f3989783d50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f39896dd4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3989a62b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f39896e1ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f39898c1670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f39898c1670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f39898b3d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39896e0b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39898bd0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39898bd0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39898af640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f39896df610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f3989ffd670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f3989ffd670"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f3989ff51b0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f39896dc1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f398a08a3b0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f398a08a3b0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f398a082ad0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f39896dbd30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f398a94f020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f398971bb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f3989718d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f39898bda70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f39898ae020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f3989706020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f3989704410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f3989783020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f3989779bb0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f398971b080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f39897132d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f398a095820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f3989784900"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f3989784900"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f3989779500"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f39898be6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f39898b0c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f398a097d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989785020"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3989785020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f398977c910"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f398a096a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3989785c60"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3989785c60"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f398977b660"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f398a094020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f3989782440"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f3989782440"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f39897770d0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f3989783d50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f39897789d0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f3989718d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f398a08c460"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f398a08c460"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f398a0832d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3989781890"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f39897d64d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f39897d64d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f39897d2d50"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f39897d33b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3989709350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f3989709350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3989706d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3989706d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f398971fce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f398971fce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3989719860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3989719860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f398a08b020"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f398a08b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f398a083dc0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3989781200"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f398971c980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f398971c980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3989718690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3989718690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f39897b8d00"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f39897b8d00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f39897b11e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f39897b5b80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f398a08bcc0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f398a08bcc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f39899457c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f39899457c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f398993e020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420RxState" scoped="" ref="0x7f398a085c60"/></from>
      <to><interface-ref name="CC2420RxState" scoped="" ref="0x7f398a081980"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f398a080310"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f398a00b220"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f398a00b220"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989ff74b0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f398a078880"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f398a0085b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f398a0085b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f3989ff3130"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f398a07eba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3989a3b6c0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f398a07eba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f39899485c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f39899485c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3989940ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f3989a3b6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f3989a2f020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f398a06f810"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f3989a38020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f3989a38020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f3989a2f8c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f398a077700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f3989a38cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f3989a38cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f3989a2e650"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f398a06db00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f39898c1670"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f398a064130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39898bd0c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f398a06cb60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f39897f2a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f39897f2a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f39897eba20"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f398a05f850"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f39897f4aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f39897f4aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f3989ca71d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f398a06e470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f398a94f020"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f398a05a730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f398a05b7d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f398a05c890"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f3989ffc9b0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f3989ff2500"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f3989ff03a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f3989f48220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f3989f48220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f3989f42af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f3989feb5c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f3989f03cd0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f3989f03cd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f3989ef6b60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f3989fea830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f3989eff6a0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f3989eff6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f3989ee7d70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f3989fe9b50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f3989efdce0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f3989efdce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f3989edd710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f3989fe15b0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f3989ec6c70"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f3989ec6c70"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f3989d78a30"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f3989fd08f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989aeee20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3989aeee20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989d274d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f3989fcf990"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f3989aea7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f3989aea7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f3989fd1100"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f3989ae9ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f3989ae9ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f3989fd01d0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f3989aecad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f3989aecad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f3989fd1830"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f3989ae8160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f3989ae8160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f3989fd41d0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f3989ade870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f3989ade870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f3989fd4a80"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f3989adb880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f3989adb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f3989fd83c0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f3989ada0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f3989ada0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f3989fd8c90"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f3989ae2e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f3989ae2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f3989fd75f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f3989ae1670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f3989ae1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f3989fe09a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f3989acd500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f3989acd500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f3989fe0020"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f3989acece0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f3989acece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f3989fd3020"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f3989adfe50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f3989adfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f3989fd38c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f3989ae1e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f3989ae1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f3989fd21d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f3989ae0e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f3989ae0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f3989fcc560"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989abba80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3989abba80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989d274d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f3989fce6f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989a8f9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3989a8f9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989d274d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3989fdedd0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3989a62b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f3989fee970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f3989a61d70"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f3989fc1020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f3989fc2020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3989f4b7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3989f42260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3989f42260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3988dcf260"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f3989f42af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3988dcfab0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3988dcf260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3988dc73d0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3988dcfab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3988dc0020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f3988dc73d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f3988da7ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f3988dba780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3988dc7c20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f3988dc7c20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f3988da55b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3988dbd3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3989f2c080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3989f2c080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3989f27cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988da2710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988db19d0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988db19d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f398a37ecd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988da1da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988daf120"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988daf120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f398a379a40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988d9f0c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988da9440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988da9440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f398a3763f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f3989f230f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f398a96cd90"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f3989f01020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f3989ef0710"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f3989f00390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f3989eeb1d0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f3989f49a70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f3989efa020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f3989efe9b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f3989ee2b60"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989ef92f0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f398ab64810"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989ef5de0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f398ab399a0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989eef930"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f398ab78810"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989eea480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f398ab84800"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989ee5020"/></from>
      <to><interface-ref name="Port57" scoped="" ref="0x7f398ab329a0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989ee1de0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f398ab7e810"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989edb930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f398ab359a0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f3989ec6060"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f3989ebd760"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f3989ec58c0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f3989d69a70"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3989ea62b0"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7f398b1425a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f3989ea55d0"/></from>
      <to><interface-ref name="CaptureA1" scoped="" ref="0x7f398b132d10"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f3989ea4480"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f398ab7e810"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3989e9a450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3989f2c080"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f3989ea2410"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f3989e9c180"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3989e79020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3989e94110"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3989e94110"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3989e82430"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="LocalTimeMicro" scoped="" ref="0x7f3989ea1620"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f3989e95d30"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f3989d77610"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f3989e5f020"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f3989e5f020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f3989e4cbc0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f3989d68610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f3989e6d170"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f3989e6d170"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f3989e5ed30"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f3989e80910"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f3989e8e260"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f3989e8e260"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3989e8aae0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f3989e88c30"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f398b1447b0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f3989e6b020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f3989e58bc0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f3989e60020"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f3989e4ebc0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f3989e68020"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f3989e55bc0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f3989e65020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f3989e53bc0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f3989e72060"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f3989e5ac40"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f3989e62020"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f3989e50bc0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f3989e6a020"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f3989e57bc0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f3989e64020"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f3989e52bc0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f3989e6c020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f3989e59bc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f3989e61060"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f3989e4fc40"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f3989e69020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f3989e56bc0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f3989e66020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f3989e54bc0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f3989e73100"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f3989e5bc80"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f3989e63020"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f3989e51bc0"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f3989aea160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989adc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f3989ad40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f3989adb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f3989ac8500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f3989acb500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f3989ae9490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f3989ad1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f3989acc500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f3989ad7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f3989ad80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989aeda90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989d26350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989d26350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989d1e660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f3989ae8e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f3989ae5490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f3989ad0c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f3989ae5be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f3989accce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f3989ad10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f3989ae0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f3989ad20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f3989ad4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f3989ad2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f3989acace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f3989acbce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f3989ad8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f3989ad30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f3989acdce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f3989ada880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f3989ac8ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f3989d252c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f3989aec480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f3989ae2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f3989adf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f3989ad50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f3989ad5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f3989adc0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f3989ae32f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f3989ae2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f3989ae87b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f3989ace500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f3989aca500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f3989ad70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f3989ad3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f3989aeae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f3989ad90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f3989ae3940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f3989ad9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f3989ad00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f3989ac79b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f3989d252c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f3989d252c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f3989d1c890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d1bba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d19a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3989d274d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989d1d510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d188b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f3989d0ab40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f3989cac770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f3989cac770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f3989ca71d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f3989d17060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989c89140"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3989c89140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3988c9c9c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f3989d14c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f3989c89d90"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f3989c89d90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f3988c9a020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f3989d0a2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f3989b15410"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f3989b15410"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f3988c99120"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3989d15a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f398a94f020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f3989d07bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f3989ca71d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f3989ca2b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f3988c99120"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f3989c74850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f3988c9a020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f3989c75020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3988c9c9c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989c77430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f3988c9b760"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f3988c912c0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f3988c912c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f3989b592c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f3989c75020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f3989c18a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f3988c9a630"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f3989c756a0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f3989c756a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f3989c17060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f3989c72a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f3988c998c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3988c8a440"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3989c766b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f3989c73690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3988c92640"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3988c92640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989b5a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f3989c702a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f3988c8bc10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f3988c8bc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f3989b5c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3989c766b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3989c18250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f3989c74850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f3989c17c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3989c77430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989c19470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f3989c153e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f3989c72a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f3989c165b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f3989c73690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f3989c10480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f3989c702a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f3989c15a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f3989c05850"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f3989c05850"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f3989bfc020"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3989c10c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f398a94f020"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f3989c0d2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f3989c003b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f3989bf8dc0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3989c05020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3989bff710"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f3989bf76d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f398ab0ecc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f3989bf5670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f398ab0ccc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f3989bf3670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f398ab0acc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f3989bf1670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f398ab06cc0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f3989bef670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f398ab08cc0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f3988c8f2b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f3989c05850"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3988c91a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3989b59ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3989b59ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3989b4fe80"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3989b588a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3988c8a440"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f3989b592c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f3989b509e0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f3989b509e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f3988c2f3a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f3989b5c1d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f3989b56060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3989b5a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989b51b60"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3989b51b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3988c30540"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3989b4fe80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3988c2d8b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f3989b55060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f3989c003b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3989b4e770"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3989b588a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3989b55e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3989b4fe80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3989b335f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3989b4f270"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3989b4f270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3988c2fb20"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3989b49880"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3989c05020"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3988c2c210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3989b4e770"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f3988c2c9d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f3988c32330"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f3988c2ac50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3988bfa3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3989b49880"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f3988bfab00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f3989b33020"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3988bf80f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3989b335f0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3988bf8d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3989b32270"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f3989aaec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f3989ab9da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f3989ab2b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989aac670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f3989aa5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f3989aace50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f3989a982f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f3989a9a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f3989ab7120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f3989aa0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f3989a9b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f3989ab1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f3989aafc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f3989aa6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f3989aa8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f3989aab670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989aba760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989d26350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f3989ab5aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f3989ab4120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f3989a9fa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f3989ab4870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f3989a9bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f3989ab7dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f3989aa1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f3989aaf480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f3989ab1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f3989ab9750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f3989aa2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f3989aa4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f3989aa1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f3989a99ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f3989a9aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f3989aa7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f3989aa4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f3989a9dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f3989aa9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f3989a98ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f3989d252c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f3989ab9100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f3989ab2370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f3989aae480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f3989aa6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f3989aabe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f3989aa5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f3989aad670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f3989ab8450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f3989aade50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f3989ab3020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f3989ab3cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f3989a9d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f3989a9ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f3989ab5450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f3989a9e2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f3989a992f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f3989aa7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f3989aa2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f3989ab8aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f3989ab7770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f3989aa9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f3989ab3670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f3989aa8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f3989aa0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f3989a977a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f3989d252c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f3989a82c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f3989a8cda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f3989a85b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989a7f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f3989a78e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f3989a7fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f3989a6b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f3989a6e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f3989a8a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f3989a74670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f3989a6f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f3989a84c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f3989a83c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f3989a79670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f3989a7ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f3989a7e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989a8e760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989d26350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f3989a89aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f3989a88120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f3989a72a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f3989a88870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f3989a6fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f3989a8adc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f3989a75e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f3989a83480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f3989a84480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f3989a8c750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f3989a76e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f3989a77670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f3989a75670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f3989a6dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f3989a6ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f3989a7b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f3989a77e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f3989a70ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f3989a7d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f3989a6bad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f3989d252c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f3989a8c100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f3989a85370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f3989a82480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f3989a79e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f3989a7ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f3989a78670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f3989a80670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f3989a8b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f3989a80e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f3989a86020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f3989a86cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f3989a702f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f3989a71ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f3989a89450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f3989a712f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f3989a6d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f3989a7be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f3989a76670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f3989a8baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f3989a8a770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f3989a7de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f3989a86670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f3989a7c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f3989a74e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f3989a6a7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f3989d252c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f3989a34990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f3989a2d5e0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f3989a36150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f3989a2dd70"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f3989a2b7f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f3989f48220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f3989a1d500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f3989f49a70"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f3989a17820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f3989f03cd0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f3989a16b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f3989efe9b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f3989a1e880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f3989ec6060"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f3989a13020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989978c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3989978c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989d274d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989a13d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f39899778f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f39899778f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989d26350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f3989a106d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f39899762f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f39899762f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f3989a10de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f3989975cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f3989975cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f3989a0f530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f3989974370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f3989974370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f3989a0fc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f3989972d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f3989972d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f3989a11e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f398996cc60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f398996cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f3989a12780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f39899547a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f39899547a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f3989d252c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f3989a11550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f39899592f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f39899592f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f3989a0e3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f398996e480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f398996e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f3989a0d5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f398996ae50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f398996ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989a0c020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989969670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989969670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f3989a0ee80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f39899707b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f39899707b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f3989a0b9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f3989956ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f3989956ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f3989a0c890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f39899572f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f39899572f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f3989a0b130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f3989957ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f3989957ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f3989a05d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f3989948df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f3989948df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f398993f550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f3989a28a00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f39898c1670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f3989a269a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39898bd0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3989a257c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f39898bc550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f3989a18b30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f39898b4480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f39898b4480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f39898a68b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3989a096c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f398a94f020"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f398996bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f3989975020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f398996fc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f3989962e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f3989969e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f39899552f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f398995d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f398996ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f3989963670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f3989965e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f3989968670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f3989971370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f398995ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f3989971ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f3989959ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f3989972060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f398995ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f398996c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f3989976940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f398995fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f3989961670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f398995e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f3989964670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f3989961e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f398995aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f3989967670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f3989955ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f3989d252c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f398996f490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f398996b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f3989963e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f3989968e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f3989962670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f398996a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f3989975670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f3989970160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f3989970e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f398995a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f398995bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f39899726b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f398995b2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f39899562f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f3989964e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f398995f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f39899749c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f3989967e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f3989965670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f398995de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f3989944020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f398993e7c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f3989929150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f398a94f020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f398993d020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f3989f03cd0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f398993c380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f3989f01020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f398993b6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f3989f00390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f398993aa50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f3989ec58c0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f39899396e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989844520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f3989844520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f3989d274d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f3989938530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f3989820480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f3989820480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f3989d252c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f3989937ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f398983e060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f398983e060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f39899373a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f398983ed00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f398983ed00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f3989936330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f39898c1670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39899351e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39898bd0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3989933d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f39898bc550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f3989935b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f3989ffd670"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f398992e3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f3989835840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f3989835840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f398992ecb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989834060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989834060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f398992fb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f398983cae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f398983cae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f398992c6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f3989821c60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f3989821c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f398992d590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f3989824c60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f3989824c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f398992de00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f3989823480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f3989823480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f398992a020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f3989824480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f3989824480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f398992a8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f3989842c20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f3989842c20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f398991e9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f3989850020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f3989f2c080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f39898a43b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f3989853cf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f39898a26e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f398a399500"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f398984c0b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f398a3ac020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f3989836620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f3989841940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f398983a620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f398982d840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f3989834840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f3989840cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f3989828060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f3989825c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f3989839620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f3989838620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f398982e060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f3989831840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f3989833060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f39898422b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989d26350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f398983e6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f3989827480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f398983c490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f398983f9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f398982a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f3989839e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f398983ae00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f39898412f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f398982b840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f398982c060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f398982a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f3989821480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f3989830060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f398982c840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f3989825480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f3989832060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f398983be00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f3989838e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f398982e840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f3989833840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f398982d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f3989835060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f3989840020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f398983b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f3989826c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f3989826480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f3989827c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f3989823c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f3989830840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f398982b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f3989840670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f398983f370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f3989832840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f398983b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f3989831060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f3989828840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f398981f160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f3989d252c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f39897ef920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f39897ec940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f39897fa990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f39897ec080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f39897ce110"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f39897d33b0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f39897ced60"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f39897d0b00"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f39897d0b00"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f3989ca71d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f39897cdbe0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f39897f2a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39897cc4b0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39898bd0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f39897b5430"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f39897b18f0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f39897af770"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f39897b5b80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39897afdf0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39898bd0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f3989777e20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f3989781890"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f3989776b50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f3989781200"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f39897752f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f39898c1670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f3989774170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39898bd0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f3989774b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f3989727410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f3989748db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f398971a800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f3989716580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f3989716580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f3989ca71d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f39897011c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398a091020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="38:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/shimmer2r/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="37:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P.UartP" loc="41(Msp430Uart0P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.2 $ $Date: 2010/07/29 13:19:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="46:../../../tos/platforms/shimmer2r/LedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="45:../../../tos/platforms/shimmer2r/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/platforms/shimmer2r/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="41:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="39(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2013/04/09 14:28:58 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ShimmerSerialP" loc="35:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:../../../tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="XXTEAC" loc="1:../../../tos/platforms/shimmer2r/XXTEAC.nc">
      <configuration/>
    </component>
    <component qname="XXTEAP" loc="1:../../../tos/platforms/shimmer2r/XXTEAP.nc" safe="">
      <module/>
    </component>
    <component qname="XXTea16BitsAmAppC.Sensor" loc="49(XXTea16BitsAmAppC.Sensor):../../../tos/platforms/shimmer/DemoSensorC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/DemoSensorC.nc">
        <short> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value.</short>
        <long> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value. The platform author chooses which sensor actually sits&#10; behind DemoSensorC, and though it's probably Voltage, Light, or&#10; Temperature, there are no guarantees.&#10;&#10; This particular DemoSensorC on the telosb platform provides a&#10; voltage reading, using VoltageC. &#10;&#10; To convert from ADC counts to actual voltage, divide this reading&#10; by 4096 and multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-05-21 22:07:24 $&#10; &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="XXTea16BitsAmAppC.Sensor.DemoSensor" loc="43(XXTea16BitsAmAppC.Sensor.DemoSensor):../../../tos/platforms/shimmer/VoltageC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/VoltageC.nc">
        <short>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.</short>
        <long>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-05-21 22:07:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC" loc="43(XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC):../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
        <short>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.</short>
        <long>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InternalVoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC" loc="47(XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient" loc="43(XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC" loc="47(XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient" loc="43(XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430InternalVoltageP" loc="34:../../../tos/chips/msp430/sensors/Msp430InternalVoltageP.nc">
      <module/>
    </component>
    <component qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC" loc="47(XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC):../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient" loc="43(XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="56:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <documentation loc="48:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the SHIMMER platform.</short>
        <long>&#10; The Active Message layer on the SHIMMER platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2012-07-26 17:51:39 $&#10;&#10; mods to provide CC2420RxState interface, which allows application &#10; to disable radio reception and/or cca for manual control of high-density&#10; synchronization routines&#10; @author Steve Ayer&#10; @date   March, 2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2012-03-02 16:52:48 $&#10;&#10; mods to provide CC2420RxState interface, which allows application &#10; to disable radio reception and/or cca for manual control of high-density&#10; synchronization routines&#10; @author Steve Ayer&#10; @date   March, 2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-10 18:22:02 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10; @date May 14, 2008&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10; @date May 14, 2008&#10;&#10; @author Steve Ayer&#10; @date April, 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="44(HplCC2420InterruptsC.CaptureSFDC):../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Steve Ayer/Miklos Maroti&#10; @date   February, 2011&#10;&#10; re-named indicating that this HAL module is specifically required to handle anomalies in the &#10; cc2420 stack that require sfd capture to happen on a timerb pin;  designs that use a timera pin &#10; need this code to resolve the aliasing between timestamps from 32khz and 1mhz timers.&#10; thanks to miklos for providing this re-written captured event handler as a straight-forward work-around!&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.CounterToLocalTimeC" loc="46(HplCC2420InterruptsC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="41:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <documentation loc="33:../../../tos/platforms/shimmer/CounterMicro32C.nc">
        <short>&#10; CounterMicro32C provides at 32-bit counter at 1024000 ticks per second.</short>
        <long>&#10; CounterMicro32C provides at 32-bit counter at 1024000 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acee6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f398aceea20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform" loc="54(CounterMicro32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acee6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f398aceea20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acee6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f398aceea20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.CounterMicroToLocalTime" loc="46(HplCC2420InterruptsC.CounterMicroToLocalTime):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acee6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f398aceea20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="45(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma1P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma1P.SpiP" loc="73(Msp430SpiNoDma1P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="40(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:../../../tos/platforms/shimmer/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="XXTea16BitsAmAppC.TimerMilliC" loc="44(XXTea16BitsAmAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="XXTea16BitsAmC" loc="5:XXTea16BitsAmC.nc" safe="">
      <documentation loc="33:../../../tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f398b10e970" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f398b10ed10" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f398b10d110" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f398b10d490" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f398b10d810" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f398b10db80" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f398b10c020" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f398b10c3b0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f398b10c780" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f398b0d1e70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f398b0cd270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f398aff33c0" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f398afc40d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f398afa10d0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart0C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f398aae7190" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f398aae7540" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f398aae78f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f398aae7ca0" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f398aae6060" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f398a966e60" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f398a966e60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f398a8ba5b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f398a8ad5b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f398a894d80" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f398a740490" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f398a740490"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f398a740810" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="49:../../../tos/platforms/shimmer/DemoSensorC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer/DemoSensorC.nc">
        <short> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value.</short>
        <long> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value. The platform author chooses which sensor actually sits&#10; behind DemoSensorC, and though it's probably Voltage, Light, or&#10; Temperature, there are no guarantees.&#10;&#10; This particular DemoSensorC on the telosb platform provides a&#10; voltage reading, using VoltageC. &#10;&#10; To convert from ADC counts to actual voltage, divide this reading&#10; by 4096 and multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-05-21 22:07:24 $&#10; &#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="43:../../../tos/platforms/shimmer/VoltageC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer/VoltageC.nc">
        <short>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.</short>
        <long>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-05-21 22:07:24 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430InternalVoltageC" loc="43:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
        <short>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.</short>
        <long>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f398a4d4850" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f398a4cc3b0" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f398a3553b0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f398a3553b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f398a31c6b0" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f398a31c6b0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f398a31ce80" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f398a31ce80"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f398a31b290" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f398a31b290"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f398a31ba70" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f398a31ba70"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f398a31be40" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f398a319670" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f398a319670"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f398a3236d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f398a3236d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f398a2f8020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f398a2f8020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f398a2f8410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f398a2f8410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f398a2f8bf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f398a2f8bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f398a2f7020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f398a2bccc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f398a2bccc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f398a286230" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f398a286230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f398a286560" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f398a238dd0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f398a238dd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7f398a15f3b0" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7f398a15f700" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f398a15f700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-10 18:22:02 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="CC2420GpioCaptureC" loc="44:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Steve Ayer/Miklos Maroti&#10; @date   February, 2011&#10;&#10; re-named indicating that this HAL module is specifically required to handle anomalies in the &#10; cc2420 stack that require sfd capture to happen on a timerb pin;  designs that use a timera pin &#10; need this code to resolve the aliasing between timestamps from 32khz and 1mhz timers.&#10; thanks to miklos for providing this re-written captured event handler as a straight-forward work-around!&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi1C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f398b1d4520" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b1d4520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b1d48a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f398b1d7080" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f398b1d7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f398b1d7400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398b1d64e0" loc="40:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398b1d64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b1d6860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f398b1c6120" loc="6:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f398b1c6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b1c64a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398b1c92f0" loc="4:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398b1c92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b1c9670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f398b1c9a00" loc="5:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f398b1c9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b1c9d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f398b1c6800" loc="7:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f398b1c6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b1c6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398b1bf080" loc="39:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398b1bf080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b1bf400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f398b1c7500" loc="39:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f398b1c7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b1c7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f398b18f9e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f398b18f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f398b195980"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f398b195020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f398b1951b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f398b195340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f398b18fd60"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f398b1954d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f398b195660"/>
        <function-ref name="initClocks" scoped="" ref="0x7f398b1957f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398b198440" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398b198440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b1987c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f398b180a70" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f398b180a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f398b17e980"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f398b17e020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f398b17e1b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f398b17e340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f398b180df0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f398b17e4d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f398b17e660"/>
        <function-ref name="initClocks" scoped="" ref="0x7f398b17e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f398b17ecc0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f398b17ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f398b17d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398b1803c0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398b1803c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b180740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f398b13ba50" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f398b13ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b13bdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b13a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b13a1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b13a340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b13a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b13a660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b13a7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b13a980"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b13ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f398b129410" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f398b129410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b129790"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b129920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b129ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b129c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b129dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b128020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b1281b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b128340"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b1284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f398b132d10" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f398b132d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b1310e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b131270"/>
        <function-ref name="captured" scoped="" ref="0x7f398b131400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b131590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b131720"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b1318b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f398b115020" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f398b115020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b1153a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b115530"/>
        <function-ref name="captured" scoped="" ref="0x7f398b1156c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b115850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b1159e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b115b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f398b137020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f398b137020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b1373a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b137530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b1376c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b137850"/>
        <function-ref name="fired" scoped="" ref="0x7f398b1379e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f398b11d570" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f398b11d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b11d8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b11da80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b11dc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b11dda0"/>
        <function-ref name="fired" scoped="" ref="0x7f398b11c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f398b112020" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f398b112020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b1123a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b112530"/>
        <function-ref name="captured" scoped="" ref="0x7f398b1126c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b112850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b1129e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b112b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f398b124a50" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f398b124a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b124dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b123020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b1231b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b123340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b1234d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b123660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b1237f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b123980"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b123b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f398b143020" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f398b143020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b1433a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b143530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b1436c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b143850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b1439e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b143b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b143d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b142020"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b1421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f398b118020" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f398b118020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b1183a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b118530"/>
        <function-ref name="captured" scoped="" ref="0x7f398b1186c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b118850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b1189e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b118b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f398b11f890" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f398b11f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b11fc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b11fda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b11e020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b11e1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f398b11e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f398b1288c0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f398b1288c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b128d40"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b127020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b1271b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b127340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b1274d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b127660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b1277f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b127980"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b127b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f398b131c70" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f398b131c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b12b020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b12b1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f398b12b340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b12b4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b12b660"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b12b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f398b114020" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f398b114020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b1143a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b114530"/>
        <function-ref name="captured" scoped="" ref="0x7f398b1146c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b114850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b1149e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b114b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f398b126020" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f398b126020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b1263a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b126530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b1266c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b126850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b1269e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b126b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b126d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b125020"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b1251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f398b137da0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f398b137da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b133180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b133310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b1334a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b133630"/>
        <function-ref name="fired" scoped="" ref="0x7f398b1337c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f398b1447b0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f398b1447b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b144b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b144cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b144e50"/>
        <function-ref name="get" scoped="" ref="0x7f398b14c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b14c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b14c340"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b14c4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b14c660"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b14c7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b14c980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b14cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f398b11c3e0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f398b11c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b11c760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b11c8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b11ca80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b11cc10"/>
        <function-ref name="fired" scoped="" ref="0x7f398b11cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f398b1425a0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f398b1425a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b142920"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b142ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b142c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b142dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b13b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b13b1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b13b340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b13b4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b13b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f398b122020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f398b122020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b1223a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b122530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b1226c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b122850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b1229e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b122b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b122d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b121020"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b1211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f398b12ddc0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f398b12ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b132180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b132310"/>
        <function-ref name="captured" scoped="" ref="0x7f398b1324a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b132630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b1327c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b132950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f398b117020" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f398b117020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b1173a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b117530"/>
        <function-ref name="captured" scoped="" ref="0x7f398b1176c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b117850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b1179e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b117b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f398b138140" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f398b138140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b1384c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b138650"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b1387e0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b138970"/>
        <function-ref name="fired" scoped="" ref="0x7f398b138b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f398b11e700" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f398b11e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b11ea80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b11ec10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b11eda0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b11d020"/>
        <function-ref name="fired" scoped="" ref="0x7f398b11d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f398b113020" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f398b113020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b1133a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b113530"/>
        <function-ref name="captured" scoped="" ref="0x7f398b1136c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b113850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b1139e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b113b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f398b1255a0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f398b1255a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b125920"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b125ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b125c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b125dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b124020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b1241b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b124340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b1244d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b124660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f398b12bb70" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f398b12bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b12a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b12a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b12a340"/>
        <function-ref name="get" scoped="" ref="0x7f398b12a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b12a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b12a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b12a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b12ab10"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b12aca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b12ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b129020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f398b11b1f0" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f398b11b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b11b570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b11b700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b11b890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b11ba20"/>
        <function-ref name="fired" scoped="" ref="0x7f398b11bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f398b119020" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f398b119020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b1193a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b119530"/>
        <function-ref name="captured" scoped="" ref="0x7f398b1196c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b119850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b1199e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b119b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f398b11a020" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f398b11a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b11a5a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b11a730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b11a8c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b11aa50"/>
        <function-ref name="fired" scoped="" ref="0x7f398b11abe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f398b120a20" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f398b120a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b120da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b11f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b11f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b11f340"/>
        <function-ref name="fired" scoped="" ref="0x7f398b11f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f398b1215a0" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f398b1215a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b121920"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b121ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b121c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b121dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b120020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b1201b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b120340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b1204d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b120660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f398b0daaa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f398b0daaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b0dae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f398b0da450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f398b0da450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b0da7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f398b0d9120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f398b0d9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b0d94a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f398b0dbd80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f398b0dbd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b0da180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f398b0dc540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398b0dc540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b0dc8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b0dca50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b0dcbe0"/>
        <function-ref name="get" scoped="" ref="0x7f398b0dcd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b0db020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b0db1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b0db340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b0db4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b0db660"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b0db7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b0db980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f398b0d3940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f398b0d3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b0d3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f398b0d32f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f398b0d32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b0d3670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f398b0d2020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f398b0d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b0d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f398b0d4bf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f398b0d4bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b0d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f398b0d53e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398b0d53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b0d5760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b0d58f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b0d5a80"/>
        <function-ref name="get" scoped="" ref="0x7f398b0d5c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b0d5da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b0d4020"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b0d41b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b0d4340"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b0d44d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b0d4660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b0d47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f398b087a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f398b087a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b087e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b086020"/>
        <function-ref name="captured" scoped="" ref="0x7f398b0861b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b086340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b0864d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b086660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f398b0cf9d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f398b0cf9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b0cfd50"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b088020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b0881b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b088340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b0884d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b088660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b0887f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b088980"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b088b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f398b084020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f398b084020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b0843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f398b088de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f398b088de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b087180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b087310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b0874a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b087630"/>
        <function-ref name="fired" scoped="" ref="0x7f398b0877c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f398b086930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398b086930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b086cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b086e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b085020"/>
        <function-ref name="get" scoped="" ref="0x7f398b0851b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b085340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b0854d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b085660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b0857f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b085980"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b085b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b085ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f398b07e160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f398b07e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b07e4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b07e670"/>
        <function-ref name="captured" scoped="" ref="0x7f398b07e800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b07e990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b07eb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b07ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f398b080020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f398b080020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b0803a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b080530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b0806c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b080850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b0809e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b080b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b080d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b07f020"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b07f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f398b07c7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f398b07c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b07cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f398b07f480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f398b07f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b07f800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b07f990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b07fb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b07fcb0"/>
        <function-ref name="fired" scoped="" ref="0x7f398b07fe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f398b07d020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398b07d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b07d3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b07d530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b07d6c0"/>
        <function-ref name="get" scoped="" ref="0x7f398b07d850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b07d9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b07db70"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b07dd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b07c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b07c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b07c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b07c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f398b0777a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f398b0777a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b077b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b077cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f398b077e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b076020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b0761b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b076340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f398b0796d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f398b0796d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b079a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b079be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b079d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b078020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b0781b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b078340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b0784d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b078660"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b0787f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f398b075c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f398b075c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b074020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f398b078ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f398b078ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b078e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b077020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b0771b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b077340"/>
        <function-ref name="fired" scoped="" ref="0x7f398b0774d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f398b076610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398b076610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b076990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b076b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b076cb0"/>
        <function-ref name="get" scoped="" ref="0x7f398b076e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b075020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b0751b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b075340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b0754d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b075660"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b0757f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b075980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f398b06fcb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f398b06fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b06e0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b06e230"/>
        <function-ref name="captured" scoped="" ref="0x7f398b06e3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b06e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b06e6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b06e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f398b071b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f398b071b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b070020"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b0701b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b070340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b0704d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b070660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b0707f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b070980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b070b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b070ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f398b06c2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f398b06c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b06c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f398b06f020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f398b06f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b06f3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b06f530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b06f6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b06f850"/>
        <function-ref name="fired" scoped="" ref="0x7f398b06f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f398b06eb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398b06eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b06d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b06d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b06d340"/>
        <function-ref name="get" scoped="" ref="0x7f398b06d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b06d660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b06d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b06d980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b06db10"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b06dca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b06de30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b06c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f398b0672f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f398b0672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b067670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b067800"/>
        <function-ref name="captured" scoped="" ref="0x7f398b067990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b067b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b067cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b067e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f398b069220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f398b069220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b0695a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b069730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b0698c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b069a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b069be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b069d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b068020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b0681b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b068340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f398b0657a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f398b0657a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b065b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f398b068610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f398b068610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b068990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b068b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b068cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b068e40"/>
        <function-ref name="fired" scoped="" ref="0x7f398b067020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f398b066160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398b066160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b0664e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b066670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b066800"/>
        <function-ref name="get" scoped="" ref="0x7f398b066990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b066b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b066cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b066e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b065020"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b0651b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b065340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b0654d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f398b05f7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f398b05f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b05fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b05fcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f398b05fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b05e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b05e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b05e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f398b0626d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f398b0626d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b062a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b062be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b062d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b060020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b0601b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b060340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b0604d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b060660"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b0607f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f398b05dc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f398b05dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b05c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f398b060ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f398b060ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b060e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b05f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b05f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b05f340"/>
        <function-ref name="fired" scoped="" ref="0x7f398b05f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f398b05e610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398b05e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b05e990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b05eb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b05ecb0"/>
        <function-ref name="get" scoped="" ref="0x7f398b05ee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b05d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b05d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b05d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b05d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b05d660"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b05d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b05d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f398b058cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f398b058cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b0570a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b057230"/>
        <function-ref name="captured" scoped="" ref="0x7f398b0573c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b057550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b0576e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b057870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f398b05ab30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f398b05ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b059020"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b0591b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b059340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b0594d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b059660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b0597f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b059980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b059b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b059ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f398b0552f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f398b0552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b055670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f398b058020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f398b058020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b0583a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b058530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b0586c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b058850"/>
        <function-ref name="fired" scoped="" ref="0x7f398b0589e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f398b057b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398b057b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b056020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b0561b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b056340"/>
        <function-ref name="get" scoped="" ref="0x7f398b0564d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b056660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b0567f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b056980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b056b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b056ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b056e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b055020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f398b04f2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f398b04f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b04f670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b04f800"/>
        <function-ref name="captured" scoped="" ref="0x7f398b04f990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b04fb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b04fcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b04fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f398b052220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f398b052220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b0525a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b052730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b0528c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b052a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b052be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b052d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b050020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b0501b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b050340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f398b04d7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f398b04d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b04db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f398b050610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f398b050610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b050990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b050b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b050cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b050e40"/>
        <function-ref name="fired" scoped="" ref="0x7f398b04f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f398b04e160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398b04e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b04e4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b04e670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b04e800"/>
        <function-ref name="get" scoped="" ref="0x7f398b04e990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b04eb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b04ecb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b04ee40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b04d020"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b04d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b04d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b04d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f398b0487a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f398b0487a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b048b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b048cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f398b048e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b047020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b0471b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b047340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f398b04a6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f398b04a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b04aa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b04abe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b04ad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b049020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b0491b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b049340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b0494d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b049660"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b0497f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f398b046c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f398b046c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b045020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f398b049ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f398b049ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b049e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b048020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b0481b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b048340"/>
        <function-ref name="fired" scoped="" ref="0x7f398b0484d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f398b047610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398b047610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b047990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b047b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b047cb0"/>
        <function-ref name="get" scoped="" ref="0x7f398b047e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b046020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b0461b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b046340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b0464d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b046660"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b0467f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b046980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f398b041cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f398b041cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b03f0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f398b03f230"/>
        <function-ref name="captured" scoped="" ref="0x7f398b03f3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b03f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b03f6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f398b03f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f398b043b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f398b043b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398b042020"/>
        <function-ref name="getControl" scoped="" ref="0x7f398b0421b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b042340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398b0424d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398b042660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b0427f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398b042980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398b042b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f398b042ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f398b03d2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f398b03d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b03d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f398b041020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f398b041020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398b0413a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398b041530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398b0416c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398b041850"/>
        <function-ref name="fired" scoped="" ref="0x7f398b0419e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f398b03fb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398b03fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398b03e020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398b03e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398b03e340"/>
        <function-ref name="get" scoped="" ref="0x7f398b03e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398b03e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398b03e7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f398b03e980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398b03eb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f398b03eca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f398b03ee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398b03d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f398b037240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f398b037240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b0375c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f398b03ba90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f398b03ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b03be10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f398b038260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f398b038260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b0385e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f398b0389f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f398b0389f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398b038d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f398b51a4c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f398b51a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f398b51a840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f398b88b3b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f398b88b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f398b88b730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f398b88b8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f398b88ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f398b6f4bc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f398b6f4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f398b830020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f398b001dc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f398b001dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398afff180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f398b002590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f398b002590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f398b002910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f398b0016c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f398b0016c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b001a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f398b002c00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f398b002c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b001020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f398b0011b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f398b001340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f398b908410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f398b908410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398b908790"/>
        <function-ref name="runTask" scoped="" ref="0x7f398b908920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f398b8993a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f398b8993a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b899720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f398b8998b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f398b899a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f398b270b70" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f398b270b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398b26f020"/>
        <function-ref name="runTask" scoped="" ref="0x7f398b26f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f398b2692c0" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f398b2692c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f398b269640"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f398b2697d0"/>
        <function-ref name="sleep" scoped="" ref="0x7f398b269960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f398b271c30" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f398b271c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398b270020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f398b2701b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f398b270340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f398a746020" loc="49:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f398a746020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398a7463a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398a746530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398a7466c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f398a746850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398a7469e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f398a746c30" loc="50:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f398a746c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398a745020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f398a7451b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398a745340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398a7454d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f398a745660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f398a7458b0" loc="51:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f398a7458b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f398a745c30"/>
        <function-ref name="source" scoped="" ref="0x7f398a745dc0"/>
        <function-ref name="address" scoped="" ref="0x7f398a744020"/>
        <function-ref name="destination" scoped="" ref="0x7f398a7441b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f398a744340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f398a7444d0"/>
        <function-ref name="type" scoped="" ref="0x7f398a744660"/>
        <function-ref name="setType" scoped="" ref="0x7f398a7447f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f398a744980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f398a744b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f398a744ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f398a743020" loc="52:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f398a743020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f398a7433a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f398a743530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f398a7436c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f3989497580" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f3989497580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3989497900"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3989497a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3989497c20"/>
        <function-ref name="cancel" scoped="" ref="0x7f3989497db0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989496020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f39894962d0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f39894962d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3989496650"/>
        <function-ref name="getPayload" scoped="" ref="0x7f39894967e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3989496970"/>
        <function-ref name="cancel" scoped="" ref="0x7f3989496b00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989496c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f3989494020" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f3989494020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f39894943a0"/>
        <function-ref name="source" scoped="" ref="0x7f3989494530"/>
        <function-ref name="address" scoped="" ref="0x7f39894946c0"/>
        <function-ref name="destination" scoped="" ref="0x7f3989494850"/>
        <function-ref name="setSource" scoped="" ref="0x7f39894949e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f3989494b70"/>
        <function-ref name="type" scoped="" ref="0x7f3989494d00"/>
        <function-ref name="setType" scoped="" ref="0x7f3989493020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f39894931b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f3989493340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f39894934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f398afa8ce0" loc="44:../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f398afa8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398afa50a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398afa5230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398afa53c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f398afa5550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398afa56e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f398af5b400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f398af5b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398af5b7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398af5b930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398af5bac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f398af5bc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398af5bde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f398af5c580" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f398af5c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398af5c920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398af5cab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398af5cc40"/>
        <function-ref name="cancel" scoped="" ref="0x7f398af5cdd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398af5b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f398af59720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f398af59720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398af59aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f398af59c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398af59dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398af58020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f398af581b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f398af58480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f398af58480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398af58800"/>
        <function-ref name="runTask" scoped="" ref="0x7f398af58990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f398af58c60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f398af58c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398af57020"/>
        <function-ref name="runTask" scoped="" ref="0x7f398af571b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f398af5a060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f398af5a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f398af5a3e0"/>
        <function-ref name="source" scoped="" ref="0x7f398af5a570"/>
        <function-ref name="address" scoped="" ref="0x7f398af5a700"/>
        <function-ref name="destination" scoped="" ref="0x7f398af5a890"/>
        <function-ref name="setSource" scoped="" ref="0x7f398af5aa20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f398af5abb0"/>
        <function-ref name="type" scoped="" ref="0x7f398af5ad40"/>
        <function-ref name="setType" scoped="" ref="0x7f398af59020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f398af591b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f398af59340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f398af594d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f398af4d3b0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f398af4d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398af4d730"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398af4d8c0"/>
        <function-ref name="start" scoped="" ref="0x7f398af4da50"/>
        <function-ref name="stop" scoped="" ref="0x7f398af4dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f398af523f0" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f398af523f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398af52770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398af52900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398af52a90"/>
        <function-ref name="cancel" scoped="" ref="0x7f398af52c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398af52db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f398af4c7e0" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f398af4c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398af4cb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f398af4ccf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398af4ce80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398af4b030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f398af4b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f398af4c1d0" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f398af4c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398af4c550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f398af39330" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f398af39330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f398af396b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f398af39840"/>
        <function-ref name="led1On" scoped="" ref="0x7f398af399d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f398af39b60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f398af39cf0"/>
        <function-ref name="get" scoped="" ref="0x7f398af39e80"/>
        <function-ref name="led1Off" scoped="" ref="0x7f398af44030"/>
        <function-ref name="led2Off" scoped="" ref="0x7f398af44670"/>
        <function-ref name="set" scoped="" ref="0x7f398af441c0"/>
        <function-ref name="led0On" scoped="" ref="0x7f398af44350"/>
        <function-ref name="led2On" scoped="" ref="0x7f398af444e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f398af46b20" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398af46b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f398af45020"/>
        <function-ref name="noAck" scoped="" ref="0x7f398af451b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f398af45340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f398af4b470" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f398af4b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f398af4b7f0"/>
        <function-ref name="source" scoped="" ref="0x7f398af4b980"/>
        <function-ref name="address" scoped="" ref="0x7f398af4bb10"/>
        <function-ref name="destination" scoped="" ref="0x7f398af4bca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f398af4be30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f398af46020"/>
        <function-ref name="type" scoped="" ref="0x7f398af461b0"/>
        <function-ref name="setType" scoped="" ref="0x7f398af46340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f398af464d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f398af46660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f398af467f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f398aee04a0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f398aee04a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398aee0820"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398aee09b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398aee0b40"/>
        <function-ref name="cancel" scoped="" ref="0x7f398aee0cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398aee0e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f398aede120" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f398aede120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398aede4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f398af38300" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f398af38300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398af386a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398af38830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398af389c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f398af38b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398af38ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f398aee2d60" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f398aee2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398aee1180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f398aee1310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398aee14a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398aee1630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f398aee17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f398aee30d0" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f398aee30d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398aee3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f398aee1a10" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398aee1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f398aee1d90"/>
        <function-ref name="noAck" scoped="" ref="0x7f398aee0020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f398aee01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f398aee36c0" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f398aee36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f398aee3a40"/>
        <function-ref name="source" scoped="" ref="0x7f398aee3bd0"/>
        <function-ref name="address" scoped="" ref="0x7f398aee3d60"/>
        <function-ref name="destination" scoped="" ref="0x7f398aee2020"/>
        <function-ref name="setSource" scoped="" ref="0x7f398aee21b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f398aee2340"/>
        <function-ref name="type" scoped="" ref="0x7f398aee24d0"/>
        <function-ref name="setType" scoped="" ref="0x7f398aee2660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f398aee27f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f398aee2980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f398aee2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f398aedcb90" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f398aedcb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398aed9020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398aed91b0"/>
        <function-ref name="start" scoped="" ref="0x7f398aed9340"/>
        <function-ref name="stop" scoped="" ref="0x7f398aed94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f398aed8790" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f398aed8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f398b1f10d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398aed8b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398aed8ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398aed8e30"/>
        <function-ref name="cancel" scoped="" ref="0x7f398aed7020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398aed71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398aedc540" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398aedc540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398aedc8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f398aed9c60" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f398aed9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f398b1f10d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398aed8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f398aed62b0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f398aed62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f398aed6630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f398aed67c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f398aed6950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f398aed6ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f398aed6c70"/>
        <function-ref name="get" scoped="" ref="0x7f398aed6e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7f398aed5020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f398aed5660"/>
        <function-ref name="set" scoped="" ref="0x7f398aed51b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f398aed5340"/>
        <function-ref name="led2On" scoped="" ref="0x7f398aed54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f398aed1970" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f398aed1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f398b1f10d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f398aed1cf0"/>
        <function-ref name="offset" scoped="" ref="0x7f398aed1e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f398aed6030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f398aecac40" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f398aecac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398aec9020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398aec91b0"/>
        <function-ref name="start" scoped="" ref="0x7f398aec9340"/>
        <function-ref name="stop" scoped="" ref="0x7f398aec94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f398ae626e0" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f398ae626e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398ae62a60"/>
        <function-ref name="runTask" scoped="" ref="0x7f398ae62bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f398aeb4780" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f398aeb4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f398aeb4b00"/>
        <function-ref name="stop" scoped="" ref="0x7f398aeb4c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f398ae994f0" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f398ae994f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398ae99870"/>
        <function-ref name="runTask" scoped="" ref="0x7f398ae99a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398aeca5f0" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398aeca5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398aeca970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f398aeb2360" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f398aeb2360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f398aeb26e0"/>
        <function-ref name="flush" scoped="" ref="0x7f398aeb2870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f398ae65c70" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f398ae65c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398ae64020"/>
        <function-ref name="runTask" scoped="" ref="0x7f398ae641b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f398aeb97e0" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f398aeb97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f398aeb9b60"/>
        <function-ref name="resetSend" scoped="" ref="0x7f398aeb9cf0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f398aeb9e80"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f398aec2030"/>
        <function-ref name="putData" scoped="" ref="0x7f398aec21c0"/>
        <function-ref name="putDone" scoped="" ref="0x7f398aec2350"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f398aec24e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f398aec2760" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f398aec2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f398aec2ae0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f398aec2c70"/>
        <function-ref name="led1On" scoped="" ref="0x7f398aec2e00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f398aeb8020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f398aeb81b0"/>
        <function-ref name="get" scoped="" ref="0x7f398aeb8340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f398aeb84d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f398aeb8b10"/>
        <function-ref name="set" scoped="" ref="0x7f398aeb8660"/>
        <function-ref name="led0On" scoped="" ref="0x7f398aeb87f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f398aeb8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f398ae5ea00" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f398ae5ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398ae5ed80"/>
        <function-ref name="runTask" scoped="" ref="0x7f398ae5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f398aec3a40" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f398aec3a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f398aec3dc0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f398aec8020"/>
        <function-ref name="startSend" scoped="" ref="0x7f398aec81b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f398aec8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f398aebf530" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f398aebf530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f398aebf8b0"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f398aebfa40"/>
        <function-ref name="endPacket" scoped="" ref="0x7f398aebfbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f398ad93020" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f398ad93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398ad933a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f398ad93530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f398ad98de0" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f398ad98de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f398b1f10d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398ad971c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398ad97350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398ad974e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f398ad97670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398ad97800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f398ad93800" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f398ad93800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398ad93b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f398ad93d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f398ad986c0" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f398ad986c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f398b1f10d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398ad98a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f398ad97c20" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f398ad97c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f398b1f10d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f398ad96020"/>
        <function-ref name="offset" scoped="" ref="0x7f398ad961b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f398ad96340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f398ad95920" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f398ad95920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f398ad95ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f398ad95e30"/>
        <function-ref name="led1On" scoped="" ref="0x7f398ad94020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f398ad941b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f398ad94340"/>
        <function-ref name="get" scoped="" ref="0x7f398ad944d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f398ad94660"/>
        <function-ref name="led2On" scoped="" ref="0x7f398ad94ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ad94980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f398ad947f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f398ad94b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f398ad96e80" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f398ad96e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f398ad95220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f398ad953b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f398ad95540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f398ad956d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f398ad96590" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f398ad96590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f398ad96910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f398ad96aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f398ad96c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f398ad82d20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f398ad82d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398ad8b0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f398ad8b270"/>
        <function-ref name="receive" scoped="" ref="0x7f398ad8b400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f398ad8b590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f398ad8b720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f398ad8b8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398ad8ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f398ad91e00" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f398ad91e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f398ad8d1c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f398ad8d350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f398ad8d4e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f398ad8d670"/>
        <function-ref name="putData" scoped="" ref="0x7f398ad8d800"/>
        <function-ref name="putDone" scoped="" ref="0x7f398ad8d990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f398ad8db20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f398ad8bcc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f398ad8bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f398ad8a0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f398ad8a230"/>
        <function-ref name="led1On" scoped="" ref="0x7f398ad8a3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f398ad8a550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f398ad8a6e0"/>
        <function-ref name="get" scoped="" ref="0x7f398ad8a870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f398ad8aa00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f398ad7f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f398ad8ab90"/>
        <function-ref name="led0On" scoped="" ref="0x7f398ad8ad20"/>
        <function-ref name="led2On" scoped="" ref="0x7f398ad7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f398ad63020" loc="40:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f398ad63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398ad633a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f398ad63530"/>
        <function-ref name="receive" scoped="" ref="0x7f398ad636c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f398ad63850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f398ad658d0" loc="39:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f398ad658d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398ad65c50"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f398ad65de0"/>
        <function-ref name="receive" scoped="" ref="0x7f398ad64020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f398ad641b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f398ad64340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f398ad644d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398ad64660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f398ad650c0" loc="38:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f398ad650c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f398ad65440"/>
        <function-ref name="stop" scoped="" ref="0x7f398ad655d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f398a779c70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f398a779c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f398a778020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f398a7781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f398a777440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f398a777440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398a7777c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f398a777950"/>
        <function-ref name="receive" scoped="" ref="0x7f398a777ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f398a777c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f398a776020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f398a776020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f398a7763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f398a778440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f398a778440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398a7787c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f398a778950"/>
        <function-ref name="receive" scoped="" ref="0x7f398a778ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f398a778c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f398a778e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f398a777020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398a7771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f398a779020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398a779020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a7793a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a779530"/>
        <function-ref name="request" scoped="" ref="0x7f398a7796c0"/>
        <function-ref name="granted" scoped="" ref="0x7f398a779850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a7799e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f398acfadd0" loc="42:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f398acfadd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f398acfc180"/>
        <function-ref name="configure" scoped="" ref="0x7f398acfc310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f398acf9210" loc="44:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f398acf9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398acf9590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f398acf9720"/>
        <function-ref name="receive" scoped="" ref="0x7f398acf98b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f398acf9a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f398acf6600" loc="47:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f398acf6600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f398acf6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f398acfcb50" loc="43:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f398acfcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398acfb020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f398acfb1b0"/>
        <function-ref name="receive" scoped="" ref="0x7f398acfb340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f398acfb4d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f398acfb660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f398acfb7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398acfb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f398acf7370" loc="46:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f398acf7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398acf76f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398acf7880"/>
        <function-ref name="request" scoped="" ref="0x7f398acf7a10"/>
        <function-ref name="granted" scoped="" ref="0x7f398acf7ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398acf7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f398acff320" loc="41:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398acff320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398acff6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398acff830"/>
        <function-ref name="request" scoped="" ref="0x7f398acff9c0"/>
        <function-ref name="granted" scoped="" ref="0x7f398acffb50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398acffce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f398acf2be0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f398acf2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f398acf5020"/>
        <function-ref name="txDone" scoped="" ref="0x7f398acf51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f398ac67e70" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f398ac67e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f398ac65240"/>
        <function-ref name="configure" scoped="" ref="0x7f398ac653d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f398ac64890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f398ac64890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398ac64c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f398ac64dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f398ac63020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f398ac631b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f398ac623e0" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f398ac623e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f398ac62780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f398ac62a50" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f398ac62a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f398ac62dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f398ac61020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f398ac611b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f398ac61340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f398ac614d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f398ac61660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f398ac617f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f398ac61980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f398ac61b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f398ac61ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f398ac61e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f398ac60020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f398ac601b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f398ac60440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f398ac605d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f398ac60760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f398ac608f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f398ac60a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f398ac60c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f398ac60da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f398ac5f020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f398ac5f1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f398ac5f340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f398ac5f4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f398ac5f660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f398ac5f9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f398ac5fb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f398ac5fd10"/>
        <function-ref name="tx" scoped="" ref="0x7f398ac5e020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f398ac5e1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f398ac5e340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f398ac5e4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f398ac5e660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f398ac5e7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f398ac5e980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f398ac5eb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f398ac5eca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f398ac5ee30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f398ac5d020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f398ac5d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f398ac65790" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f398ac65790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398ac65b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f398ac65cc0"/>
        <function-ref name="receive" scoped="" ref="0x7f398ac65e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f398ac64020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f398ac641b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f398ac64340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398ac644d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f398ac5c020" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f398ac5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f398ac5ce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398ac5b800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398ac5b340"/>
        <function-ref name="overflow" scoped="" ref="0x7f398ac5bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f398ac635b0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f398ac635b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398ac63950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398ac63ae0"/>
        <function-ref name="request" scoped="" ref="0x7f398ac63c70"/>
        <function-ref name="granted" scoped="" ref="0x7f398ac63e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398ac62020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f398ac670d0" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398ac670d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398ac67470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398ac67600"/>
        <function-ref name="request" scoped="" ref="0x7f398ac67790"/>
        <function-ref name="granted" scoped="" ref="0x7f398ac67920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398ac67ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f398ac5d5b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f398ac5d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f398ac5d950"/>
        <function-ref name="txDone" scoped="" ref="0x7f398ac5dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f398ac59120" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f398ac59120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f398ac594a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f398ac59630"/>
        <function-ref name="led1On" scoped="" ref="0x7f398ac597c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f398ac59950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f398ac59ae0"/>
        <function-ref name="get" scoped="" ref="0x7f398ac59c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f398ac59e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f398ac584d0"/>
        <function-ref name="set" scoped="" ref="0x7f398ac581b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f398ac58020"/>
        <function-ref name="led0On" scoped="" ref="0x7f398ac58340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f398ac4bbd0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f398ac4bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398ac4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f398ac4c6d0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f398ac4c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f398ac4ca50"/>
        <function-ref name="txDone" scoped="" ref="0x7f398ac4cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f398ac53b60" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f398ac53b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f398ac50020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f398ac501b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f398ac50340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f398ac504d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f398ac50660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f398ac507f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f398ac50980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f398ac50b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f398ac50ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f398ac50e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f398ac4f020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f398ac4f1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f398ac4f340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f398ac4f5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f398ac4f760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f398ac4f8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f398ac4fa80"/>
        <function-ref name="isUart" scoped="" ref="0x7f398ac4fc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f398ac4fda0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f398ac4e020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f398ac4e1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f398ac4e340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f398ac4e4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f398ac4e660"/>
        <function-ref name="getMode" scoped="" ref="0x7f398ac4e7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f398ac4eb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f398ac4ed10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f398ac4d020"/>
        <function-ref name="tx" scoped="" ref="0x7f398ac4d1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f398ac4d340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f398ac4d4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f398ac4d660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f398ac4d7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f398ac4d980"/>
        <function-ref name="rx" scoped="" ref="0x7f398ac4db10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f398ac4dca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f398ac4de30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f398ac4c020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f398ac4c1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f398ac4c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f398ac05800" loc="82:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f398ac05800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ac05b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ac05d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ac04020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ac041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ac04340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ac044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ac04660"/>
        <function-ref name="get" scoped="" ref="0x7f398ac047f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ac04980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ac04b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ac04ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ac04e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ac03020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ac032b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ac03440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f398ac41020" loc="76:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f398ac41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f398ac413a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f398ac41530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f398ac03800" loc="83:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f398ac03800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ac03b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ac03d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ac02020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ac021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ac02340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ac024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ac02660"/>
        <function-ref name="get" scoped="" ref="0x7f398ac027f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ac02980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ac02b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ac02ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ac02e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ac01020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ac012b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ac01440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f398ac01800" loc="84:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f398ac01800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ac01b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ac01d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398abff020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398abff1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398abff340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398abff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398abff660"/>
        <function-ref name="get" scoped="" ref="0x7f398abff7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398abff980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398abffb10"/>
        <function-ref name="set" scoped="" ref="0x7f398abffca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398abffe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398abfe020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398abfe2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398abfe440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f398ac46360" loc="75:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f398ac46360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f398ac466e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f398ac46870"/>
        <function-ref name="setUctl" scoped="" ref="0x7f398ac46a00"/>
        <function-ref name="enableUart" scoped="" ref="0x7f398ac46b90"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f398ac46d20"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f398ac45020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f398ac451b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f398ac45340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f398ac454d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f398ac45660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f398ac457f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f398ac45980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f398ac45b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f398ac45da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f398ac44020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f398ac441b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f398ac44340"/>
        <function-ref name="isUart" scoped="" ref="0x7f398ac444d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f398ac44660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f398ac447f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f398ac44980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f398ac44b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f398ac44ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f398ac44e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f398ac43020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f398ac433b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f398ac43540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f398ac436d0"/>
        <function-ref name="tx" scoped="" ref="0x7f398ac43860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f398ac439f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f398ac43b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f398ac43d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f398ac42020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f398ac421b0"/>
        <function-ref name="rx" scoped="" ref="0x7f398ac42340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f398ac424d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f398ac42660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f398ac427f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f398ac42980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f398ac42b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f398abfe700" loc="86:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f398abfe700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f398abfea80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f398abfec10"/>
        <function-ref name="led1On" scoped="" ref="0x7f398abfeda0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f398abfd020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f398abfd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f398abfd340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f398abfd4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f398abfdb10"/>
        <function-ref name="set" scoped="" ref="0x7f398abfd660"/>
        <function-ref name="led0On" scoped="" ref="0x7f398abfd7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f398abfd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f398ac18bc0" loc="79:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f398ac18bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f398ac3f020"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f398ac3f1b0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f398ac3f340"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f398ac3f4d0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f398ac3f660"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f398ac3f7f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f398ac3f980"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f398ac3fb10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398ac3fca0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f398ac3fe30"/>
        <function-ref name="getData" scoped="" ref="0x7f398ac3e020"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f398ac3e1b0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f398ac3e340"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f398ac3e5d0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f398ac3e760"/>
        <function-ref name="getIV" scoped="" ref="0x7f398ac3e8f0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f398ac3ea80"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f398ac3ec10"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f398ac3eda0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f398ac17020"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f398ac171b0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f398ac17340"/>
        <function-ref name="isI2C" scoped="" ref="0x7f398ac174d0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f398ac17660"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f398ac177f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f398ac17b80"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f398ac17d10"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f398ac16020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f398ac161b0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f398ac16340"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f398ac164d0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f398ac16660"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f398ac167f0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f398ac16980"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f398ac16b10"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f398ac16ca0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f398ac16e30"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f398ac15020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f398ac151b0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f398ac15340"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f398ac154d0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f398ac15660"/>
        <function-ref name="setData" scoped="" ref="0x7f398ac157f0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f398ac15980"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f398ac15b10"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f398ac15ca0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f398ac15e30"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f398ac14020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f398ac141b0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f398ac14740"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f398ac148d0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f398ac14a60"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f398ac14bf0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f398ac14d80"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f398ac13020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f398ac131b0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f398ac13340"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f398ac134d0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f398ac13660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f398ac11800" loc="81:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f398ac11800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ac11b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ac11d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ac06020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ac061b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ac06340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ac064d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ac06660"/>
        <function-ref name="get" scoped="" ref="0x7f398ac067f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ac06980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ac06b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ac06ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ac06e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ac05020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ac052b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ac05440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f398ac41970" loc="77:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f398ac41970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398ac41cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f398ac07860" loc="80:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f398ac07860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ac07be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ac07d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ac12020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ac121b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ac12340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ac124d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ac12660"/>
        <function-ref name="get" scoped="" ref="0x7f398ac127f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ac12980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ac12b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ac12ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ac12e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ac11020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ac112b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ac11440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f398ab7a810" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f398ab7a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab7ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab7ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab79020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab791b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab79340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab794d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab79660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab797f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab79980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab79b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab79ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab79e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab78020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab782b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab78440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f398ab66810" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f398ab66810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab66b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab66d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab65020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab651b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab65340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab654d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab65660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab657f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab65980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab65b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab65ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab65e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab64020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab642b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab64440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f398ab1cca0" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f398ab1cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab1b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab1b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab1b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab1b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab1b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab1b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab1ba00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab1bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab1bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab1a020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab1a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab1a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab1a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab1a760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab1a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f398aaf7cb0" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f398aaf7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aaf60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aaf6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aaf63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aaf6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aaf66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aaf6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aaf6a00"/>
        <function-ref name="get" scoped="" ref="0x7f398aaf6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aaf6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aaf5020"/>
        <function-ref name="set" scoped="" ref="0x7f398aaf51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aaf5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aaf54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aaf5760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aaf58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f398ab1acc0" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f398ab1acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab190a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab19230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab193c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab19550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab196e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab19870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab19a00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab19b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab19d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab18020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab181b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab18340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab184d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab18760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab188f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f398ab61810" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f398ab61810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab61b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab61d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab60020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab60340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab60660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab607f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab60980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab60b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab60ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab60e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab5f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab5f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab5f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f398ab4d9a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f398ab4d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab4dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab4c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab4c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab4c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab4c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab4c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab4c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab4c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab4cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab4cca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab4ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab4b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab4b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab4b440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab4b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f398ab399a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f398ab399a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab39d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab38020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab381b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab38340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab384d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab38660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab387f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab38980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab38b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab38ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab38e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab37020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab371b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab37440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab375d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f398ab289a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f398ab289a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab28d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab27020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab271b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab27340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab274d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab27660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab277f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab27980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab27b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab27ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab27e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab26020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab261b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab26440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab265d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f398ab14cc0" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f398ab14cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab130a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab13230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab133c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab13550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab136e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab13870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab13a00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab13b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab13d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab12020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab121b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab12340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab124d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab12760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab128f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f398ab03cb0" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f398ab03cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab020a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab02230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab023c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab02550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab026e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab02870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab02a00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab02b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab02d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab01020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab011b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab01340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab014d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab01760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab018f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f398aaefcc0" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f398aaefcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aaee0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aaee230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aaee3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aaee550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aaee6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aaee870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aaeea00"/>
        <function-ref name="get" scoped="" ref="0x7f398aaeeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aaeed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aaed020"/>
        <function-ref name="set" scoped="" ref="0x7f398aaed1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aaed340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aaed4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aaed760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aaed8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f398ab74810" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f398ab74810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab74b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab74d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab73020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab73340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab73660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab737f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab73980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab73b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab73ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab73e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab72020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab722b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab72440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f398ab12cc0" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f398ab12cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab110a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab11230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab113c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab11550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab116e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab11870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab11a00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab11b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab11d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab10020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab101b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab10340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab104d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab10760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab108f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f398ab70810" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f398ab70810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab70b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab70d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab6f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab6f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab6f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab6f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab6f660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab6f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab6f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab6fb10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab6fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab6fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab6e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab6e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab6e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f398ab5b810" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f398ab5b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab5bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab5bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab5a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab5a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab5a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab5a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab5a660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab5a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab5a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab5ab10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab5aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab5ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab59020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab592b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab59440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f398ab479a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f398ab479a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab47d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab46020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab461b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab46340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab464d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab46660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab467f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab46980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab46b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab46ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab46e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab45020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab451b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab45440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab455d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f398ab329a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f398ab329a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab32d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab31020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab311b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab31340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab314d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab31660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab317f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab31980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab31b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab31ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab31e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab30020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab301b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab30440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab305d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f398ab229a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f398ab229a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab22d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab21020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab211b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab21340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab214d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab21660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab217f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab21980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab21b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab21ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab21e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab20020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab201b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab20440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab205d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f398ab7e810" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f398ab7e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab7eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab7ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab7d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab7d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab7d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab7d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab7d660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab7d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab7d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab7db10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab7dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab7de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab7c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab7c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab7c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f398ab6a810" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f398ab6a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab6ac90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab6ae20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab69020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab691b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab69340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab69660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab697f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab69980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab69b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab69ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab69e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab68020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab682b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab68440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f398ab55810" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f398ab55810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab55b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab55d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab54020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab541b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab54340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab54660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab547f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab54980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab54b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab54ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab54e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab53020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab532b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab53440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f398ab1ecc0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f398ab1ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab1d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab1d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab1d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab1d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab1d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab1d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab1da00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab1db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab1dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab1c020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab1c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab1c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab1c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab1c760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab1c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f398aafdcb0" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f398aafdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aafc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aafc230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aafc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aafc550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aafc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aafc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aafca00"/>
        <function-ref name="get" scoped="" ref="0x7f398aafcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aafcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aafb020"/>
        <function-ref name="set" scoped="" ref="0x7f398aafb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aafb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aafb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aafb760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aafb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f398aaf1cb0" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f398aaf1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aaf00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aaf0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aaf03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aaf0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aaf06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aaf0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aaf0a00"/>
        <function-ref name="get" scoped="" ref="0x7f398aaf0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aaf0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aaef020"/>
        <function-ref name="set" scoped="" ref="0x7f398aaef1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aaef340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aaef4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aaef760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aaef8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f398ab0acc0" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f398ab0acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab090a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab09230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab093c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab09550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab096e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab09870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab09a00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab09b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab09d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab08020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab08340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab08760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f398ab51810" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f398ab51810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab51d90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab50020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab501b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab50340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab504d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab50660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab507f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab50980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab50b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab50ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab50e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab4f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab4f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab4f440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab4f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f398ab3d9a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f398ab3d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab3dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab3c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab3c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab3c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab3c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab3c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab3c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab3c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab3cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab3cca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab3ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab3b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab3b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab3b440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab3b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f398ab2c9a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f398ab2c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab2cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab2b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab2b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab2b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab2b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab2b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab2b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab2b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab2bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab2bca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab2be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab2a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab2a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab2a440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab2a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f398aafbcb0" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f398aafbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aafa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aafa230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aafa3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aafa550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aafa6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aafa870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aafaa00"/>
        <function-ref name="get" scoped="" ref="0x7f398aafab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aafad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aaf9020"/>
        <function-ref name="set" scoped="" ref="0x7f398aaf91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aaf9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aaf94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aaf9760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aaf98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f398ab10cb0" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f398ab10cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab0f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab0f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab0f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab0f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab0f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab0f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab0fa00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab0fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab0fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab0e020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab0e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab0e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab0e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab0e760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab0e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f398ab78810" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f398ab78810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab78b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab78d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab77020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab77340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab77660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab777f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab77980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab77b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab77ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab77e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab76020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab762b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab76440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f398ab64810" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f398ab64810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab64b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab64d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab62020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab621b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab62340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab624d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab62660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab627f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab62980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab62b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab62ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab62e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab61020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab612b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab61440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f398ab309a0" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f398ab309a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab30d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab2f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab2f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab2f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab2f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab2f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab2f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab2f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab2fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab2fca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab2fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab2e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab2e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab2e440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab2e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f398ab5f810" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f398ab5f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab5fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab5fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab5e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab5e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab5e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab5e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab5e660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab5e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab5e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab5eb10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab5eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab5ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab5d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab5d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab5d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f398ab4b9a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f398ab4b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab4bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab4a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab4a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab4a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab4a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab4a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab4a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab4a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab4ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab4aca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab4ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab49020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab491b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab49440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab495d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f398ab379a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f398ab379a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab37d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab36020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab361b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab36340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab364d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab36660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab367f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab36980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab36b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab36ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab36e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab35020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab351b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab35440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab355d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f398ab269a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f398ab269a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab26d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab25020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab251b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab25340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab254d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab25660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab257f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab25980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab25b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab25ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab25e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab24020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab241b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab24440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab245d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f398ab0ccc0" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f398ab0ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab0b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab0b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab0b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab0b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab0b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab0b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab0ba00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab0bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab0bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab0a020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab0a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab0a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab0a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab0a760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab0a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f398ab84800" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f398ab84800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab84b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab84d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab81020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab811b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab81340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab814d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab81660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab817f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab81980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab81b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab81ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab81e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab80020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab802b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab80440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f398ab6e810" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f398ab6e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab6eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab6ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab6d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab6d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab6d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab6d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab6d660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab6d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab6d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab6db10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab6dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab6de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab6c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab6c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab6c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f398ab59810" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f398ab59810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab59b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab59d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab58020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab581b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab58340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab584d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab58660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab587f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab58980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab58b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab58ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab58e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab57020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab572b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab57440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f398ab459a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f398ab459a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab45d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab44020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab441b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab44340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab444d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab44660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab447f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab44980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab44b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab44ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab44e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab43020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab431b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab43440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab435d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f398ab08cc0" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f398ab08cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab070a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab07230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab073c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab07550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab076e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab07870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab07a00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab07b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab07d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab06020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab061b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab06340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab064d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab06760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab068f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f398ab01cb0" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f398ab01cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab000a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab00230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab003c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab00550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab006e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab00870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab00a00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab00b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab00d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aaff020"/>
        <function-ref name="set" scoped="" ref="0x7f398aaff1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aaff340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aaff4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aaff760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aaff8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f398aaf5cb0" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f398aaf5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aaf40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aaf4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aaf43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aaf4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aaf46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aaf4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aaf4a00"/>
        <function-ref name="get" scoped="" ref="0x7f398aaf4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aaf4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aaf3020"/>
        <function-ref name="set" scoped="" ref="0x7f398aaf31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aaf3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aaf34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aaf3760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aaf38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f398ab419a0" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f398ab419a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab41d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab40020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab401b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab40340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab404d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab40660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab407f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab40980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab40b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab40ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab40e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab3f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab3f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab3f440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab3f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f398ab06cc0" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f398ab06cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab040a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab04230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab043c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab04550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab046e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab04870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab04a00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab04b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab04d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab03020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab031b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab03340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab034d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab03760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab038f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f398ab7c810" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f398ab7c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab7cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab7cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab7b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab7b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab7b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab7b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab7b660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab7b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab7b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab7bb10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab7bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab7be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab7a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab7a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab7a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f398ab68810" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f398ab68810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab68b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab68d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab67020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab671b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab67340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab674d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab67660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab677f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab67980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab67b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab67ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab67e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab66020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab662b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab66440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f398ab53810" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f398ab53810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab53b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab53d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab52020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab521b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab52340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab524d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab52660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab527f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab52980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab52b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab52ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab52e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab51020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab512b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab51440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f398ab0ecc0" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f398ab0ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab0d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab0d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab0d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab0d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab0d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab0d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab0da00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab0db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab0dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab0c020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab0c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab0c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab0c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab0c760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab0c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f398aaf9cb0" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f398aaf9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aaf80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aaf8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aaf83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aaf8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aaf86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aaf8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aaf8a00"/>
        <function-ref name="get" scoped="" ref="0x7f398aaf8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aaf8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aaf7020"/>
        <function-ref name="set" scoped="" ref="0x7f398aaf71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aaf7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aaf74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aaf7760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aaf78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f398ab4f9a0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f398ab4f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab4fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab4e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab4e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab4e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab4e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab4e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab4e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab4e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab4eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab4eca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab4ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab4d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab4d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab4d440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab4d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f398ab3b9a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f398ab3b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab3bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab3a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab3a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab3a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab3a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab3a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab3a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab3a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab3ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab3aca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab3ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab39020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab391b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab39440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab395d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f398ab2a9a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f398ab2a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab2ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab29020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab291b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab29340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab294d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab29660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab297f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab29980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab29b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab29ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab29e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab28020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab281b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab28440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab285d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f398ab76810" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f398ab76810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab76b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab76d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab75020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab751b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab75340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab75660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab757f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab75980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab75b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab75ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab75e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab74020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab742b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab74440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f398ab2e9a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f398ab2e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab2ed20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab2d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab2d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab2d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab2d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab2d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab2d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab2d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab2db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab2dca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab2de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab2c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab2c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab2c440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab2c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f398ab72810" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f398ab72810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab72b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab72d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab71020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab711b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab71340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab714d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab71660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab717f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab71980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab71b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab71ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab71e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab70020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab702b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab70440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f398ab5d810" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f398ab5d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab5db90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab5dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab5c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab5c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab5c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab5c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab5c660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab5c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab5c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab5cb10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab5cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab5ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab5b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab5b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab5b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f398ab499a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f398ab499a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab49d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab48020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab481b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab48340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab484d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab48660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab487f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab48980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab48b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab48ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab48e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab47020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab471b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab47440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab475d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f398ab359a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f398ab359a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab35d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab33020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab331b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab33340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab334d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab33660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab337f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab33980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab33b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab33ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab33e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab32020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab321b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab32440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab325d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f398ab249a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f398ab249a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab24d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab23020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab231b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab23340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab234d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab23660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab237f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab23980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab23b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab23ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab23e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab22020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab221b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab22440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab225d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f398ab80810" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f398ab80810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab80b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab80d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab7f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab7f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab7f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab7f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab7f660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab7f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab7f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab7fb10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab7fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab7fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab7e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab7e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab7e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f398ab6c810" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f398ab6c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab6cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab6cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab6b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab6b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab6b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab6b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab6b660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab6b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab6b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab6bb10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab6bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab6be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab6a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab6a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab6a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f398ab57810" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f398ab57810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab57b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab57d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab56020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab56340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab56660"/>
        <function-ref name="get" scoped="" ref="0x7f398ab567f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab56980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab56b10"/>
        <function-ref name="set" scoped="" ref="0x7f398ab56ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab56e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab55020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab552b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab55440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f398ab439a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f398ab439a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab43d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab42020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab421b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab42340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab424d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab42660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab427f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab42980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab42b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab42ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab42e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab41020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab411b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab41440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab415d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f398ab16ca0" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f398ab16ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab150a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab15230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab153c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab15550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab156e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab15870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab15a00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab15b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab15d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab14020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab141b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab14340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab144d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab14760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab148f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f398aaffcb0" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f398aaffcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aafe0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aafe230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aafe3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aafe550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aafe6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aafe870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aafea00"/>
        <function-ref name="get" scoped="" ref="0x7f398aafeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aafed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aafd020"/>
        <function-ref name="set" scoped="" ref="0x7f398aafd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aafd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aafd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aafd760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aafd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f398ab18cc0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f398ab18cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab170a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab17230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab173c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab17550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab176e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab17870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab17a00"/>
        <function-ref name="get" scoped="" ref="0x7f398ab17b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab17d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab16020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab16340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab16760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f398ab3f9a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f398ab3f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab3fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab3e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab3e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab3e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab3e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab3e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab3e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f398ab3e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab3eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab3eca0"/>
        <function-ref name="set" scoped="" ref="0x7f398ab3ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab3d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab3d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab3d440"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab3d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f398aaf3cb0" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f398aaf3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aaf20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aaf2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aaf23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aaf2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aaf26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aaf2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aaf2a00"/>
        <function-ref name="get" scoped="" ref="0x7f398aaf2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aaf2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aaf1020"/>
        <function-ref name="set" scoped="" ref="0x7f398aaf11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aaf1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aaf14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aaf1760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aaf18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f398aaedcc0" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f398aaedcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aaec0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aaec230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aaec3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aaec550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aaec6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aaec870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aaeca00"/>
        <function-ref name="get" scoped="" ref="0x7f398aaecb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aaecd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aaeb020"/>
        <function-ref name="set" scoped="" ref="0x7f398aaeb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aaeb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aaeb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aaeb760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aaeb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f398ab209f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f398ab209f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398ab1f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398ab1f350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398ab1f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398ab1f670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398ab1f800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398ab1f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398ab1fb20"/>
        <function-ref name="get" scoped="" ref="0x7f398ab1fcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398ab1fe40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398ab1e020"/>
        <function-ref name="set" scoped="" ref="0x7f398ab1e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398ab1e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398ab1e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398ab1e760"/>
        <function-ref name="clr" scoped="" ref="0x7f398ab1e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aae8d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aae8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aac10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aac1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aac1400"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aac1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aac1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aac18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aac1a40"/>
        <function-ref name="get" scoped="" ref="0x7f398aac1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aac1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aac0020"/>
        <function-ref name="set" scoped="" ref="0x7f398aac01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aac0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aac04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aac0760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aac08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aabd740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aabd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aabdac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aabdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aabdde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aabc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aabc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aabc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aabc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f398aabc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aabc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aabc980"/>
        <function-ref name="set" scoped="" ref="0x7f398aabcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aabcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aabce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aabb120"/>
        <function-ref name="clr" scoped="" ref="0x7f398aabb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aab8100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aab8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aab8480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aab8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aab87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aab8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aab8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aab8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aab8de0"/>
        <function-ref name="get" scoped="" ref="0x7f398aab6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aab61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aab6340"/>
        <function-ref name="set" scoped="" ref="0x7f398aab64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aab6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aab67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aab6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f398aab6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aab3d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aab3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aab20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aab2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aab2400"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aab2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aab2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aab28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aab2a40"/>
        <function-ref name="get" scoped="" ref="0x7f398aab2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aab2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aab1020"/>
        <function-ref name="set" scoped="" ref="0x7f398aab11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aab1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aab14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aab1760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aab18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aaae740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aaae740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aaaeac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aaaec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aaaede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aaad020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aaad1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aaad340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aaad4d0"/>
        <function-ref name="get" scoped="" ref="0x7f398aaad660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aaad7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aaad980"/>
        <function-ref name="set" scoped="" ref="0x7f398aaadb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aaadca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aaade30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aaac120"/>
        <function-ref name="clr" scoped="" ref="0x7f398aaac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aaa9100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aaa9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aaa9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aaa9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aaa97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aaa9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aaa9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aaa9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aaa9de0"/>
        <function-ref name="get" scoped="" ref="0x7f398aaa8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aaa81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aaa8340"/>
        <function-ref name="set" scoped="" ref="0x7f398aaa84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aaa8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aaa87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aaa8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f398aaa8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aaa5d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aaa5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aaa40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aaa4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aaa4400"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aaa4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aaa4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aaa48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aaa4a40"/>
        <function-ref name="get" scoped="" ref="0x7f398aaa4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aaa4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aaa3020"/>
        <function-ref name="set" scoped="" ref="0x7f398aaa31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aaa3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aaa34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aaa3760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aaa38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aaa0740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aaa0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aaa0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aaa0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aaa0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa9f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa9f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa9f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa9f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa9f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa9f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa9f980"/>
        <function-ref name="set" scoped="" ref="0x7f398aa9fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa9fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa9fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa9e120"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa9e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa9b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa9b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa9b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa9b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa9b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa9b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa9bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa9bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa9bde0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa9a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa9a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa9a340"/>
        <function-ref name="set" scoped="" ref="0x7f398aa9a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa9a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa9a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa9aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa9ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa97d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa97d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa960e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa96270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa96400"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa96590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa96720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa968b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa96a40"/>
        <function-ref name="get" scoped="" ref="0x7f398aa96bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa96d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa95020"/>
        <function-ref name="set" scoped="" ref="0x7f398aa951b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa95340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa954d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa95760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa958f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa92740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa92740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa92ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa92c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa92de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa90020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa901b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa90340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa904d0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa90660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa907f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa90980"/>
        <function-ref name="set" scoped="" ref="0x7f398aa90b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa90ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa90e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa8f120"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa8f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa8c100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa8c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa8c480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa8c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa8c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa8c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa8cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa8cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa8cde0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa8b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa8b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa8b340"/>
        <function-ref name="set" scoped="" ref="0x7f398aa8b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa8b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa8b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa8ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa8bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa88d80" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa88d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa87180"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa87310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa874a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa87630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa877c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa87950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa87ae0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa87c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa87e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa86020"/>
        <function-ref name="set" scoped="" ref="0x7f398aa861b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa86340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa864d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa86760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa868f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa83740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa83740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa83ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa83c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa83de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa82020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa821b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa82340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa824d0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa82660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa827f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa82980"/>
        <function-ref name="set" scoped="" ref="0x7f398aa82b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa82ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa82e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa81120"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa7e100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa7e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa7e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa7e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa7e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa7e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa7eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa7ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa7ede0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa7d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa7d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa7d340"/>
        <function-ref name="set" scoped="" ref="0x7f398aa7d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa7d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa7d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa7da80"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa7dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa7ad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa7ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa790e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa79270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa79400"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa79590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa79720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa798b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa79a40"/>
        <function-ref name="get" scoped="" ref="0x7f398aa79bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa79d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa78020"/>
        <function-ref name="set" scoped="" ref="0x7f398aa781b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa78340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa784d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa78760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa75740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa75740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa75ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa75c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa75de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa74020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa74340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa744d0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa74660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa747f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa74980"/>
        <function-ref name="set" scoped="" ref="0x7f398aa74b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa74ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa74e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa73120"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa70100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa70100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa70480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa70610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa707a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa70930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa70ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa70c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa70de0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa6f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa6f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa6f340"/>
        <function-ref name="set" scoped="" ref="0x7f398aa6f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa6f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa6f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa6fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa6fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa6bd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa6bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa6a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa6a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa6a400"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa6a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa6a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa6a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa6aa40"/>
        <function-ref name="get" scoped="" ref="0x7f398aa6abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa6ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa69020"/>
        <function-ref name="set" scoped="" ref="0x7f398aa691b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa69340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa694d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa69760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa698f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa66740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa66740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa66ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa66c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa66de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa65020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa651b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa65340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa654d0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa65660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa657f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa65980"/>
        <function-ref name="set" scoped="" ref="0x7f398aa65b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa65ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa65e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa64120"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa61100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa61100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa61480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa61610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa617a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa61930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa61ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa61c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa61de0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa60020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa601b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa60340"/>
        <function-ref name="set" scoped="" ref="0x7f398aa604d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa60660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa607f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa60a80"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa60c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa5dd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa5dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa5c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa5c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa5c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa5c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa5c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa5c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa5ca40"/>
        <function-ref name="get" scoped="" ref="0x7f398aa5cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa5cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa5b020"/>
        <function-ref name="set" scoped="" ref="0x7f398aa5b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa5b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa5b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa5b760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa5b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa58740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa58740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa58ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa58c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa58de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa57020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa571b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa57340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa574d0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa57660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa577f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa57980"/>
        <function-ref name="set" scoped="" ref="0x7f398aa57b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa57ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa57e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa56120"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa53100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa53100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa53480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa53610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa537a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa53930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa53ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa53c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa53de0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa52020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa52340"/>
        <function-ref name="set" scoped="" ref="0x7f398aa524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa52660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa52a80"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa52c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa4fe60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa4fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa4e210"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa4e3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa4e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa4e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa4e850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa4e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa4eb70"/>
        <function-ref name="get" scoped="" ref="0x7f398aa4ed00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa4d020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa4d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f398aa4d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa4d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa4d660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa4d8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa4da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa4a9f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa4a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa4ad70"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa48020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa481b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa48340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa484d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa48660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa487f0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa48980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa48b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa48ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398aa48e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa47020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa471b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa47440"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa475d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa44460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa44460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa447e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa44970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa44b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa44c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa44e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa43020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa431b0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa43340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa434d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa43660"/>
        <function-ref name="set" scoped="" ref="0x7f398aa437f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa43980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa43b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa43da0"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa40e00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa40e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa3f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa3f350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa3f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa3f670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa3f800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa3f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa3fb20"/>
        <function-ref name="get" scoped="" ref="0x7f398aa3fcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa3fe40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa3e020"/>
        <function-ref name="set" scoped="" ref="0x7f398aa3e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa3e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa3e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa3e760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa3e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa3b740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa3b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa3bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa3bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa3bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa3a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa3a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa3a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa3a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa3a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa3a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa3a980"/>
        <function-ref name="set" scoped="" ref="0x7f398aa3ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa3aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa3ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa39120"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa392b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa36100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa36100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa36480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa36610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa367a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa36930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa36ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa36c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa36de0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa35020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa351b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa35340"/>
        <function-ref name="set" scoped="" ref="0x7f398aa354d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa35660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa357f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa35a80"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa35c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa32d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa32d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa310e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa31270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa31400"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa31590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa31720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa318b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa31a40"/>
        <function-ref name="get" scoped="" ref="0x7f398aa31bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa31d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa30020"/>
        <function-ref name="set" scoped="" ref="0x7f398aa301b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa30340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa304d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa30760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa308f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa2d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa2d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa2dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa2dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa2dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa2c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa2c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa2c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa2c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa2c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa2c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa2c980"/>
        <function-ref name="set" scoped="" ref="0x7f398aa2cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa2cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa2ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa2b120"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa2b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa28100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa28100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa28480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa28610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa287a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa28930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa28ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa28c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa28de0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa27020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa271b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa27340"/>
        <function-ref name="set" scoped="" ref="0x7f398aa274d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa27660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa277f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa27a80"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa27c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa24d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa24d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa220e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa22270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa22400"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa22590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa22720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa228b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa22a40"/>
        <function-ref name="get" scoped="" ref="0x7f398aa22bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa22d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa21020"/>
        <function-ref name="set" scoped="" ref="0x7f398aa211b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa21340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa214d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa21760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa218f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa1e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa1e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa1eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa1ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa1ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa1d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa1d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa1d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa1d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa1d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa1d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa1d980"/>
        <function-ref name="set" scoped="" ref="0x7f398aa1db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa1dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa1de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa1c120"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa1c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa19100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa19100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa19480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa19610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa197a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa19930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa19ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa19c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa19de0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa18020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa181b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa18340"/>
        <function-ref name="set" scoped="" ref="0x7f398aa184d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa18660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa187f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa18a80"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa18c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa15d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa15d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa140e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa14270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa14400"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa14590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa14720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa148b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa14a40"/>
        <function-ref name="get" scoped="" ref="0x7f398aa14bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa14d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa13020"/>
        <function-ref name="set" scoped="" ref="0x7f398aa131b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa13340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa134d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa13760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa10740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa10740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa10ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa10c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa10de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa0f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa0f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa0f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa0f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa0f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa0f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa0f980"/>
        <function-ref name="set" scoped="" ref="0x7f398aa0fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa0fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa0fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa0e120"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa0e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa0b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa0b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa0b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa0b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa0b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa0b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa0bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa0bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa0bde0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa0a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa0a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa0a340"/>
        <function-ref name="set" scoped="" ref="0x7f398aa0a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa0a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa0a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa0aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa0ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa07d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa07d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa060e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa06270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa06400"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa06590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa06720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa068b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa06a40"/>
        <function-ref name="get" scoped="" ref="0x7f398aa06bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa06d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa05020"/>
        <function-ref name="set" scoped="" ref="0x7f398aa051b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa05340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa054d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa05760"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa058f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398aa02740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398aa02740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398aa02ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398aa02c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398aa02de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398aa01020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398aa011b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398aa01340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398aa014d0"/>
        <function-ref name="get" scoped="" ref="0x7f398aa01660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398aa017f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398aa01980"/>
        <function-ref name="set" scoped="" ref="0x7f398aa01b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398aa01ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398aa01e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398aa00120"/>
        <function-ref name="clr" scoped="" ref="0x7f398aa002b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398a9fc100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398a9fc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a9fc480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a9fc610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a9fc7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a9fc930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a9fcac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a9fcc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a9fcde0"/>
        <function-ref name="get" scoped="" ref="0x7f398a9fb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a9fb1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a9fb340"/>
        <function-ref name="set" scoped="" ref="0x7f398a9fb4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a9fb660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a9fb7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a9fba80"/>
        <function-ref name="clr" scoped="" ref="0x7f398a9fbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398a9f8d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398a9f8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a9f70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a9f7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a9f7400"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a9f7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a9f7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a9f78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a9f7a40"/>
        <function-ref name="get" scoped="" ref="0x7f398a9f7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a9f7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a9f6020"/>
        <function-ref name="set" scoped="" ref="0x7f398a9f61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a9f6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a9f64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a9f6760"/>
        <function-ref name="clr" scoped="" ref="0x7f398a9f68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398a9f3740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398a9f3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a9f3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a9f3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a9f3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a9f2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a9f21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a9f2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a9f24d0"/>
        <function-ref name="get" scoped="" ref="0x7f398a9f2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a9f27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a9f2980"/>
        <function-ref name="set" scoped="" ref="0x7f398a9f2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a9f2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a9f2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a9f1120"/>
        <function-ref name="clr" scoped="" ref="0x7f398a9f12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398a9ee100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398a9ee100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a9ee480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a9ee610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a9ee7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a9ee930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a9eeac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a9eec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a9eede0"/>
        <function-ref name="get" scoped="" ref="0x7f398a9ed020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a9ed1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a9ed340"/>
        <function-ref name="set" scoped="" ref="0x7f398a9ed4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a9ed660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a9ed7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a9eda80"/>
        <function-ref name="clr" scoped="" ref="0x7f398a9edc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398a9ead10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398a9ead10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a9e90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a9e9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a9e9400"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a9e9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a9e9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a9e98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a9e9a40"/>
        <function-ref name="get" scoped="" ref="0x7f398a9e9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a9e9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a9e8020"/>
        <function-ref name="set" scoped="" ref="0x7f398a9e81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a9e8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a9e84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a9e8760"/>
        <function-ref name="clr" scoped="" ref="0x7f398a9e88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398a9e5740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398a9e5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a9e5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a9e5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a9e5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a9e4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a9e41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a9e4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a9e44d0"/>
        <function-ref name="get" scoped="" ref="0x7f398a9e4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a9e47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a9e4980"/>
        <function-ref name="set" scoped="" ref="0x7f398a9e4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a9e4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a9e4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a9e3120"/>
        <function-ref name="clr" scoped="" ref="0x7f398a9e32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f398a9e0100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f398a9e0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a9e0480"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a9e0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a9e07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a9e0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a9e0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a9e0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a9e0de0"/>
        <function-ref name="get" scoped="" ref="0x7f398a9df020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a9df1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a9df340"/>
        <function-ref name="set" scoped="" ref="0x7f398a9df4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a9df660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a9df7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a9dfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f398a9dfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f398a971d20" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f398a971d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f398a96eb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398a96d550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398a96d090"/>
        <function-ref name="overflow" scoped="" ref="0x7f398a96da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f398a96cd90" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f398a96cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f398a969bc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398a968590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398a9680d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f398a968a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f398a953020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f398a953020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398a9533a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398a953530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398a9536c0"/>
        <function-ref name="get" scoped="" ref="0x7f398a953850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398a9539e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398a953b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f398a953d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398a952020"/>
        <function-ref name="overflow" scoped="" ref="0x7f398a9521b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f398a952340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398a9524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f398a963e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f398a963e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f398a962ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398a955670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398a9551b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f398a955b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f398a94f020" loc="47:../../../tos/platforms/shimmer2r/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f398a94f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f398a94f3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f398a94f530"/>
        <function-ref name="led1On" scoped="" ref="0x7f398a94f6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f398a94f850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f398a94f9e0"/>
        <function-ref name="get" scoped="" ref="0x7f398a94fb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f398a94fd00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f398a94e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f398a94e020"/>
        <function-ref name="led0On" scoped="" ref="0x7f398a94e1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f398a94e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f398a948060" loc="51:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f398a948060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a9483e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a948570"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a948700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a948890"/>
        <function-ref name="get" scoped="" ref="0x7f398a948a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a948bb0"/>
        <function-ref name="set" scoped="" ref="0x7f398a948d40"/>
        <function-ref name="clr" scoped="" ref="0x7f398a947020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398a94b470" loc="47:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398a94b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398a94b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f398a947340" loc="52:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f398a947340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a9476c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a947850"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a9479e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a947b70"/>
        <function-ref name="get" scoped="" ref="0x7f398a947d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a942020"/>
        <function-ref name="set" scoped="" ref="0x7f398a9421b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398a942340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f398a94ba70" loc="48:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f398a94ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f398a94bdf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f398a94a020"/>
        <function-ref name="led1On" scoped="" ref="0x7f398a94a1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f398a94a340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f398a94a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f398a94a660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f398a94a7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f398a94ae30"/>
        <function-ref name="set" scoped="" ref="0x7f398a94a980"/>
        <function-ref name="led0On" scoped="" ref="0x7f398a94ab10"/>
        <function-ref name="led2On" scoped="" ref="0x7f398a94aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f398a942660" loc="53:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f398a942660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a9429e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a942b70"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a942d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a941020"/>
        <function-ref name="get" scoped="" ref="0x7f398a9411b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a941340"/>
        <function-ref name="set" scoped="" ref="0x7f398a9414d0"/>
        <function-ref name="clr" scoped="" ref="0x7f398a941660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f398a94cb10" loc="42:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f398a94cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a925020"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a9251b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a925340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a9254d0"/>
        <function-ref name="get" scoped="" ref="0x7f398a925660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a9257f0"/>
        <function-ref name="set" scoped="" ref="0x7f398a925980"/>
        <function-ref name="clr" scoped="" ref="0x7f398a925b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f398a925e70" loc="43:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f398a925e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a924220"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a9243b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a924540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a9246d0"/>
        <function-ref name="get" scoped="" ref="0x7f398a924860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a9249f0"/>
        <function-ref name="set" scoped="" ref="0x7f398a924b80"/>
        <function-ref name="clr" scoped="" ref="0x7f398a924d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f398a9222e0" loc="45:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398a9222e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398a922660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f398a9230f0" loc="44:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f398a9230f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a923470"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a923600"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a923790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a923920"/>
        <function-ref name="get" scoped="" ref="0x7f398a923ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a923c40"/>
        <function-ref name="set" scoped="" ref="0x7f398a923dd0"/>
        <function-ref name="clr" scoped="" ref="0x7f398a922020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f398a90e2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f398a90e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a90e670"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a90e800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a90e990"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a90eb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a90ecb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a90ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a90d020"/>
        <function-ref name="get" scoped="" ref="0x7f398a90d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a90d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a90d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f398a90d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a90d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a90d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a90dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f398a90dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f398a91f020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f398a91f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a91f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a91f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a91f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a91f850"/>
        <function-ref name="get" scoped="" ref="0x7f398a91f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a91fb70"/>
        <function-ref name="set" scoped="" ref="0x7f398a91fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f398a90e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f398a90ade0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f398a90ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a909180"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a909310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a9094a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a909630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a9097c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a909950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a909ae0"/>
        <function-ref name="get" scoped="" ref="0x7f398a909c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a909e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a908020"/>
        <function-ref name="set" scoped="" ref="0x7f398a9081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a908340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a9084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a908760"/>
        <function-ref name="clr" scoped="" ref="0x7f398a9088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f398a90bb90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f398a90bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a90a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a90a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a90a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a90a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f398a90a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a90a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f398a90a980"/>
        <function-ref name="clr" scoped="" ref="0x7f398a90ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f398a905930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f398a905930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a905cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a905e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a903020"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a9031b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a903340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a9034d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a903660"/>
        <function-ref name="get" scoped="" ref="0x7f398a9037f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a903980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a903b10"/>
        <function-ref name="set" scoped="" ref="0x7f398a903ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a903e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a902020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a9022b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398a902440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f398a906710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f398a906710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a906a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a906c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a906db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a905020"/>
        <function-ref name="get" scoped="" ref="0x7f398a9051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a905340"/>
        <function-ref name="set" scoped="" ref="0x7f398a9054d0"/>
        <function-ref name="clr" scoped="" ref="0x7f398a905660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f39893d4020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f39893d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f39893d43a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f39893d4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f39893cd440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f39893cd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f39893cd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f39893c6760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f39893c6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f39893c6ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f39893c6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f39893cda50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f39893cda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f39893cddd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f39893cc020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f39893cc1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f39893cc340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f39893cc4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f39893cc660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f39893cc7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f39893cc980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f39893ccb10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f39893ccca0"/>
        <function-ref name="getData" scoped="" ref="0x7f39893cce30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f39893cb020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f39893cb1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f39893cb440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f39893cb5d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f39893cb760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f39893cb8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f39893cba80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f39893cbc10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f39893cbda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f39893ca020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f39893ca1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f39893ca340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f39893ca4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f39893ca660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f39893ca9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f39893cab80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f39893cad10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f39893c9020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f39893c91b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f39893c9340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f39893c94d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f39893c9660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f39893c97f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f39893c9980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f39893c9b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f39893c9ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f39893c9e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f39893c8020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f39893c81b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f39893c8340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f39893c84d0"/>
        <function-ref name="setData" scoped="" ref="0x7f39893c8660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f39893c87f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f39893c8980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f39893c8b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f39893c8ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f39893c8e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f39893c7020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f39893c75b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f39893c7740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f39893c78d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f39893c7a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f39893c7bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f39893c7d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f39893c6020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f39893c61b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f39893c6340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f39893c64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f39893cec10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f39893cec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f39893cd020"/>
        <function-ref name="txDone" scoped="" ref="0x7f39893cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f39893d5340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f39893d5340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f39893d56c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f39893d5850"/>
        <function-ref name="request" scoped="" ref="0x7f39893d59e0"/>
        <function-ref name="granted" scoped="" ref="0x7f39893d5b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f39893d5d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f39893d2020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f39893d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f39893d23a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f39893d2530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f39893d26c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f39893d2850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f39893d29e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f39893d2b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f39893d2d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f39893d1020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f39893d11b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f39893d1340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f39893d14d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f39893d1660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f39893d17f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f39893d1a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f39893d1c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f39893d1da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f39893d0020"/>
        <function-ref name="isUart" scoped="" ref="0x7f39893d01b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f39893d0340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f39893d04d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f39893d0660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f39893d07f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f39893d0980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f39893d0b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f39893d0ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f39893cf220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f39893cf3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f39893cf540"/>
        <function-ref name="tx" scoped="" ref="0x7f39893cf6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f39893cf860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f39893cf9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f39893cfb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f39893cfd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f39893ce020"/>
        <function-ref name="rx" scoped="" ref="0x7f39893ce1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f39893ce340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f39893ce4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f39893ce660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f39893ce7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f39893ce980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f39893d47c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f39893d47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f39893d4b40"/>
        <function-ref name="userId" scoped="" ref="0x7f39893d4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f398a8d52c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f398a8d52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f398a8d5640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f398a8d57d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f398a8d48a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f398a8d48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f398a8d4c20"/>
        <function-ref name="configure" scoped="" ref="0x7f398a8d4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f398a8d94d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f398a8d94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f398a8d9850"/>
        <function-ref name="txDone" scoped="" ref="0x7f398a8d99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f398a8d7020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398a8d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a8d73a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a8d7530"/>
        <function-ref name="request" scoped="" ref="0x7f398a8d76c0"/>
        <function-ref name="granted" scoped="" ref="0x7f398a8d7850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a8d79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f398a8d83f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f398a8d83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398a8d8770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f398a8d5ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f398a8d5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f398a8d5e50"/>
        <function-ref name="userId" scoped="" ref="0x7f398a8d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f398a8bfbf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f398a8bfbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f398a8be020"/>
        <function-ref name="userId" scoped="" ref="0x7f398a8be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f398a8d2d60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f398a8d2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f398a8c0180"/>
        <function-ref name="txDone" scoped="" ref="0x7f398a8c0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f398a8bf5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f398a8bf5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398a8bf960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f398a8c0710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f398a8c0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398a8c0ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f398a8c0d80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f398a8c0d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f398a8bf180"/>
        <function-ref name="txDone" scoped="" ref="0x7f398a8bf310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f398a845020" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f398a845020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f398a8453c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f398a845550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f398a844cd0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f398a844cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f398a8430a0"/>
        <function-ref name="configure" scoped="" ref="0x7f398a843230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f398a8457a0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f398a8457a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a845b20"/>
        <function-ref name="requested" scoped="" ref="0x7f398a845cb0"/>
        <function-ref name="granted" scoped="" ref="0x7f398a845e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a844020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f398a8441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f398a846210" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398a846210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a8465b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a846740"/>
        <function-ref name="request" scoped="" ref="0x7f398a8468d0"/>
        <function-ref name="granted" scoped="" ref="0x7f398a846a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a846bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f398a844400" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f398a844400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f398a844780"/>
        <function-ref name="userId" scoped="" ref="0x7f398a844910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3988ffee50" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3988ffee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3988ffd210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f3988ffd4a0" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f3988ffd4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3988ffd820"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3988ffd9b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3988ffdb40"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3988ffdcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3988ff9530" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3988ff9530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3988ff98d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3988ff9a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3988ff7270" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3988ff7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3988ff7610"/>
        <function-ref name="configure" scoped="" ref="0x7f3988ff77a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f3988ff7a30" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f3988ff7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3988ff7db0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3988ff6020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3988ff61b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3988ff6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f3988ff9cb0" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3988ff9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3988ff80a0"/>
        <function-ref name="requested" scoped="" ref="0x7f3988ff8230"/>
        <function-ref name="granted" scoped="" ref="0x7f3988ff83c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3988ff8550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3988ff86e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3988ff6590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f3988ff6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3988ff6910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3988ff6aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f3988ff6c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3988ff6dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3988ff5020"/>
        <function-ref name="get" scoped="" ref="0x7f3988ff51b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3988ff5340"/>
        <function-ref name="led0On" scoped="" ref="0x7f3988ff5980"/>
        <function-ref name="set" scoped="" ref="0x7f3988ff5660"/>
        <function-ref name="led2On" scoped="" ref="0x7f3988ff54d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3988ff57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3988ffa740" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3988ffa740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3988ffaae0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3988ffac70"/>
        <function-ref name="request" scoped="" ref="0x7f3988ffae00"/>
        <function-ref name="granted" scoped="" ref="0x7f3988ff9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3988ff91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3988ff8930" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3988ff8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3988ff8cb0"/>
        <function-ref name="userId" scoped="" ref="0x7f3988ff8e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f3988ff5c50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f3988ff5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3988ff4020"/>
        <function-ref name="runTask" scoped="" ref="0x7f3988ff41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f398a83cd70" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f398a83cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f398a839180"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f398a839310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f398a8394a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f398a839630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f398a8397c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f398a839950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f398a839ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f398a839c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398a839e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f398a838020"/>
        <function-ref name="getData" scoped="" ref="0x7f398a8381b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f398a838340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f398a8384d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f398a838760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f398a8388f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f398a838a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f398a838c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f398a838da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f398a837020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f398a8371b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f398a837340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f398a8374d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f398a837660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f398a8377f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f398a837980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f398a837d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f398a836020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f398a8361b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f398a836340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f398a8364d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f398a836660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f398a8367f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f398a836980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f398a836b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f398a836ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f398a836e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f398a835020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f398a8351b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f398a835340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f398a8354d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f398a835660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f398a8357f0"/>
        <function-ref name="setData" scoped="" ref="0x7f398a835980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f398a835b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f398a835ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f398a835e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f398a834020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f398a8341b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f398a834340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f398a8348d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f398a834a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f398a834bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f398a834d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f398a833020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f398a8331b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f398a833340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f398a8334d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f398a833660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f398a8337f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f398a829700" loc="41:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f398a829700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f398a829a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f398a829c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f398a829da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f398a828020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f398a8281b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f398a828340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f398a8284d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f398a828660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f398a8287f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f398a828980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f398a828b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f398a828ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f398a828e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f398a827120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f398a8272b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f398a827440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f398a8275d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f398a827760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f398a8278f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f398a827a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f398a827c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f398a827da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f398a826020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f398a8261b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f398a826340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f398a8266d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f398a826860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f398a8269f0"/>
        <function-ref name="tx" scoped="" ref="0x7f398a826b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f398a826d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f398a825020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f398a8251b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f398a825340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f398a8254d0"/>
        <function-ref name="rx" scoped="" ref="0x7f398a825660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f398a8257f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f398a825980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f398a825b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f398a825ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f398a825e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f398a8221f0" loc="43:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f398a8221f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a822570"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a822700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a822890"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a822a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a822bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a822d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a821020"/>
        <function-ref name="get" scoped="" ref="0x7f398a8211b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a821340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a8214d0"/>
        <function-ref name="set" scoped="" ref="0x7f398a821660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a8217f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a821980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a821c10"/>
        <function-ref name="clr" scoped="" ref="0x7f398a821da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f398a832940" loc="39:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f398a832940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f398a832cc0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f398a832e50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f398a82f020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f398a82f1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f398a82f340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f398a82f4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f398a82f660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f398a82f7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398a82f980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f398a82fb10"/>
        <function-ref name="getData" scoped="" ref="0x7f398a82fca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f398a82fe30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f398a82e020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f398a82e2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f398a82e440"/>
        <function-ref name="getIV" scoped="" ref="0x7f398a82e5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f398a82e760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f398a82e8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f398a82ea80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f398a82ec10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f398a82eda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f398a82d020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f398a82d1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f398a82d340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f398a82d4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f398a82d860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f398a82d9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f398a82db80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f398a82dd10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f398a82c020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f398a82c1b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f398a82c340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f398a82c4d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f398a82c660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f398a82c7f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f398a82c980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f398a82cb10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f398a82cca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f398a82ce30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f398a82b020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f398a82b1b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f398a82b340"/>
        <function-ref name="setData" scoped="" ref="0x7f398a82b4d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f398a82b660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f398a82b7f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f398a82b980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f398a82bb10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f398a82bca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f398a82be30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f398a82a420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f398a82a5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f398a82a740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f398a82a8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f398a82aa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f398a82abf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f398a82ad80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f398a829020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f398a8291b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f398a829340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f398a824250" loc="42:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f398a824250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a8245d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a824760"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a8248f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a824a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a824c10"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a824da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a823020"/>
        <function-ref name="get" scoped="" ref="0x7f398a8231b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a823340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a8234d0"/>
        <function-ref name="set" scoped="" ref="0x7f398a823660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a8237f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a823980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a823c10"/>
        <function-ref name="clr" scoped="" ref="0x7f398a823da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f398a770920" loc="37:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f398a770920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f398a770ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f398a76f020" loc="38:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398a76f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a76f3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a76f530"/>
        <function-ref name="request" scoped="" ref="0x7f398a76f6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f398a76f850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a76f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f398a7700c0" loc="36:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f398a7700c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f398a770440"/>
        <function-ref name="stop" scoped="" ref="0x7f398a7705d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f398a75da30" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f398a75da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f398a75ddb0"/>
        <function-ref name="offset" scoped="" ref="0x7f398a75a020"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f398a75a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f398a73fbf0" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f398a73fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f398a719ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f398a718880"/>
        <function-ref name="element" scoped="" ref="0x7f398a717020"/>
        <function-ref name="full" scoped="" ref="0x7f398a71ace0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f398a719660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f398a7181d0"/>
        <function-ref name="empty" scoped="" ref="0x7f398a71a860"/>
        <function-ref name="size" scoped="" ref="0x7f398a7191e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f398a70fa20" loc="93:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f398a70fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f398a710920"/>
        <function-ref name="enqueue" scoped="" ref="0x7f398a70d6d0"/>
        <function-ref name="element" scoped="" ref="0x7f398a70dd40"/>
        <function-ref name="full" scoped="" ref="0x7f398a711af0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f398a7104a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f398a70d020"/>
        <function-ref name="empty" scoped="" ref="0x7f398a711670"/>
        <function-ref name="size" scoped="" ref="0x7f398a710020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f398a70c440" loc="94:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f398a70c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398a70c7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398a70c950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398a70cae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f398a70cc70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398a70ce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f398a70b0c0" loc="95:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f398a70b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398a70b440"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f398a70b5d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398a70b760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398a70b8f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f398a70ba80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f398a705500" loc="114:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f398a705500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398a705880"/>
        <function-ref name="runTask" scoped="" ref="0x7f398a705a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398a715a60" loc="89:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398a715a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398a715de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f398a70bd00" loc="96:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f398a70bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f398a70a0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f398a70a230"/>
        <function-ref name="led1On" scoped="" ref="0x7f398a70a3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f398a70a550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f398a70a6e0"/>
        <function-ref name="get" scoped="" ref="0x7f398a70a870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f398a70aa00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f398a7091b0"/>
        <function-ref name="set" scoped="" ref="0x7f398a70ab90"/>
        <function-ref name="led0On" scoped="" ref="0x7f398a70ad20"/>
        <function-ref name="led2On" scoped="" ref="0x7f398a709020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f398a70f1a0" loc="90:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f398a70f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f398a70f520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f398a6efbe0" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f398a6efbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f398a6ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398a6e9020" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398a6e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398a6e93a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f398a6e9680" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f398a6e9680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f398a6e9a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f398a6e2380" loc="39:../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f398a6e2380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f398a6e2700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f398a6e2aa0" loc="40:../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f398a6e2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398a6e2e20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398a6df020"/>
        <function-ref name="start" scoped="" ref="0x7f398a6df1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f398a6df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="XXTEA" ref="0x7f398a6d4bc0" loc="2:../../../tos/platforms/shimmer2r/XXTEAC.nc">
      <component-ref qname="XXTEAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="XXTEA" scoped="" ref="0x7f398a6d4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="XXTEA"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x7f398a6d9020"/>
        <function-ref name="lsb" scoped="" ref="0x7f398a6d91b0"/>
        <function-ref name="msb" scoped="" ref="0x7f398a6d9340"/>
        <function-ref name="encrypt" scoped="" ref="0x7f398a6d94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="XXTEA" ref="0x7f398a6d22f0" loc="2:../../../tos/platforms/shimmer2r/XXTEAP.nc">
      <component-ref qname="XXTEAP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="XXTEA" scoped="" ref="0x7f398a6d22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="XXTEA"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x7f398a6d2670"/>
        <function-ref name="lsb" scoped="" ref="0x7f398a6d2800"/>
        <function-ref name="msb" scoped="" ref="0x7f398a6d2990"/>
        <function-ref name="encrypt" scoped="" ref="0x7f398a6d2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f398a6d8e00" loc="51:../../../tos/platforms/shimmer/DemoSensorC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f398a6d8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398a6d3a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f398a0ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f3988fb1020" loc="44:../../../tos/platforms/shimmer/VoltageC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f3988fb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3988fb1c10"/>
        <function-ref name="readDone" scoped="" ref="0x7f3988fb00d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f3988fae020" loc="44:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f3988fae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3988faec10"/>
        <function-ref name="readDone" scoped="" ref="0x7f3988fac0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f3988fa8140" loc="48:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f3988fa8140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3988fa8d70"/>
        <function-ref name="readDone" scoped="" ref="0x7f3988fa7260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f3988fac7b0" loc="45:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f3988fac7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f3988faa2a0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f3988fab400"/>
        <function-ref name="read" scoped="" ref="0x7f3988fabd70"/>
        <function-ref name="readDone" scoped="" ref="0x7f3988faad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3988fa9340" loc="47:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3988fa9340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3988fa96c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3988fa9850"/>
        <function-ref name="request" scoped="" ref="0x7f3988fa99e0"/>
        <function-ref name="granted" scoped="" ref="0x7f3988fa9b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3988fa9d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f3988fa38d0" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f3988fa38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3988fa2560"/>
        <function-ref name="readDone" scoped="" ref="0x7f3988fa29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f3988fa11c0" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988fa11c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f3988fa1df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7f398a6686e0" loc="46:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7f398a6686e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a668a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a668bf0"/>
        <function-ref name="request" scoped="" ref="0x7f398a668d80"/>
        <function-ref name="granted" scoped="" ref="0x7f398a667020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a6671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f398a670390" loc="38:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f398a670390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398a66f020"/>
        <function-ref name="readDone" scoped="" ref="0x7f398a66f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f398a66d210" loc="39:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f398a66d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398a66de40"/>
        <function-ref name="readDone" scoped="" ref="0x7f398a66c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7f398a66b020" loc="40:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7f398a66b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a66b3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a66b530"/>
        <function-ref name="request" scoped="" ref="0x7f398a66b6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f398a66b850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a66b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f398a667d40" loc="48:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f398a667d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f398a6669c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f398a664450" loc="49:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f398a664450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f398a6647d0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f398a664960"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f398a664af0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f398a664c80"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f398a664e10"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f398a663020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f398a6631b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7f398a66a390" loc="44:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7f398a66a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a66a710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a66a8a0"/>
        <function-ref name="request" scoped="" ref="0x7f398a66aa30"/>
        <function-ref name="granted" scoped="" ref="0x7f398a66abc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a66ad50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7f398a637e40" loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7f398a637e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398a6361e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f398a636370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f3988f8d400" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f3988f8d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f3988f8d780"/>
        <function-ref name="configure" scoped="" ref="0x7f3988f8d910"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3988f8daa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f3988f8e400" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f3988f8e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f3988f8e780"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f3988f8e910"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f3988f8eaa0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f3988f8ec30"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f3988f8edc0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f3988f8d020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f3988f8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f3988f8dcf0" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f3988f8dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f3988f8c0a0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f3988f8c230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f3988f8c660" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988f8c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f3988f8a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3988f8f660" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3988f8f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3988f8f9e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3988f8fb70"/>
        <function-ref name="request" scoped="" ref="0x7f3988f8fd00"/>
        <function-ref name="granted" scoped="" ref="0x7f3988f8e020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3988f8e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f398a5fb960" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f398a5fb960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f398a5fbce0"/>
        <function-ref name="configure" scoped="" ref="0x7f398a5fbe70"/>
        <function-ref name="dataReady" scoped="" ref="0x7f398a5f9030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f398a5f61d0" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f398a5f61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f398a5f6550"/>
        <function-ref name="stop" scoped="" ref="0x7f398a5f66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f398a5f9920" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f398a5f9920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f398a5f9ca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f398a5f9e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f398a5fc1d0" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f398a5fc1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f398a5fc550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f398a5fc6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f398a5fc870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f398a5fca00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f398a5fcb90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f398a5fcd20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f398a5fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f398a602cc0" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398a602cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a5fd0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a5fd230"/>
        <function-ref name="request" scoped="" ref="0x7f398a5fd3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f398a5fd550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a5fd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f398a5f0af0" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f398a5f0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f398a5f0e70"/>
        <function-ref name="configure" scoped="" ref="0x7f398a5ef030"/>
        <function-ref name="dataReady" scoped="" ref="0x7f398a5ef1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f398a5de0d0" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f398a5de0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f398a5de450"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f398a5de5e0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f398a5de770"/>
        <function-ref name="isBusy" scoped="" ref="0x7f398a5de900"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f398a5dea90"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f398a5dec20"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f398a5dedb0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f398a5eb020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f398a5eb1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7f398a5eb340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f398a5eb4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f398a5eb660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f398a5eb7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f398a5eba80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f398a5ebc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7f398a5d1c80" loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f398a5d1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a5d00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a5d0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a5d03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a5d0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a5d06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a5d0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a5d0a00"/>
        <function-ref name="get" scoped="" ref="0x7f398a5d0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a5d0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a5cf020"/>
        <function-ref name="set" scoped="" ref="0x7f398a5cf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a5cf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a5cf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a5cf760"/>
        <function-ref name="clr" scoped="" ref="0x7f398a5cf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7f398a5dae60" loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f398a5dae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398a5d9210"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398a5d93a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398a5d9530"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398a5d96c0"/>
        <function-ref name="fired" scoped="" ref="0x7f398a5d9850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7f398a5dd880" loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f398a5dd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398a5ddc00"/>
        <function-ref name="getControl" scoped="" ref="0x7f398a5ddd90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398a5dc020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398a5dc1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398a5dc340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398a5dc4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398a5dc660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398a5dc7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f398a5dc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f398a5ee910" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f398a5ee910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f398a5eec90"/>
        <function-ref name="stop" scoped="" ref="0x7f398a5eee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7f398a5d5c80" loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f398a5d5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a5d40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a5d4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a5d43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a5d4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a5d46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a5d4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a5d4a00"/>
        <function-ref name="get" scoped="" ref="0x7f398a5d4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a5d4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a5d3020"/>
        <function-ref name="set" scoped="" ref="0x7f398a5d31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a5d3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a5d34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a5d3760"/>
        <function-ref name="clr" scoped="" ref="0x7f398a5d38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f398a5efab0" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f398a5efab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f398a5efe30"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f398a5ee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7f398a5cac80" loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f398a5cac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a5c90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a5c9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a5c93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a5c9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a5c96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a5c9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a5c9a00"/>
        <function-ref name="get" scoped="" ref="0x7f398a5c9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a5c9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a5c8020"/>
        <function-ref name="set" scoped="" ref="0x7f398a5c81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a5c8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a5c84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a5c8760"/>
        <function-ref name="clr" scoped="" ref="0x7f398a5c88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7f398a5d9be0" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f398a5d9be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a5d80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a5d8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a5d83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a5d8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a5d86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a5d8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a5d8a00"/>
        <function-ref name="get" scoped="" ref="0x7f398a5d8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a5d8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a5d7020"/>
        <function-ref name="set" scoped="" ref="0x7f398a5d71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a5d7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a5d74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a5d7760"/>
        <function-ref name="clr" scoped="" ref="0x7f398a5d78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398a5f2660" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398a5f2660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398a5f29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7f398a5cfc80" loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f398a5cfc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a5cd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a5cd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a5cd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a5cd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a5cd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a5cd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a5cda00"/>
        <function-ref name="get" scoped="" ref="0x7f398a5cdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a5cdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a5cc020"/>
        <function-ref name="set" scoped="" ref="0x7f398a5cc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a5cc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a5cc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a5cc760"/>
        <function-ref name="clr" scoped="" ref="0x7f398a5cc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7f398a5ea020" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f398a5ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398a5ea3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398a5ea530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398a5ea6c0"/>
        <function-ref name="get" scoped="" ref="0x7f398a5ea850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398a5ea9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398a5eab70"/>
        <function-ref name="getMode" scoped="" ref="0x7f398a5ead00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398a5dd020"/>
        <function-ref name="overflow" scoped="" ref="0x7f398a5dd1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f398a5dd340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398a5dd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7f398a5ec280" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f398a5ec280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f398a5ec600"/>
        <function-ref name="userId" scoped="" ref="0x7f398a5ec790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7f398a5dcd30" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f398a5dcd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398a5db0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f398a5db270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398a5db400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398a5db590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398a5db720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398a5db8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398a5dba40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398a5dbbd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f398a5dbd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f398a5f1370" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f398a5f1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f398a5f16f0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f398a5f1880"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f398a5f1a10"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f398a5f1ba0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f398a5f1d30"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f398a5f0020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f398a5f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7f398a5d3c80" loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f398a5d3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a5d20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a5d2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a5d23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a5d2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a5d26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a5d2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a5d2a00"/>
        <function-ref name="get" scoped="" ref="0x7f398a5d2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a5d2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a5d1020"/>
        <function-ref name="set" scoped="" ref="0x7f398a5d11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a5d1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a5d14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a5d1760"/>
        <function-ref name="clr" scoped="" ref="0x7f398a5d18f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7f398a5da120" loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f398a5da120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398a5da4a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398a5da630"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398a5da7c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398a5da950"/>
        <function-ref name="fired" scoped="" ref="0x7f398a5daae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7f398a5d7c80" loc="55:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f398a5d7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a5d60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a5d6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a5d63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a5d6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a5d66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a5d6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a5d6a00"/>
        <function-ref name="get" scoped="" ref="0x7f398a5d6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a5d6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a5d5020"/>
        <function-ref name="set" scoped="" ref="0x7f398a5d51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a5d5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a5d54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a5d5760"/>
        <function-ref name="clr" scoped="" ref="0x7f398a5d58f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7f398a5ccc80" loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f398a5ccc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398a5cb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398a5cb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f398a5cb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398a5cb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398a5cb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f398a5cb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398a5cba00"/>
        <function-ref name="get" scoped="" ref="0x7f398a5cbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f398a5cbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f398a5ca020"/>
        <function-ref name="set" scoped="" ref="0x7f398a5ca1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f398a5ca340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f398a5ca4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f398a5ca760"/>
        <function-ref name="clr" scoped="" ref="0x7f398a5ca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7f398a50b020" loc="46:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f398a50b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f398a50b3a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f398a50b530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f398a50b6c0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f398a50b850"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f398a50b9e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f398a50bb70"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f398a50bd00"/>
        <function-ref name="startConversion" scoped="" ref="0x7f398a50a020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f398a50a1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7f398a50a340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f398a50a4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f398a50a660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f398a50a7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f398a50aa80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f398a50ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f398a47b3a0" loc="86:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f398a47b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f398a47b740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f398a47b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f398a47a570" loc="89:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f398a47a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f398a47a910"/>
        <function-ref name="configure" scoped="" ref="0x7f398a47aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f398a47c520" loc="85:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398a47c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a47c8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a47ca50"/>
        <function-ref name="request" scoped="" ref="0x7f398a47cbe0"/>
        <function-ref name="granted" scoped="" ref="0x7f398a47cd70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a47b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f398a47bb20" loc="87:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f398a47bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f398a47a020"/>
        <function-ref name="userId" scoped="" ref="0x7f398a47a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3988f67060" loc="44:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3988f67060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3988f673e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f3988f67670" loc="45:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f3988f67670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3988f679f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3988f67b80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3988f67d10"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3988f66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3988f63530" loc="52:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3988f63530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3988f638d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3988f63a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3988f62610" loc="56:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3988f62610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3988f629b0"/>
        <function-ref name="configure" scoped="" ref="0x7f3988f62b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f3988f62dd0" loc="57:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f3988f62dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3988f61180"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3988f61310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3988f614a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3988f61630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3988f656c0" loc="51:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3988f656c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3988f65a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3988f65bf0"/>
        <function-ref name="request" scoped="" ref="0x7f3988f65d80"/>
        <function-ref name="granted" scoped="" ref="0x7f3988f63020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3988f631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3988f63cb0" loc="53:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3988f63cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3988f620a0"/>
        <function-ref name="userId" scoped="" ref="0x7f3988f62230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f3988f61900" loc="68:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f3988f61900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3988f61c80"/>
        <function-ref name="runTask" scoped="" ref="0x7f3988f61e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f398a45b740" loc="55:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f398a45b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f398a45a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f398a45d1d0" loc="54:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f398a45d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a45d550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a45d6e0"/>
        <function-ref name="request" scoped="" ref="0x7f398a45d870"/>
        <function-ref name="granted" scoped="" ref="0x7f398a45da00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a45db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f398a461d20" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f398a461d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a45e0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a45e270"/>
        <function-ref name="request" scoped="" ref="0x7f398a45e400"/>
        <function-ref name="granted" scoped="" ref="0x7f398a45e590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a45e720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f398a4569a0" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f398a4569a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f398a456d20"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f398a455020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f398a4551b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f398a455340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f398a4554d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f398a455660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f398a4557f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f398a455980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f398a455b10"/>
        <function-ref name="getMem" scoped="" ref="0x7f398a455ca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f398a455e30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f398a454020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f398a4541b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f398a454440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f398a4545d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7f398a445840" loc="45:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f398a445840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a441cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f398a443300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f398a4410d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f398a443c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f398a440660"/>
        <function-ref name="gett0" scoped="" ref="0x7f398a4401e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a443780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f398a444480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f398a4416e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f398a444950"/>
        <function-ref name="stop" scoped="" ref="0x7f398a444e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7f398a457e00" loc="39:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f398a457e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398a4561c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398a456350"/>
        <function-ref name="start" scoped="" ref="0x7f398a4564e0"/>
        <function-ref name="stop" scoped="" ref="0x7f398a456670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7f398a440d00" loc="46:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f398a440d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a43b220"/>
        <function-ref name="fired" scoped="" ref="0x7f398a43e7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f398a43c590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f398a43c110"/>
        <function-ref name="getdt" scoped="" ref="0x7f398a43bb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f398a43b6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a43ec40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f398a43f940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f398a43cba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f398a43fe10"/>
        <function-ref name="stop" scoped="" ref="0x7f398a43e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7f398a457240" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f398a457240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398a4575c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398a457750"/>
        <function-ref name="start" scoped="" ref="0x7f398a4578e0"/>
        <function-ref name="stop" scoped="" ref="0x7f398a457a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7f398a4532b0" loc="44:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f398a4532b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a446870"/>
        <function-ref name="fired" scoped="" ref="0x7f398a452e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f398a448c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f398a448780"/>
        <function-ref name="getdt" scoped="" ref="0x7f398a4451e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f398a446cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a448300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f398a452020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f398a446260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f398a4524f0"/>
        <function-ref name="stop" scoped="" ref="0x7f398a4529c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f398a3e8920" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f398a3e8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f398a3e75a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7f398a3e9540" loc="42:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f398a3e9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398a3e98c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398a3e9a50"/>
        <function-ref name="start" scoped="" ref="0x7f398a3e9be0"/>
        <function-ref name="stop" scoped="" ref="0x7f398a3e9d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f398a3ecad0" loc="40:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f398a3ecad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a3ece50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a3eb020"/>
        <function-ref name="request" scoped="" ref="0x7f398a3eb1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f398a3eb340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a3eb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f398a3ed6f0" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f398a3ed6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a3eda70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a3edc00"/>
        <function-ref name="request" scoped="" ref="0x7f398a3edd90"/>
        <function-ref name="granted" scoped="" ref="0x7f398a3ec020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a3ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7f398a3e52a0" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7f398a3e52a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398a3e5620"/>
        <function-ref name="runTask" scoped="" ref="0x7f398a3e57b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7f398a3eb860" loc="41:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f398a3eb860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398a3ebbe0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398a3ebd70"/>
        <function-ref name="start" scoped="" ref="0x7f398a3e9020"/>
        <function-ref name="stop" scoped="" ref="0x7f398a3e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f398a225370" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398a225370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a221870"/>
        <function-ref name="fired" scoped="" ref="0x7f398a224e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f398a222c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f398a222780"/>
        <function-ref name="getdt" scoped="" ref="0x7f398a2201e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f398a221cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a222300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f398a224020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f398a221260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f398a2244f0"/>
        <function-ref name="stop" scoped="" ref="0x7f398a2249c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f398a3ac020" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f398a3ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a3a8630"/>
        <function-ref name="fired" scoped="" ref="0x7f398a3aba60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f398a3a9920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f398a3a94a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f398a3a7020"/>
        <function-ref name="gett0" scoped="" ref="0x7f398a3a8ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a3a9020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f398a3acc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f398a3a8020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f398a3ab110"/>
        <function-ref name="stop" scoped="" ref="0x7f398a3ab5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f398a3a3c30" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f398a3a3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a39e110"/>
        <function-ref name="fired" scoped="" ref="0x7f398a3a16a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f398a3a04a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f398a3a0020"/>
        <function-ref name="getdt" scoped="" ref="0x7f398a39ea10"/>
        <function-ref name="gett0" scoped="" ref="0x7f398a39e590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a3a1b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f398a3a2860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f398a3a0ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f398a3a2d30"/>
        <function-ref name="stop" scoped="" ref="0x7f398a3a1220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f398a399500" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f398a399500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f398a39c170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398a3a7e50" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398a3a7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398a3a3210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f398a2c1870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f398a2c1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a2bd090"/>
        <function-ref name="fired" scoped="" ref="0x7f398a2be090"/>
        <function-ref name="startAt" scoped="" ref="0x7f398a2bea10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a2be550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f398a2bd550"/>
        <function-ref name="start" scoped="" ref="0x7f398a2c06a0"/>
        <function-ref name="stop" scoped="" ref="0x7f398a2c0bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398a2c1020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398a2c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398a2c13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3988f2d140" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f3988f2d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3988f2ab30"/>
        <function-ref name="fired" scoped="" ref="0x7f3988f2c9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f3988f2a4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3988f2a020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3988f29020"/>
        <function-ref name="start" scoped="" ref="0x7f3988f2c020"/>
        <function-ref name="stop" scoped="" ref="0x7f3988f2c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3988f2e860" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3988f2e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3988f2ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f3988f14a80" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988f14a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f3988f14e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f3988f13020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f3988f131b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f3988f13340"/>
        <function-ref name="fired" scoped="" ref="0x7f3988f134d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f3988f17020" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988f17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3988f173a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f3988f17530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3988f176c0"/>
        <function-ref name="get" scoped="" ref="0x7f3988f17850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3988f179e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3988f17b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f3988f17d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3988f16020"/>
        <function-ref name="overflow" scoped="" ref="0x7f3988f161b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f3988f16340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f3988f164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f3988f16760" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988f16760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f3988f16ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f3988f16c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3988f16e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f3988f14020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f3988f141b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3988f14340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f3988f144d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f3988f14660"/>
        <function-ref name="setControl" scoped="" ref="0x7f3988f147f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f398a3763f0" loc="52:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f398a3763f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f398a376770"/>
        <function-ref name="setEvent" scoped="" ref="0x7f398a376900"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f398a376a90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f398a376c20"/>
        <function-ref name="fired" scoped="" ref="0x7f398a376db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f398a37ecd0" loc="50:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f398a37ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398a37a0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f398a37a230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398a37a3c0"/>
        <function-ref name="get" scoped="" ref="0x7f398a37a550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398a37a6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398a37a870"/>
        <function-ref name="getMode" scoped="" ref="0x7f398a37aa00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398a37ab90"/>
        <function-ref name="overflow" scoped="" ref="0x7f398a37ad20"/>
        <function-ref name="setMode" scoped="" ref="0x7f398a379020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f398a3791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f398a379a40" loc="51:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f398a379a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f398a379dc0"/>
        <function-ref name="getControl" scoped="" ref="0x7f398a377020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f398a3771b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f398a377340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f398a3774d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f398a377660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f398a3777f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f398a377980"/>
        <function-ref name="setControl" scoped="" ref="0x7f398a377b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f3988f0a760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988f0a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f3988f0aae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f3988f0ac70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f3988f0ae00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f3988f09020"/>
        <function-ref name="fired" scoped="" ref="0x7f3988f091b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f3988f0edd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988f0edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3988f0c180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f3988f0c310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3988f0c4a0"/>
        <function-ref name="get" scoped="" ref="0x7f3988f0c630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3988f0c7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3988f0c950"/>
        <function-ref name="getMode" scoped="" ref="0x7f3988f0cae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3988f0cc70"/>
        <function-ref name="overflow" scoped="" ref="0x7f3988f0ce00"/>
        <function-ref name="setMode" scoped="" ref="0x7f3988f0b020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f3988f0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3988f11bf0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f3988f11bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3988f0e4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f3988f0f4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f3988f0fe60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3988f0f9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3988f0e9a0"/>
        <function-ref name="start" scoped="" ref="0x7f3988f10a80"/>
        <function-ref name="stop" scoped="" ref="0x7f3988f0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3988f11360" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3988f11360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3988f116e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f3988f0b440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988f0b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f3988f0b7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f3988f0b950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3988f0bae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f3988f0bc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f3988f0be00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3988f0a020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f3988f0a1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f3988f0a340"/>
        <function-ref name="setControl" scoped="" ref="0x7f3988f0a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f398a325b70" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f398a325b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f398a3229b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398a320360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398a322e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f398a320820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f398a2ff0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f398a2ff0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f398a2fe020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398a2fe9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398a2fe4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f398a2fee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f398a31dcf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f398a31dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f398a302b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398a300550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398a300090"/>
        <function-ref name="overflow" scoped="" ref="0x7f398a300a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3988f275f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f3988f275f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3988f25e50"/>
        <function-ref name="fired" scoped="" ref="0x7f3988f26e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f3988f25800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3988f25340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3988f24340"/>
        <function-ref name="start" scoped="" ref="0x7f3988f26430"/>
        <function-ref name="stop" scoped="" ref="0x7f3988f26940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f3988f21d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f3988f21d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3988f1e670"/>
        <function-ref name="fired" scoped="" ref="0x7f3988f1f550"/>
        <function-ref name="startAt" scoped="" ref="0x7f3988f1e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3988f1fa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3988f1eb30"/>
        <function-ref name="start" scoped="" ref="0x7f3988f20b60"/>
        <function-ref name="stop" scoped="" ref="0x7f3988f1f090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f3988f249b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f3988f249b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3988f227e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3988f211b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3988f22ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f3988f21670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f398a28c9c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f398a28c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398a28cd40"/>
        <function-ref name="runTask" scoped="" ref="0x7f398a28a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f398a28f850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f398a28f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a28c090"/>
        <function-ref name="fired" scoped="" ref="0x7f398a28d090"/>
        <function-ref name="startAt" scoped="" ref="0x7f398a28da10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a28d550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f398a28c550"/>
        <function-ref name="start" scoped="" ref="0x7f398a28e6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f398a28ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f398a2942f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398a2942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a291870"/>
        <function-ref name="fired" scoped="" ref="0x7f398a293e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f398a292c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f398a292780"/>
        <function-ref name="getdt" scoped="" ref="0x7f398a28f1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f398a291cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a292300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f398a293020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f398a291260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f398a2934f0"/>
        <function-ref name="stop" scoped="" ref="0x7f398a2939c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f398a23aa00" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f398a23aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398a23ad80"/>
        <function-ref name="runTask" scoped="" ref="0x7f398a239020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f398a23f640" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f398a23f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a23bc40"/>
        <function-ref name="fired" scoped="" ref="0x7f398a23d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f398a23b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f398a23dae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f398a23a590"/>
        <function-ref name="gett0" scoped="" ref="0x7f398a23a110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a23d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f398a23e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f398a23b630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f398a23e860"/>
        <function-ref name="stop" scoped="" ref="0x7f398a23ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f398a245150" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398a245150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a241700"/>
        <function-ref name="fired" scoped="" ref="0x7f398a244c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f398a242a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f398a2425b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f398a23f090"/>
        <function-ref name="gett0" scoped="" ref="0x7f398a241ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a242110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f398a245d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f398a2410d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f398a2442a0"/>
        <function-ref name="stop" scoped="" ref="0x7f398a244790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f398a237790" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f398a237790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f398a2363f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f398a236a60" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f398a236a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f398a22c890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398a22a260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398a22cd50"/>
        <function-ref name="overflow" scoped="" ref="0x7f398a22a720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f398a21fd10" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398a21fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a21a220"/>
        <function-ref name="fired" scoped="" ref="0x7f398a21c7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f398a21b590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f398a21b110"/>
        <function-ref name="getdt" scoped="" ref="0x7f398a21ab20"/>
        <function-ref name="gett0" scoped="" ref="0x7f398a21a6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a21cc40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f398a21d940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f398a21bba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f398a21de10"/>
        <function-ref name="stop" scoped="" ref="0x7f398a21c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f398a217750" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398a217750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a214c40"/>
        <function-ref name="fired" scoped="" ref="0x7f398a2151e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f398a214020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f398a215ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f398a213590"/>
        <function-ref name="gett0" scoped="" ref="0x7f398a213110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a215660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f398a216390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f398a214630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f398a216860"/>
        <function-ref name="stop" scoped="" ref="0x7f398a216d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f3988f7d020" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f3988f7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f3988f7dc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f3988f7b2a0" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f3988f7b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f3988f7a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f3988f9b260" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988f9b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f3988f99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f3988f9e4f0" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f3988f9e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f3988f9c020"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f3988f9d110"/>
        <function-ref name="read" scoped="" ref="0x7f3988f9da80"/>
        <function-ref name="readDone" scoped="" ref="0x7f3988f9cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7f398a1db720" loc="23:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f398a1db720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f398a1dbaa0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f398a1dbc30"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f398a1dbdc0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f398a1da020"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f398a1da1b0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f398a1da340"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f398a1da4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f398a1dd020" loc="22:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f398a1dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f398a1ddc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f398a1e29f0" loc="20:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f398a1e29f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f398a1df4f0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f398a1e1670"/>
        <function-ref name="read" scoped="" ref="0x7f398a1df020"/>
        <function-ref name="readDone" scoped="" ref="0x7f398a1de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f398a1dace0" loc="24:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398a1dace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a1d90a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a1d9230"/>
        <function-ref name="request" scoped="" ref="0x7f398a1d93c0"/>
        <function-ref name="granted" scoped="" ref="0x7f398a1d9550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a1d96e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7f398a1a3020" loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7f398a1a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398a1a33a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f398a1a3530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7f398a1b1600" loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7f398a1b1600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398a1b1980"/>
        <function-ref name="runTask" scoped="" ref="0x7f398a1b1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7f398a1acd50" loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7f398a1acd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398a1aa100"/>
        <function-ref name="runTask" scoped="" ref="0x7f398a1aa290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f398a1cd900" loc="54:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f398a1cd900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a1c91b0"/>
        <function-ref name="fired" scoped="" ref="0x7f398a1ca1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f398a1cab30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a1ca670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f398a1c9670"/>
        <function-ref name="start" scoped="" ref="0x7f398a1cc780"/>
        <function-ref name="stop" scoped="" ref="0x7f398a1ccc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398a1d6bc0" loc="48:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398a1d6bc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f398b89d800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f398b89d800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398a1d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f398a1ce580" loc="53:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f398a1ce580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f398a1cd1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f398a1d1d50" loc="52:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f398a1d1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f398a1cf100"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f398a1cf290"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f398a1cf420"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f398a1cf5b0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f398a1cf740"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f398a1cf8d0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f398a1cfa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f398a1d49c0" loc="49:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f398a1d49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f398a1d24f0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f398a1d35f0"/>
        <function-ref name="read" scoped="" ref="0x7f398a1d2020"/>
        <function-ref name="readDone" scoped="" ref="0x7f398a1d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f398a1674f0" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f398a1674f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398a164db0"/>
        <function-ref name="fired" scoped="" ref="0x7f398a165da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f398a164760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398a1642a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f398a1632a0"/>
        <function-ref name="start" scoped="" ref="0x7f398a1653d0"/>
        <function-ref name="stop" scoped="" ref="0x7f398a1658e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f398a168b10" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f398a168b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f398a167020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3988e7a870" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f3988e7a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3988e77090"/>
        <function-ref name="fired" scoped="" ref="0x7f3988e78090"/>
        <function-ref name="startAt" scoped="" ref="0x7f3988e78a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3988e78550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3988e77550"/>
        <function-ref name="start" scoped="" ref="0x7f3988e796a0"/>
        <function-ref name="stop" scoped="" ref="0x7f3988e79bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3988e7a020" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3988e7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3988e7a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f3988e62da0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988e62da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f3988e61180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f3988e61310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f3988e614a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f3988e61630"/>
        <function-ref name="fired" scoped="" ref="0x7f3988e617c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f3988e64450" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988e64450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3988e647d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f3988e64960"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3988e64af0"/>
        <function-ref name="get" scoped="" ref="0x7f3988e64c80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3988e64e10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3988e63020"/>
        <function-ref name="getMode" scoped="" ref="0x7f3988e631b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3988e63340"/>
        <function-ref name="overflow" scoped="" ref="0x7f3988e634d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f3988e63660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f3988e637f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f3988e63a80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988e63a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f3988e63e00"/>
        <function-ref name="getControl" scoped="" ref="0x7f3988e62020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3988e621b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f3988e62340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f3988e624d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3988e62660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f3988e627f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f3988e62980"/>
        <function-ref name="setControl" scoped="" ref="0x7f3988e62b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f3988e58a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988e58a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f3988e58e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f3988e57020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f3988e571b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f3988e57340"/>
        <function-ref name="fired" scoped="" ref="0x7f3988e574d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f3988e5a190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988e5a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3988e5a510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f3988e5a6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3988e5a830"/>
        <function-ref name="get" scoped="" ref="0x7f3988e5a9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3988e5ab50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3988e5ace0"/>
        <function-ref name="getMode" scoped="" ref="0x7f3988e5ae70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3988e59030"/>
        <function-ref name="overflow" scoped="" ref="0x7f3988e591c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f3988e59350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f3988e594e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3988e5e020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f3988e5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3988e5b870"/>
        <function-ref name="fired" scoped="" ref="0x7f3988e5d840"/>
        <function-ref name="startAt" scoped="" ref="0x7f3988e5b220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3988e5dd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3988e5bd30"/>
        <function-ref name="start" scoped="" ref="0x7f3988e5ee30"/>
        <function-ref name="stop" scoped="" ref="0x7f3988e5d380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3988e5f660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3988e5f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3988e5f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f3988e59770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988e59770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f3988e59af0"/>
        <function-ref name="getControl" scoped="" ref="0x7f3988e59c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3988e59e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f3988e58020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f3988e581b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3988e58340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f3988e584d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f3988e58660"/>
        <function-ref name="setControl" scoped="" ref="0x7f3988e587f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3988e75a90" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f3988e75a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3988e712e0"/>
        <function-ref name="fired" scoped="" ref="0x7f3988e722e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f3988e72c60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3988e727a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3988e717a0"/>
        <function-ref name="start" scoped="" ref="0x7f3988e748d0"/>
        <function-ref name="stop" scoped="" ref="0x7f3988e74de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f3988e6e210" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f3988e6e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3988e6bb30"/>
        <function-ref name="fired" scoped="" ref="0x7f3988e6ca60"/>
        <function-ref name="startAt" scoped="" ref="0x7f3988e6b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3988e6b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3988e6a020"/>
        <function-ref name="start" scoped="" ref="0x7f3988e6c090"/>
        <function-ref name="stop" scoped="" ref="0x7f3988e6c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f3988e71e10" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f3988e71e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3988e70ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3988e6f670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3988e6f1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f3988e6fb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f398a133bf0" loc="26:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7f398a133bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f398a131710"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f398a132860"/>
        <function-ref name="read" scoped="" ref="0x7f398a131220"/>
        <function-ref name="readDone" scoped="" ref="0x7f398a12f220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f398a160cb0" loc="24:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f398a160cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f398a135850"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f398a136940"/>
        <function-ref name="read" scoped="" ref="0x7f398a135360"/>
        <function-ref name="readDone" scoped="" ref="0x7f398a133360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f398a12f8f0" loc="27:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398a12f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a12fc90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a12fe20"/>
        <function-ref name="request" scoped="" ref="0x7f398a12e020"/>
        <function-ref name="granted" scoped="" ref="0x7f398a12e1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a12e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f3988e89bd0" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f3988e89bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f3988e88020"/>
        <function-ref name="configure" scoped="" ref="0x7f3988e881b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3988e88340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f3988e8ac30" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f3988e8ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f3988e89020"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f3988e891b0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f3988e89340"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f3988e894d0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f3988e89660"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f3988e897f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f3988e89980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f3988e88590" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f3988e88590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f3988e88910"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f3988e88aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f3988e87020" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988e87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f3988e87c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3988e8a020" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3988e8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3988e8a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3988e8a530"/>
        <function-ref name="request" scoped="" ref="0x7f3988e8a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f3988e8a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3988e8a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f3988e17a60" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f3988e17a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f3988e156b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f3988e15cc0" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f3988e15cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f3988e14980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7f398a119a10" loc="35:../../../tos/chips/msp430/sensors/Msp430InternalVoltageP.nc">
      <component-ref qname="Msp430InternalVoltageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f398a119a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f398a1166b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f3988f979d0" loc="50:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f3988f979d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3988f96630"/>
        <function-ref name="readDone" scoped="" ref="0x7f3988f96af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f3988f95280" loc="52:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988f95280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f3988f94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3988f98c60" loc="49:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3988f98c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3988f97020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3988f971b0"/>
        <function-ref name="request" scoped="" ref="0x7f3988f97340"/>
        <function-ref name="granted" scoped="" ref="0x7f3988f974d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3988f97660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f3988e09d30" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f3988e09d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f3988e080e0"/>
        <function-ref name="configure" scoped="" ref="0x7f3988e08270"/>
        <function-ref name="dataReady" scoped="" ref="0x7f3988e08400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f3988e0ade0" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f3988e0ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f3988e09180"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f3988e09310"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f3988e094a0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f3988e09630"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f3988e097c0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f3988e09950"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f3988e09ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f3988e08650" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f3988e08650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f3988e089d0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f3988e08b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f3988e07020" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f3988e07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f3988e07c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3988e0a1d0" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3988e0a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3988e0a550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3988e0a6e0"/>
        <function-ref name="request" scoped="" ref="0x7f3988e0a870"/>
        <function-ref name="granted" scoped="" ref="0x7f3988e0aa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3988e0ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f3988df9670" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f3988df9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f3988df83d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f3988df89e0" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="XXTea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f3988df89e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f3988df66b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f398a0eb400" loc="58:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f398a0eb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398a0eb780"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398a0eb910"/>
        <function-ref name="start" scoped="" ref="0x7f398a0ebaa0"/>
        <function-ref name="stop" scoped="" ref="0x7f398a0ebc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f398a0ea430" loc="60:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f398a0ea430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398a0ea7b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398a0ea940"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398a0eaad0"/>
        <function-ref name="cancel" scoped="" ref="0x7f398a0eac60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398a0eadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f398a0e8210" loc="62:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f398a0e8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398a0e8590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f398a0e8820" loc="64:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f398a0e8820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398a0e8ba0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f398a0e8d30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398a0e7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398a0e71b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f398a0e7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f398a0ddd70" loc="67:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f398a0ddd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f398a0db330"/>
        <function-ref name="clear" scoped="" ref="0x7f398a0dba60"/>
        <function-ref name="isValid" scoped="" ref="0x7f398a0e3ba0"/>
        <function-ref name="set" scoped="" ref="0x7f398a0da210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f398a0cfb20" loc="69:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f398a0cfb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f398a0d5020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f398a0d51b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f398a0d5340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f398a0d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f398a0e9600" loc="61:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f398a0e9600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398a0e9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f398a0e6cb0" loc="66:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398a0e6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f398a0e40a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f398a0e4230"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f398a0e43c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f398a0e75f0" loc="65:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f398a0e75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f398a0e7970"/>
        <function-ref name="source" scoped="" ref="0x7f398a0e7b00"/>
        <function-ref name="address" scoped="" ref="0x7f398a0e7c90"/>
        <function-ref name="destination" scoped="" ref="0x7f398a0e7e20"/>
        <function-ref name="setSource" scoped="" ref="0x7f398a0e6020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f398a0e61b0"/>
        <function-ref name="type" scoped="" ref="0x7f398a0e6340"/>
        <function-ref name="setType" scoped="" ref="0x7f398a0e64d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f398a0e6660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f398a0e67f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f398a0e6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f398a0dae60" loc="68:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f398a0dae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f398a0d73f0"/>
        <function-ref name="clear" scoped="" ref="0x7f398a0d7b20"/>
        <function-ref name="isValid" scoped="" ref="0x7f398a0d9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f398a0d62a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f398a0c2880" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f398a0c2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398a0c2c00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398a0c2d90"/>
        <function-ref name="start" scoped="" ref="0x7f398a0c1020"/>
        <function-ref name="stop" scoped="" ref="0x7f398a0c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f398a0a8d40" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f398a0a8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f398a0b00e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f398a0b0270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f398a0b0400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f398a0b0590"/>
        <function-ref name="setCca" scoped="" ref="0x7f398a0b0720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f398a0b08b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f398a09bd20" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f398a09bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f398a0a51c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f398a0bc760" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f398a0bc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398a0bcae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f398a0bcc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398a0bce00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398a0bb020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f398a0bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f398a0c1980" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f398a0c1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398a0c1d00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398a0c0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398a0c01b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f398a0c0340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398a0c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f398a0be900" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f398a0be900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398a0bec80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f398a0b3970" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f398a0b3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f398a0b3cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f398a0b3e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f398a0ba030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f398a0ba1c0"/>
        <function-ref name="getPower" scoped="" ref="0x7f398a0ba350"/>
        <function-ref name="getLqi" scoped="" ref="0x7f398a0ba4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f398a0b0bb0" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f398a0b0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f398a0ae020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f398a0ae1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f398a0ae340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f398a0ae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f398a0c0cb0" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f398a0c0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398a0be0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f398a0ba810" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398a0ba810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f398a0bab90"/>
        <function-ref name="noAck" scoped="" ref="0x7f398a0bad20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f398a0b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f398a0a6020" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f398a0a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f398a0a63a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f398a0a6530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f398a0a66c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f398a0a6850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f398a0a69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f398a0bd020" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f398a0bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f398a0bd3a0"/>
        <function-ref name="source" scoped="" ref="0x7f398a0bd530"/>
        <function-ref name="address" scoped="" ref="0x7f398a0bd6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f398a0bd850"/>
        <function-ref name="setSource" scoped="" ref="0x7f398a0bd9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f398a0bdb70"/>
        <function-ref name="type" scoped="" ref="0x7f398a0bdd00"/>
        <function-ref name="setType" scoped="" ref="0x7f398a0bc020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f398a0bc1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f398a0bc340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f398a0bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f398a0afa80" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f398a0afa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f398a0afe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f398a09ab70" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f398a09ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398a097020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398a0971b0"/>
        <function-ref name="start" scoped="" ref="0x7f398a097340"/>
        <function-ref name="stop" scoped="" ref="0x7f398a0974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f398a0919d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f398a0919d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f398a091d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f398a090b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f398a090b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f398a08f020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f398a08f1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f398a08f340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f398a08f4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f398a08f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f398a092140" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f398a092140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f398a0924c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f398a092650"/>
        <function-ref name="getRssi" scoped="" ref="0x7f398a0927e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f398a092970"/>
        <function-ref name="getPower" scoped="" ref="0x7f398a092b00"/>
        <function-ref name="getLqi" scoped="" ref="0x7f398a092c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f398a094d10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f398a094d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398a0930e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398a093270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398a093400"/>
        <function-ref name="cancel" scoped="" ref="0x7f398a093590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398a093720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f398a090080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f398a090080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f398a090400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f398a090590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f398a090720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f398a0908b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f398a095820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f398a095820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398a095ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f398a091020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f398a091020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f398a0913a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f398a091530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f398a0916c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f398a097d00" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398a097d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a0960a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a096230"/>
        <function-ref name="request" scoped="" ref="0x7f398a0963c0"/>
        <function-ref name="granted" scoped="" ref="0x7f398a096550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a0966e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f398a096a00" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f398a096a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398a096d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398a095020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398a0951b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f398a095340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398a0954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f398a094020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f398a094020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398a0943a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f398a094530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398a0946c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398a094850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f398a0949e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f398a093a90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f398a093a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398a093e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f398a08c460" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f398a08c460"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398a08c7e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398a08c970"/>
        <function-ref name="start" scoped="" ref="0x7f398a08cb00"/>
        <function-ref name="stop" scoped="" ref="0x7f398a08cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f398a08a3b0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f398a08a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f398a08a730"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f398a08a8c0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f398a08aa50"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f398a08abe0"/>
        <function-ref name="setCca" scoped="" ref="0x7f398a08ad70"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f398a088020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f398a08b020" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f398a08b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398a08b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398a08b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398a08b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f398a08b850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398a08b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f398a08bcc0" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f398a08bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398a08a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420RxState" ref="0x7f398a085c60" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420RxState" scoped="" ref="0x7f398a085c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420RxState"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x7f398a087020"/>
        <function-ref name="enableCca" scoped="" ref="0x7f398a0871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f398a0832d0" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f398a0832d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398a083650"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398a0837e0"/>
        <function-ref name="start" scoped="" ref="0x7f398a083970"/>
        <function-ref name="stop" scoped="" ref="0x7f398a083b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f398a082ad0" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f398a082ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f398a082e50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f398a081020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f398a0811b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f398a081340"/>
        <function-ref name="setCca" scoped="" ref="0x7f398a0814d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f398a081660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f398a077700" loc="55:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f398a077700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f398a077a80"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f398a077c10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f398a077da0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f398a076020"/>
        <function-ref name="setCca" scoped="" ref="0x7f398a0761b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f398a076340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f398a06db00" loc="58:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f398a06db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f398a06de80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f398a06b030"/>
        <function-ref name="getRssi" scoped="" ref="0x7f398a06b1c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f398a06b350"/>
        <function-ref name="getPower" scoped="" ref="0x7f398a06b4e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f398a06b670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f398a06f810" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f398a06f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398a06fb90"/>
        <function-ref name="cancel" scoped="" ref="0x7f398a06fd20"/>
        <function-ref name="modify" scoped="" ref="0x7f398a077020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398a0771b0"/>
        <function-ref name="resend" scoped="" ref="0x7f398a077340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f398a083dc0" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f398a083dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398a082180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398a082310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398a0824a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f398a082630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398a0827c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f398a06cb60" loc="56:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f398a06cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f398a06e020"/>
        <function-ref name="rand32" scoped="" ref="0x7f398a06e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f398a07eba0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f398a07eba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f398a07d020"/>
        <function-ref name="stop" scoped="" ref="0x7f398a07d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f398a064130" loc="59:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f398a064130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f398a0645b0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f398a064740"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f398a0648d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f398a078880" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f398a078880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f398a078c00"/>
        <function-ref name="rfOff" scoped="" ref="0x7f398a078d90"/>
        <function-ref name="rxOn" scoped="" ref="0x7f398a07e020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f398a07e1b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f398a07e340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f398a07e4d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f398a07e660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f398a07e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f398a06e470" loc="57:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f398a06e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f398a06e7f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f398a06e980"/>
        <function-ref name="led1On" scoped="" ref="0x7f398a06eb10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f398a06eca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f398a06ee30"/>
        <function-ref name="get" scoped="" ref="0x7f398a06d020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f398a06d1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f398a06d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f398a06d340"/>
        <function-ref name="led0On" scoped="" ref="0x7f398a06d4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f398a06d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f398a080310" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398a080310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a080690"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a080820"/>
        <function-ref name="request" scoped="" ref="0x7f398a0809b0"/>
        <function-ref name="granted" scoped="" ref="0x7f398a080b40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a080cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f398a05f850" loc="60:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f398a05f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f398a05fbd0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f398a05fd60"/>
        <function-ref name="isState" scoped="" ref="0x7f398a06a020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f398a06a1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f398a06a340"/>
        <function-ref name="forceState" scoped="" ref="0x7f398a06a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f398a05a730" loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f398a05a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398a05aab0"/>
        <function-ref name="runTask" scoped="" ref="0x7f398a05ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420RxState" ref="0x7f398a081980" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420RxState" scoped="" ref="0x7f398a081980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420RxState"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x7f398a081d00"/>
        <function-ref name="enableCca" scoped="" ref="0x7f398a080020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f398a05b7d0" loc="85:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f398a05b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398a05bb50"/>
        <function-ref name="runTask" scoped="" ref="0x7f398a05bce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f398a05c890" loc="84:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f398a05c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398a05cc10"/>
        <function-ref name="runTask" scoped="" ref="0x7f398a05cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f3989ffd670" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f3989ffd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f3989ffd9f0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f3989ffdb80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f3989ffdd10"/>
        <function-ref name="syncDone" scoped="" ref="0x7f398a009020"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f398a0091b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f398a009340"/>
        <function-ref name="setChannel" scoped="" ref="0x7f398a0094d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f398a009660"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f398a0097f0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f398a009980"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f398a009b10"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f398a009ca0"/>
        <function-ref name="sync" scoped="" ref="0x7f398a009e30"/>
        <function-ref name="getChannel" scoped="" ref="0x7f398a008120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f398a0082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f3989ffc9b0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f3989ffc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ffb5c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f3989ffba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f398a0085b0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f398a0085b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f398a008930"/>
        <function-ref name="rfOff" scoped="" ref="0x7f398a008ac0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f398a008c50"/>
        <function-ref name="startVReg" scoped="" ref="0x7f398a008de0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f3989ffc020"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f3989ffc1b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f3989ffc340"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f3989ffc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f398a00b220" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398a00b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398a00b5a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398a00b730"/>
        <function-ref name="request" scoped="" ref="0x7f398a00b8c0"/>
        <function-ref name="granted" scoped="" ref="0x7f398a00ba50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398a00bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f3989ff51b0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f3989ff51b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f3989ff5530"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f3989ff56c0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f3989ff5850"/>
        <function-ref name="syncDone" scoped="" ref="0x7f3989ff59e0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f3989ff5b70"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f3989ff5d00"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3989ff4020"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f3989ff41b0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f3989ff4340"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f3989ff44d0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f3989ff4660"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f3989ff47f0"/>
        <function-ref name="sync" scoped="" ref="0x7f3989ff4980"/>
        <function-ref name="getChannel" scoped="" ref="0x7f3989ff4c10"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f3989ff4da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f3989fd3020" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f3989fd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989fd33a0"/>
        <function-ref name="write" scoped="" ref="0x7f3989fd3530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f3989fee970" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f3989fee970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f3989feecf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f3989ff03a0" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f3989ff03a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3989fecbe0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989fefbc0"/>
        <function-ref name="startAt" scoped="" ref="0x7f3989fec590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3989fec0d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3989feb0d0"/>
        <function-ref name="start" scoped="" ref="0x7f3989fef1f0"/>
        <function-ref name="stop" scoped="" ref="0x7f3989fef700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f3989fd8c90" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f3989fd8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989fd70a0"/>
        <function-ref name="write" scoped="" ref="0x7f3989fd7230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f3989fea830" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f3989fea830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989feabb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989fead40"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989fe9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989fe91b0"/>
        <function-ref name="get" scoped="" ref="0x7f3989fe9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989fe94d0"/>
        <function-ref name="set" scoped="" ref="0x7f3989fe9660"/>
        <function-ref name="clr" scoped="" ref="0x7f3989fe97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f3989ff2500" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f3989ff2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ff1130"/>
        <function-ref name="readDone" scoped="" ref="0x7f3989ff15b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f3989fc1020" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f3989fc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3989fc13a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f3989fc1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f3989fd38c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f3989fd38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989fd3c40"/>
        <function-ref name="write" scoped="" ref="0x7f3989fd3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f3989fd21d0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f3989fd21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989fd2550"/>
        <function-ref name="write" scoped="" ref="0x7f3989fd26e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f3989fd4a80" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f3989fd4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989fd4e00"/>
        <function-ref name="write" scoped="" ref="0x7f3989fd8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f3989fdedd0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3989fdedd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f3989fe4180"/>
        <function-ref name="changed" scoped="" ref="0x7f3989fe4310"/>
        <function-ref name="amGroup" scoped="" ref="0x7f3989fe44a0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f3989fe4630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f3989feb5c0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f3989feb5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989feb940"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989febad0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989febc60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989febdf0"/>
        <function-ref name="get" scoped="" ref="0x7f3989fea020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989fea1b0"/>
        <function-ref name="set" scoped="" ref="0x7f3989fea340"/>
        <function-ref name="clr" scoped="" ref="0x7f3989fea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f3989fd1830" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f3989fd1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989fd1db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f3989fe9b50" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f3989fe9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989fe8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989fe81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989fe8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989fe84d0"/>
        <function-ref name="get" scoped="" ref="0x7f3989fe8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989fe87f0"/>
        <function-ref name="set" scoped="" ref="0x7f3989fe8980"/>
        <function-ref name="clr" scoped="" ref="0x7f3989fe8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3989ffadf0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3989ffadf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3989ff71c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f3989fd75f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f3989fd75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989fd7970"/>
        <function-ref name="write" scoped="" ref="0x7f3989fd7b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f3989fd01d0" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f3989fd01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989fd0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f3989fd08f0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f3989fd08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989fd0c70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989fd0e00"/>
        <function-ref name="request" scoped="" ref="0x7f3989fce020"/>
        <function-ref name="granted" scoped="" ref="0x7f3989fce1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989fce340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f3989fcc560" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f3989fcc560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989fcc8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989fcca70"/>
        <function-ref name="request" scoped="" ref="0x7f3989fccc00"/>
        <function-ref name="granted" scoped="" ref="0x7f3989fccd90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989fcb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f3989ff3130" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f3989ff3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f3989ff34b0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f3989ff3640"/>
        <function-ref name="rxOn" scoped="" ref="0x7f3989ff37d0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f3989ff3960"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f3989ff3af0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f3989ff3c80"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f3989ff3e10"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f3989ff2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f3989fd83c0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f3989fd83c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989fd8740"/>
        <function-ref name="write" scoped="" ref="0x7f3989fd88d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f3989fd41d0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f3989fd41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989fd4550"/>
        <function-ref name="write" scoped="" ref="0x7f3989fd46e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f3989fcf990" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f3989fcf990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989fcfd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3989fcb2e0" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f3989fcb2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3989fcb660"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3989fcb7f0"/>
        <function-ref name="led1On" scoped="" ref="0x7f3989fcb980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3989fcbb10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3989fcbca0"/>
        <function-ref name="get" scoped="" ref="0x7f3989fcbe30"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3989fca020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3989fca660"/>
        <function-ref name="set" scoped="" ref="0x7f3989fca1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f3989fca340"/>
        <function-ref name="led2On" scoped="" ref="0x7f3989fca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f3989fc2020" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f3989fc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3989fc23a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f3989fc2530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989ff74b0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989ff74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989ff7830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989ff79c0"/>
        <function-ref name="request" scoped="" ref="0x7f3989ff7b50"/>
        <function-ref name="granted" scoped="" ref="0x7f3989ff7ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989ff7e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f3989fe09a0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f3989fe09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989fe0d20"/>
        <function-ref name="write" scoped="" ref="0x7f3989fdc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f3989fe0020" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f3989fe0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989fe04a0"/>
        <function-ref name="write" scoped="" ref="0x7f3989fe0630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f3989fe15b0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f3989fe15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3989fe1930"/>
        <function-ref name="disable" scoped="" ref="0x7f3989fe1ac0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f3989fe1c50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f3989fe1de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f3989fce6f0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f3989fce6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989fcea70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989fcec00"/>
        <function-ref name="request" scoped="" ref="0x7f3989fced90"/>
        <function-ref name="granted" scoped="" ref="0x7f3989fcc020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989fcc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f3989fd1100" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f3989fd1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989fd1480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3989f4b7e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3989f4b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3989f4bb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f3989f48220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f3989f48220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3989f46b30"/>
        <function-ref name="fired" scoped="" ref="0x7f3989f47a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f3989f464e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3989f46020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3989f44020"/>
        <function-ref name="start" scoped="" ref="0x7f3989f47090"/>
        <function-ref name="stop" scoped="" ref="0x7f3989f475a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3989f42260" loc="42:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3989f42260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3989f425e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f3989f42af0" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f3989f42af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3989f07390"/>
        <function-ref name="fired" scoped="" ref="0x7f3989f09360"/>
        <function-ref name="startAt" scoped="" ref="0x7f3989f09ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3989f09820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3989f07850"/>
        <function-ref name="start" scoped="" ref="0x7f3989f0a970"/>
        <function-ref name="stop" scoped="" ref="0x7f3989f0ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3988dcfab0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f3988dcfab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3988dcb390"/>
        <function-ref name="fired" scoped="" ref="0x7f3988dcc340"/>
        <function-ref name="startAt" scoped="" ref="0x7f3988dcccc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3988dcc800"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3988dcb850"/>
        <function-ref name="start" scoped="" ref="0x7f3988dcd8f0"/>
        <function-ref name="stop" scoped="" ref="0x7f3988dcde00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3988dcf260" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3988dcf260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3988dcf5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3988dc7c20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f3988dc7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3988dc44e0"/>
        <function-ref name="fired" scoped="" ref="0x7f3988dc54e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f3988dc5e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3988dc59a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3988dc49a0"/>
        <function-ref name="start" scoped="" ref="0x7f3988dc6a80"/>
        <function-ref name="stop" scoped="" ref="0x7f3988dc5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3988dc73d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3988dc73d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3988dc7750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f3988da9440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988da9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f3988da97c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f3988da9950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f3988da9ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f3988da9c70"/>
        <function-ref name="fired" scoped="" ref="0x7f3988da9e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f3988db19d0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988db19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3988db1d50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f3988db0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3988db01b0"/>
        <function-ref name="get" scoped="" ref="0x7f3988db0340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3988db04d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3988db0660"/>
        <function-ref name="getMode" scoped="" ref="0x7f3988db07f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3988db0980"/>
        <function-ref name="overflow" scoped="" ref="0x7f3988db0b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f3988db0ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f3988db0e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f3988daf120" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988daf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f3988daf4a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f3988daf630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3988daf7c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f3988daf950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f3988dafae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3988dafc70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f3988dafe00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f3988da9020"/>
        <function-ref name="setControl" scoped="" ref="0x7f3988da91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f3988d9f0c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f3988d9f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f3988d9f440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f3988d9f5d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f3988d9f760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f3988d9f8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f3988d9fa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f3988da2710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f3988da2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3988da2a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f3988da2c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3988da2db0"/>
        <function-ref name="get" scoped="" ref="0x7f3988da1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3988da11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3988da1340"/>
        <function-ref name="getMode" scoped="" ref="0x7f3988da14d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3988da1660"/>
        <function-ref name="overflow" scoped="" ref="0x7f3988da17f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f3988da1980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f3988da1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3988da55b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f3988da55b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3988da3df0"/>
        <function-ref name="fired" scoped="" ref="0x7f3988da4df0"/>
        <function-ref name="startAt" scoped="" ref="0x7f3988da37a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3988da32e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3988da22e0"/>
        <function-ref name="start" scoped="" ref="0x7f3988da4420"/>
        <function-ref name="stop" scoped="" ref="0x7f3988da4930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3988da7ca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3988da7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3988da50a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f3988da1da0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3988da1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f3988da0180"/>
        <function-ref name="getControl" scoped="" ref="0x7f3988da0310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3988da04a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f3988da0630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f3988da07c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3988da0950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f3988da0ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f3988da0c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f3988da0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3989f2c080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f3989f2c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989f2b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3989f2b9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3989f2b4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f3989f2be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f3989f230f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f3989f230f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989f22020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3989f229a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3989f224e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f3989f22e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3989f27cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f3989f27cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989f26b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3989f24550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3989f24090"/>
        <function-ref name="overflow" scoped="" ref="0x7f3989f24a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f3988dc0020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f3988dc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3988dbe870"/>
        <function-ref name="fired" scoped="" ref="0x7f3988dbf840"/>
        <function-ref name="startAt" scoped="" ref="0x7f3988dbe220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3988dbfd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3988dbed30"/>
        <function-ref name="start" scoped="" ref="0x7f3988dc0e30"/>
        <function-ref name="stop" scoped="" ref="0x7f3988dbf380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f3988dba780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f3988dba780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3988db7020"/>
        <function-ref name="fired" scoped="" ref="0x7f3988db8020"/>
        <function-ref name="startAt" scoped="" ref="0x7f3988db89a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3988db84e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3988db74e0"/>
        <function-ref name="start" scoped="" ref="0x7f3988db95d0"/>
        <function-ref name="stop" scoped="" ref="0x7f3988db9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f3988dbd3d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f3988dbd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3988dbc240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3988dbcbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3988dbc700"/>
        <function-ref name="overflow" scoped="" ref="0x7f3988dba0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f3989f01020" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f3989f01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989f013a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989f01530"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989f016c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989f01850"/>
        <function-ref name="get" scoped="" ref="0x7f3989f019e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989f01b70"/>
        <function-ref name="set" scoped="" ref="0x7f3989f01d00"/>
        <function-ref name="clr" scoped="" ref="0x7f3989f00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f3989f00390" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f3989f00390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989f00710"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989f008a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989f00a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989f00bc0"/>
        <function-ref name="get" scoped="" ref="0x7f3989f00d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989eff020"/>
        <function-ref name="set" scoped="" ref="0x7f3989eff1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f3989eff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f3989eff6a0" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f3989eff6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989effa20"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989effbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989effd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989efe020"/>
        <function-ref name="get" scoped="" ref="0x7f3989efe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989efe340"/>
        <function-ref name="set" scoped="" ref="0x7f3989efe4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f3989efe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f3989f03cd0" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f3989f03cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989f020a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989f02230"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989f023c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989f02550"/>
        <function-ref name="get" scoped="" ref="0x7f3989f026e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989f02870"/>
        <function-ref name="set" scoped="" ref="0x7f3989f02a00"/>
        <function-ref name="clr" scoped="" ref="0x7f3989f02b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f3989efdce0" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f3989efdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989efc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989efc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989efc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989efc550"/>
        <function-ref name="get" scoped="" ref="0x7f3989efc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989efc870"/>
        <function-ref name="set" scoped="" ref="0x7f3989efca00"/>
        <function-ref name="clr" scoped="" ref="0x7f3989efcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f3989f49a70" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f3989f49a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989f49df0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989f03020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989f031b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989f03340"/>
        <function-ref name="get" scoped="" ref="0x7f3989f034d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989f03660"/>
        <function-ref name="set" scoped="" ref="0x7f3989f037f0"/>
        <function-ref name="clr" scoped="" ref="0x7f3989f03980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f3989efe9b0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f3989efe9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989efed30"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989efd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989efd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989efd340"/>
        <function-ref name="get" scoped="" ref="0x7f3989efd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989efd660"/>
        <function-ref name="set" scoped="" ref="0x7f3989efd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f3989efd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f3989ef92f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989ef92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989ef9670"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989ef9800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f3989ef9990"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989ef9b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989ef9cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f3989ef9e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989ef8020"/>
        <function-ref name="get" scoped="" ref="0x7f3989ef81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f3989ef8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f3989ef84d0"/>
        <function-ref name="set" scoped="" ref="0x7f3989ef8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f3989ef87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f3989ef8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f3989ef8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f3989ef8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f3989efa020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f3989efa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989efa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989efa530"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989efa6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989efa850"/>
        <function-ref name="get" scoped="" ref="0x7f3989efa9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989efab70"/>
        <function-ref name="set" scoped="" ref="0x7f3989efad00"/>
        <function-ref name="clr" scoped="" ref="0x7f3989ef9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f3989ef5de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989ef5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989ef3180"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989ef3310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f3989ef34a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989ef3630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989ef37c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f3989ef3950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989ef3ae0"/>
        <function-ref name="get" scoped="" ref="0x7f3989ef3c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f3989ef3e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f3989ef2020"/>
        <function-ref name="set" scoped="" ref="0x7f3989ef21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f3989ef2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f3989ef24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f3989ef2760"/>
        <function-ref name="clr" scoped="" ref="0x7f3989ef28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f3989ef6b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f3989ef6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989ef5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989ef51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989ef5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989ef54d0"/>
        <function-ref name="get" scoped="" ref="0x7f3989ef5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989ef57f0"/>
        <function-ref name="set" scoped="" ref="0x7f3989ef5980"/>
        <function-ref name="clr" scoped="" ref="0x7f3989ef5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f3989eef930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989eef930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989eefcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989eefe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f3989eee020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989eee1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989eee340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f3989eee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989eee660"/>
        <function-ref name="get" scoped="" ref="0x7f3989eee7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f3989eee980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f3989eeeb10"/>
        <function-ref name="set" scoped="" ref="0x7f3989eeeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f3989eeee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f3989eed020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f3989eed2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f3989eed440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f3989ef0710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f3989ef0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989ef0a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989ef0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989ef0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989eef020"/>
        <function-ref name="get" scoped="" ref="0x7f3989eef1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989eef340"/>
        <function-ref name="set" scoped="" ref="0x7f3989eef4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f3989eef660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f3989eea480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989eea480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989eea800"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989eea990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f3989eeab20"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989eeacb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989eeae40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f3989ee9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989ee91b0"/>
        <function-ref name="get" scoped="" ref="0x7f3989ee9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f3989ee94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f3989ee9660"/>
        <function-ref name="set" scoped="" ref="0x7f3989ee97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f3989ee9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f3989ee9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f3989ee9da0"/>
        <function-ref name="clr" scoped="" ref="0x7f3989ee8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f3989eeb1d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f3989eeb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989eeb550"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989eeb6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989eeb870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989eeba00"/>
        <function-ref name="get" scoped="" ref="0x7f3989eebb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989eebd20"/>
        <function-ref name="set" scoped="" ref="0x7f3989eea020"/>
        <function-ref name="clr" scoped="" ref="0x7f3989eea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f3989ee5020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989ee5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989ee53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989ee5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f3989ee56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989ee5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989ee59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f3989ee5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989ee5d00"/>
        <function-ref name="get" scoped="" ref="0x7f3989ee4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f3989ee41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f3989ee4340"/>
        <function-ref name="set" scoped="" ref="0x7f3989ee44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f3989ee4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f3989ee47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f3989ee4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f3989ee4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f3989ee7d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f3989ee7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989ee6180"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989ee6310"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989ee64a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989ee6630"/>
        <function-ref name="get" scoped="" ref="0x7f3989ee67c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989ee6950"/>
        <function-ref name="set" scoped="" ref="0x7f3989ee6ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f3989ee6c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f3989ee1de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989ee1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989ee0180"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989ee0310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f3989ee04a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989ee0630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989ee07c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f3989ee0950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989ee0ae0"/>
        <function-ref name="get" scoped="" ref="0x7f3989ee0c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f3989ee0e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f3989edf020"/>
        <function-ref name="set" scoped="" ref="0x7f3989edf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f3989edf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f3989edf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f3989edf760"/>
        <function-ref name="clr" scoped="" ref="0x7f3989edf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f3989ee2b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f3989ee2b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989ee1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989ee11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989ee1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989ee14d0"/>
        <function-ref name="get" scoped="" ref="0x7f3989ee1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989ee17f0"/>
        <function-ref name="set" scoped="" ref="0x7f3989ee1980"/>
        <function-ref name="clr" scoped="" ref="0x7f3989ee1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f3989edb930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f3989edb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989edbcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989edbe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f3989eda020"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989eda1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989eda340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f3989eda4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989eda660"/>
        <function-ref name="get" scoped="" ref="0x7f3989eda7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f3989eda980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f3989edab10"/>
        <function-ref name="set" scoped="" ref="0x7f3989edaca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f3989edae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f3989ed9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f3989ed92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f3989ed9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f3989edd710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f3989edd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989edda90"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989eddc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989edddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989edb020"/>
        <function-ref name="get" scoped="" ref="0x7f3989edb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989edb340"/>
        <function-ref name="set" scoped="" ref="0x7f3989edb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f3989edb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f3989ec6060" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f3989ec6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f3989ec63e0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989ec6570"/>
        <function-ref name="captured" scoped="" ref="0x7f3989ec6700"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f3989ec6890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f3989ec6c70" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f3989ec6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3989ec5020"/>
        <function-ref name="disable" scoped="" ref="0x7f3989ec51b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f3989ec5340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f3989ec54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f3989ec58c0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f3989ec58c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3989ec5c40"/>
        <function-ref name="disable" scoped="" ref="0x7f3989ec5dd0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f3989ec2020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f3989ec21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f3989ea55d0" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f3989ea55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f3989ea5950"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f3989ea5ae0"/>
        <function-ref name="captured" scoped="" ref="0x7f3989ea5c70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3989ea5e00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3989ea4020"/>
        <function-ref name="setEdge" scoped="" ref="0x7f3989ea41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f3989ebd760" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f3989ebd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f3989ebdae0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989ebdc70"/>
        <function-ref name="captured" scoped="" ref="0x7f3989ebde00"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f3989ea6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMicro" ref="0x7f3989ea1620" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMicro" scoped="" ref="0x7f3989ea1620"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acee6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f398aceea20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989ea03d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f3989ea2410" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f3989ea2410"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989ea1090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f3989ea62b0" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f3989ea62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f3989ea6630"/>
        <function-ref name="getControl" scoped="" ref="0x7f3989ea67c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3989ea6950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f3989ea6ae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f3989ea6c70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3989ea6e00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f3989ea5020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f3989ea51b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f3989ea5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f3989ea4480" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f3989ea4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989ea4800"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989ea4990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f3989ea4b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989ea4cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989ea4e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f3989ea3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989ea31b0"/>
        <function-ref name="get" scoped="" ref="0x7f3989ea3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f3989ea34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f3989ea3660"/>
        <function-ref name="set" scoped="" ref="0x7f3989ea37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f3989ea3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f3989ea3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f3989ea3da0"/>
        <function-ref name="clr" scoped="" ref="0x7f3989ea2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f3989e9c180" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f3989e9c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989e9cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f3989e9a450" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f3989e9a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989e993d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3989e99d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3989e99890"/>
        <function-ref name="overflow" scoped="" ref="0x7f3989e98260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3989e94110" loc="43:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f3989e94110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acee6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f398aceea20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989e93020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3989e939a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3989e934e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f3989e93e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f3989e8e260" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f3989e8e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acee6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f398aceea20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989e8d090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3989e8da10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3989e8d550"/>
        <function-ref name="overflow" scoped="" ref="0x7f3989e8c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f3989e88c30" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f3989e88c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e87020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f3989e871b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f3989e87340"/>
        <function-ref name="get" scoped="" ref="0x7f3989e874d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f3989e87660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3989e877f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f3989e87980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3989e87b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f3989e87ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f3989e87e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f3989e86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3989e8aae0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f3989e8aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acee6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f398aceea20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989e89970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3989e88340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3989e89e30"/>
        <function-ref name="overflow" scoped="" ref="0x7f3989e88800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f3989e80910" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f3989e80910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acee6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f398aceea20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989e7e780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3989e7d150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3989e7ec40"/>
        <function-ref name="overflow" scoped="" ref="0x7f3989e7d610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f3989e82430" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f3989e82430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acee6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f398aceea20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989e813d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3989e81d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3989e81890"/>
        <function-ref name="overflow" scoped="" ref="0x7f3989e80260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f3989e95d30" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterMicroToLocalTime"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f3989e95d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acee6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f398aceea20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989e7a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f3989e79020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterMicroToLocalTime"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f3989e79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acee6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f398aceea20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989e79e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f3989e78800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f3989e78340"/>
        <function-ref name="overflow" scoped="" ref="0x7f3989e78cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f3989e6b020" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f3989e6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e6b3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e6b530"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e6b6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e6b850"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e6b9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e6bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f3989e60020" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f3989e60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e603a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e60530"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e606c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e60850"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e609e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e60b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f3989e68020" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f3989e68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e683a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e68530"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e686c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e68850"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e689e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e68b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f3989e65020" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f3989e65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e653a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e65530"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e656c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e65850"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e659e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e65b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f3989e72060" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f3989e72060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e723e0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e72570"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e72700"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e72890"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e72a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e72bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f3989e62020" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f3989e62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e624a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e62630"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e627c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e62950"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e62ae0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e62c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f3989e6a020" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f3989e6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e6a3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e6a530"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e6a6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e6a850"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e6a9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e6ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f3989e5f020" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f3989e5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e5f3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e5f530"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e5f6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e5f850"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e5f9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e5fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f3989e6d170" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f3989e6d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e6d4f0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e6d680"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e6d810"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e6d9a0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e6db30"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e6dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f3989e64020" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f3989e64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e643a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e64530"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e646c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e64850"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e649e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e64b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f3989e6c020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f3989e6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e6c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e6c530"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e6c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e6c850"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e6c9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e6cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f3989e61060" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f3989e61060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e613e0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e61570"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e61700"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e61890"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e61a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e61bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f3989e69020" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f3989e69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e693a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e69530"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e696c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e69850"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e699e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e69b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f3989e66020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f3989e66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e663a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e66530"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e666c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e66850"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e669e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e66b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f3989e73100" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f3989e73100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e73480"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e73610"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e737a0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e73930"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e73ac0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e73c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f3989e63020" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f3989e63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e633a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e63530"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e636c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e63850"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e639e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e63b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f3989e58bc0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f3989e58bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e57020"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e571b0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e57340"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e574d0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e57660"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f3989e4ebc0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f3989e4ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e4c020"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e4c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e4c340"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e4c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e4c660"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e4c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f3989e55bc0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f3989e55bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e54020"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e541b0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e54340"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e544d0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e54660"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e547f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f3989e53bc0" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f3989e53bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e52020"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e521b0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e52340"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e524d0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e52660"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e527f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f3989e5ac40" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f3989e5ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e59020"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e591b0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e59340"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e594d0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e59660"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e597f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f3989e50bc0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f3989e50bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e4f0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e4f230"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e4f3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e4f550"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e4f6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e4f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f3989e57bc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f3989e57bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e56020"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e561b0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e56340"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e564d0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e56660"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e567f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f3989e4cbc0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f3989e4cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e4b020"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e4b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e4b340"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e4b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e4b660"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e4b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f3989e5ed30" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f3989e5ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e5b0e0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e5b270"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e5b400"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e5b590"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e5b720"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e5b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f3989e52bc0" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f3989e52bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e51020"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e511b0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e51340"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e514d0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e51660"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e517f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f3989e59bc0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f3989e59bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e58020"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e581b0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e58340"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e584d0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e58660"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e587f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f3989e4fc40" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f3989e4fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e4e020"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e4e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e4e340"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e4e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e4e660"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e4e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f3989e56bc0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f3989e56bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e55020"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e551b0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e55340"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e554d0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e55660"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e557f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f3989e54bc0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f3989e54bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e53020"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e531b0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e53340"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e534d0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e53660"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e537f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f3989e5bc80" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f3989e5bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e5a0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e5a230"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e5a3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e5a550"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e5a6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e5a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f3989e51bc0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f3989e51bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989e50020"/>
        <function-ref name="fired" scoped="" ref="0x7f3989e501b0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989e50340"/>
        <function-ref name="edge" scoped="" ref="0x7f3989e504d0"/>
        <function-ref name="enable" scoped="" ref="0x7f3989e50660"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989e507f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f3989d77610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f3989d77610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989d77990"/>
        <function-ref name="fired" scoped="" ref="0x7f3989d77b20"/>
        <function-ref name="disable" scoped="" ref="0x7f3989d77cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989d77e40"/>
        <function-ref name="enable" scoped="" ref="0x7f3989d6a020"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989d6a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f3989d78a30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f3989d78a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3989d78db0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989d77020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f3989d771b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f3989d77340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f3989d68610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f3989d68610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989d68990"/>
        <function-ref name="fired" scoped="" ref="0x7f3989d68b20"/>
        <function-ref name="disable" scoped="" ref="0x7f3989d68cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f3989d68e40"/>
        <function-ref name="enable" scoped="" ref="0x7f3989d67020"/>
        <function-ref name="getValue" scoped="" ref="0x7f3989d671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f3989d69a70" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f3989d69a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3989d69df0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989d68020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f3989d681b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f3989d68340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f3989adfe50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f3989adfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ade410"/>
        <function-ref name="write" scoped="" ref="0x7f3989ade5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f3989aea160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f3989aea160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989aea4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f3989ae2e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f3989ae2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ae1210"/>
        <function-ref name="write" scoped="" ref="0x7f3989ae13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f3989adc880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989adc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989adcc00"/>
        <function-ref name="write" scoped="" ref="0x7f3989adcd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f3989ad40a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f3989ad40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad4420"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f3989adb0a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f3989adb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989adb420"/>
        <function-ref name="write" scoped="" ref="0x7f3989adb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f3989ac8500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f3989ac8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ac8880"/>
        <function-ref name="write" scoped="" ref="0x7f3989ac8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f3989acb500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f3989acb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989acb880"/>
        <function-ref name="write" scoped="" ref="0x7f3989acba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f3989ae9490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f3989ae9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ae9810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f3989ad1880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f3989ad1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad1c00"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f3989acc500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f3989acc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989acc880"/>
        <function-ref name="write" scoped="" ref="0x7f3989acca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f3989ae1e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f3989ae1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ae0210"/>
        <function-ref name="write" scoped="" ref="0x7f3989ae03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f3989ae0e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f3989ae0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989adf210"/>
        <function-ref name="write" scoped="" ref="0x7f3989adf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f3989ad7880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f3989ad7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad7c00"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f3989ad80a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f3989ad80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad8420"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f3989adb880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f3989adb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989adbc00"/>
        <function-ref name="write" scoped="" ref="0x7f3989adbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f3989aeda90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989aeda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f3989aede10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f3989aec020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f3989aec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f3989ae8e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f3989ae8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ae51c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f3989ae5490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f3989ae5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ae5910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f3989ad0c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f3989ad0c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ace0a0"/>
        <function-ref name="write" scoped="" ref="0x7f3989ace230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f3989ae5be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f3989ae5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ae3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f3989accce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f3989accce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989acb0a0"/>
        <function-ref name="write" scoped="" ref="0x7f3989acb230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f3989ae8160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f3989ae8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ae84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f3989ad10a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f3989ad10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad1420"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f3989ae0670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f3989ae0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ae09f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989ae0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f3989ae1670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f3989ae1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ae19f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989ae1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f3989aecad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f3989aecad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989aece50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f3989ad20a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f3989ad20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad2420"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f3989ad4880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f3989ad4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad4c00"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f3989ad2880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f3989ad2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad2c00"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f3989acace0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f3989acace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ac80a0"/>
        <function-ref name="write" scoped="" ref="0x7f3989ac8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f3989acbce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f3989acbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aca0a0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aca230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f3989ad8880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f3989ad8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad8c00"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f3989ad30a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f3989ad30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad3420"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f3989acdce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f3989acdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989acc0a0"/>
        <function-ref name="write" scoped="" ref="0x7f3989acc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f3989ada880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f3989ada880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989adac00"/>
        <function-ref name="write" scoped="" ref="0x7f3989adad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f3989ac8ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f3989ac8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f3989ac70a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f3989ac7230"/>
        <function-ref name="write" scoped="" ref="0x7f3989ac73c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f3989ac7550"/>
        <function-ref name="readDone" scoped="" ref="0x7f3989ac76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f3989aec480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f3989aec480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989aec800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f3989ae2670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f3989ae2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ae29f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989ae2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f3989adf670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f3989adf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989adf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989adfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f3989ad50a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f3989ad50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad5420"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f3989ada0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f3989ada0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ada420"/>
        <function-ref name="write" scoped="" ref="0x7f3989ada5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f3989ad5880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f3989ad5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad5c00"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f3989ade870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f3989ade870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989adebf0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aded80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f3989aea7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f3989aea7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989aeab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f3989adc0a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f3989adc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989adc420"/>
        <function-ref name="write" scoped="" ref="0x7f3989adc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989aeee20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989aeee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989aed1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989aed350"/>
        <function-ref name="request" scoped="" ref="0x7f3989aed4e0"/>
        <function-ref name="granted" scoped="" ref="0x7f3989aed670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989aed800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f3989ae32f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f3989ae32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ae3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f3989ae2020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f3989ae2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ae23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f3989acd500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f3989acd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989acd880"/>
        <function-ref name="write" scoped="" ref="0x7f3989acda10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f3989acece0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f3989acece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989acd0a0"/>
        <function-ref name="write" scoped="" ref="0x7f3989acd230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f3989ae87b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f3989ae87b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ae8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f3989ace500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f3989ace500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ace880"/>
        <function-ref name="write" scoped="" ref="0x7f3989acea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f3989aca500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f3989aca500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aca880"/>
        <function-ref name="write" scoped="" ref="0x7f3989acaa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f3989ad70a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f3989ad70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad7420"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f3989ad3880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f3989ad3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad3c00"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f3989aeae00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f3989aeae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ae91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f3989ae9ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f3989ae9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ae9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f3989ad90a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f3989ad90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad9420"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f3989ae3940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f3989ae3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ae3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f3989ad9880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f3989ad9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad9c00"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f3989ad00a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f3989ad00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ad0820"/>
        <function-ref name="write" scoped="" ref="0x7f3989ad09b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f3989ac79b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f3989ac79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f3989ac7d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f3989ac6020"/>
        <function-ref name="write" scoped="" ref="0x7f3989ac61b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f3989ac6340"/>
        <function-ref name="readDone" scoped="" ref="0x7f3989ac64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f3989d252c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f3989d252c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f3989d25640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f3989d257d0"/>
        <function-ref name="write" scoped="" ref="0x7f3989d25960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f3989d25af0"/>
        <function-ref name="readDone" scoped="" ref="0x7f3989d25c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f3989d26350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989d26350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f3989d266d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f3989d26860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f3989d269f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f3989d24540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f3989d24540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989d248c0"/>
        <function-ref name="write" scoped="" ref="0x7f3989d24a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f3989d22370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f3989d22370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989d226f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989d22880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989d274d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989d274d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989d27850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989d279e0"/>
        <function-ref name="request" scoped="" ref="0x7f3989d27b70"/>
        <function-ref name="granted" scoped="" ref="0x7f3989d27d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989d26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f3989d211d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f3989d211d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989d21550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f3989d0a2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f3989d0a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3989d0a660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989d0a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f3989d1c890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f3989d1c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f3989d1cc10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f3989d1cda0"/>
        <function-ref name="write" scoped="" ref="0x7f3989d1b020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f3989d1b1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f3989d1b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f3989d1e660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989d1e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f3989d1e9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f3989d1eb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f3989d1ed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f3989d14c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f3989d14c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f3989d16020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f3989d0ab40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f3989d0ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f3989d15020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f3989d151b0"/>
        <function-ref name="isState" scoped="" ref="0x7f3989d15340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f3989d154d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f3989d15660"/>
        <function-ref name="forceState" scoped="" ref="0x7f3989d157f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f3989d17060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f3989d17060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989d173e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989d17570"/>
        <function-ref name="request" scoped="" ref="0x7f3989d17700"/>
        <function-ref name="granted" scoped="" ref="0x7f3989d17890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989d17a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f3989d1bba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f3989d1bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989d19020"/>
        <function-ref name="write" scoped="" ref="0x7f3989d191b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f3989d19a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f3989d19a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989d19db0"/>
        <function-ref name="write" scoped="" ref="0x7f3989d18020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3989d15a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f3989d15a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3989d15df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3989d12020"/>
        <function-ref name="led1On" scoped="" ref="0x7f3989d121b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3989d12340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3989d124d0"/>
        <function-ref name="get" scoped="" ref="0x7f3989d12660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3989d127f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3989d12e30"/>
        <function-ref name="set" scoped="" ref="0x7f3989d12980"/>
        <function-ref name="led0On" scoped="" ref="0x7f3989d12b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f3989d12ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989d1d510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989d1d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989d1d890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989d1da20"/>
        <function-ref name="request" scoped="" ref="0x7f3989d1dbb0"/>
        <function-ref name="granted" scoped="" ref="0x7f3989d1dd40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989d1c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f3989d07bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f3989d07bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3989d06020"/>
        <function-ref name="runTask" scoped="" ref="0x7f3989d061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f3989d188b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f3989d188b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989d18c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f3989cac770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f3989cac770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f3989cacaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f3989cacc80"/>
        <function-ref name="isState" scoped="" ref="0x7f3989cace10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f3989ca8020"/>
        <function-ref name="requestState" scoped="" ref="0x7f3989ca81b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f3989ca8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f3989ca71d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f3989ca71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f3989ca7550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f3989ca76e0"/>
        <function-ref name="isState" scoped="" ref="0x7f3989ca7870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f3989ca7a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f3989ca7b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f3989ca7d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3989ca2020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3989ca2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3989ca23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f3989ca2b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f3989ca2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f3989ca1020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f3989ca11b0"/>
        <function-ref name="isState" scoped="" ref="0x7f3989ca1340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f3989ca14d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f3989ca1660"/>
        <function-ref name="forceState" scoped="" ref="0x7f3989ca17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f3989b15410" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f3989b15410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3989b15790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989b15920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f3989c89d90" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f3989c89d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f3989b15180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989c89140" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989c89140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989c894c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989c89650"/>
        <function-ref name="request" scoped="" ref="0x7f3989c897e0"/>
        <function-ref name="granted" scoped="" ref="0x7f3989c89970"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989c89b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3988c9b760" loc="82:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3988c9b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3988c9bae0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3988c9bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f3988c99120" loc="87:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f3988c99120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3988c994a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3988c99630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f3988c998c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f3988c998c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f3988c99c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f3988c9a020" loc="83:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f3988c9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f3988c9a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3988c9c9c0" loc="81:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3988c9c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3988c9cd40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3988c9b020"/>
        <function-ref name="request" scoped="" ref="0x7f3988c9b1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f3988c9b340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3988c9b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f3988c9a630" loc="85:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f3988c9a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f3988c9a9b0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f3988c9ab40"/>
        <function-ref name="splitRead" scoped="" ref="0x7f3988c9acd0"/>
        <function-ref name="write" scoped="" ref="0x7f3988c9ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f3989c766b0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3989c766b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3989c76a30"/>
        <function-ref name="configure" scoped="" ref="0x7f3989c76bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f3989c74850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f3989c74850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3989c74bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989c74d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f3989c72a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f3989c72a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f3989c72dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f3989c75020" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f3989c75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f3989c753a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f3989c73690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f3989c73690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989c73a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989c73ba0"/>
        <function-ref name="request" scoped="" ref="0x7f3989c73d30"/>
        <function-ref name="granted" scoped="" ref="0x7f3989c72020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989c721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989c77430" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989c77430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989c777b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989c77940"/>
        <function-ref name="request" scoped="" ref="0x7f3989c77ad0"/>
        <function-ref name="granted" scoped="" ref="0x7f3989c77c60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989c77df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f3989c756a0" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f3989c756a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f3989c75a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f3989c75bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f3989c75d40"/>
        <function-ref name="write" scoped="" ref="0x7f3989c74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f3989c702a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f3989c702a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f3989c70620"/>
        <function-ref name="txDone" scoped="" ref="0x7f3989c707b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f3989c18250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3989c18250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3989c185f0"/>
        <function-ref name="configure" scoped="" ref="0x7f3989c18780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f3989c17c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f3989c17c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3989c16020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989c161b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f3989c153e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f3989c153e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f3989c15780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f3989c18a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f3989c18a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f3989c18d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f3989c15a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f3989c15a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f3989c15dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f3989c14020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f3989c141b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f3989c14340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f3989c144d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f3989c14660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f3989c147f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f3989c14980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f3989c14b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f3989c14ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f3989c14e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f3989c13020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f3989c131b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f3989c13440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f3989c135d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f3989c13760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f3989c138f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f3989c13a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f3989c13c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f3989c13da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f3989c12020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f3989c121b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f3989c12340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f3989c124d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f3989c12660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f3989c129f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f3989c12b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f3989c12d10"/>
        <function-ref name="tx" scoped="" ref="0x7f3989c11020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f3989c111b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f3989c11340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f3989c114d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f3989c11660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f3989c117f0"/>
        <function-ref name="rx" scoped="" ref="0x7f3989c11980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f3989c11b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f3989c11ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f3989c11e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f3989c10020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f3989c101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3989c10c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f3989c10c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3989c0e020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3989c0e1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f3989c0e340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3989c0e4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3989c0e660"/>
        <function-ref name="get" scoped="" ref="0x7f3989c0e7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3989c0e980"/>
        <function-ref name="led2On" scoped="" ref="0x7f3989c0d020"/>
        <function-ref name="set" scoped="" ref="0x7f3989c0eca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3989c0eb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f3989c0ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f3989c165b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f3989c165b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989c16950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989c16ae0"/>
        <function-ref name="request" scoped="" ref="0x7f3989c16c70"/>
        <function-ref name="granted" scoped="" ref="0x7f3989c16e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989c15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989c19470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989c19470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989c19810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989c199a0"/>
        <function-ref name="request" scoped="" ref="0x7f3989c19b30"/>
        <function-ref name="granted" scoped="" ref="0x7f3989c19cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989c19e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f3989c17060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f3989c17060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f3989c173e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f3989c17570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f3989c17700"/>
        <function-ref name="write" scoped="" ref="0x7f3989c17890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f3989c10480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f3989c10480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f3989c10800"/>
        <function-ref name="txDone" scoped="" ref="0x7f3989c10990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f3989c0d2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f3989c0d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3989c0d670"/>
        <function-ref name="runTask" scoped="" ref="0x7f3989c0d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f3989c003b0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f3989c003b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f3989c00730"/>
        <function-ref name="txDone" scoped="" ref="0x7f3989c008c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f3989c05020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3989c05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3989c053a0"/>
        <function-ref name="stop" scoped="" ref="0x7f3989c05530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f3989c05850" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f3989c05850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f3989c05bd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f3989c05d60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f3989c04020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f3989c041b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f3989c04340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f3989c044d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f3989c04660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f3989c047f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f3989c04980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f3989c04b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f3989c04ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f3989c04e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f3989c03020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f3989c032b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f3989c03440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f3989c035d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f3989c03760"/>
        <function-ref name="isUart" scoped="" ref="0x7f3989c038f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f3989c03a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f3989c03c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f3989c03da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f3989c02020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f3989c021b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f3989c02340"/>
        <function-ref name="getMode" scoped="" ref="0x7f3989c024d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f3989c02860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f3989c029f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f3989c02b80"/>
        <function-ref name="tx" scoped="" ref="0x7f3989c02d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f3989c01020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f3989c011b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f3989c01340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f3989c014d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f3989c01660"/>
        <function-ref name="rx" scoped="" ref="0x7f3989c017f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f3989c01980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f3989c01b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f3989c01ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f3989c01e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f3989c00020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f3989bf3670" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f3989bf3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989bf39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989bf3b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f3989bf3d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989bf2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989bf21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f3989bf2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989bf24d0"/>
        <function-ref name="get" scoped="" ref="0x7f3989bf2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f3989bf27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f3989bf2980"/>
        <function-ref name="set" scoped="" ref="0x7f3989bf2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f3989bf2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f3989bf2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f3989bf1120"/>
        <function-ref name="clr" scoped="" ref="0x7f3989bf12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f3989bf8dc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f3989bf8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f3989bf7180"/>
        <function-ref name="txDone" scoped="" ref="0x7f3989bf7310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f3989bf1670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f3989bf1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989bf19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989bf1b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f3989bf1d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989bf0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989bf01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f3989bf0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989bf04d0"/>
        <function-ref name="get" scoped="" ref="0x7f3989bf0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f3989bf07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f3989bf0980"/>
        <function-ref name="set" scoped="" ref="0x7f3989bf0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f3989bf0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f3989bf0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f3989bef120"/>
        <function-ref name="clr" scoped="" ref="0x7f3989bef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f3989bef670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f3989bef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989bef9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989befb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f3989befd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989bee020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989bee1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f3989bee340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989bee4d0"/>
        <function-ref name="get" scoped="" ref="0x7f3989bee660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f3989bee7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f3989bee980"/>
        <function-ref name="set" scoped="" ref="0x7f3989beeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f3989beeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f3989beee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f3989bed120"/>
        <function-ref name="clr" scoped="" ref="0x7f3989bed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f3989bfc020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f3989bfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f3989bfc3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f3989bfc530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f3989bfc6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f3989bfc850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f3989bfc9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f3989bfcb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f3989bfcd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f3989bfb020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f3989bfb1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f3989bfb340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f3989bfb4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f3989bfb660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f3989bfb7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f3989bfba80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f3989bfbc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f3989bfbda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f3989bfa020"/>
        <function-ref name="isUart" scoped="" ref="0x7f3989bfa1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f3989bfa340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f3989bfa4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f3989bfa660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f3989bfa7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f3989bfa980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f3989bfab10"/>
        <function-ref name="getMode" scoped="" ref="0x7f3989bfaca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f3989bf9220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f3989bf93b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f3989bf9540"/>
        <function-ref name="tx" scoped="" ref="0x7f3989bf96d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f3989bf9860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f3989bf99f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f3989bf9b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f3989bf9d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f3989bf8020"/>
        <function-ref name="rx" scoped="" ref="0x7f3989bf81b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f3989bf8340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f3989bf84d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f3989bf8660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f3989bf87f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f3989bf8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f3989bff710" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3989bff710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3989bffa90"/>
        <function-ref name="stop" scoped="" ref="0x7f3989bffc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f3989bf5670" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f3989bf5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989bf59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989bf5b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f3989bf5d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989bf4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989bf41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f3989bf4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989bf44d0"/>
        <function-ref name="get" scoped="" ref="0x7f3989bf4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f3989bf47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f3989bf4980"/>
        <function-ref name="set" scoped="" ref="0x7f3989bf4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f3989bf4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f3989bf4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f3989bf3120"/>
        <function-ref name="clr" scoped="" ref="0x7f3989bf32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f3989bf76d0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f3989bf76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989bf7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989bf7be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f3989bf7d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989bf6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989bf61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f3989bf6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989bf64d0"/>
        <function-ref name="get" scoped="" ref="0x7f3989bf6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f3989bf67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f3989bf6980"/>
        <function-ref name="set" scoped="" ref="0x7f3989bf6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f3989bf6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f3989bf6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f3989bf5120"/>
        <function-ref name="clr" scoped="" ref="0x7f3989bf52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3988c912c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3988c912c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3988c91640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3988c917d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3988c8a440" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3988c8a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3988c8a7c0"/>
        <function-ref name="configure" scoped="" ref="0x7f3988c8a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f3988c8bc10" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f3988c8bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f3988c8a020"/>
        <function-ref name="txDone" scoped="" ref="0x7f3988c8a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3988c92640" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3988c92640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3988c929c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3988c92b50"/>
        <function-ref name="request" scoped="" ref="0x7f3988c92ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f3988c92e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3988c91030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f3988c8f2b0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f3988c8f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f3988c8f630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f3988c8f7c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f3988c8f950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f3988c8fae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f3988c8fc70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f3988c8fe00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f3988c8e020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f3988c8e1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f3988c8e340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f3988c8e4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f3988c8e660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f3988c8e7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f3988c8e980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f3988c8ec10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f3988c8eda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f3988c8d020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f3988c8d1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f3988c8d340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f3988c8d4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f3988c8d660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f3988c8d7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f3988c8d980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f3988c8db10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f3988c8dca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f3988c8de30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f3988c8c220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f3988c8c3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f3988c8c540"/>
        <function-ref name="tx" scoped="" ref="0x7f3988c8c6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f3988c8c860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f3988c8c9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f3988c8cb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f3988c8cd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f3988c8b020"/>
        <function-ref name="rx" scoped="" ref="0x7f3988c8b1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f3988c8b340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f3988c8b4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f3988c8b660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f3988c8b7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f3988c8b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3988c91a60" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3988c91a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3988c91de0"/>
        <function-ref name="userId" scoped="" ref="0x7f3988c8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3989b592c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3989b592c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3989b59640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3989b597d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3989b588a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3989b588a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3989b58c20"/>
        <function-ref name="configure" scoped="" ref="0x7f3989b58db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f3989b5c1d0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f3989b5c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f3989b5c550"/>
        <function-ref name="txDone" scoped="" ref="0x7f3989b5c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989b5a020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989b5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989b5a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989b5a530"/>
        <function-ref name="request" scoped="" ref="0x7f3989b5a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f3989b5a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989b5a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3989b59ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3989b59ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3989b59e50"/>
        <function-ref name="userId" scoped="" ref="0x7f3989b58020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f3989b55e50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3989b55e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3989b53210"/>
        <function-ref name="userId" scoped="" ref="0x7f3989b533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f3989b56060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f3989b56060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f3989b56400"/>
        <function-ref name="txDone" scoped="" ref="0x7f3989b56590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f3989b55840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f3989b55840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3989b55bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f3989b56990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f3989b56990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f3989b56d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f3989b55060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f3989b55060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f3989b553e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f3989b55570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3989b509e0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3989b509e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3989b50d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3989b4f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3989b4e770" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3989b4e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3989b4eb10"/>
        <function-ref name="configure" scoped="" ref="0x7f3989b4eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f3989b4f270" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3989b4f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989b4f5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f3989b4f780"/>
        <function-ref name="granted" scoped="" ref="0x7f3989b4f910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989b4faa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3989b4fc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989b51b60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989b51b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989b50020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989b501b0"/>
        <function-ref name="request" scoped="" ref="0x7f3989b50340"/>
        <function-ref name="granted" scoped="" ref="0x7f3989b504d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989b50660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3989b4fe80" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3989b4fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3989b4e220"/>
        <function-ref name="userId" scoped="" ref="0x7f3989b4e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3988c33ca0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3988c33ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3988c320a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f3988c32330" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f3988c32330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3988c326b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3988c32840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3988c329d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3988c32b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f3988c2f3a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f3988c2f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f3988c2f740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3988c2f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f3988c2c210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f3988c2c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f3988c2c5b0"/>
        <function-ref name="configure" scoped="" ref="0x7f3988c2c740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f3988c2c9d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f3988c2c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3988c2cd50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3988c2b020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3988c2b1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3988c2b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f3988c2fb20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3988c2fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3988c2d020"/>
        <function-ref name="requested" scoped="" ref="0x7f3988c2d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f3988c2d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3988c2d4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3988c2d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3988c2b590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f3988c2b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3988c2b910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3988c2baa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f3988c2bc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3988c2bdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3988c2a020"/>
        <function-ref name="get" scoped="" ref="0x7f3988c2a1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3988c2a340"/>
        <function-ref name="led0On" scoped="" ref="0x7f3988c2a980"/>
        <function-ref name="set" scoped="" ref="0x7f3988c2a660"/>
        <function-ref name="led2On" scoped="" ref="0x7f3988c2a4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3988c2a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3988c30540" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3988c30540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3988c308e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3988c30a70"/>
        <function-ref name="request" scoped="" ref="0x7f3988c30c00"/>
        <function-ref name="granted" scoped="" ref="0x7f3988c30d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3988c2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f3988c2d8b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3988c2d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3988c2dc30"/>
        <function-ref name="userId" scoped="" ref="0x7f3988c2ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f3988c2ac50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f3988c2ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3988c29020"/>
        <function-ref name="runTask" scoped="" ref="0x7f3988c291b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f3989b33020" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f3989b33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f3989b333a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f3989b335f0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3989b335f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989b33970"/>
        <function-ref name="requested" scoped="" ref="0x7f3989b33b00"/>
        <function-ref name="granted" scoped="" ref="0x7f3989b33c90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989b33e20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3989b32020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f3989b49880" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3989b49880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3989b49c00"/>
        <function-ref name="stop" scoped="" ref="0x7f3989b49d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f3989b32270" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3989b32270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3989b325f0"/>
        <function-ref name="userId" scoped="" ref="0x7f3989b32780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f3988bfab00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f3988bfab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f3988bfae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f3988bf80f0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f3988bf80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3988bf8470"/>
        <function-ref name="requested" scoped="" ref="0x7f3988bf8600"/>
        <function-ref name="granted" scoped="" ref="0x7f3988bf8790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3988bf8920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f3988bf8ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f3988bfa3a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f3988bfa3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3988bfa720"/>
        <function-ref name="stop" scoped="" ref="0x7f3988bfa8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f3988bf8d00" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f3988bf8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f3988bf70a0"/>
        <function-ref name="userId" scoped="" ref="0x7f3988bf7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f3989aaec60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f3989aaec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aad210"/>
        <function-ref name="write" scoped="" ref="0x7f3989aad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f3989ab9da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f3989ab9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f3989ab2b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f3989ab2b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ab1020"/>
        <function-ref name="write" scoped="" ref="0x7f3989ab11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f3989aac670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989aac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aac9f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aacb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f3989aa5e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f3989aa5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa4210"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f3989aace50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f3989aace50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aab210"/>
        <function-ref name="write" scoped="" ref="0x7f3989aab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f3989a982f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f3989a982f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a98670"/>
        <function-ref name="write" scoped="" ref="0x7f3989a98800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f3989a9a2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f3989a9a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a9a670"/>
        <function-ref name="write" scoped="" ref="0x7f3989a9a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f3989ab7120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f3989ab7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab74a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f3989aa0670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f3989aa0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa09f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f3989a9b2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f3989a9b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a9b670"/>
        <function-ref name="write" scoped="" ref="0x7f3989a9b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f3989ab1c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f3989ab1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aaf020"/>
        <function-ref name="write" scoped="" ref="0x7f3989aaf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f3989aafc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f3989aafc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aae020"/>
        <function-ref name="write" scoped="" ref="0x7f3989aae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f3989aa6670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f3989aa6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa69f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f3989aa8e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f3989aa8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa7210"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f3989aab670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f3989aab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aab9f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aabb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f3989aba760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989aba760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f3989abaae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f3989abac70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f3989abae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f3989ab5aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f3989ab5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab5e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f3989ab4120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f3989ab4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f3989a9fa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f3989a9fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a9fdf0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f3989ab4870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f3989ab4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f3989a9bad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f3989a9bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a9be50"/>
        <function-ref name="write" scoped="" ref="0x7f3989a9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f3989ab7dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f3989ab7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f3989aa1e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f3989aa1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa0210"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f3989aaf480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f3989aaf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aaf800"/>
        <function-ref name="write" scoped="" ref="0x7f3989aaf990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f3989ab1480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f3989ab1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ab1800"/>
        <function-ref name="write" scoped="" ref="0x7f3989ab1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f3989ab9750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f3989ab9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab9ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f3989aa2e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f3989aa2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa1210"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f3989aa4670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f3989aa4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa49f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f3989aa1670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f3989aa1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa19f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f3989a99ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f3989a99ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a99e50"/>
        <function-ref name="write" scoped="" ref="0x7f3989a98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f3989a9aad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f3989a9aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a9ae50"/>
        <function-ref name="write" scoped="" ref="0x7f3989a99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f3989aa7670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f3989aa7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa79f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f3989aa4e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f3989aa4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa2210"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f3989a9dad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f3989a9dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a9de50"/>
        <function-ref name="write" scoped="" ref="0x7f3989a9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f3989aa9670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f3989aa9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa99f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f3989a98ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f3989a98ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f3989a98e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f3989a97020"/>
        <function-ref name="write" scoped="" ref="0x7f3989a971b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f3989a97340"/>
        <function-ref name="readDone" scoped="" ref="0x7f3989a974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f3989ab9100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f3989ab9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab9480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f3989ab2370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f3989ab2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989ab26f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989ab2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f3989aae480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f3989aae480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aae800"/>
        <function-ref name="write" scoped="" ref="0x7f3989aae990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f3989aa6e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f3989aa6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa5210"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f3989aabe50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f3989aabe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa9210"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f3989aa5670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f3989aa5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa59f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f3989aad670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f3989aad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aad9f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aadb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f3989ab8450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f3989ab8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f3989aade50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f3989aade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aac210"/>
        <function-ref name="write" scoped="" ref="0x7f3989aac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989abba80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989abba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989abbe00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989aba020"/>
        <function-ref name="request" scoped="" ref="0x7f3989aba1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f3989aba340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989aba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f3989ab3020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f3989ab3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f3989ab3cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f3989ab3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f3989a9d2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f3989a9d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a9d670"/>
        <function-ref name="write" scoped="" ref="0x7f3989a9d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f3989a9ead0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f3989a9ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a9ee50"/>
        <function-ref name="write" scoped="" ref="0x7f3989a9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f3989ab5450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f3989ab5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab57d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f3989a9e2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f3989a9e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a9e670"/>
        <function-ref name="write" scoped="" ref="0x7f3989a9e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f3989a992f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f3989a992f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a99670"/>
        <function-ref name="write" scoped="" ref="0x7f3989a99800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f3989aa7e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f3989aa7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa6210"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f3989aa2670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f3989aa2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa29f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f3989ab8aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f3989ab8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f3989ab7770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f3989ab7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab7af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f3989aa9e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f3989aa9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa8210"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f3989ab3670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f3989ab3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989ab39f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f3989aa8670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f3989aa8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989aa89f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989aa8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f3989aa0e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f3989aa0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a9f610"/>
        <function-ref name="write" scoped="" ref="0x7f3989a9f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f3989a977a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f3989a977a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f3989a97b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f3989a97cb0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a97e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f3989a96020"/>
        <function-ref name="readDone" scoped="" ref="0x7f3989a961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f3989a82c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f3989a82c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a80210"/>
        <function-ref name="write" scoped="" ref="0x7f3989a803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f3989a8cda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f3989a8cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a8b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f3989a85b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f3989a85b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a84020"/>
        <function-ref name="write" scoped="" ref="0x7f3989a841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f3989a7f670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989a7f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a7f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a7fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f3989a78e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f3989a78e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a77210"/>
        <function-ref name="write" scoped="" ref="0x7f3989a773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f3989a7fe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f3989a7fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a7e210"/>
        <function-ref name="write" scoped="" ref="0x7f3989a7e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f3989a6b2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f3989a6b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a6b670"/>
        <function-ref name="write" scoped="" ref="0x7f3989a6b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f3989a6e2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f3989a6e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a6e670"/>
        <function-ref name="write" scoped="" ref="0x7f3989a6e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f3989a8a120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f3989a8a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a8a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f3989a74670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f3989a74670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a749f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a74b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f3989a6f2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f3989a6f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a6f670"/>
        <function-ref name="write" scoped="" ref="0x7f3989a6f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f3989a84c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f3989a84c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a83020"/>
        <function-ref name="write" scoped="" ref="0x7f3989a831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f3989a83c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f3989a83c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a82020"/>
        <function-ref name="write" scoped="" ref="0x7f3989a821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f3989a79670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f3989a79670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a799f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a79b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f3989a7ce50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f3989a7ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a7b210"/>
        <function-ref name="write" scoped="" ref="0x7f3989a7b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f3989a7e670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f3989a7e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a7e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a7eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f3989a8e760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989a8e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f3989a8eae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f3989a8ec70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f3989a8ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f3989a89aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f3989a89aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a89e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f3989a88120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f3989a88120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a885a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f3989a72a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f3989a72a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a72df0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f3989a88870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f3989a88870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a88bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f3989a6fad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f3989a6fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a6fe50"/>
        <function-ref name="write" scoped="" ref="0x7f3989a6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f3989a8adc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f3989a8adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a89180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f3989a75e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f3989a75e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a74210"/>
        <function-ref name="write" scoped="" ref="0x7f3989a743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f3989a83480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f3989a83480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a83800"/>
        <function-ref name="write" scoped="" ref="0x7f3989a83990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f3989a84480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f3989a84480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a84800"/>
        <function-ref name="write" scoped="" ref="0x7f3989a84990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f3989a8c750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f3989a8c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a8cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f3989a76e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f3989a76e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a75210"/>
        <function-ref name="write" scoped="" ref="0x7f3989a753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f3989a77670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f3989a77670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a779f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a77b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f3989a75670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f3989a75670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a759f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a75b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f3989a6dad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f3989a6dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a6de50"/>
        <function-ref name="write" scoped="" ref="0x7f3989a6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f3989a6ead0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f3989a6ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a6ee50"/>
        <function-ref name="write" scoped="" ref="0x7f3989a6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f3989a7b670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f3989a7b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a7b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a7bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f3989a77e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f3989a77e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a76210"/>
        <function-ref name="write" scoped="" ref="0x7f3989a763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f3989a70ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f3989a70ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a70e50"/>
        <function-ref name="write" scoped="" ref="0x7f3989a6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f3989a7d670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f3989a7d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a7d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a7db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f3989a6bad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f3989a6bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f3989a6be50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f3989a6a020"/>
        <function-ref name="write" scoped="" ref="0x7f3989a6a1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f3989a6a340"/>
        <function-ref name="readDone" scoped="" ref="0x7f3989a6a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f3989a8c100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f3989a8c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a8c480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f3989a85370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f3989a85370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a856f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a85880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f3989a82480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f3989a82480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a82800"/>
        <function-ref name="write" scoped="" ref="0x7f3989a82990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f3989a79e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f3989a79e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a78210"/>
        <function-ref name="write" scoped="" ref="0x7f3989a783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f3989a7ee50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f3989a7ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a7d210"/>
        <function-ref name="write" scoped="" ref="0x7f3989a7d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f3989a78670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f3989a78670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a789f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a78b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f3989a80670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f3989a80670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a809f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a80b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f3989a8b450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f3989a8b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a8b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f3989a80e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f3989a80e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a7f210"/>
        <function-ref name="write" scoped="" ref="0x7f3989a7f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989a8f9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989a8f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989a8fd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989a8e020"/>
        <function-ref name="request" scoped="" ref="0x7f3989a8e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f3989a8e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989a8e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f3989a86020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f3989a86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f3989a86cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f3989a86cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a850a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f3989a702f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f3989a702f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a70670"/>
        <function-ref name="write" scoped="" ref="0x7f3989a70800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f3989a71ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f3989a71ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a71e50"/>
        <function-ref name="write" scoped="" ref="0x7f3989a70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f3989a89450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f3989a89450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a897d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f3989a712f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f3989a712f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a71670"/>
        <function-ref name="write" scoped="" ref="0x7f3989a71800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f3989a6d2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f3989a6d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a6d670"/>
        <function-ref name="write" scoped="" ref="0x7f3989a6d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f3989a7be50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f3989a7be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a79210"/>
        <function-ref name="write" scoped="" ref="0x7f3989a793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f3989a76670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f3989a76670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a769f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a76b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f3989a8baa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f3989a8baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a8be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f3989a8a770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f3989a8a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a8aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f3989a7de50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f3989a7de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a7c210"/>
        <function-ref name="write" scoped="" ref="0x7f3989a7c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f3989a86670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f3989a86670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a869f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f3989a7c670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f3989a7c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a7c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a7cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f3989a74e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f3989a74e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a72610"/>
        <function-ref name="write" scoped="" ref="0x7f3989a727a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f3989a6a7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f3989a6a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f3989a6ab20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f3989a6acb0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a6ae40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f3989a69020"/>
        <function-ref name="readDone" scoped="" ref="0x7f3989a691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f3989a62b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f3989a62b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f3989a5f020"/>
        <function-ref name="changed" scoped="" ref="0x7f3989a5f1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f3989a5f340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f3989a5f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f3989a61d70" loc="40:../../../tos/platforms/shimmer/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f3989a61d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f3989a4b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f3989a38cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f3989a38cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f3989a370a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f3989a37230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f3989a373c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f3989a37550"/>
        <function-ref name="setCca" scoped="" ref="0x7f3989a376e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f3989a37870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f3989a34990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f3989a34990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f3989a34d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f3989a38020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f3989a38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3989a383a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3989a38530"/>
        <function-ref name="modify" scoped="" ref="0x7f3989a386c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989a38850"/>
        <function-ref name="resend" scoped="" ref="0x7f3989a389e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3989a3b6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f3989a3b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3989a3ba40"/>
        <function-ref name="stop" scoped="" ref="0x7f3989a3bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f3989a36150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f3989a36150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f3989a364d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f3989a2e650" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f3989a2e650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f3989a2e9d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f3989a2eb60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f3989a2ecf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f3989a2ee80"/>
        <function-ref name="setCca" scoped="" ref="0x7f3989a2d030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f3989a2d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f3989a257c0" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3989a257c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3989a24d50"/>
        <function-ref name="clear" scoped="" ref="0x7f3989a234c0"/>
        <function-ref name="isValid" scoped="" ref="0x7f3989a24620"/>
        <function-ref name="set" scoped="" ref="0x7f3989a23bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f3989a0c020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989a0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a0c3a0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a0c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f3989a0c890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f3989a0c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a0cc10"/>
        <function-ref name="write" scoped="" ref="0x7f3989a0cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f3989a2d5e0" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f3989a2d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f3989a2d960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f3989a0f530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f3989a0f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a0f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f3989a1e880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f3989a1e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f3989a1ec00"/>
        <function-ref name="disable" scoped="" ref="0x7f3989a1ed90"/>
        <function-ref name="captured" scoped="" ref="0x7f3989a1d020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f3989a1d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f3989a2b7f0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f3989a2b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3989a28090"/>
        <function-ref name="fired" scoped="" ref="0x7f3989a29090"/>
        <function-ref name="startAt" scoped="" ref="0x7f3989a29a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3989a29550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f3989a28550"/>
        <function-ref name="start" scoped="" ref="0x7f3989a2a6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f3989a2abb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f3989a28a00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f3989a28a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f3989a28d80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f3989a26020"/>
        <function-ref name="getRssi" scoped="" ref="0x7f3989a261b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f3989a26340"/>
        <function-ref name="getPower" scoped="" ref="0x7f3989a264d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f3989a26660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f3989a11550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f3989a11550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a118d0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a11a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f3989a11e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f3989a11e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a101c0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a10350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f3989a05d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f3989a05d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3989a090e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f3989a09270"/>
        <function-ref name="sfd" scoped="" ref="0x7f3989a09400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3989a2f8c0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f3989a2f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3989a2fc40"/>
        <function-ref name="cancel" scoped="" ref="0x7f3989a2fdd0"/>
        <function-ref name="modify" scoped="" ref="0x7f3989a2e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989a2e1b0"/>
        <function-ref name="resend" scoped="" ref="0x7f3989a2e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f3989a13d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f3989a13d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f3989a120e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f3989a12270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f3989a12400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f3989a0fc60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f3989a0fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a0e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f3989a17820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f3989a17820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989a17ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989a17d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989a16020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989a161b0"/>
        <function-ref name="get" scoped="" ref="0x7f3989a16340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989a164d0"/>
        <function-ref name="set" scoped="" ref="0x7f3989a16660"/>
        <function-ref name="clr" scoped="" ref="0x7f3989a167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3989a30820" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3989a30820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3989a30ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f3989a269a0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f3989a269a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f3989a26d20"/>
        <function-ref name="getHeader" scoped="" ref="0x7f3989a25020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f3989a251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f3989a18b30" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f3989a18b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989a1e020"/>
        <function-ref name="isSet" scoped="" ref="0x7f3989a1e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3989a1e340"/>
        <function-ref name="set" scoped="" ref="0x7f3989a1e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f3989a0e3e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f3989a0e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a0e960"/>
        <function-ref name="write" scoped="" ref="0x7f3989a0eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f3989a13020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f3989a13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989a133a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989a13530"/>
        <function-ref name="request" scoped="" ref="0x7f3989a136c0"/>
        <function-ref name="granted" scoped="" ref="0x7f3989a13850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989a139e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f3989a1d500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f3989a1d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989a1d980"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989a1db10"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989a1dca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989a1de30"/>
        <function-ref name="get" scoped="" ref="0x7f3989a17020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989a171b0"/>
        <function-ref name="set" scoped="" ref="0x7f3989a17340"/>
        <function-ref name="clr" scoped="" ref="0x7f3989a174d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f3989a0b130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f3989a0b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a0b4b0"/>
        <function-ref name="write" scoped="" ref="0x7f3989a0b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f3989a0b9c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f3989a0b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a0bd40"/>
        <function-ref name="write" scoped="" ref="0x7f3989a0a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f3989a106d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f3989a106d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a10a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f3989a16b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f3989a16b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f3989a15020"/>
        <function-ref name="isInput" scoped="" ref="0x7f3989a151b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f3989a15340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f3989a154d0"/>
        <function-ref name="get" scoped="" ref="0x7f3989a15660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f3989a157f0"/>
        <function-ref name="set" scoped="" ref="0x7f3989a15980"/>
        <function-ref name="clr" scoped="" ref="0x7f3989a15b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3989a096c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f3989a096c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3989a09a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3989a09bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f3989a09d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3989a08020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3989a081b0"/>
        <function-ref name="get" scoped="" ref="0x7f3989a08340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3989a084d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3989a08b10"/>
        <function-ref name="set" scoped="" ref="0x7f3989a08660"/>
        <function-ref name="led0On" scoped="" ref="0x7f3989a087f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f3989a08980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f3989a0d5e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f3989a0d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989a0d960"/>
        <function-ref name="write" scoped="" ref="0x7f3989a0daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3989a2f020" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f3989a2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3989a2f3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f3989a2f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f3989a12780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f3989a12780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f3989a12b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f3989a12c90"/>
        <function-ref name="write" scoped="" ref="0x7f3989a12e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f3989a11020"/>
        <function-ref name="readDone" scoped="" ref="0x7f3989a111b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f3989a10de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f3989a10de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a0f180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f3989a0ee80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f3989a0ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989a0d220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f3989a2dd70" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f3989a2dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f3989a2b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f398996bc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f398996bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398996a210"/>
        <function-ref name="write" scoped="" ref="0x7f398996a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f3989975020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f3989975020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f39899753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f398996fc70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f398996fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398996e020"/>
        <function-ref name="write" scoped="" ref="0x7f398996e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f3989969670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989969670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39899699f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989969b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f3989962e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f3989962e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989961210"/>
        <function-ref name="write" scoped="" ref="0x7f39899613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f3989969e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f3989969e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989968210"/>
        <function-ref name="write" scoped="" ref="0x7f39899683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f39899552f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f39899552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989955670"/>
        <function-ref name="write" scoped="" ref="0x7f3989955800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f39899572f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f39899572f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989957670"/>
        <function-ref name="write" scoped="" ref="0x7f3989957800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f3989974370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f3989974370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f39899746f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f398995d670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f398995d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398995d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f398995db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f39899592f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f39899592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989959670"/>
        <function-ref name="write" scoped="" ref="0x7f3989959800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f398996ec60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f398996ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398996c020"/>
        <function-ref name="write" scoped="" ref="0x7f398996c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f398996cc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f398996cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398996b020"/>
        <function-ref name="write" scoped="" ref="0x7f398996b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f3989963670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f3989963670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39899639f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989963b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f3989965e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f3989965e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989964210"/>
        <function-ref name="write" scoped="" ref="0x7f39899643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f3989968670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f3989968670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39899689f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989968b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f39899778f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f39899778f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f3989977c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f3989977e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f3989976020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f3989972d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f3989972d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f39899710a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f3989971370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f3989971370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f39899717f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f398995ca70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f398995ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398995cdf0"/>
        <function-ref name="write" scoped="" ref="0x7f398995b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f3989971ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f3989971ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989971e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f3989959ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f3989959ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989959e50"/>
        <function-ref name="write" scoped="" ref="0x7f3989957020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f3989972060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f3989972060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f39899723e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f398995ee50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f398995ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398995d210"/>
        <function-ref name="write" scoped="" ref="0x7f398995d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f398996c480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f398996c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398996c800"/>
        <function-ref name="write" scoped="" ref="0x7f398996c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f398996e480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f398996e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398996e800"/>
        <function-ref name="write" scoped="" ref="0x7f398996e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f3989976940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f3989976940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989976cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f398995fe50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f398995fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398995e210"/>
        <function-ref name="write" scoped="" ref="0x7f398995e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f3989961670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f3989961670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39899619f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989961b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f398995e670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f398995e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398995e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f398995eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f3989956ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f3989956ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989956e50"/>
        <function-ref name="write" scoped="" ref="0x7f3989955020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f3989957ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f3989957ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989957e50"/>
        <function-ref name="write" scoped="" ref="0x7f3989956020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f3989964670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f3989964670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39899649f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989964b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f3989961e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f3989961e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398995f210"/>
        <function-ref name="write" scoped="" ref="0x7f398995f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f398995aad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f398995aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398995ae50"/>
        <function-ref name="write" scoped="" ref="0x7f3989959020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f3989967670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f3989967670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39899679f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989967b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f3989955ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f3989955ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f3989955e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f3989954020"/>
        <function-ref name="write" scoped="" ref="0x7f39899541b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f3989954340"/>
        <function-ref name="readDone" scoped="" ref="0x7f39899544d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f39899762f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f39899762f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989976670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f398996f490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f398996f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398996f810"/>
        <function-ref name="write" scoped="" ref="0x7f398996f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f398996b480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f398996b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398996b800"/>
        <function-ref name="write" scoped="" ref="0x7f398996b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f3989963e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f3989963e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989962210"/>
        <function-ref name="write" scoped="" ref="0x7f39899623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f3989968e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f3989968e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989967210"/>
        <function-ref name="write" scoped="" ref="0x7f39899673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f3989962670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f3989962670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39899629f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989962b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f398996a670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f398996a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398996a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f398996ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f3989975670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f3989975670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f39899759f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f398996ae50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f398996ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989969210"/>
        <function-ref name="write" scoped="" ref="0x7f39899693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989978c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989978c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989977020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f39899771b0"/>
        <function-ref name="request" scoped="" ref="0x7f3989977340"/>
        <function-ref name="granted" scoped="" ref="0x7f39899774d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989977660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f3989970160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f3989970160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f39899704e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f3989970e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f3989970e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f398996f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f398995a2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f398995a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398995a670"/>
        <function-ref name="write" scoped="" ref="0x7f398995a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f398995bad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f398995bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398995be50"/>
        <function-ref name="write" scoped="" ref="0x7f398995a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f39899726b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f39899726b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989972a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f398995b2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f398995b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398995b670"/>
        <function-ref name="write" scoped="" ref="0x7f398995b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f39899562f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f39899562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989956670"/>
        <function-ref name="write" scoped="" ref="0x7f3989956800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f3989964e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f3989964e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989963210"/>
        <function-ref name="write" scoped="" ref="0x7f39899633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f398995f670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f398995f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398995f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f398995fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f3989975cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f3989975cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f39899740a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f39899749c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f39899749c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989974d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f3989967e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f3989967e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989965210"/>
        <function-ref name="write" scoped="" ref="0x7f39899653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f39899707b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f39899707b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989970b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f3989965670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f3989965670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39899659f0"/>
        <function-ref name="write" scoped="" ref="0x7f3989965b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f398995de50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f398995de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398995c610"/>
        <function-ref name="write" scoped="" ref="0x7f398995c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f39899547a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f39899547a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f3989954b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f3989954cb0"/>
        <function-ref name="write" scoped="" ref="0x7f3989954e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f3989953020"/>
        <function-ref name="readDone" scoped="" ref="0x7f39899531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f3989948df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f3989948df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f39899451c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f3989945350"/>
        <function-ref name="sfd" scoped="" ref="0x7f39899454e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f39899457c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f39899457c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3989945b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f3989944020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f3989944020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f39899443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f39899485c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f39899485c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f3989948940"/>
        <function-ref name="stop" scoped="" ref="0x7f3989948ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f398993c380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f398993c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398993c700"/>
        <function-ref name="isInput" scoped="" ref="0x7f398993c890"/>
        <function-ref name="toggle" scoped="" ref="0x7f398993ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398993cbb0"/>
        <function-ref name="get" scoped="" ref="0x7f398993cd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398993b020"/>
        <function-ref name="set" scoped="" ref="0x7f398993b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f398993b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f3989935b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f3989935b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f3989934020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f39899341b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f3989934340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f39899344d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f3989934660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f39899347f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f3989934980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f3989934b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f3989934ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f3989934e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f3989933020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f39899331b0"/>
        <function-ref name="sync" scoped="" ref="0x7f3989933340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f39899335d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f3989933760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f398991e9d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f398991e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f398991ed50"/>
        <function-ref name="runTask" scoped="" ref="0x7f398991d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f3989933d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f3989933d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f3989930330"/>
        <function-ref name="clear" scoped="" ref="0x7f3989930a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f3989932ba0"/>
        <function-ref name="set" scoped="" ref="0x7f398992f210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f398993b6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f398993b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398993ba30"/>
        <function-ref name="isInput" scoped="" ref="0x7f398993bbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f398993bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398993a020"/>
        <function-ref name="get" scoped="" ref="0x7f398993a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398993a340"/>
        <function-ref name="set" scoped="" ref="0x7f398993a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f398993a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f398992ecb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f398992ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398992d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f398992d230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f398992d590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f398992d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398992d910"/>
        <function-ref name="write" scoped="" ref="0x7f398992daa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f398992c6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f398992c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398992ca50"/>
        <function-ref name="write" scoped="" ref="0x7f398992cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f3989936330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f3989936330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f39899366b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f3989936840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f39899369d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f3989936b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f3989936cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f3989936e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f398993f550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f398993f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398993f8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f398993fa60"/>
        <function-ref name="sfd" scoped="" ref="0x7f398993fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f39899373a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f39899373a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989937720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f398993d020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f398993d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f398993d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f398993d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f398993d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f398993d850"/>
        <function-ref name="get" scoped="" ref="0x7f398993d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f398993db70"/>
        <function-ref name="set" scoped="" ref="0x7f398993dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f398993c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f398992a020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f398992a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398992a3a0"/>
        <function-ref name="write" scoped="" ref="0x7f398992a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3989940620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3989940620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f39899409a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f39899351e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39899351e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f3989935560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f39899356f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f3989935880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f398993e020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f398993e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398993e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f39899396e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f39899396e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f3989939a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989939bf0"/>
        <function-ref name="request" scoped="" ref="0x7f3989939d80"/>
        <function-ref name="granted" scoped="" ref="0x7f3989938020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f39899381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f398992de00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f398992de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398992c1c0"/>
        <function-ref name="write" scoped="" ref="0x7f398992c350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f3989938530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f3989938530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f39899388b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f3989938a40"/>
        <function-ref name="write" scoped="" ref="0x7f3989938bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f3989938d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f3989937020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f398992a8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f398992a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f398992ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f398993e7c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f398993e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f398993eb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f3989929150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f3989929150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f39899294d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3989929660"/>
        <function-ref name="led1On" scoped="" ref="0x7f39899297f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3989929980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f3989929b10"/>
        <function-ref name="get" scoped="" ref="0x7f3989929ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f3989929e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f39899284d0"/>
        <function-ref name="set" scoped="" ref="0x7f3989928020"/>
        <function-ref name="led0On" scoped="" ref="0x7f39899281b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f3989928340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f398992e3e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f398992e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398992e760"/>
        <function-ref name="write" scoped="" ref="0x7f398992e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f398992fb10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f398992fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f398992e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f398993aa50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f398993aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f398993add0"/>
        <function-ref name="disable" scoped="" ref="0x7f3989939020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f39899391b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f3989939340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f3989937ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f3989937ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989936020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f3989940ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f3989940ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f398993f0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f398993f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f39898bda70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f39898bda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f39898bddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f39898c1670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f39898c1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f39898c19f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f39898c1b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f39898c1d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f39898be020"/>
        <function-ref name="getPower" scoped="" ref="0x7f39898be1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f39898be340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f39898bc550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f39898bc550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f39898bbb00"/>
        <function-ref name="clear" scoped="" ref="0x7f39898b92a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f39898bb3d0"/>
        <function-ref name="set" scoped="" ref="0x7f39898b99d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f39898bd0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39898bd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f39898bd440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f39898bd5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f39898bd760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f39898b4480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f39898b4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f39898b4800"/>
        <function-ref name="isSet" scoped="" ref="0x7f39898b4990"/>
        <function-ref name="cancel" scoped="" ref="0x7f39898b4b20"/>
        <function-ref name="set" scoped="" ref="0x7f39898b4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f39898b8660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f39898b8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f39898b7ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f39898b5460"/>
        <function-ref name="isValid" scoped="" ref="0x7f39898b75b0"/>
        <function-ref name="set" scoped="" ref="0x7f39898b5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f39898be6e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f39898be6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f39898bea60"/>
        <function-ref name="noAck" scoped="" ref="0x7f39898bebf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f39898bed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f39898ae020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f39898ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f39898ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f39898b3d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f39898b3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f39898b00e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f39898b0270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f39898b0400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f39898b0590"/>
        <function-ref name="getPower" scoped="" ref="0x7f39898b0720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f39898b08b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f39898a54a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f39898a54a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f39898a5820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f39898a59b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f39898a5b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f39898a5cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f39898a5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f39898aea80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f39898aea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f39898ab020"/>
        <function-ref name="clear" scoped="" ref="0x7f39898ab750"/>
        <function-ref name="isValid" scoped="" ref="0x7f39898ad8d0"/>
        <function-ref name="set" scoped="" ref="0x7f39898abe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f39898af640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39898af640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f39898af9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f39898afb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f39898afce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f39898a68b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f39898a68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f39898a6c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f39898a6dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f39898a5020"/>
        <function-ref name="set" scoped="" ref="0x7f39898a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f39898a43b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f39898a43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f39898a2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f39898a26e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f39898a26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f39898a13d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f39898aaaf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f39898aaaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f39898a70d0"/>
        <function-ref name="clear" scoped="" ref="0x7f39898a7800"/>
        <function-ref name="isValid" scoped="" ref="0x7f39898a9970"/>
        <function-ref name="set" scoped="" ref="0x7f39898a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f39898b0c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f39898b0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f39898af020"/>
        <function-ref name="noAck" scoped="" ref="0x7f39898af1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f39898af340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f3989853cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f3989853cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989852980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f3989850020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f3989850020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acefed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f398acee270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f3989850e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f398984f800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f398984f340"/>
        <function-ref name="overflow" scoped="" ref="0x7f398984fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f398984c0b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f398984c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3989848630"/>
        <function-ref name="fired" scoped="" ref="0x7f398984bb00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3989849920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f39898494a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f3989847020"/>
        <function-ref name="gett0" scoped="" ref="0x7f3989848ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f3989849020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f398984cca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3989848020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f398984b1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f398984b680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f3989836620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f3989836620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989836ba0"/>
        <function-ref name="write" scoped="" ref="0x7f3989836d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f3989841940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f3989841940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989841cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f398983a620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f398983a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398983a9a0"/>
        <function-ref name="write" scoped="" ref="0x7f398983ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f3989834060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f3989834060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39898343e0"/>
        <function-ref name="write" scoped="" ref="0x7f3989834570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f398982d840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f398982d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398982dbc0"/>
        <function-ref name="write" scoped="" ref="0x7f398982dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f3989834840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f3989834840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989834bc0"/>
        <function-ref name="write" scoped="" ref="0x7f3989834d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f3989821c60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f3989821c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989820020"/>
        <function-ref name="write" scoped="" ref="0x7f39898201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f3989824c60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f3989824c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989823020"/>
        <function-ref name="write" scoped="" ref="0x7f39898231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f3989840cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f3989840cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f398983f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f3989828060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f3989828060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39898283e0"/>
        <function-ref name="write" scoped="" ref="0x7f3989828570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f3989825c60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f3989825c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989824020"/>
        <function-ref name="write" scoped="" ref="0x7f39898241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f3989839620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f3989839620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39898399a0"/>
        <function-ref name="write" scoped="" ref="0x7f3989839b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f3989838620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f3989838620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39898389a0"/>
        <function-ref name="write" scoped="" ref="0x7f3989838b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f398982e060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f398982e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398982e3e0"/>
        <function-ref name="write" scoped="" ref="0x7f398982e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f3989831840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f3989831840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989831bc0"/>
        <function-ref name="write" scoped="" ref="0x7f3989831d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f3989833060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f3989833060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39898333e0"/>
        <function-ref name="write" scoped="" ref="0x7f3989833570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f39898422b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f39898422b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f3989842630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f39898427c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f3989842950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f398983e6b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f398983e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f398983ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f398983ed00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f398983ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f398983c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f3989827480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f3989827480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989827800"/>
        <function-ref name="write" scoped="" ref="0x7f3989827990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f398983c490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f398983c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f398983c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f3989824480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f3989824480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989824800"/>
        <function-ref name="write" scoped="" ref="0x7f3989824990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f398983f9c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f398983f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f398983fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f398982a840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f398982a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398982abc0"/>
        <function-ref name="write" scoped="" ref="0x7f398982ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f3989839e00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f3989839e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39898381c0"/>
        <function-ref name="write" scoped="" ref="0x7f3989838350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f398983ae00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f398983ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39898391c0"/>
        <function-ref name="write" scoped="" ref="0x7f3989839350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f39898412f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f39898412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989841670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f398982b840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f398982b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398982bbc0"/>
        <function-ref name="write" scoped="" ref="0x7f398982bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f398982c060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f398982c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398982c3e0"/>
        <function-ref name="write" scoped="" ref="0x7f398982c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f398982a060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f398982a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398982a3e0"/>
        <function-ref name="write" scoped="" ref="0x7f398982a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f3989821480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f3989821480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989821800"/>
        <function-ref name="write" scoped="" ref="0x7f3989821990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f3989823480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f3989823480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989823800"/>
        <function-ref name="write" scoped="" ref="0x7f3989823990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f3989830060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f3989830060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39898303e0"/>
        <function-ref name="write" scoped="" ref="0x7f3989830570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f398982c840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f398982c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398982cbc0"/>
        <function-ref name="write" scoped="" ref="0x7f398982cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f3989825480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f3989825480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989825800"/>
        <function-ref name="write" scoped="" ref="0x7f3989825990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f3989832060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f3989832060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39898323e0"/>
        <function-ref name="write" scoped="" ref="0x7f3989832570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f3989820480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f3989820480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f3989820800"/>
        <function-ref name="writeDone" scoped="" ref="0x7f3989820990"/>
        <function-ref name="write" scoped="" ref="0x7f3989820b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f3989820cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f3989820e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f3989842c20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f3989842c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f3989841020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f398983be00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f398983be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398983a1c0"/>
        <function-ref name="write" scoped="" ref="0x7f398983a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f3989838e00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f3989838e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39898361c0"/>
        <function-ref name="write" scoped="" ref="0x7f3989836350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f398982e840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f398982e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398982ebc0"/>
        <function-ref name="write" scoped="" ref="0x7f398982ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f3989833840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f3989833840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989833bc0"/>
        <function-ref name="write" scoped="" ref="0x7f3989833d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f398982d060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f398982d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398982d3e0"/>
        <function-ref name="write" scoped="" ref="0x7f398982d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f3989835060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f3989835060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39898353e0"/>
        <function-ref name="write" scoped="" ref="0x7f3989835570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f3989840020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f3989840020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f39898403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f3989835840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f3989835840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989835bc0"/>
        <function-ref name="write" scoped="" ref="0x7f3989835d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989844520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989844520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f39898448a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989844a30"/>
        <function-ref name="request" scoped="" ref="0x7f3989844bc0"/>
        <function-ref name="granted" scoped="" ref="0x7f3989844d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f3989842020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f398983cae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f398983cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f398983ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f398983b7b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f398983b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f398983bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f3989826c60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f3989826c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989825020"/>
        <function-ref name="write" scoped="" ref="0x7f39898251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f3989826480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f3989826480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989826800"/>
        <function-ref name="write" scoped="" ref="0x7f3989826990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f398983e060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f398983e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f398983e3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f3989827c60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f3989827c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989826020"/>
        <function-ref name="write" scoped="" ref="0x7f39898261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f3989823c60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f3989823c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989821020"/>
        <function-ref name="write" scoped="" ref="0x7f39898211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f3989830840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f3989830840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989830bc0"/>
        <function-ref name="write" scoped="" ref="0x7f3989830d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f398982b060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f398982b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398982b3e0"/>
        <function-ref name="write" scoped="" ref="0x7f398982b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f3989840670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f3989840670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f39898409f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f398983f370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f398983f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f398983f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f3989832840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f3989832840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989832bc0"/>
        <function-ref name="write" scoped="" ref="0x7f3989832d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f398983b160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f398983b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f398983b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f3989831060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f3989831060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f39898313e0"/>
        <function-ref name="write" scoped="" ref="0x7f3989831570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f3989828840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f3989828840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f3989827020"/>
        <function-ref name="write" scoped="" ref="0x7f39898271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f398981f160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f398981f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f398981f4e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f398981f670"/>
        <function-ref name="write" scoped="" ref="0x7f398981f800"/>
        <function-ref name="beginRead" scoped="" ref="0x7f398981f990"/>
        <function-ref name="readDone" scoped="" ref="0x7f398981fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f39897f2a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f39897f2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f39897f2da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f39897f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f39897ef920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f39897ef920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f39897f2560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f39897fa990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f39897fa990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f39897fad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f39897eba20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f39897eba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f39897ebda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f39897ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f39897ec940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f39897ec940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f39897eb560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f39897ec080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f39897ec080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f39897ec400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f39897f4aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f39897f4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f39897f4e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f39897dd020"/>
        <function-ref name="isState" scoped="" ref="0x7f39897dd1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f39897dd340"/>
        <function-ref name="requestState" scoped="" ref="0x7f39897dd4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f39897dd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f39897d33b0" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f39897d33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f39897d3730"/>
        <function-ref name="getPayload" scoped="" ref="0x7f39897d38c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f39897d3a50"/>
        <function-ref name="cancel" scoped="" ref="0x7f39897d3be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f39897d3d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f39897d64d0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f39897d64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f39897d6850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f39897d69e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f39897d6b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f39897d6d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f39897d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f39897ce110" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f39897ce110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f39897ce490"/>
        <function-ref name="getPayload" scoped="" ref="0x7f39897ce620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f39897ce7b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f39897ce940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f39897cead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f39897d2d50" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f39897d2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f39897cf100"/>
        <function-ref name="getPayload" scoped="" ref="0x7f39897cf290"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f39897cf420"/>
        <function-ref name="cancel" scoped="" ref="0x7f39897cf5b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f39897cf740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f39897cdbe0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f39897cdbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f39897cc020"/>
        <function-ref name="rand32" scoped="" ref="0x7f39897cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f39897cf9c0" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f39897cf9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f39897cfd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f39897cc4b0" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39897cc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f39897cc830"/>
        <function-ref name="getHeader" scoped="" ref="0x7f39897cc9c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f39897ccb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f39897ced60" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f39897ced60"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f39897cd180"/>
        <function-ref name="toIdle" scoped="" ref="0x7f39897cd310"/>
        <function-ref name="isState" scoped="" ref="0x7f39897cd4a0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f39897cd630"/>
        <function-ref name="requestState" scoped="" ref="0x7f39897cd7c0"/>
        <function-ref name="forceState" scoped="" ref="0x7f39897cd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f39897d0b00" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f39897d0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f39897d0e80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f39897bb030"/>
        <function-ref name="isState" scoped="" ref="0x7f39897bb1c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f39897bb350"/>
        <function-ref name="requestState" scoped="" ref="0x7f39897bb4e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f39897bb670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f39897b5b80" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f39897b5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f39897b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f39897b8d00" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f39897b8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f39897b50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f39897b5430" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f39897b5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f39897b57b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f39897af770" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f39897af770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f39897afaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f39897af020" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f39897af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f39897af3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f39897b11e0" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f39897b11e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f39897b1560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f39897afdf0" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39897afdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f39897ae1c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f39897ae350"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f39897ae4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f39897b18f0" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f39897b18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f39897b1c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3989781200" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f3989781200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3989781580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3989781890" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f3989781890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3989781c10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3989781da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3989780020"/>
        <function-ref name="cancel" scoped="" ref="0x7f39897801b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989780340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3989785c60" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f3989785c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3989784020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f39897841b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3989784340"/>
        <function-ref name="cancel" scoped="" ref="0x7f39897844d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989784660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f3989783020" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f3989783020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f39897833a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3989783530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f39897836c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3989783850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f39897839e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f3989784900" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f3989784900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3989784c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f3989785020" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f3989785020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f39897853a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f3989785530"/>
        <function-ref name="request" scoped="" ref="0x7f39897856c0"/>
        <function-ref name="granted" scoped="" ref="0x7f3989785850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f39897859e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f3989783d50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f3989783d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3989782100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f3989782440" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f3989782440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f39897827c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f3989782950"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3989782ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3989782c70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3989782e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3989777e20" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f3989777e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f39897761c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3989776350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f39897764e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3989776670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989776800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3989776b50" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f3989776b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3989775020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f3989748db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f3989748db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f3989747180"/>
        <function-ref name="runTask" scoped="" ref="0x7f3989747310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f39897752f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f39897752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f3989775670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f3989775800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f3989775990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f3989775b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f3989775cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f3989775e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f3989779bb0" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f3989779bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3989778020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f39897781b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3989778340"/>
        <function-ref name="cancel" scoped="" ref="0x7f39897784d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989778660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f3989774b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f3989774b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3989773020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f39897731b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3989773340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f39897734d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f3989774170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f3989774170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f39897744f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f3989774680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f3989774810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f3989779500" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f3989779500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3989779880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f398977c910" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f398977c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f398977cc90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f398977ce20"/>
        <function-ref name="request" scoped="" ref="0x7f398977b020"/>
        <function-ref name="granted" scoped="" ref="0x7f398977b1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f398977b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f398977b660" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f398977b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398977b9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398977bb70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398977bd00"/>
        <function-ref name="cancel" scoped="" ref="0x7f3989779020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f39897791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f39897789d0" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f39897789d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3989778d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f39897770d0" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f39897770d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f3989777450"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f39897775e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3989777770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3989777900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f3989777a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f3989728dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f3989728dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f3989727180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f3989727410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f3989727410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f3989727790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f3989727920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f3989727ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f3989727c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f398971bb80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f398971bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398971a020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398971a1b0"/>
        <function-ref name="start" scoped="" ref="0x7f398971a340"/>
        <function-ref name="stop" scoped="" ref="0x7f398971a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3989719860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f3989719860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3989719be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3989719d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f3989718020"/>
        <function-ref name="cancel" scoped="" ref="0x7f39897181b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989718340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f3989718690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f3989718690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f3989718a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f398971fce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f398971fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398971c0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398971c230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398971c3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f398971c550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398971c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f398971b080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f398971b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f398971b400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f398971b590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f398971b720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f398971b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f398971a800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f398971a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f398971ab80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f398971ad10"/>
        <function-ref name="isState" scoped="" ref="0x7f3989719020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f39897191b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f3989719340"/>
        <function-ref name="forceState" scoped="" ref="0x7f39897194d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f3989718d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f3989718d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f3989717180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f3989717310"/>
        <function-ref name="start" scoped="" ref="0x7f39897174a0"/>
        <function-ref name="stop" scoped="" ref="0x7f3989717630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f398971c980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f398971c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f398971cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f39897132d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f39897132d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f3989713650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f39897137e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f3989713970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f3989713b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f3989716580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f3989716580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f3989716900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f3989716a90"/>
        <function-ref name="isState" scoped="" ref="0x7f3989716c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f3989716db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f3989714020"/>
        <function-ref name="forceState" scoped="" ref="0x7f39897141b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f3989706d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f3989706d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f3989705180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3989705310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f39897054a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3989705630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f39897057c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f3989709350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f3989709350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f39897096d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f3989709860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f39897099f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f3989709b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f3989709d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f3989706020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f3989706020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f39897063a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f3989706530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f39897066c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f3989706850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f39897069e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f39897011c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f39897011c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f3989701540"/>
        <function-ref name="noAck" scoped="" ref="0x7f39897016d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f3989701860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f3989704410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f3989704410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f3989704790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f3989704920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f3989704ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f3989704c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f3989704dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f39896e1690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f39896e1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f39896e1a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f39896e2860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f39896e2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f39896e2be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f39896e2d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f39896e1020"/>
        <function-ref name="cancel" scoped="" ref="0x7f39896e11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f39896e1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f39896df610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f39896df610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f39896df990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f39896dfb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f39896dfcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f39896dfe40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f39896de020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f39896de1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f39896de340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f39896de4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f39896de660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f39896de7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f39896de980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f39896deb10"/>
        <function-ref name="sync" scoped="" ref="0x7f39896deca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f39896dd020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f39896dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f39896e38b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f39896e38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f39896e3c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f39896e3dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f39896e2020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f39896e21b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f39896e2340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f39896e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f39896e4ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f39896e4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f39896e30a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f39896dc1f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f39896dc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f39896dc570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f39896dc700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f39896dc890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f39896dca20"/>
        <function-ref name="setCca" scoped="" ref="0x7f39896dcbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f39896dcd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f39896e5a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f39896e5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f39896e5e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f39896e4020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f39896e41b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f39896e4340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f39896e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f39896e9020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f39896e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f39896e93a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f39896e9530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f39896e96c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f39896e9850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f39896e99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f39896e8df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f39896e8df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f39896e61c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f39896e1ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f39896e1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f39896e00a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f39896e0230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f39896e03c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f39896e0550"/>
        <function-ref name="getPower" scoped="" ref="0x7f39896e06e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f39896e0870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f39896dd4d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f39896dd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f39896dd950"/>
        <function-ref name="changed" scoped="" ref="0x7f39896ddae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f39896ddc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f39896dde00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f39896e0b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f39896e0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f39896df020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f39896df1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f39896df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f39896e8210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f39896e8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f39896e8590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f39896dbd30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f39896dbd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f39896d90e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f39896d9270"/>
        <function-ref name="led1On" scoped="" ref="0x7f39896d9400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f39896d9590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f39896d9720"/>
        <function-ref name="get" scoped="" ref="0x7f39896d98b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f39896d9a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f39896d81b0"/>
        <function-ref name="set" scoped="" ref="0x7f39896d9bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f39896d9d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f39896d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f39896e6470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f39896e6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f39896e67f0"/>
        <function-ref name="source" scoped="" ref="0x7f39896e6980"/>
        <function-ref name="address" scoped="" ref="0x7f39896e6b10"/>
        <function-ref name="destination" scoped="" ref="0x7f39896e6ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f39896e6e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f39896e5020"/>
        <function-ref name="type" scoped="" ref="0x7f39896e51b0"/>
        <function-ref name="setType" scoped="" ref="0x7f39896e5340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f39896e54d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f39896e5660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f39896e57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f39896db0f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f39896db0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f39896db470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f39896db600"/>
        <function-ref name="request" scoped="" ref="0x7f39896db790"/>
        <function-ref name="granted" scoped="" ref="0x7f39896db920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f39896dbab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f39896518c0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="XXTea16BitsAmAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f39896518c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f398964dcf0"/>
        <function-ref name="fired" scoped="" ref="0x7f398964f320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f398964d0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f398964fc20"/>
        <function-ref name="getdt" scoped="" ref="0x7f398964c660"/>
        <function-ref name="gett0" scoped="" ref="0x7f398964c1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f398964f7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f39896504e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f398964d6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f39896509b0"/>
        <function-ref name="stop" scoped="" ref="0x7f3989650e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f398963b2f0" loc="13:XXTea16BitsAmC.nc">
      <component-ref qname="XXTea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f398963b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f398963b670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f398963b800"/>
        <function-ref name="start" scoped="" ref="0x7f398963b990"/>
        <function-ref name="stop" scoped="" ref="0x7f398963bb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f3989648020" loc="7:XXTea16BitsAmC.nc">
      <component-ref qname="XXTea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f3989648020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f39896483a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f398963c5d0" loc="12:XXTea16BitsAmC.nc">
      <component-ref qname="XXTea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f398963c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f398963c950"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398963cae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398963cc70"/>
        <function-ref name="cancel" scoped="" ref="0x7f398963ce00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f398963b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x7f398963e2e0" loc="10:XXTea16BitsAmC.nc">
      <component-ref qname="XXTea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f398963e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f398963d020"/>
        <function-ref name="readDone" scoped="" ref="0x7f398963d4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f398963bdb0" loc="14:XXTea16BitsAmC.nc">
      <component-ref qname="XXTea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f398963bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f398963a180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f398963a310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f398963a4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f398963a630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f398963a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f39896439b0" loc="9:XXTea16BitsAmC.nc">
      <component-ref qname="XXTea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f39896439b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f3989643d30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f3989642020"/>
        <function-ref name="led1On" scoped="" ref="0x7f39896421b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f3989642340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f39896424d0"/>
        <function-ref name="get" scoped="" ref="0x7f3989642660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f39896427f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f3989642e30"/>
        <function-ref name="set" scoped="" ref="0x7f3989642980"/>
        <function-ref name="led0On" scoped="" ref="0x7f3989642b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f3989642ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="XXTEA" ref="0x7f398963da60" loc="11:XXTea16BitsAmC.nc">
      <component-ref qname="XXTea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="XXTEA" scoped="" ref="0x7f398963da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="XXTEA"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x7f398963dde0"/>
        <function-ref name="lsb" scoped="" ref="0x7f398963c020"/>
        <function-ref name="msb" scoped="" ref="0x7f398963c1b0"/>
        <function-ref name="encrypt" scoped="" ref="0x7f398963c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f3989648790" loc="8:XXTea16BitsAmC.nc">
      <component-ref qname="XXTea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f3989648790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398acef720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f398acefa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f3989644c40"/>
        <function-ref name="fired" scoped="" ref="0x7f3989645220"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f3989644020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f3989645b20"/>
        <function-ref name="getdt" scoped="" ref="0x7f3989643590"/>
        <function-ref name="gett0" scoped="" ref="0x7f3989643110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f39896456a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f39896473b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f3989644630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f3989647880"/>
        <function-ref name="stop" scoped="" ref="0x7f3989647d50"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f398b1d4070" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f398b1d8c80" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f398b18f740" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f398b192990" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f398b18f020" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f398b1922b0" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f398b191120" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f398b1934d0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f398b193bb0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f398b191840" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f398b51a020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f398b7db3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f398b13e500" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f398b13e280" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f398b14b9c0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f398b1875a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f398b186020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f398b13ed70" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f398b13dc80" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f398b13fb00" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f398b13d4f0" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f398b140190" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f398b140920" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f398b13f390" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f398b1875a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f398b186020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f398b13f110" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f398b1875a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f398b186020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f398b130560" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f398b12eca0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f398b12ea20" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f398b12d9d0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f398b12d750" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f398b12e270" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f398b12f940" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f398b12f020" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f398b130c90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f398b139890" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f398b1362a0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f398b136020" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f398b136c80" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f398b136a00" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f398b1356a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f398b135420" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f398b135d90" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f398b146120" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f398b145a10" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f398b145790" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f398b146850" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f398b14a350" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f398b145020" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f398b149270" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f398b1489e0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f398b14aae0" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f398b149980" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f398b1482e0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f398b148060" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f398b144450" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f398b1441d0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f398b1071f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f398b26c7f0" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f398b269020" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f398b26c020" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f398b6f4810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f398b89a020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f398b899020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f398b89a790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f398b88e270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f398b88eac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f398aff0bb0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f398aff0260" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f398aff05e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398aff0910" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f398afea620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398afea020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398afea350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f398afe96d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f398afed2a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398afed020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f398afec7f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398afec210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f398afec560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f398afe5020" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398aff2c60" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f398afe4110" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398afe5e10" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f398afe0490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398afe1e50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398afe01c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f398afe1560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f398afe35e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398afe3020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398afe3350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f398afd0d30" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f398b1f4930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f398afd0ab0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f398afd9a10" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f398afd9790" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f398afe8e50" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f398afdb950" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f398afdb6d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f398afd63a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f398afd7d70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f398afd6110" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f398afd8e50" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f398afd8870" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f398afd8bc0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f398afd3810" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f398afd3590" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f398afd1b90" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f398afd15e0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f398afd1900" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f398b1f4550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f398afd5600" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f398afd5380" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f398afce2f0" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f398b1f4930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f398afd2cf0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f398afce060" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f398b1f4930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f398afcd190" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f398b1f4930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f398afcaad0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398afca850" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f398afc8cd0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398afc8a50" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f398afc6020" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398afc9ce0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f398afc05e0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398afc0020" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398afc0350" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f398afbbbb0" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398afbb5b0" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398afbb8e0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f398afbdd20" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f398afbe900" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398afbe680" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f398afbce00" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398afbc820" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f398afbcb70" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f398af4fab0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f398af4f830" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f398af4d020" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f398af4ed30" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f398af53d60" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f398af4e350" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f398af49410" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
              <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398af51a80" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f398af51dd0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398af49130" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="52:../../../tos/platforms/shimmer2r/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f398af3f270" loc="62:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="59:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f398af3fa20" loc="68:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="64:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f398af3e270" loc="73:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="70:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f398af3d1f0" loc="84:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="80:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f398af3b940" loc="101:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="97:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f398af3a190" loc="117:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="103:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f398af3ea00" loc="78:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="75:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f398af3ad00" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="120:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f398af3aa80" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f398af40a60" loc="57:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="54:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f398af3d9d0" loc="90:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="87:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f398af3b190" loc="95:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="92:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f398aed1020" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398aed2960" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f398aed2ce0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f398aed4020" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f398aed2020" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398aed48b0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f398aed4c20" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f398aeb7a40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f398aeb4270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f398aeb2070" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f398aeb68e0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f398aec7b20" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f398aebb020" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f398aebac20" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f398aeba9a0" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f398aebb8a0" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f398aebc6d0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f398aebc450" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f398aeb94b0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f398aeba190" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f398aec40e0" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f398aec4a10" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f398aec6720" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f398aec64a0" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f398aec35c0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f398aec3340" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f398aec17a0" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f398aec0400" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f398aec0180" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f398aebf020" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f398aec0c50" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f398ad8cdd0" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f398ad8c800" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398ad8cb40" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f398ad84ac0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f398ad84840" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f398ad83930" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f398ad83360" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398ad836a0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f398ad85740" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f398ad822c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f398ad81920" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398ad81c60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f398ad82020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f398ad84070" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f398ad87720" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f398ad88db0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398ad87130" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f398ad87480" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f398ad615b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f398ad61330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f398ad61df0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f398ad60cf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f398ad60700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f398ad60a60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f398ad5eb50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f398ad06270" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f398ad06ba0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f398ad01070" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f398ad2a450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f398ad2a870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f398ad099c0" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f398ad0a990" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f398ad0a020" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f398ad091f0" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f398ad08470" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f398acfa510" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f398acfdcb0" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f398acf22a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f398acf2020" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f398acf3780" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f398accaaf0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f398acd5790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f398ace2530" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398ad59360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f398ad59ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f398ace22b0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398ad59360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f398ad59ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f398acd8870" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f398ace0a40" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398ad542d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f398ad54b10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f398ace07c0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398ad542d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f398ad54b10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f398accfe70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f398accb480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f398ace0020" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398ad57230"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f398ad579c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f398acde270" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398ad542d0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f398ad54b10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f398acdb020" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f398acdcd30" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f398acdc610" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f398accf740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f398ace1780" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398ad57230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f398ad579c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f398ace1500" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398ad57230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f398ad579c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f398acdd420" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f398acce5d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f398acdde00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f398acddb80" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f398acd9910" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f398acd80e0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f398acd0840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f398acd3790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f398acd77e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f398accf020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f398acd4020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f398accecf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f398acdb800" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f398ad62320"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f398ad5ba10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f398accd4c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f398acca350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f398acdec10" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f398acde990" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f398acc94d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f398acc9250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f398ace2d10" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398ad59360"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f398ad59ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f398acd7020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f398acd4770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f398acd0020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f398ad2a450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f398ad2a870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f398acd2cf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f398ad2a450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f398ad2a870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f398acd22a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f398ad3d420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f398ad3d840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f398acd2020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f398ad3d420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f398ad3d840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f398acc9d90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f398accdcb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f398acd9070" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f398accbbe0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f398acd3020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f398acd5020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f398acc1410" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f398acc1410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f398acc1650" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398acc1650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f398acc0020" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398acc1650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f398acbf120" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f398acc08a0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f398acbf880" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f398ac4b930" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f398ac0da50" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f398ac0c1f0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f398ac08b10" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f398ac08890" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f398ac0e2d0" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f398ac0b0e0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f398ac07490" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f398ac0c930" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f398ac0d2b0" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f398ac097c0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f398ac0ea70" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f398ac10420" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f398ac0b860" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f398ac08020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f398ac09070" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f398ac10b50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/platforms/shimmer/chips/msp430/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f398ac21780" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f398ac34c90" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f398ac27020" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f398ac28ca0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f398ac3b390" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f398ac247a0" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f398ac2c020" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f398ac35da0" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f398ac32b70" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f398ac36d40" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f398ac36ac0" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f398ac38270" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f398ac30900" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f398ac26020" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f398ac21020" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f398ac28560" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f398ac1c1f0" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f398ac18880" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f398ac3a270" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f398ac30190" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f398ac2fa90" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f398ac35650" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f398ac3d190" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f398ac2ad40" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f398ac2aac0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f398ac409f0" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f398ac24020" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f398ac1f020" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f398ac1a9a0" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f398ac18120" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f398ac23790" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f398ac1f750" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f398ac277b0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f398ac1d1f0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f398ac3a990" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f398ac2b1f0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f398ac1e630" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f398ac22790" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f398ac2d760" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f398ac2d4e0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f398ac19190" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f398ac2a390" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f398ac23020" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f398ac3dc10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f398ad16240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f398ad16660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f398ac3d990" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f398ad16240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f398ad16660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f398ac31a00" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f398ac39a80" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f398ac39800" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f398ac2f2a0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f398ac2f020" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f398ac1d9c0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f398ac363b0" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f398ac39120" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f398ac2bbb0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f398ac2b930" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f398ac3bac0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f398ac1fe70" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f398ac22020" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f398ac26790" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f398ac2c9f0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f398ac2c770" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f398ac312b0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f398ac34530" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f398ac19900" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f398ac38bf0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f398ac38970" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f398ac1c9b0" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f398ac32420" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f398ac1a1f0" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f398a944730" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f398a944e60" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f398a946880" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f398a943cf0" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f398a944020" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f398a9435b0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f398a949a90" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f398a946190" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f398a8e9020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f398a8e9880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f398a8b4e00" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f398a8b2020" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f398a8b4570" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f398a8b36d0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f398a8b2950" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f398a8a6020" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f398a8ad090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f398a8a8d20" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f398a8ad090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f398a8a9020" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f398a8a9b20" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f398a8ad090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f398a8a98a0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f398a8ad090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f398a8a8470" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f398a8ad090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f398a73cad0" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f398a73cad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f398a737270" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f398a73cad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f398a736cb0" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f398a73cad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f398a736a30" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f398a73cad0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f398c27ac30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f398c27ac30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f398a733c70" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f398a73cad0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f398a7339f0" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f398a739b20" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f398a738ad0" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f398a737e50" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f398a73cad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f398a7393b0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f398a7382d0" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f398a712dd0" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f398a712b50" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="XXTEA" loc="1:../../../tos/platforms/shimmer2r/XXTEA.nc">
      <function command="" provided="0" name="decrypt" ref="0x7f398a6d5630" loc="3:../../../tos/platforms/shimmer2r/XXTEA.nc">
        <interfacedef-ref qname="XXTEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7f398a6d5060" loc="3:../../../tos/platforms/shimmer2r/XXTEA.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398a6d53a0" loc="3:../../../tos/platforms/shimmer2r/XXTEA.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lsb" ref="0x7f398a6d4020" loc="4:../../../tos/platforms/shimmer2r/XXTEA.nc">
        <interfacedef-ref qname="XXTEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f398a6d5cb0" loc="4:../../../tos/platforms/shimmer2r/XXTEA.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="msb" ref="0x7f398a6d4920" loc="5:../../../tos/platforms/shimmer2r/XXTEA.nc">
        <interfacedef-ref qname="XXTEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f398a6d46a0" loc="5:../../../tos/platforms/shimmer2r/XXTEA.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="encrypt" ref="0x7f398a6d7950" loc="2:../../../tos/platforms/shimmer2r/XXTEA.nc">
        <interfacedef-ref qname="XXTEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7f398a6d7380" loc="2:../../../tos/platforms/shimmer2r/XXTEA.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398a6d76c0" loc="2:../../../tos/platforms/shimmer2r/XXTEA.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f398a6dad10" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f398a6dad10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f398a6ae620" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f398a6ad3a0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f398a6dad10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f398a6aeda0" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f398a6ad110" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f398a6dad10"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f398a6975a0" loc="52:../../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f398a6975a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f398a694020" loc="58:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f398a694d90" loc="66:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f398a6975a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f398a6947e0" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f398a694b00" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f398a6975a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f398a6a04a0" loc="57:../../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f398a6a04a0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7f398a69d810" loc="89:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f398a6a04a0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f398a69ee50" loc="89:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f398a69d210" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f398a6a04a0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f398a69d570" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7f398a69f3e0" loc="68:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f398a6a04a0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f398a6a0da0" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f398a6a04a0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f398a69f150" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f398a69e630" loc="78:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7f398a69e3b0" loc="78:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f398a69adf0" loc="102:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f398a69a7b0" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7f398a69ab60" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7f398a676d20" loc="45:../../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f398a676d20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7f398a673730" loc="58:../../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f398a676d20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f398a658df0" loc="189:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7f398a6618c0" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f398a661640" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7f398a65fde0" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f398a65f7e0" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7f398a65fb50" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7f398a6599c0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f398a65a700" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f398a659020" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f398a6593a0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f398a659710" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7f398a654770" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f398a6540d0" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f398a654460" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7f398a65b2d0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f398a65d020" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f398a65d8c0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f398a65dc50" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f398a65b020" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7f398a657ad0" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f398a657850" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f398a605ce0" loc="97:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f398a605020" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398a68d290"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f398a68d760"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f398a607970" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f398a68f640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f398a690cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7f398a607d60" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398a68d290"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f398a68d760"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7f398a606110" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7f398a6064b0" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f398a606860" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f398a606bd0" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f398a604d40" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f398a604720" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f398a604ab0" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7f398a601780" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7f398a600020" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f398a5f8da0" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f398a5f56a0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7f398a5e8ac0" loc="63:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398a67dce0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7f398a67c7a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7f398a5e6c30" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398a68d290"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7f398a68d760"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f398a5e69b0" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7f398a5e2350" loc="106:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7f398a5e0550" loc="118:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7f398a5e2d50" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7f398a5e2ad0" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7f398a5e7350" loc="68:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398a67ae20"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7f398a679770"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7f398a5e6130" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398a68d290"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f398a68d760"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f398a5e7ac0" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7f398a5e7e80" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f398a68d290"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f398a68d760"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f398a5df600" loc="128:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7f398a5e9760" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398a67dce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f398a67c7a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7f398a5e94e0" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398a67dce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f398a67c7a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7f398a5e4750" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f398a5e44d0" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7f398a5e32a0" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f398a5e3020" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7f398a5e3b10" loc="101:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7f398a5e0d10" loc="123:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7f398a5dfda0" loc="133:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7f398a5e82a0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398a67ae20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f398a679770"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7f398a5e8020" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f398a67ae20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f398a679770"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f398a451020" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f398a451020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f398a44bc50" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f398a44e5b0" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f398a44c360" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f398a44dd60" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f398a44c0d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f398a44d5b0" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f398a449ca0" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f398a449420" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f398a44ed90" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f398a451b90" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f398a451910" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f398a44b2f0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f398a44cd00" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f398a44b060" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f398a450680" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f398a450400" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f398a450e80" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f398a39d6d0" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f398a39d6d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f398a399020" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f398a394070" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f398a394070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f398a3942b0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398a3942b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f398a390e00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398a3942b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f398a393e40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f398a390460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398a3942b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398a3942b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f398a392e60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398a3942b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f398a3901d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398a3942b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f398a392640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f398a38f620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398a3942b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f398a394e10" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398a3942b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f398a394b90" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398a3942b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f398a393680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f398a0e4b30" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f398a0e4b30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f398a0e4d70" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398a0e4d70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f398a0dfc00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398a0e4d70"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0df980" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f398a0ded80" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0deb00" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f398a0e19c0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0e1740" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f398a0dd0c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398a0e4d70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0dca80" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f398a0dcde0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f398a0e4d70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f398a0d0030" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0d29e0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f398a0d2d70" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f398a0cf2a0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0cf020" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f398a0d21f0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f398a0d37f0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f398a0d3570" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f398a0a8430" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0a81b0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f398a0aa720" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0aa4a0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f398a0addc0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f398a0adb40" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f398a0ad2a0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f398a0ad020" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f398a0ab880" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f398a0ab600" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f398a0a95e0" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0a9360" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f398a09ce60" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f398a09c850" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f398a09cbd0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f398a0b70c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f398a0b8aa0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f398a0b8df0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f398a0b36d0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f398a0b30d0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f398a0b3440" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f398a0b7ba0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f398c275110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f398a0b7920" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f398a0b4600" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f398a0b4380" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f398a0b82a0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f398a0b8020" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f398a0b5720" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f398a0b54a0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f398a0a0630" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0a03b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f398a0a46f0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0a40d0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f398a0a4460" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f398a0a15f0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0a1370" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f398a0a3af0" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0a34d0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f398a0a3860" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f398a09f630" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a09f3b0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f398a0af0b0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a0b9dd0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420RxState" loc="41:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
      <documentation loc="33:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <short>&#10; strictly for manipulating the receiver prior to radio start-up&#10; so that we can run without reception and/or cca under certain circumstances&#10;&#10; </short>
        <long>&#10; strictly for manipulating the receiver prior to radio start-up&#10; so that we can run without reception and/or cca under certain circumstances&#10;&#10; @author Steve Ayer&#10; @date   February, 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="enableRx" ref="0x7f398a085040" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <interfacedef-ref qname="CC2420RxState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f398a088d90" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x7f398a0859c0" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <interfacedef-ref qname="CC2420RxState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f398a085740" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f398a075900" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f398a075340" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f398a075670" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f398a073c10" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f398a06f410" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f398a0715e0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f398a071e20" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f398a06f170" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f398a072dc0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f398a0727e0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f398a072b30" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f398a0733d0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f398a073150" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f398a06c820" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f398a06c020" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f398a066ae0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a066820" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f398a066020" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f398b22f720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f398b22c090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a068be0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f398a065de0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f398b22cb90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f398b22ab80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f398a065ae0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f398a07a4c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f398a078570" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f398a079d50" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f398a07fb70" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f398a07cbe0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f398a07ad30" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f398a079580" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f398a07c420" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f398a05f480" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f398a061ac0" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f398a060c90" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f398a060a10" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f398a060270" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f398a063800" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f398a063580" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f398a0612e0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f398a061060" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f3989ffe120" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f398a000ad0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f398a000e20" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f398a001a70" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f398a001130" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f398a002aa0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f398a002e80" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f398a0074e0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f398a007260" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f398a000350" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f398a003020" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f398a005d20" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f398a006610" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f398a006390" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f3989ffd390" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f398a0022a0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f398a002020" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f3989ffeb20" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f398a006d90" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f398a0cd670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f398a0cddd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f398a0055c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f398a00aa60" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f398a007c30" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f398a0037c0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f3989fd52a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f398b2318d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3989fd5020" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f3989fd5d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f398b2318d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3989fd5b00" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f3989fee640" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f398a0cd670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f398a0cddd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f3989fdfaf0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f3989fdeab0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f3989fde350" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f398b1f4930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f3989fdf2b0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f398b1f4930"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f3989fe6b40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f398b1f4930"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f3989fdf020" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f398b1f4d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f3989fcf540" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f398b2318d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f3989fda2c0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f398b2318d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f3989fdb3d0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f3989fdbc40" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f3989fda020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f3989fd9a80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f398b2318d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f3989fdab90" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f3989fd9490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f3989fd97e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f3989fe1190" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f3989fe3960" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f3989fe31f0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f3989fe78d0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f3989ec4ad0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f3989ec3c90" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f3989ec34e0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f3989ec3260" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f3989ec4270" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f3989e6f2b0" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f3989e6ed50" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f3989e71af0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f3989e6e530" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f3989e6e2b0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f3989e71350" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f3989e6fab0" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f3989d59810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f3989d580e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f3989d58920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f3989d31420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3989d32e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f3989d31190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f3989d2c700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3989d2dd90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f3989d2c110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f3989d2c460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f3989d2d020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f398b2318d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3989d2e970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f3989d2ecc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f3989d32020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f398b2318d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3989d339d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f3989d33d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f3989d30b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3989d30250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f3989d305a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f3989d308f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f3989d11a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f3989d110d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f3989d11460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3989d117a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f3989d0d020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f3989d0f2a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f3989d0f630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f3989d0f970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f398c274520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f3989d0fce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f3989d148f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f3989d14670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f3989c7a120" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f398ad3d420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f398ad3d840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f3989c81d60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3989c81ae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f3989c7d2a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3989c7d020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f3989c7e610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f3989c7dd30" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f3989c7dab0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f3989b452b0" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f3989a34580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f3989a059e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f3989a05020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f3989a05750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f3989a077f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f3989a07020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f3989a0ad30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f398c274920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f3989a1b2a0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f398c274160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3989a1b020" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f3989a1c2a0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f398b89e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3989a1c020" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f3989a182a0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3989a18020" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f3989a1a2a0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f3989a1a020" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f398b1e4720"/>
                <typename><typedef-ref name="message_t" ref="0x7f398b1e3d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f39897f35e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f39897f35e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f39897ef2a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f398b895c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f39897f35e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f39897ef020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f39897f35e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
