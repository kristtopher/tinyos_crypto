<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="63:TestAMAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd941e850f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd942985a60"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd942985a60"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd9427b0590"/></to>
    </wire>
    <wire loc="64:TestAMAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd941e85710"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd941defe40"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:TestAMAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd941e85d20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd941df0b10"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:TestAMAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd941e76ad0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd941e44a10"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd941e44a10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd941dc72f0"/></to>
    </wire>
    <wire loc="67:TestAMAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd941e9aa80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd9420fd020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd9420fd020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd9420f9a70"/></to>
    </wire>
    <wire loc="68:TestAMAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x7fd941e79820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd9411c18c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd9411c18c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd9413c22c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:TestAMAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd941e745d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd941dec080"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd941dec080"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd941dc2020"/></to>
    </wire>
    <wire loc="70:TestAMAppC.nc">
      <from><interface-ref name="TEA" scoped="" ref="0x7fd941e6d2c0"/></from>
      <to><interface-ref name="TEA" scoped="" ref="0x7fd941e49250"/></to>
    </wire>
    <wire loc="6:../../../tos/platforms/shimmer2r/TEAC.nc">
      <from><interface-ref name="TEA" scoped="" ref="0x7fd941e49250"/></from>
      <to><interface-ref name="TEA" scoped="" ref="0x7fd941e46870"/></to>
    </wire>
    <wire loc="71:TestAMAppC.nc">
      <from><interface-ref name="RC4" scoped="" ref="0x7fd941e6a0d0"/></from>
      <to><interface-ref name="RC4" scoped="" ref="0x7fd941e487c0"/></to>
    </wire>
    <wire loc="6:../../../tos/platforms/shimmer2r/RC4C.nc">
      <from><interface-ref name="RC4" scoped="" ref="0x7fd941e487c0"/></from>
      <to><interface-ref name="RC4" scoped="" ref="0x7fd941e2cc40"/></to>
    </wire>
    <wire loc="72:TestAMAppC.nc">
      <from><interface-ref name="XXTEA" scoped="" ref="0x7fd941e66bc0"/></from>
      <to><interface-ref name="XXTEA" scoped="" ref="0x7fd941e2a080"/></to>
    </wire>
    <wire loc="6:../../../tos/platforms/shimmer2r/XXTEAC.nc">
      <from><interface-ref name="XXTEA" scoped="" ref="0x7fd941e2a080"/></from>
      <to><interface-ref name="XXTEA" scoped="" ref="0x7fd941e146c0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd941297dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd94131e020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd94133e9c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd94135f080"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd941497920"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd94158a620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd94167c820"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd941c477e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd9409a3460"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd9418f1020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd941cffab0"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd941e96020"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd940b95e50"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd942688280"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd941ec4a60"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd9427b0c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd9430443a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd9430443a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd942a1cc30"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd9427af6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd942982020"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd942982020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd942982e00"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd9427afdc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fd94297f550"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fd942980e70"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fd942980e70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd942949d50"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fd94297fc30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd942981b70"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fd942975380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd9420d02e0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd942949d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd94292f940"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd94293e380"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd94292e020"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd942cc54c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd94292d360"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fd9428ea5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd9428286d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fd9428d8020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd942820b30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fd9428e1700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd94282d160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fd9428c5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd942807cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fd9428e8aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd94282e480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fd9428cb020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd942807020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fd9428c2a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd9427efcb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fd9428d35a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd942800220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fd9428ebb10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd94287d9d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fd9428c7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd9428152f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fd9428ce3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd942817610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fd9428d75a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd942818220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fd9428e0700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd9428257a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fd9428c4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd9427fe2f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fd9428d6be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd9428106d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fd9428e7890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd942826ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fd9428fb060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd94288b540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fd9428cbda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd9427ff610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fd9428f10c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd94282f020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fd9428d2a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd9427f96d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fd9428db6d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd942835a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fd9428c6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd94280e7a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fd9428e3cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd942836de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fd9428cc1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd94280fac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fd9428c3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd9427f77a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fd9428d40c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd942809b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fd9428da6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd9428843e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fd9428cab80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd9427f8ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fd9428c8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd94281ecb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fd9428c9a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd9427ef020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fd9428cf570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd94281e020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fd9428d0020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fd9427f1b30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fd942889450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd94288ad80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd942889aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fd9427eaa90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd942888120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fd9427e7260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd942834930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd94288b540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd942832020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd94288ad80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd94282c020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd94288b540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd94282b7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd94288ad80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd942824610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd94288b540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd942823c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd94288ad80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fd9428812f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd942883bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd942881940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fd9427e79f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd942880020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fd9427e6240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd94281db40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd9428843e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd94281b2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd942883bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd942814160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd9428843e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd9428137a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd942883bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd94280d610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd9428843e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd94280cc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd942883bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd942805b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd9428843e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd9428032f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd942883bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd9427fd160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd9428843e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd9427fc7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd942883bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd9427f5610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd9428843e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd9427f4c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd942883bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd9427eeb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd9428843e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fd9427ec2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fd942883bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd942a1bb70"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fd942a142c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fd9430363b0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd941ebda20"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7fd941eedbf0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd941eba440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd941ef3020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd941ef3020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd94102e770"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd941eb80c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd941ef3c30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd941ef3c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd9426fa7e0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fd941e9cbe0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fd941ebd1a0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd9426fa7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd94268fa40"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd941ef28b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd9426f9470"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd9426f9470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd942690490"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd941ef0020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd9426f7b20"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd9426f7b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd94268e720"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd94102d460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd942757ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd94102c0e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd9426f9470"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd942757ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd94270b580"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd94270a400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd9426ff3f0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd9426ff3f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd942692110"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd942709060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd9426f9470"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd942707720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd9426fa7e0"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fd942706480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fd942706c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd9426fc3b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd9426888d0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd9426888d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd942677810"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd9426fa1d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd942692e70"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd942688280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd9426771c0"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd942683dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd9426e70d0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd94268d120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd942686480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd94268dd70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd942687940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fd9426834a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7fd941f0ba30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd942686480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd942546830"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd942687940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd942546110"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7fd942545760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fd9426834a0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd942670430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd942683dc0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd942543590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd942683dc0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd94253acc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd942683dc0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fd9425440e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fd942674080"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7fd9425449d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7fd9426717d0"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7fd942666410"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7fd94253eb60"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fd942662530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd9425130c0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fd9425130c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd941f1f0c0"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fd942531d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fd9425138d0"/></to>
    </wire>
    <wire loc="45:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fd9425138d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fd941f26440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7fd942610e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7fd942647d50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7fd942612400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fd94260b0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7fd942541c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7fd942540480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fd942511020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fd941f25440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fd941f25440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fd9424a6210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fd941f26440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fd9424aab50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd941f23020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd941f1f920"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd941f1e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd941f27020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd941f27020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9424ac320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd941f27c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd940f6b020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd940f6b020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd9420832c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd9424a4600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd941f23020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd940f5d760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9424a8dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fd9424a5370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd940f6c340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd940f6c340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd942084020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd94249fbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd940f66c10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd940f66c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd9420874d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9424a8dd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd942414e70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fd9424a6210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fd942412890"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fd9424aab50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fd942413790"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd9424ac320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9424140d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd9424103e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd9424a4600"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fd9424115b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fd9424a5370"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd94240b5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd94249fbe0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fd942410a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd942401b60"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd942401b60"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fd9423f5360"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd942409020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd94211fd20"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd94211fd20"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd942119d90"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd942407120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd9420fd020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd9423f9bd0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd9423f0970"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd9423fa6d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd9423f0020"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fd9423b4860"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fd9422cccc0"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fd9422cccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94221d100"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fd9423be800"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fd9422c8cc0"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fd9422c8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942219d10"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fd9423b2800"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fd9422c6cc0"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fd9422c6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942214740"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fd9423b0800"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fd9422bfcc0"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fd9422bfcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94220bd10"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fd9423ae800"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fd9422c1cc0"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fd9422c1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94220f100"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fd9423c6bc0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fd941fe0940"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fd942328810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94225c740"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fd942313810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94222c100"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fd9422caca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94221d100"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fd9422a5cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942192740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fd94230f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942222740"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fd9422fb9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421f2460"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fd9422e69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421c3d10"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fd9422d69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94219c100"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fd9422b1cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421af740"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fd94229dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94218d100"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fd942321810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94224e740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fd94231d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942244d10"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fd942309810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942214740"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fd9422f59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421e4100"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fd9422e09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421b4d10"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fd9422d09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94218d100"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fd94232c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942265100"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fd942317810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942236d80"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fd942303810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942206740"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fd9422abcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421a1740"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fd94229fcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94218d100"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fd9422b7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421c7100"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fd9422ff810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421fce60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fd9422ea9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421cc740"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fd9422da9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421a6d10"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fd9422a9cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94219c100"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fd9422bdcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421d5100"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fd942326810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942257100"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fd942311810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942227d10"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fd9422de9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421af740"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fd94230d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94221d100"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fd9422f99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421eee00"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fd9422e49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421be740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fd9422d49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942198d10"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fd9422b9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421cc740"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fd942332800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942296d10"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fd94231b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94223f740"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fd942307810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94220f100"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fd9422f29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421e0d10"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fd9422b5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942206740"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fd9422afcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421aa100"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fd9422a3cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94218d100"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fd9422ee9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421d5100"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fd9422b3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942200100"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fd94232a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942261d10"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fd942315810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942231740"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fd942301810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942200100"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fd9422bbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421d1d10"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fd9422a7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942198d10"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fd9422fd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421f79f0"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fd9422e89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421c7100"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fd9422d89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421a1740"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fd942324810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942253d10"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fd9422dc9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421aa100"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fd94231f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942248100"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fd94230b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942219d10"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fd9422f79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421e9740"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fd9422e29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421b8100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fd9422d29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942192740"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fd94232e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94226a740"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fd942319810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94223a100"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fd942305810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd94220bd10"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fd9422f09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421da740"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fd9422c3ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942214740"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fd9422adcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421a6d10"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fd9422ec9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421d1d10"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fd9422a1cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942192740"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fd94229bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd9421b4d10"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fd9422ce9f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd942222740"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd942119d90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd942113e50"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd942101020"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd9428da6c0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd9420d02e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd9420f9470"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd9420f6060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fd9420fab10"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd9420fab10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd9420cd020"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd9420f5340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fd9420d3e70"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd9420d3e70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd9420b8b90"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd9420ef660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fd9420d10f0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd9420d10f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd9420b3710"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd9420bc2f0"/></from>
      <to><interface-ref name="Port40" scoped="" ref="0x7fd9422ff810"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd9420b7de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fd9422fb9a0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd9420b2930"/></from>
      <to><interface-ref name="Port43" scoped="" ref="0x7fd9422f99a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd940f65440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd9420853f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd940f65a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd941fead70"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd941fead70"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fd941fe0940"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd940f6a020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd942401b60"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd940f6b7c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd942083ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd942083ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd941ff1400"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9420828a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd940f5d760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd9420832c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd941ff3020"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd941ff3020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd940b91530"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fd9420874d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd942080d60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd942084020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd941ff4210"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd941ff4210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd940b92740"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd9420853f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd94207f710"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd941ff1400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd940b8f930"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd941ff1cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9420828a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd94206dbf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd941ff1400"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fd94207fd80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd9423fa6d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fd94206d5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd9423f9bd0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd941ff37a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd940b91cb0"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd940b8e270"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd941ff1cd0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd940b8ea30"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd940b944a0"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd940b8cc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fd941fd7700"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fd9423f5360"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fd941fd2250"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fd9422cccc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fd941fd01f0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fd9422c6cc0"/></to>
    </wire>
    <wire loc="114:../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7fd941eb3500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fd941e96680"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fd941e9cbe0"/></to>
    </wire>
    <wire loc="44:../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd941e90380"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd942985a60"/></to>
    </wire>
    <wire loc="47:../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fd941e90aa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd9426fc3b0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd941dc72f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd941d9d020"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd941df0b10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd941dc6320"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd941dc6320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd941259020"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd941deea40"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd941dc41d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd941dc41d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd941258df0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd941dc2020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd941255a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd941de06b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd941506550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd941506550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd9414f8a80"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd941dd35b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd941db5170"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd941db5170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd941d95700"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd941defe40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd941dc5510"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd941dc5510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd941258210"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd941dea4e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd941dc1020"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd941dc1020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd941d97670"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd941deccf0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd941dc4800"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd941dc4800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd941256470"/></to>
    </wire>
    <wire loc="87:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd941de1840"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd941502660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd941502660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd9414f4af0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd941d9d020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd94128ab80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd941dc02c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd9412538b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fd941dab1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fd941254ce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd941db80f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd941d98670"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd941d98670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd94150b670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd941d95700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd94128a080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd941d97670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd9415086e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd941da2430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd941d942e0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd941d942e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd941276020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd941db4170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd941d95080"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd941d95080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd941507a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fd94124a0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd941d9c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd941252860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd941d99170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fd941d99170"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd9412f2020"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd941251690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd941d98020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fd941d98020"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd9412f2d50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd94124d4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd9416aeb20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd941251ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd94150b670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd94150b670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd9414fdd20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd941250b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9415070c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9415070c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9414f9640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd94124f610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd941d0f020"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd941d0f020"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd941cf9e50"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fd94124b1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd941d8f990"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd941d8f990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd941d871a0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd94124ad30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd9420fd020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd94128ab80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fd941287d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd941507a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd9414f8020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd941276020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd941273410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fd9412f2020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fd9412e8bb0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd94128a080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd9412832d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fd941d9bd30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd9412f3900"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd9412f3900"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fd9412e8500"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd9415086e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd9414fac50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd941d9c1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9412f4020"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd9412f4020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9412eb910"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fd941d9b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd9412f4c60"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd9412f4c60"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fd9412e9660"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fd941d9a420"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fd9412f1440"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fd9412f1440"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fd9412e60d0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fd9412f2d50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fd9412e79d0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd941287d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd941d93ac0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd941d93ac0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd941d8d8d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd9412f0890"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd9413454d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd9413454d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd941341d50"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd9413423b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd941279350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd941279350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd941276d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd941276d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd94128ece0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd94128ece0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd941288860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd941288860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd941d90600"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd941d90600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd941d88470"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd9412f0200"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd94128b980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd94128b980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd941287690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd941287690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd941327d00"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd941327d00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd94131f1e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd941324b80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd941d8f300"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd941d8f300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd94158f7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd94158f7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd941588020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420RxState" scoped="" ref="0x7fd941d8a2d0"/></from>
      <to><interface-ref name="CC2420RxState" scoped="" ref="0x7fd941d86080"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd941d86880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd941d139d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd941d139d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd941cf9180"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fd941d7ee30"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fd941d02020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fd941d02020"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fd941cf7d80"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd941d830d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd9416866c0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd941d830d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd9415925c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fd9415925c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd94158aca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fd9416866c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fd94167b020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd941d75d30"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd941683020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd941683020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd94167b8c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fd941d7cae0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd941683cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fd941683cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fd941679650"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd941d71020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd94150b670"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd941d6a660"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9415070c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd941d74020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd941364a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd941364a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd94135ea20"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fd941d65e40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd941366aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd941366aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd9418f51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd941d747f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd9420fd020"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fd941d60b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fd941d61c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fd941d62d20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fd941cfc5c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fd941cf51b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fd941cf2260"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd941c44220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd941c44220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd941c3e2e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd941ce7510"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd941b59370"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd941b59370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b4c1b0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fd941ce6830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fd941b56ce0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fd941b56ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b3d710"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fd941ce5b50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fd941b53380"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fd941b53380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b34d70"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fd941cde5b0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fd941b1d210"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fd941b1d210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fd9419c5a30"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd941ccc8f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd94173ae20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd94173ae20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9419744d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd941ccb990"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fd9417367b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd9417367b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd941ccd100"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fd941735ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd941735ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd941ccc1d0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fd941737ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd941737ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd941ccd830"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd941734160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd941734160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd941cd01d0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fd94172c870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd94172c870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd941cd0a80"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fd941729880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd941729880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd941cd43c0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fd9417280a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd9417280a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd941cd4c90"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd941730e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd941730e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd941cd35f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd94172f670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd94172f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd941cdd9a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fd94171b500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd94171b500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd941cdd020"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fd94171cce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd94171cce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd941ccf020"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fd94172de50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd94172de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd941ccf8c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fd94172fe50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd94172fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd941cce1d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fd94172ee50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd94172ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fd941cc9560"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd941707a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd941707a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9419744d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fd941cca6f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9416db9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd9416db9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9419744d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd941cdadd0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd9416aeb20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd941cf0600"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd9416add70"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fd941cbd020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fd941cbe020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd941c477e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd941c3fa20"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd941c3fa20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd940b2bd20"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd941c3e2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd940b295b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd940b2bd20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd940b23cc0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd940b295b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd940b1c890"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd940b23cc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd940b06a30"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fd940b150a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd940b21570"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd940b21570"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd940b05340"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd940b18c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd941bc8020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd941bc8020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd941bc25f0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd940b014c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fd940b0b570"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd940b0b570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fd941c204d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd940b00a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd940b0ac10"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd940b0ac10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd941c1d280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd940affda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fd940b08020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd940b08020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fd941c1cba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd941c204d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd9428da6c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd941c1d280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fd9428d8020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd941c1cba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fd9428cf570"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd941c204d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd9428da6c0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd941c1d280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fd9428d75a0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd941c1cba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB1" scoped="" ref="0x7fd9428ce3e0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd941c204d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd9428da6c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd941c1d280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fd9428d6be0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd941c1cba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fd9428cc1f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd941c204d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd9428da6c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd941c1d280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fd9428d40c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd941c1cba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fd9428cb020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd941c204d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd9428da6c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd941c1d280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fd9428d35a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd941c1cba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fd9428cbda0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd941c204d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd9428da6c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd941c1d280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fd9428d2a50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd941c1cba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fd9428cab80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd941c204d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fd9428da6c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd941c1d280"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fd9428d0020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd941c1cba0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fd9428c9a20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fd941ba5950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd942119d90"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fd941b586a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b47d70"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fd941b579d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b42b70"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fd941b5a020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b51710"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fd941b54020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b381b0"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b50930"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fd942311810"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b4b480"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fd9422e69a0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b45020"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fd942326810"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b41de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fd942332800"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b3c930"/></from>
      <to><interface-ref name="Port57" scoped="" ref="0x7fd9422e09a0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b37480"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fd94232c810"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b31020"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fd9422e29a0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fd941b195a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd941afe1f0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd941b1de30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fd9419b6a70"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd941afecb0"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7fd9428f10c0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fd941afc020"/></from>
      <to><interface-ref name="CaptureA1" scoped="" ref="0x7fd9428e1700"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fd941afce40"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fd94232c810"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd941ae7300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd941bc8020"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd941aface0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd941af1020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd941ac5020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd941ae0020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd941ae0020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd941ace210"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="LocalTimeMicro" scoped="" ref="0x7fd941af8020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd941ae1cf0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fd9419c4610"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fd941aab020"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fd941aab020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fd941a98bc0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fd9419b5610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fd941ab9170"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fd941ab9170"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fd941aaad30"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fd941acc6d0"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fd941ada120"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fd941ada120"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd941ad7990"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd941ad4a60"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fd9428fb060"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fd941ab7020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fd941aa3bc0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fd941aac020"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fd941a99bc0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fd941ab4020"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fd941aa0bc0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fd941ab2020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fd941a9ebc0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fd941abe060"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fd941aa5c40"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fd941aae020"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fd941a9bbc0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fd941ab6020"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fd941aa2bc0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fd941ab1020"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fd941a9dbc0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fd941ab8020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fd941aa4bc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fd941aad060"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fd941a9ac40"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fd941ab5020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fd941aa1bc0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fd941ab3020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fd941a9fbc0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fd941abf100"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fd941aa6c80"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fd941ab0020"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fd941a9cbc0"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd941736160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd94172a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd9417220a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd9417290a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd941716500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd941719500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd941735490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd94171f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd94171a500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd941724880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd9417260a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd941739a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd941973350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd941973350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd94196b660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd941734e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd941733490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd94171dc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd941733be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd94171ace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd94171f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd94172e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd9417200a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd941722880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd941720880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd941718ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd941719ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd941726880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd9417210a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd94171bce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd941728880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd941716ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd9419722c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd941737480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd941730670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd94172d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd9417230a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd941723880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd94172a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd9417312f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd941730020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd9417347b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd94171c500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd941718500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd9417240a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd941721880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd941736e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd9417270a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd941731940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd941727880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd94171d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd9417139b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd9419722c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fd9419722c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd941969890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941968ba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941967a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd9419744d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd94196a510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd9419658b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fd941959b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd9418fa770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd9418fa770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd9418f51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd941964060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9418d7140"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd9418d7140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd940a0b770"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd941961c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd9418d7d90"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd9418d7d90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd940a09be0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd9419592e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd941760410"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd941760410"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd940a08d70"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd941962a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd9420fd020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fd941955bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd9418f51d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd9418f1b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd940a08d70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd9418c2850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd940a09be0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd9418c3020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd940a0b770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9418c5430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd940a09440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd940a00d90"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd940a00d90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd9417a52c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd9418c3020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd941866a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fd940a082b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fd9418c36a0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fd9418c36a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fd941865060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd9418c0a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd940a075a0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9409f9020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9418c46b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fd9418c1690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd940a00140"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd940a00140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9417a6020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd9418be2a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd9409fa760"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd9409fa760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd9417a81d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9418c46b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd941866250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd9418c2850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd941865c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd9418c5430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd941867470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd9418633e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd9418c0a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fd9418645b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fd9418c1690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd94185e480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd9418be2a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fd941863a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd9418520c0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd9418520c0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fd941849970"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd94185ec20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd9420fd020"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fd94185c2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd94184dd10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd941844460"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd941850840"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd9418490c0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fd941844d30"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7fd9422bbcc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fd941842cb0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7fd9422b9cc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fd941840cb0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7fd9422b7cc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fd94183ecb0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7fd9422b3cc0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fd94183ccb0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7fd9422b5cc0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd9409ffd40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd9418520c0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd9409ff5a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd9417a5ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd9417a5ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd94179be80"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9417a48a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9409f9020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd9417a52c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd94179c9e0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd94179c9e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd9409a0a60"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fd9417a81d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fd9417a2060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd9417a6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd94179db60"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd94179db60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9409a1c80"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd94179be80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd94099fe80"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fd9417a1060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd94184dd10"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd94179a770"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9417a48a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd9417a1e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd94179be80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd94177f5f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd94179b270"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd94179b270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd94099f270"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd941795880"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd941850840"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd94099e790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd94179a770"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd94099d020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd9409a3a70"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd94099a160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd94096b900"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd941795880"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd94096a0e0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd94177f020"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd94096a6b0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd94177f5f0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd940969400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd94177e270"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd9416fac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd941705da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd9416feb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd9416f8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd9416f1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd9416f8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd9416e42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd9416e62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd941702120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd9416ec670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd9416e72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd9416fcc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd9416fbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd9416f2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd9416f4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd9416f7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd941706760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd941973350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd941701aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd941700120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd9416eba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd941700870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd9416e7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd941702dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd9416ede50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd9416fb480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd9416fc480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd941705750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd9416eee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd9416f0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd9416ed670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd9416e5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd9416e6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd9416f3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd9416f0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd9416e9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd9416f5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd9416e4ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd9419722c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd941705100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd9416fe370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd9416fa480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd9416f2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd9416f7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd9416f1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd9416f9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd941704450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9416f9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd9416ff020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd9416ffcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd9416e92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd9416eaad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd941701450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd9416ea2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd9416e52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd9416f3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd9416ee670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd941704aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd941702770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd9416f5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd9416ff670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd9416f4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd9416ece50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd9416e37a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd9419722c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd9416cec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd9416d8da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd9416d1b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd9416cb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd9416c4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd9416cbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd9416b72f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd9416ba2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd9416d6120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd9416bf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd9416bb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd9416d0c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd9416cfc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd9416c5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd9416c8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd9416ca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd9416d9760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd941973350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd9416d5aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd9416d4120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd9416bea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd9416d4870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd9416bbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd9416d6dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd9416c1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd9416cf480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd9416d0480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd9416d8750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd9416c2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd9416c3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd9416c1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd9416b9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd9416baad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd9416c7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd9416c3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd9416bcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd9416c9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd9416b7ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd9419722c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd9416d8100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd9416d1370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd9416ce480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd9416c5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd9416cae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd9416c4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd9416cc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd9416d7450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9416cce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd9416d2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd9416d2cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd9416bc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd9416bdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd9416d5450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd9416bd2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd9416b92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd9416c7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd9416c2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd9416d7aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd9416d6770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd9416c9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd9416d2670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd9416c8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd9416bfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd9416b67a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd9419722c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd94167f990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd9416785e0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fd941681150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fd941678d70"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fd9416777f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd941c44220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fd94166b500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fd941b5a020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd941661820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd941b59370"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fd94165fb40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fd941b54020"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fd94166c880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fd941b195a0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd94165d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9415c2c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd9415c2c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9419744d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd94165dd10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd9415c18f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd9415c18f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd941973350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd94165a6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fd9415c02f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd9415c02f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd94165ade0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fd9415bfcc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd9415bfcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd941659530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fd9415be370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd9415be370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd941659c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd9415bcd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd9415bcd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd94165be00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fd9415b6c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd9415b6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd94165c780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fd94159e7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd94159e7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd9419722c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd94165b550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd9415a22f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd9415a22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd9416583e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd9415b7480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd9415b7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9416575e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9415b4e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9415b4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd941656020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fd9415b3670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd9415b3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd941658e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fd9415ba7b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd9415ba7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd9416559c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fd9415a0ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd9415a0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd941656890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fd9415a12f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd9415a12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd941655130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fd9415a1ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd9415a1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fd94164fd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fd941592df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fd941592df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fd941589550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd941674a00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd94150b670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9416729a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9415070c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd9416717c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd941506550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd941662b30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd9414fe480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd9414fe480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd9414f08b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd9416536c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd9420fd020"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd9415b5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd9415bf020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd9415b9c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd9415ace50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd9415b3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd94159f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd9415a7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd9415b7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd9415ad670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd9415afe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd9415b2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd9415bb370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd9415a6a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd9415bbac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd9415a2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd9415bc060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd9415a8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd9415b6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd9415c0940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd9415a9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd9415ab670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd9415a8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd9415ae670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd9415abe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd9415a4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd9415b0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd94159fad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd9419722c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd9415b9490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd9415b5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd9415ade50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd9415b2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd9415ac670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd9415b4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd9415bf670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd9415ba160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd9415bae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd9415a42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd9415a5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd9415bc6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd9415a52f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd9415a02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd9415aee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd9415a9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd9415be9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd9415b0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd9415af670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd9415a7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fd94158d020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fd9415887c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd941573150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd9420fd020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fd941587020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fd941b59370"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fd941586380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fd941b586a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fd9415856b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fd941b579d0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd941584a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd941b1de30"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd9415836e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9413b2d00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd9413b2d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd9419744d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd941582530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fd94138fad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fd94138fad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd9419722c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd941581ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd9413ad6b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd9413ad6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd9415813a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fd9413ab370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fd9413ab370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd941580330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd94150b670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd94157f1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9415070c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd94157dd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd941506550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fd94157fb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fd941d0f020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9415783e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9413a4e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9413a4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd941578cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fd9413a3670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fd9413a3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd941579b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fd9413aa160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fd9413aa160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd9415756d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fd94138f2f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fd94138f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd941577590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fd9413922f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fd9413922f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd941577e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fd941392ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fd941392ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd941574020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd941393ad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd941393ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd9415748b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fd9413b0300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fd9413b0300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fd9415689d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd94149a020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd941bc8020"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd9414ed3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd94149dcf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd9414ec6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd94148fb80"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fd94148fb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd9413d62b0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd941494700"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd9413e4150"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd941497920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd9414602a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd9414602a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd9408869d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fd9413de640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd941434830"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd94142ecd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd941460af0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd941460af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd94087f5f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd9413d5690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd94147c080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd94147c080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd941477cd0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd9408869d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd94086a360"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fd940879d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd940885260"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd940885260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd94086abf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd94087c9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd94147c080"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd940866dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fd94086f020"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fd94086f020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fd941c204d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd940864440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd94086e760"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd94086e760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd941c1d280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd940863760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fd94086da80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fd94086da80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fd941c1cba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fd9414730f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd942119d90"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fd941429020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fd9413d9a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd9413cb8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd9413c22c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd9413c22c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd941494700"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fd9413a5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fd9413af020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd9413a9c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fd94139ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fd9413a3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fd9413ae370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fd941397670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd9413932f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fd9413a8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fd9413a7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fd94139d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fd9413a0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fd9413a2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd9413b1970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd941973350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd9413add00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd941396a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fd9413abac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd9413ad060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fd941399e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fd9413a7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd9413a8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fd9413b0950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fd94139ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fd94139b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fd941399670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fd941390ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fd94139e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fd94139be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fd941394ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fd9413a1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fd9413a9490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fd9413a5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fd94139de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fd9413a2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fd94139c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fd9413a4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fd9413af670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fd9413aae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fd9413942f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fd941395ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd9413952f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fd9413902f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fd94139ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fd94139a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fd9413afcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fd9413ae9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fd9413a1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fd9413aa7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fd9413a0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fd941397e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fd94138e7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fd9419722c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fd941362920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fd94135f940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd941368990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd94135f080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd94133d110"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd9413423b0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd94133dd60"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd94133fb00"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd94133fb00"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd9418f51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd94133cbe0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd941364a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd94133b4b0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9415070c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd941324430"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd94131f8f0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd94131e770"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd941324b80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd94131edf0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9415070c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd9412e6e20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd9412f0890"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd9412e5b50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd9412f0200"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fd9412e42f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fd94150b670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9412e3170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9415070c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd9412e3b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd941296410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fd9412b7db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fd941289800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd941285580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fd941285580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fd9418f51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd9412701c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd941d97670"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="38:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/shimmer2r/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="37:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P.UartP" loc="41(Msp430Uart0P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.2 $ $Date: 2010/07/29 13:19:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="46:../../../tos/platforms/shimmer2r/LedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="45:../../../tos/platforms/shimmer2r/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/platforms/shimmer2r/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="41:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="39(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2013/04/09 14:28:58 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ShimmerSerialP" loc="35:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:../../../tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestAMC" loc="60:TestAMC.nc">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TEAC" loc="1:../../../tos/platforms/shimmer2r/TEAC.nc">
      <configuration/>
    </component>
    <component qname="TEAP" loc="1:../../../tos/platforms/shimmer2r/TEAP.nc" safe="">
      <module/>
    </component>
    <component qname="RC4C" loc="1:../../../tos/platforms/shimmer2r/RC4C.nc">
      <configuration/>
    </component>
    <component qname="RC4P" loc="1:../../../tos/platforms/shimmer2r/RC4P.nc" safe="">
      <module/>
    </component>
    <component qname="XXTEAC" loc="1:../../../tos/platforms/shimmer2r/XXTEAC.nc">
      <configuration/>
    </component>
    <component qname="XXTEAP" loc="1:../../../tos/platforms/shimmer2r/XXTEAP.nc" safe="">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="56:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <documentation loc="48:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the SHIMMER platform.</short>
        <long>&#10; The Active Message layer on the SHIMMER platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2012-07-26 17:51:39 $&#10;&#10; mods to provide CC2420RxState interface, which allows application &#10; to disable radio reception and/or cca for manual control of high-density&#10; synchronization routines&#10; @author Steve Ayer&#10; @date   March, 2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2012-03-02 16:52:48 $&#10;&#10; mods to provide CC2420RxState interface, which allows application &#10; to disable radio reception and/or cca for manual control of high-density&#10; synchronization routines&#10; @author Steve Ayer&#10; @date   March, 2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-10 18:22:02 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10; @date May 14, 2008&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10; @date May 14, 2008&#10;&#10; @author Steve Ayer&#10; @date April, 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="44(HplCC2420InterruptsC.CaptureSFDC):../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Steve Ayer/Miklos Maroti&#10; @date   February, 2011&#10;&#10; re-named indicating that this HAL module is specifically required to handle anomalies in the &#10; cc2420 stack that require sfd capture to happen on a timerb pin;  designs that use a timera pin &#10; need this code to resolve the aliasing between timestamps from 32khz and 1mhz timers.&#10; thanks to miklos for providing this re-written captured event handler as a straight-forward work-around!&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.CounterToLocalTimeC" loc="46(HplCC2420InterruptsC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="41:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <documentation loc="33:../../../tos/platforms/shimmer/CounterMicro32C.nc">
        <short>&#10; CounterMicro32C provides at 32-bit counter at 1024000 ticks per second.</short>
        <long>&#10; CounterMicro32C provides at 32-bit counter at 1024000 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249c6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd94249ca20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform" loc="54(CounterMicro32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249c6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd94249ca20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249c6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd94249ca20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.CounterMicroToLocalTime" loc="46(HplCC2420InterruptsC.CounterMicroToLocalTime):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249c6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd94249ca20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="45(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma1P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma1P.SpiP" loc="73(Msp430SpiNoDma1P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="40(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:../../../tos/platforms/shimmer/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestAMAppC.TimerMilliC" loc="44(TestAMAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fd9428bd890" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fd9428bdc30" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fd9428bc020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fd9428bc3a0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fd9428bc720" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fd9428bca90" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fd9428bce20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fd9428bb200" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fd9428bb5d0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fd94287fe70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fd94287c270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fd9427a13c0" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fd9427730d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fd9427500d0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart0C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fd942295190" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fd942295540" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fd9422958f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fd942295ca0" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fd942293060" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fd942114e60" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fd942114e60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fd9420685b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fd94205b5b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fd942042d80" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7fd941eee490" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7fd941eee490"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7fd941eee810" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-10 18:22:02 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fd941bfd9c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fd941bfd9c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fd941bc4ba0" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fd941bc4ba0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fd941bc13b0" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fd941bc13b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fd941bc17a0" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fd941bc17a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fd941bc0020" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fd941bc0020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fd941bc03f0" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fd941bc0bf0" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fd941bc0bf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fd941bc9dc0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fd941bc9dc0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fd941b9e600" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fd941b9e600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fd941b9e9f0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fd941b9e9f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fd941b9d210" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fd941b9d210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fd941b9d5e0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420GpioCaptureC" loc="44:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Steve Ayer/Miklos Maroti&#10; @date   February, 2011&#10;&#10; re-named indicating that this HAL module is specifically required to handle anomalies in the &#10; cc2420 stack that require sfd capture to happen on a timerb pin;  designs that use a timera pin &#10; need this code to resolve the aliasing between timestamps from 32khz and 1mhz timers.&#10; thanks to miklos for providing this re-written captured event handler as a straight-forward work-around!&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd941af04b0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd941af04b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi1C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd941458160" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd941458160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd941427730" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd941427730"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fd941427a60" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fd942986020" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd942986020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd9429863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd942985a60" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fd942985a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd942985de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd942982020" loc="40:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd942982020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd9429823a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fd94297fc30" loc="6:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fd94297fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd942975020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd942982e00" loc="4:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd942982e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd94297f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fd94297f550" loc="5:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fd94297f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd94297f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fd942975380" loc="7:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fd942975380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd942975700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd942981b70" loc="39:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd942981b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd94296f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fd942980e70" loc="39:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fd942980e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd942949220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fd94293e380" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd94293e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fd942944340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fd94293e890"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fd94293ea20"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fd94293ebb0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fd94293e700"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fd94293ed40"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fd942944020"/>
        <function-ref name="initClocks" scoped="" ref="0x7fd9429441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd942949d50" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd942949d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd942945100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fd94292e020" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fd94292e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fd94292d020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fd94292e530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fd94292e6c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fd94292e850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fd94292e3a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fd94292e9e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fd94292eb70"/>
        <function-ref name="initClocks" scoped="" ref="0x7fd94292ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fd94292d360" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd94292d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd94292d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd94292f940" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd94292f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd94292fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fd9428ea5a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fd9428ea5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9428ea920"/>
        <function-ref name="getControl" scoped="" ref="0x7fd9428eaab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428eac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd9428eadd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9428e9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9428e91b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9428e9340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9428e94d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9428e9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fd9428d8020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fd9428d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9428d83a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd9428d8530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428d86c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd9428d8850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9428d89e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9428d8b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9428d8d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9428d7020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9428d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fd9428e1700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fd9428e1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428e1a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd9428e1c10"/>
        <function-ref name="captured" scoped="" ref="0x7fd9428e1da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428e0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428e01b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd9428e0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fd9428c5a20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fd9428c5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428c5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd9428c4020"/>
        <function-ref name="captured" scoped="" ref="0x7fd9428c41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428c4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428c44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd9428c4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fd9428e8aa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fd9428e8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428e8e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd9428e7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9428e71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd9428e7340"/>
        <function-ref name="fired" scoped="" ref="0x7fd9428e74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fd9428cb020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fd9428cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428cb3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd9428cb530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9428cb6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd9428cb850"/>
        <function-ref name="fired" scoped="" ref="0x7fd9428cb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fd9428c2a20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fd9428c2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428c2da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd9428c1020"/>
        <function-ref name="captured" scoped="" ref="0x7fd9428c11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428c1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428c14d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd9428c1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fd9428d35a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fd9428d35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9428d3920"/>
        <function-ref name="getControl" scoped="" ref="0x7fd9428d3ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428d3c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd9428d3dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9428d2020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9428d21b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9428d2340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9428d24d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9428d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fd9428ebb10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fd9428ebb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9428f2020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd9428f21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428f2340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd9428f24d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9428f2660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9428f27f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9428f2980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9428f2b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9428f2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fd9428c7a20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fd9428c7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428c7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd9428c6020"/>
        <function-ref name="captured" scoped="" ref="0x7fd9428c61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428c6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428c64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd9428c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fd9428ce3e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fd9428ce3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428ce760"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd9428ce8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9428cea80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd9428cec10"/>
        <function-ref name="fired" scoped="" ref="0x7fd9428ceda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fd9428d75a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fd9428d75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9428d7a20"/>
        <function-ref name="getControl" scoped="" ref="0x7fd9428d7bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428d7d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd9428d6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9428d61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9428d6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9428d64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9428d6660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9428d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fd9428e0700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fd9428e0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428e0a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd9428e0c10"/>
        <function-ref name="captured" scoped="" ref="0x7fd9428e0da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428da020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428da1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd9428da340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fd9428c4a20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fd9428c4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428c4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd9428c3020"/>
        <function-ref name="captured" scoped="" ref="0x7fd9428c31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428c3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428c34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd9428c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fd9428d6be0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fd9428d6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9428d5020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd9428d51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428d5340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd9428d54d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9428d5660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9428d57f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9428d5980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9428d5b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9428d5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fd9428e7890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fd9428e7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428e7c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd9428e7da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9428e2020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd9428e21b0"/>
        <function-ref name="fired" scoped="" ref="0x7fd9428e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fd9428fb060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fd9428fb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd9428fb3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd9428fb570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428fb700"/>
        <function-ref name="get" scoped="" ref="0x7fd9428fb890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9428fba20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428fbbb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd9428fbd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428fa020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd9428fa1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd9428fa340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd9428fa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fd9428cbda0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fd9428cbda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428ca180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd9428ca310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9428ca4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd9428ca630"/>
        <function-ref name="fired" scoped="" ref="0x7fd9428ca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fd9428f10c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fd9428f10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9428f1440"/>
        <function-ref name="getControl" scoped="" ref="0x7fd9428f15d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428f1760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd9428f18f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9428f1a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9428f1c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9428f1da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9428ea020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9428ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fd9428d2a50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fd9428d2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9428d2dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd9428d1020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428d11b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd9428d1340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9428d14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9428d1660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9428d17f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9428d1980"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9428d1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fd9428db6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fd9428db6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428dba50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd9428dbbe0"/>
        <function-ref name="captured" scoped="" ref="0x7fd9428dbd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428e1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428e11b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd9428e1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fd9428c6a20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fd9428c6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428c6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd9428c5020"/>
        <function-ref name="captured" scoped="" ref="0x7fd9428c51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428c5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428c54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd9428c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fd9428e3cf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fd9428e3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428e80a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd9428e8230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9428e83c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd9428e8550"/>
        <function-ref name="fired" scoped="" ref="0x7fd9428e86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fd9428cc1f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fd9428cc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428cc570"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd9428cc700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9428cc890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd9428cca20"/>
        <function-ref name="fired" scoped="" ref="0x7fd9428ccbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fd9428c3a20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fd9428c3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428c3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd9428c2020"/>
        <function-ref name="captured" scoped="" ref="0x7fd9428c21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428c2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428c24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd9428c2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fd9428d40c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fd9428d40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9428d4440"/>
        <function-ref name="getControl" scoped="" ref="0x7fd9428d45d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428d4760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd9428d48f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9428d4a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9428d4c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9428d4da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9428d3020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9428d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fd9428da6c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fd9428da6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd9428daa40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd9428dabd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428dad60"/>
        <function-ref name="get" scoped="" ref="0x7fd9428d9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9428d91b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428d9340"/>
        <function-ref name="getMode" scoped="" ref="0x7fd9428d94d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428d9660"/>
        <function-ref name="overflow" scoped="" ref="0x7fd9428d97f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd9428d9980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd9428d9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fd9428cab80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fd9428cab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428c9020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd9428c91b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9428c9340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd9428c94d0"/>
        <function-ref name="fired" scoped="" ref="0x7fd9428c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fd9428c8a20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fd9428c8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428c8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd9428c7020"/>
        <function-ref name="captured" scoped="" ref="0x7fd9428c71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428c7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428c74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd9428c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fd9428c9a20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fd9428c9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428c8020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd9428c81b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9428c8340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd9428c84d0"/>
        <function-ref name="fired" scoped="" ref="0x7fd9428c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fd9428cf570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fd9428cf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428cf8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd9428cfa80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9428cfc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd9428cfda0"/>
        <function-ref name="fired" scoped="" ref="0x7fd9428ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fd9428d0020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fd9428d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9428d03a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd9428d0530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428d06c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd9428d0850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9428d09e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9428d0b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9428d0d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9428cf020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9428cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fd942889aa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd942889aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd942889e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fd942889450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fd942889450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9428897d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fd942888120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd942888120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9428884a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fd94288ad80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd94288ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd942889180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd94288b540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd94288b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd94288b8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd94288ba50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd94288bbe0"/>
        <function-ref name="get" scoped="" ref="0x7fd94288bd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd94288a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd94288a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd94288a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd94288a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd94288a660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd94288a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd94288a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fd942881940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fd942881940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd942881cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fd9428812f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fd9428812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd942881670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fd942880020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fd942880020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9428803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fd942883bf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd942883bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd942881020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd9428843e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd9428843e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd942884760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd9428848f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd942884a80"/>
        <function-ref name="get" scoped="" ref="0x7fd942884c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd942884da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd942883020"/>
        <function-ref name="getMode" scoped="" ref="0x7fd9428831b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd942883340"/>
        <function-ref name="overflow" scoped="" ref="0x7fd9428834d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd942883660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd9428837f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd942835a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd942835a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd942835e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd942834020"/>
        <function-ref name="captured" scoped="" ref="0x7fd9428341b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd942834340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428344d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd942834660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd94287d9d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd94287d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd94287dd50"/>
        <function-ref name="getControl" scoped="" ref="0x7fd942836020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428361b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd942836340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9428364d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd942836660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9428367f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd942836980"/>
        <function-ref name="setControl" scoped="" ref="0x7fd942836b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd942832020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd942832020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9428323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd942836de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd942836de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd942835180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd942835310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9428354a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd942835630"/>
        <function-ref name="fired" scoped="" ref="0x7fd9428357c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd942834930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd942834930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd942834cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd942834e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd942833020"/>
        <function-ref name="get" scoped="" ref="0x7fd9428331b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd942833340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428334d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd942833660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428337f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd942833980"/>
        <function-ref name="setMode" scoped="" ref="0x7fd942833b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd942833ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd94282d160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd94282d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd94282d4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd94282d670"/>
        <function-ref name="captured" scoped="" ref="0x7fd94282d800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd94282d990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd94282db20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd94282dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd94282f020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd94282f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd94282f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd94282f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd94282f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd94282f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd94282f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd94282fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd94282fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd94282e020"/>
        <function-ref name="setControl" scoped="" ref="0x7fd94282e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd94282b7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd94282b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd94282bb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd94282e480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd94282e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd94282e800"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd94282e990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd94282eb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd94282ecb0"/>
        <function-ref name="fired" scoped="" ref="0x7fd94282ee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd94282c020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd94282c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd94282c3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd94282c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd94282c6c0"/>
        <function-ref name="get" scoped="" ref="0x7fd94282c850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd94282c9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd94282cb70"/>
        <function-ref name="getMode" scoped="" ref="0x7fd94282cd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd94282b020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd94282b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd94282b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd94282b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd9428257a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd9428257a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd942825b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd942825cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fd942825e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd942824020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428241b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd942824340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd9428286d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd9428286d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd942828a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fd942828be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd942828d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd942826020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9428261b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd942826340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9428264d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd942826660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9428267f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd942823c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd942823c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd942822020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd942826ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd942826ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd942826e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd942825020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9428251b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd942825340"/>
        <function-ref name="fired" scoped="" ref="0x7fd9428254d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd942824610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd942824610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd942824990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd942824b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd942824cb0"/>
        <function-ref name="get" scoped="" ref="0x7fd942824e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd942823020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428231b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd942823340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428234d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd942823660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd9428237f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd942823980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd94281ecb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd94281ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd94281d0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd94281d230"/>
        <function-ref name="captured" scoped="" ref="0x7fd94281d3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd94281d550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd94281d6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd94281d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd942820b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd942820b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd94281f020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd94281f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd94281f340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd94281f4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd94281f660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd94281f7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd94281f980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd94281fb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd94281fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd94281b2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd94281b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd94281b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd94281e020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd94281e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd94281e3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd94281e530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd94281e6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd94281e850"/>
        <function-ref name="fired" scoped="" ref="0x7fd94281e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd94281db40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd94281db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd94281c020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd94281c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd94281c340"/>
        <function-ref name="get" scoped="" ref="0x7fd94281c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd94281c660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd94281c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd94281c980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd94281cb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fd94281cca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd94281ce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd94281b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd9428152f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd9428152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd942815670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd942815800"/>
        <function-ref name="captured" scoped="" ref="0x7fd942815990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd942815b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd942815cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd942815e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd942818220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd942818220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9428185a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd942818730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428188c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd942818a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd942818be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd942818d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd942817020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9428171b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd942817340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd9428137a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd9428137a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd942813b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd942817610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd942817610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd942817990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd942817b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd942817cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd942817e40"/>
        <function-ref name="fired" scoped="" ref="0x7fd942815020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd942814160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd942814160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd9428144e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd942814670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd942814800"/>
        <function-ref name="get" scoped="" ref="0x7fd942814990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd942814b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd942814cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd942814e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd942813020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd9428131b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd942813340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd9428134d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd94280e7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd94280e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd94280eb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd94280ecb0"/>
        <function-ref name="captured" scoped="" ref="0x7fd94280ee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd94280d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd94280d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd94280d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd9428106d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd9428106d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd942810a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fd942810be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd942810d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd94280f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd94280f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd94280f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd94280f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd94280f660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd94280f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd94280cc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd94280cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd94280b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd94280fac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd94280fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd94280fe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd94280e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd94280e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd94280e340"/>
        <function-ref name="fired" scoped="" ref="0x7fd94280e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd94280d610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd94280d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd94280d990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd94280db20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd94280dcb0"/>
        <function-ref name="get" scoped="" ref="0x7fd94280de40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd94280c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd94280c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd94280c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd94280c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd94280c660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd94280c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd94280c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd942807cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd942807cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428050a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd942805230"/>
        <function-ref name="captured" scoped="" ref="0x7fd9428053c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd942805550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9428056e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd942805870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd942809b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd942809b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd942808020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd9428081b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd942808340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd9428084d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd942808660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9428087f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd942808980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd942808b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd942808ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd9428032f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd9428032f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd942803670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd942807020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd942807020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9428073a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd942807530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9428076c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd942807850"/>
        <function-ref name="fired" scoped="" ref="0x7fd9428079e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd942805b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd942805b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd942804020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd9428041b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd942804340"/>
        <function-ref name="get" scoped="" ref="0x7fd9428044d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd942804660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9428047f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd942804980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd942804b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fd942804ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd942804e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd942803020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd9427fe2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd9427fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9427fe670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd9427fe800"/>
        <function-ref name="captured" scoped="" ref="0x7fd9427fe990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9427feb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9427fecb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd9427fee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd942800220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd942800220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9428005a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd942800730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9428008c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd942800a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd942800be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd942800d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9427ff020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9427ff1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9427ff340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd9427fc7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd9427fc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9427fcb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd9427ff610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd9427ff610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9427ff990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd9427ffb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9427ffcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd9427ffe40"/>
        <function-ref name="fired" scoped="" ref="0x7fd9427fe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd9427fd160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd9427fd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd9427fd4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd9427fd670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9427fd800"/>
        <function-ref name="get" scoped="" ref="0x7fd9427fd990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9427fdb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9427fdcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd9427fde40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9427fc020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd9427fc1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd9427fc340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd9427fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd9427f77a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd9427f77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9427f7b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd9427f7cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fd9427f7e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9427f5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9427f51b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd9427f5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd9427f96d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd9427f96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9427f9a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fd9427f9be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9427f9d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd9427f8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9427f81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9427f8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9427f84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9427f8660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9427f87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd9427f4c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd9427f4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9427f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd9427f8ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd9427f8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9427f8e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd9427f7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9427f71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd9427f7340"/>
        <function-ref name="fired" scoped="" ref="0x7fd9427f74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd9427f5610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd9427f5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd9427f5990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd9427f5b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9427f5cb0"/>
        <function-ref name="get" scoped="" ref="0x7fd9427f5e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9427f4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9427f41b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd9427f4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9427f44d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd9427f4660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd9427f47f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd9427f4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd9427efcb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd9427efcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9427ee0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd9427ee230"/>
        <function-ref name="captured" scoped="" ref="0x7fd9427ee3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9427ee550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9427ee6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd9427ee870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fd9427f1b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fd9427f1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9427f0020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd9427f01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9427f0340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd9427f04d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd9427f0660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9427f07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9427f0980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd9427f0b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9427f0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fd9427ec2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fd9427ec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9427ec670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd9427ef020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fd9427ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd9427ef3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd9427ef530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd9427ef6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd9427ef850"/>
        <function-ref name="fired" scoped="" ref="0x7fd9427ef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd9427eeb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd9427eeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd9427ed020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd9427ed1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9427ed340"/>
        <function-ref name="get" scoped="" ref="0x7fd9427ed4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9427ed660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9427ed7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd9427ed980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9427edb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fd9427edca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd9427ede30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd9427ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fd9427e6240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fd9427e6240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9427e65c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fd9427eaa90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fd9427eaa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9427eae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fd9427e7260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fd9427e7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9427e75e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fd9427e79f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fd9427e79f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9427e7d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fd942cc54c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd942cc54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd942cc5840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fd9430363b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fd9430363b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fd943036730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fd9430368c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fd943036a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fd942e9fbc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fd942e9fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd942fdb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fd9427afdc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd9427afdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd9427ae180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd9427b0590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fd9427b0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd9427b0910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fd9427af6c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fd9427af6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd9427afa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fd9427b0c00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fd9427b0c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd9427af020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd9427af1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd9427af340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd9430b3410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fd9430b3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd9430b3790"/>
        <function-ref name="runTask" scoped="" ref="0x7fd9430b3920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd9430443a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fd9430443a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd943044720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd9430448b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd943044a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd942a1bb70" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fd942a1bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd942a1a020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd942a1a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fd942a142c0" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fd942a142c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fd942a14640"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fd942a147d0"/>
        <function-ref name="sleep" scoped="" ref="0x7fd942a14960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd942a1cc30" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fd942a1cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd942a1b020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd942a1b1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd942a1b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd941ef3020" loc="49:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd941ef3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941ef33a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941ef3530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941ef36c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941ef3850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941ef39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd941ef3c30" loc="50:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd941ef3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941ef2020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd941ef21b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941ef2340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941ef24d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd941ef2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd941ef28b0" loc="51:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd941ef28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd941ef2c30"/>
        <function-ref name="source" scoped="" ref="0x7fd941ef2dc0"/>
        <function-ref name="address" scoped="" ref="0x7fd941ef1020"/>
        <function-ref name="destination" scoped="" ref="0x7fd941ef11b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd941ef1340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd941ef14d0"/>
        <function-ref name="type" scoped="" ref="0x7fd941ef1660"/>
        <function-ref name="setType" scoped="" ref="0x7fd941ef17f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd941ef1980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd941ef1b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd941ef1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd941ef0020" loc="52:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fd941ef0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd941ef03a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fd941ef0530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd941ef06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd94102e770" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd94102e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd94102eaf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd94102ec80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd94102ee10"/>
        <function-ref name="cancel" scoped="" ref="0x7fd94102d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd94102d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fd94102d460" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd94102d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd94102d7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd94102d970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd94102db00"/>
        <function-ref name="cancel" scoped="" ref="0x7fd94102dc90"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd94102de20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fd94102c0e0" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd94102c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd94102c460"/>
        <function-ref name="source" scoped="" ref="0x7fd94102c5f0"/>
        <function-ref name="address" scoped="" ref="0x7fd94102c780"/>
        <function-ref name="destination" scoped="" ref="0x7fd94102c910"/>
        <function-ref name="setSource" scoped="" ref="0x7fd94102caa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd94102cc30"/>
        <function-ref name="type" scoped="" ref="0x7fd94102cdc0"/>
        <function-ref name="setType" scoped="" ref="0x7fd94102b020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd94102b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd94102b340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd94102b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd942757ce0" loc="44:../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd942757ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9427540a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd942754230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9427543c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd942754550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9427546e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fd94270a400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd94270a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd94270a7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd94270a930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd94270aac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd94270ac50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd94270ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd94270b580" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd94270b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd94270b920"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd94270bab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd94270bc40"/>
        <function-ref name="cancel" scoped="" ref="0x7fd94270bdd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd94270a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd942707720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd942707720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd942707aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd942707c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd942707dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd942706020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd9427061b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fd942706480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fd942706480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd942706800"/>
        <function-ref name="runTask" scoped="" ref="0x7fd942706990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fd942706c60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fd942706c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd942705020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd9427051b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fd942709060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd942709060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd9427093e0"/>
        <function-ref name="source" scoped="" ref="0x7fd942709570"/>
        <function-ref name="address" scoped="" ref="0x7fd942709700"/>
        <function-ref name="destination" scoped="" ref="0x7fd942709890"/>
        <function-ref name="setSource" scoped="" ref="0x7fd942709a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd942709bb0"/>
        <function-ref name="type" scoped="" ref="0x7fd942709d40"/>
        <function-ref name="setType" scoped="" ref="0x7fd942707020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd9427071b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd942707340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd9427074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd9426fc3b0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd9426fc3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd9426fc730"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd9426fc8c0"/>
        <function-ref name="start" scoped="" ref="0x7fd9426fca50"/>
        <function-ref name="stop" scoped="" ref="0x7fd9426fcbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd9426ff3f0" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd9426ff3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9426ff770"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9426ff900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9426ffa90"/>
        <function-ref name="cancel" scoped="" ref="0x7fd9426ffc20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9426ffdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd9426fa7e0" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd9426fa7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd9426fab60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd9426facf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9426fae80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9426f9030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd9426f91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd9426fa1d0" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd9426fa1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9426fa550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd9426e70d0" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd9426e70d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd9426e7450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd9426e75e0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd9426e7770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd9426e7900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd9426e7a90"/>
        <function-ref name="get" scoped="" ref="0x7fd9426e7c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd9426e7db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd9426f34d0"/>
        <function-ref name="set" scoped="" ref="0x7fd9426f3020"/>
        <function-ref name="led0On" scoped="" ref="0x7fd9426f31b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd9426f3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd9426f7b20" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd9426f7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd9426f4020"/>
        <function-ref name="noAck" scoped="" ref="0x7fd9426f41b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd9426f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd9426f9470" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd9426f9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd9426f97f0"/>
        <function-ref name="source" scoped="" ref="0x7fd9426f9980"/>
        <function-ref name="address" scoped="" ref="0x7fd9426f9b10"/>
        <function-ref name="destination" scoped="" ref="0x7fd9426f9ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd9426f9e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd9426f7020"/>
        <function-ref name="type" scoped="" ref="0x7fd9426f71b0"/>
        <function-ref name="setType" scoped="" ref="0x7fd9426f7340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd9426f74d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd9426f7660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd9426f77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd94268d120" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd94268d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd94268d4a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd94268d630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd94268d7c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd94268d950"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd94268dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd94268dd70" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd94268dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd94268c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd942692110" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd942692110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9426924b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd942692640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9426927d0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd942692960"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd942692af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd94268fa40" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd94268fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd94268fdc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd94268e020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd94268e1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd94268e340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd94268e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd942692e70" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd942692e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd942690240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd94268e720" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd94268e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd94268eaa0"/>
        <function-ref name="noAck" scoped="" ref="0x7fd94268ec30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd94268edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd942690490" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd942690490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd942690810"/>
        <function-ref name="source" scoped="" ref="0x7fd9426909a0"/>
        <function-ref name="address" scoped="" ref="0x7fd942690b30"/>
        <function-ref name="destination" scoped="" ref="0x7fd942690cc0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd942690e50"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd94268f020"/>
        <function-ref name="type" scoped="" ref="0x7fd94268f1b0"/>
        <function-ref name="setType" scoped="" ref="0x7fd94268f340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd94268f4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd94268f660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd94268f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd9426888d0" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd9426888d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd942688c50"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd942688de0"/>
        <function-ref name="start" scoped="" ref="0x7fd942687020"/>
        <function-ref name="stop" scoped="" ref="0x7fd9426871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd942686480" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd942686480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fd94299c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd942686800"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd942686990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd942686b20"/>
        <function-ref name="cancel" scoped="" ref="0x7fd942686cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd942686e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd942688280" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd942688280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd942688600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd942687940" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd942687940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fd94299c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd942687cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd942683dc0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd942683dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd942682180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd942682310"/>
        <function-ref name="led1On" scoped="" ref="0x7fd9426824a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd942682630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd9426827c0"/>
        <function-ref name="get" scoped="" ref="0x7fd942682950"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd942682ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd94267f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fd942682c70"/>
        <function-ref name="led0On" scoped="" ref="0x7fd942682e00"/>
        <function-ref name="led2On" scoped="" ref="0x7fd94267f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7fd9426834a0" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fd9426834a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fd94299c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fd942683820"/>
        <function-ref name="offset" scoped="" ref="0x7fd9426839b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fd942683b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd942677810" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd942677810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd942677b90"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd942677d20"/>
        <function-ref name="start" scoped="" ref="0x7fd942676020"/>
        <function-ref name="stop" scoped="" ref="0x7fd9426761b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7fd942610e40" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7fd942610e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd94260f1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd94260f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fd942662530" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fd942662530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd9426628b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd942662a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7fd942647d50" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7fd942647d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd942646100"/>
        <function-ref name="runTask" scoped="" ref="0x7fd942646290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd9426771c0" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd9426771c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd942677540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7fd94265f130" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7fd94265f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7fd94265f4b0"/>
        <function-ref name="flush" scoped="" ref="0x7fd94265f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7fd942612400" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7fd942612400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd942612780"/>
        <function-ref name="runTask" scoped="" ref="0x7fd942612910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7fd942666410" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fd942666410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fd942666790"/>
        <function-ref name="resetSend" scoped="" ref="0x7fd942666920"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fd942666ab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fd942666c40"/>
        <function-ref name="putData" scoped="" ref="0x7fd942666dd0"/>
        <function-ref name="putDone" scoped="" ref="0x7fd942670020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fd9426701b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd942670430" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd942670430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd9426707b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd942670940"/>
        <function-ref name="led1On" scoped="" ref="0x7fd942670ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd942670c60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd942670df0"/>
        <function-ref name="get" scoped="" ref="0x7fd94266c020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd94266c1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd94266c7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd94266c340"/>
        <function-ref name="led0On" scoped="" ref="0x7fd94266c4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd94266c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7fd94260b0c0" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fd94260b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd94260b440"/>
        <function-ref name="runTask" scoped="" ref="0x7fd94260b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7fd9426717d0" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fd9426717d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fd942671b50"/>
        <function-ref name="nextByte" scoped="" ref="0x7fd942671ce0"/>
        <function-ref name="startSend" scoped="" ref="0x7fd942671e70"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fd942675030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7fd942674080" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fd942674080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fd942674400"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fd942674590"/>
        <function-ref name="endPacket" scoped="" ref="0x7fd942674720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7fd942541c50" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7fd942541c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd942540020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd9425401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd942546830" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd942546830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fd94299c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd942546bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd942546d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd942545020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd9425451b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd942545340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7fd942540480" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7fd942540480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd942540800"/>
        <function-ref name="runTask" scoped="" ref="0x7fd942540990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd942546110" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd942546110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fd94299c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9425464b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7fd942545760" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7fd942545760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fd94299c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fd942545b00"/>
        <function-ref name="offset" scoped="" ref="0x7fd942545c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fd942545e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd942543590" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd942543590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd942543910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd942543aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd942543c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd942543dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd942541020"/>
        <function-ref name="get" scoped="" ref="0x7fd9425411b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd942541340"/>
        <function-ref name="led2On" scoped="" ref="0x7fd942541980"/>
        <function-ref name="set" scoped="" ref="0x7fd942541660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd9425414d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fd9425417f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7fd9425449d0" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fd9425449d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fd942544d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7fd942543020"/>
        <function-ref name="startSend" scoped="" ref="0x7fd9425431b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fd942543340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7fd9425440e0" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fd9425440e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fd942544460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fd9425445f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fd942544780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7fd942531d20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fd942531d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd94253a0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fd94253a270"/>
        <function-ref name="receive" scoped="" ref="0x7fd94253a400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fd94253a590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fd94253a720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fd94253a8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd94253aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7fd94253eb60" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fd94253eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fd94253b020"/>
        <function-ref name="resetSend" scoped="" ref="0x7fd94253b1b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fd94253b340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fd94253b4d0"/>
        <function-ref name="putData" scoped="" ref="0x7fd94253b660"/>
        <function-ref name="putDone" scoped="" ref="0x7fd94253b7f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fd94253b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd94253acc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd94253acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd9425390a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd942539230"/>
        <function-ref name="led1On" scoped="" ref="0x7fd9425393c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd942539550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd9425396e0"/>
        <function-ref name="get" scoped="" ref="0x7fd942539870"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd942539a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd94252e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fd942539b90"/>
        <function-ref name="led0On" scoped="" ref="0x7fd942539d20"/>
        <function-ref name="led2On" scoped="" ref="0x7fd94252e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fd942511020" loc="40:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fd942511020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9425113a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fd942511530"/>
        <function-ref name="receive" scoped="" ref="0x7fd9425116c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fd942511850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fd9425138d0" loc="39:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fd9425138d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd942513c50"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fd942513de0"/>
        <function-ref name="receive" scoped="" ref="0x7fd942512020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fd9425121b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fd942512340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fd9425124d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd942512660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd9425130c0" loc="38:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd9425130c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd942513440"/>
        <function-ref name="stop" scoped="" ref="0x7fd9425135d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd941f27c70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd941f27c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd941f26020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd941f261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fd941f25440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fd941f25440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941f257c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fd941f25950"/>
        <function-ref name="receive" scoped="" ref="0x7fd941f25ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fd941f25c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fd941f23020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd941f23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd941f233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fd941f26440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fd941f26440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941f267c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fd941f26950"/>
        <function-ref name="receive" scoped="" ref="0x7fd941f26ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fd941f26c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fd941f26e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fd941f25020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941f251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd941f27020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd941f27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941f273a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941f27530"/>
        <function-ref name="request" scoped="" ref="0x7fd941f276c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd941f27850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941f279e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fd9424a8dd0" loc="42:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9424a8dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd9424aa180"/>
        <function-ref name="configure" scoped="" ref="0x7fd9424aa310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fd9424a6210" loc="44:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fd9424a6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9424a6590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fd9424a6720"/>
        <function-ref name="receive" scoped="" ref="0x7fd9424a68b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fd9424a6a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fd9424a4600" loc="47:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd9424a4600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd9424a4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fd9424aab50" loc="43:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fd9424aab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9424a9020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fd9424a91b0"/>
        <function-ref name="receive" scoped="" ref="0x7fd9424a9340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fd9424a94d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fd9424a9660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fd9424a97f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9424a9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fd9424a5370" loc="46:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fd9424a5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9424a56f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9424a5880"/>
        <function-ref name="request" scoped="" ref="0x7fd9424a5a10"/>
        <function-ref name="granted" scoped="" ref="0x7fd9424a5ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9424a5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd9424ac320" loc="41:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd9424ac320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9424ac6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9424ac830"/>
        <function-ref name="request" scoped="" ref="0x7fd9424ac9c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd9424acb50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9424acce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fd94249fbe0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd94249fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd9424a3020"/>
        <function-ref name="txDone" scoped="" ref="0x7fd9424a31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fd942414e70" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd942414e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd942413240"/>
        <function-ref name="configure" scoped="" ref="0x7fd9424133d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fd942412890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fd942412890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd942412c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fd942412dc0"/>
        <function-ref name="receive" scoped="" ref="0x7fd942411020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fd9424111b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fd9424103e0" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd9424103e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd942410780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fd942410a50" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fd942410a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd942410dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd94240f020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd94240f1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd94240f340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd94240f4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd94240f660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd94240f7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd94240f980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd94240fb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd94240fca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd94240fe30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd94240e020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd94240e1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd94240e440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd94240e5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd94240e760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd94240e8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fd94240ea80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd94240ec10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd94240eda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd94240d020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd94240d1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd94240d340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd94240d4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd94240d660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd94240d9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd94240db80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd94240dd10"/>
        <function-ref name="tx" scoped="" ref="0x7fd94240c020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd94240c1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd94240c340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd94240c4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd94240c660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd94240c7f0"/>
        <function-ref name="rx" scoped="" ref="0x7fd94240c980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd94240cb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd94240cca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd94240ce30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd94240b020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd94240b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fd942413790" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fd942413790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd942413b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fd942413cc0"/>
        <function-ref name="receive" scoped="" ref="0x7fd942413e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fd942412020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fd9424121b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fd942412340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9424124d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd942409020" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd942409020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd942409e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd942408800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd942408340"/>
        <function-ref name="overflow" scoped="" ref="0x7fd942408cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fd9424115b0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fd9424115b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd942411950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd942411ae0"/>
        <function-ref name="request" scoped="" ref="0x7fd942411c70"/>
        <function-ref name="granted" scoped="" ref="0x7fd942411e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd942410020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd9424140d0" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd9424140d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd942414470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd942414600"/>
        <function-ref name="request" scoped="" ref="0x7fd942414790"/>
        <function-ref name="granted" scoped="" ref="0x7fd942414920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd942414ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fd94240b5b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd94240b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd94240b950"/>
        <function-ref name="txDone" scoped="" ref="0x7fd94240bae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd942407120" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd942407120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd9424074a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd942407630"/>
        <function-ref name="led1On" scoped="" ref="0x7fd9424077c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd942407950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd942407ae0"/>
        <function-ref name="get" scoped="" ref="0x7fd942407c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd942407e00"/>
        <function-ref name="led2On" scoped="" ref="0x7fd9424064d0"/>
        <function-ref name="set" scoped="" ref="0x7fd9424061b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd942406020"/>
        <function-ref name="led0On" scoped="" ref="0x7fd942406340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fd9423f9bd0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd9423f9bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9423f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fd9423fa6d0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd9423fa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd9423faa50"/>
        <function-ref name="txDone" scoped="" ref="0x7fd9423fabe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fd942401b60" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd942401b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd9423fe020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd9423fe1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd9423fe340"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd9423fe4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd9423fe660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd9423fe7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd9423fe980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd9423feb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd9423feca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd9423fee30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd9423fd020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd9423fd1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd9423fd340"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd9423fd5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd9423fd760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd9423fd8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd9423fda80"/>
        <function-ref name="isUart" scoped="" ref="0x7fd9423fdc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd9423fdda0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd9423fc020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd9423fc1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd9423fc340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd9423fc4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd9423fc660"/>
        <function-ref name="getMode" scoped="" ref="0x7fd9423fc7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd9423fcb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd9423fcd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd9423fb020"/>
        <function-ref name="tx" scoped="" ref="0x7fd9423fb1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd9423fb340"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd9423fb4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd9423fb660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd9423fb7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd9423fb980"/>
        <function-ref name="rx" scoped="" ref="0x7fd9423fbb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd9423fbca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd9423fbe30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd9423fa020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd9423fa1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd9423fa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fd9423b2800" loc="82:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fd9423b2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9423b2b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9423b2d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9423b1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423b11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9423b1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423b14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9423b1660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423b17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9423b1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9423b1b10"/>
        <function-ref name="set" scoped="" ref="0x7fd9423b1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9423b1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9423b0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423b02b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd9423b0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd9423f0020" loc="76:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd9423f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd9423f03a0"/>
        <function-ref name="txDone" scoped="" ref="0x7fd9423f0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fd9423b0800" loc="83:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fd9423b0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9423b0b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9423b0d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9423af020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423af1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9423af340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423af4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9423af660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423af7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9423af980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9423afb10"/>
        <function-ref name="set" scoped="" ref="0x7fd9423afca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9423afe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9423ae020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423ae2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd9423ae440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fd9423ae800" loc="84:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fd9423ae800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9423aeb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9423aed10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9423ad020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423ad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9423ad340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423ad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9423ad660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423ad7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9423ad980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9423adb10"/>
        <function-ref name="set" scoped="" ref="0x7fd9423adca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9423ade30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9423ac020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423ac2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd9423ac440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fd9423f5360" loc="75:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fd9423f5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd9423f56e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd9423f5870"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd9423f5a00"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd9423f5b90"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd9423f5d20"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd9423f4020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd9423f41b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd9423f4340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd9423f44d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd9423f4660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd9423f47f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd9423f4980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd9423f4b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd9423f4da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd9423f3020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd9423f31b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd9423f3340"/>
        <function-ref name="isUart" scoped="" ref="0x7fd9423f34d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd9423f3660"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd9423f37f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd9423f3980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd9423f3b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd9423f3ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd9423f3e30"/>
        <function-ref name="getMode" scoped="" ref="0x7fd9423f2020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd9423f23b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd9423f2540"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd9423f26d0"/>
        <function-ref name="tx" scoped="" ref="0x7fd9423f2860"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd9423f29f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd9423f2b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd9423f2d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd9423f1020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd9423f11b0"/>
        <function-ref name="rx" scoped="" ref="0x7fd9423f1340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd9423f14d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd9423f1660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd9423f17f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd9423f1980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd9423f1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd9423ac700" loc="86:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd9423ac700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd9423aca80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd9423acc10"/>
        <function-ref name="led1On" scoped="" ref="0x7fd9423acda0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd9423ab020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd9423ab1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd9423ab340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd9423ab4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd9423abb10"/>
        <function-ref name="set" scoped="" ref="0x7fd9423ab660"/>
        <function-ref name="led0On" scoped="" ref="0x7fd9423ab7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd9423ab980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fd9423c6bc0" loc="79:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fd9423c6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fd9423ed020"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fd9423ed1b0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fd9423ed340"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fd9423ed4d0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fd9423ed660"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fd9423ed7f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fd9423ed980"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fd9423edb10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd9423edca0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fd9423ede30"/>
        <function-ref name="getData" scoped="" ref="0x7fd9423ec020"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fd9423ec1b0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fd9423ec340"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fd9423ec5d0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fd9423ec760"/>
        <function-ref name="getIV" scoped="" ref="0x7fd9423ec8f0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fd9423eca80"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fd9423ecc10"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fd9423ecda0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fd9423c4020"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fd9423c41b0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fd9423c4340"/>
        <function-ref name="isI2C" scoped="" ref="0x7fd9423c44d0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fd9423c4660"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fd9423c47f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fd9423c4b80"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fd9423c4d10"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fd9423c3020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fd9423c31b0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fd9423c3340"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fd9423c34d0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fd9423c3660"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fd9423c37f0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fd9423c3980"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fd9423c3b10"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fd9423c3ca0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fd9423c3e30"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fd9423c2020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fd9423c21b0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fd9423c2340"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fd9423c24d0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fd9423c2660"/>
        <function-ref name="setData" scoped="" ref="0x7fd9423c27f0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fd9423c2980"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fd9423c2b10"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fd9423c2ca0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fd9423c2e30"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fd9423c1020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fd9423c11b0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fd9423c1740"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fd9423c18d0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fd9423c1a60"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fd9423c1bf0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fd9423c1d80"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fd9423c0020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fd9423c01b0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fd9423c0340"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fd9423c04d0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fd9423c0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fd9423be800" loc="81:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fd9423be800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9423beb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9423bed10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9423b3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423b31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9423b3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423b34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9423b3660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423b37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9423b3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9423b3b10"/>
        <function-ref name="set" scoped="" ref="0x7fd9423b3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9423b3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9423b2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423b22b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd9423b2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fd9423f0970" loc="77:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd9423f0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9423f0cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fd9423b4860" loc="80:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fd9423b4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9423b4be0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9423b4d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9423bf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423bf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9423bf340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423bf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9423bf660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423bf7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9423bf980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9423bfb10"/>
        <function-ref name="set" scoped="" ref="0x7fd9423bfca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9423bfe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9423be020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423be2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd9423be440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fd942328810" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fd942328810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942328b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942328d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942327020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423271b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942327340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423274d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942327660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423277f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942327980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942327b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942327ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942327e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942326020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423262b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942326440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fd942313810" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fd942313810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942313b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942313d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942312020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423121b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942312340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423124d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942312660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423127f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942312980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942312b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942312ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942312e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942311020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423112b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942311440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fd9422caca0" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fd9422caca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422c90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422c9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422c93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422c9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422c96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422c9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422c9a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422c9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422c9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422c8020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422c81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422c8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422c84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422c8760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422c88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fd9422a5cb0" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fd9422a5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422a40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422a4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422a43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422a4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422a46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422a4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422a4a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422a4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422a4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422a3020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422a31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422a3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422a34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422a3760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422a38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fd9422c8cc0" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fd9422c8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422c70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422c7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422c73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422c7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422c76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422c7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422c7a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422c7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422c7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422c6020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422c61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422c6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422c64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422c6760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422c68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fd94230f810" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fd94230f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94230fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94230fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94230e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94230e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94230e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94230e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94230e660"/>
        <function-ref name="get" scoped="" ref="0x7fd94230e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94230e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94230eb10"/>
        <function-ref name="set" scoped="" ref="0x7fd94230eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94230ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94230d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94230d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd94230d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fd9422fb9a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fd9422fb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422fbd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422fa020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422fa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422fa340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422fa4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422fa660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422fa7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422fa980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422fab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422faca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422fae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422f9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422f91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422f9440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422f95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fd9422e69a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fd9422e69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422e6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422e5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422e51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422e5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422e54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422e5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422e57f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422e5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422e5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422e5ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422e5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422e4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422e41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422e4440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422e45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fd9422d69a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fd9422d69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422d6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422d5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422d51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422d5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422d54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422d5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422d57f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422d5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422d5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422d5ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422d5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422d4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422d41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422d4440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422d45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fd9422c1cc0" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fd9422c1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422c00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422c0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422c03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422c0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422c06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422c0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422c0a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422c0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422c0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422bf020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422bf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422bf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422bf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422bf760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422bf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fd9422b1cb0" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fd9422b1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422b00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422b0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422b03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422b0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422b06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422b0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422b0a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422b0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422b0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422af020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422af1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422af340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422af4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422af760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422af8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fd94229dcc0" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fd94229dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94229c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94229c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94229c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94229c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94229c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94229c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94229ca00"/>
        <function-ref name="get" scoped="" ref="0x7fd94229cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94229cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94229b020"/>
        <function-ref name="set" scoped="" ref="0x7fd94229b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94229b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94229b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94229b760"/>
        <function-ref name="clr" scoped="" ref="0x7fd94229b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fd942321810" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fd942321810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942321b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942321d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942320020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423201b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942320340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423204d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942320660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423207f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942320980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942320b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942320ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942320e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94231f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94231f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd94231f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fd9422bfcc0" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fd9422bfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422be0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422be230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422be3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422be550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422be6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422be870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422bea00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422beb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422bed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422bd020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422bd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422bd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422bd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422bd760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fd94231d810" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fd94231d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94231db90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94231dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94231c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94231c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94231c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94231c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94231c660"/>
        <function-ref name="get" scoped="" ref="0x7fd94231c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94231c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94231cb10"/>
        <function-ref name="set" scoped="" ref="0x7fd94231cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94231ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94231b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94231b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd94231b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fd942309810" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fd942309810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942309b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942309d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942308020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423081b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942308340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942308660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423087f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942308980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942308b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942308ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942308e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942307020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423072b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942307440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fd9422f59a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fd9422f59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422f5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422f3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422f31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422f3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422f34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422f3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422f37f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422f3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422f3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422f3ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422f3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422f2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422f21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422f2440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422f25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fd9422e09a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fd9422e09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422e0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422df020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422df1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422df340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422df4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422df660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422df7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422df980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422dfb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422dfca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422dfe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422de020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422de1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422de440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422de5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fd9422d09a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fd9422d09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422d0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422cf020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422cf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422cf340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422cf4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422cf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422cf7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422cf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422cfb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422cfca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422cfe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422ce020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422ce1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422ce440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422ce5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fd94232c810" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fd94232c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94232cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94232cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94232b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94232b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94232b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94232b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94232b660"/>
        <function-ref name="get" scoped="" ref="0x7fd94232b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94232b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94232bb10"/>
        <function-ref name="set" scoped="" ref="0x7fd94232bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94232be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94232a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94232a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd94232a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fd942317810" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fd942317810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942317c90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942317e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942316020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942316340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942316660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423167f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942316980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942316b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942316ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942316e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942315020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423152b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942315440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fd942303810" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fd942303810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942303b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942303d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942302020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942302340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942302660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423027f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942302980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942302b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942302ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942302e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942301020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423012b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942301440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fd9422cccc0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fd9422cccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422cb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422cb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422cb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422cb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422cb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422cb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422cba00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422cbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422cbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422ca020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422ca1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422ca340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422ca4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422ca760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422ca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fd9422abcb0" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fd9422abcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422aa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422aa230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422aa3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422aa550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422aa6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422aa870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422aaa00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422aab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422aad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422a9020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422a91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422a9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422a94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422a9760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422a98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fd94229fcb0" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fd94229fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94229e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94229e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94229e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94229e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94229e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94229e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94229ea00"/>
        <function-ref name="get" scoped="" ref="0x7fd94229eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94229ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94229d020"/>
        <function-ref name="set" scoped="" ref="0x7fd94229d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94229d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94229d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94229d760"/>
        <function-ref name="clr" scoped="" ref="0x7fd94229d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fd9422b7cc0" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fd9422b7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422b60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422b6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422b63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422b6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422b66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422b6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422b6a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422b6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422b6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422b5020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422b51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422b5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422b54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422b5760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422b58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fd9422ff810" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fd9422ff810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422ffd90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422fe020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422fe1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422fe340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422fe4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422fe660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422fe7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422fe980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422feb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422feca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422fee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422fd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422fd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422fd440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422fd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fd9422ea9a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fd9422ea9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422ead20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422e9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422e91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422e9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422e94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422e9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422e97f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422e9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422e9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422e9ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422e9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422e8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422e81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422e8440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422e85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fd9422da9a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fd9422da9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422dad20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422d9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422d91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422d9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422d94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422d9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422d97f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422d9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422d9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422d9ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422d9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422d8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422d81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422d8440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422d85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fd9422a9cb0" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fd9422a9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422a80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422a8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422a83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422a8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422a86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422a8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422a8a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422a8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422a8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422a7020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422a71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422a7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422a74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422a7760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422a78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fd9422bdcb0" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fd9422bdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422bc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422bc230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422bc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422bc550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422bc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422bc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422bca00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422bcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422bcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422bb020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422bb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422bb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422bb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422bb760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fd942326810" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fd942326810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942326b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942326d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942325020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423251b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942325340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423254d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942325660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423257f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942325980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942325b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942325ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942325e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942324020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423242b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942324440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fd942311810" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fd942311810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942311b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942311d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942310020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423101b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942310340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423104d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942310660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423107f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942310980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942310b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942310ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942310e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94230f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94230f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd94230f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fd9422de9a0" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fd9422de9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422ded20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422dd020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422dd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422dd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422dd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422dd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422dd7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422dd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422ddb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422ddca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422dde30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422dc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422dc1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422dc440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422dc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fd94230d810" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fd94230d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94230db90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94230dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94230c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94230c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94230c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94230c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94230c660"/>
        <function-ref name="get" scoped="" ref="0x7fd94230c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94230c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94230cb10"/>
        <function-ref name="set" scoped="" ref="0x7fd94230cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94230ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94230b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94230b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd94230b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fd9422f99a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fd9422f99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422f9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422f8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422f81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422f8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422f84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422f8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422f87f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422f8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422f8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422f8ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422f8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422f7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422f71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422f7440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422f75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fd9422e49a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fd9422e49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422e4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422e3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422e31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422e3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422e34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422e3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422e37f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422e3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422e3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422e3ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422e3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422e2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422e21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422e2440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422e25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fd9422d49a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fd9422d49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422d4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422d3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422d31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422d3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422d34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422d3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422d37f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422d3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422d3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422d3ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422d3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422d2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422d21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422d2440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422d25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fd9422b9cc0" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fd9422b9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422b80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422b8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422b83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422b8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422b86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422b8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422b8a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422b8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422b8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422b7020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422b71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422b7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422b74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422b7760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422b78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fd942332800" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fd942332800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942332b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942332d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94232f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94232f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94232f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94232f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94232f660"/>
        <function-ref name="get" scoped="" ref="0x7fd94232f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94232f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94232fb10"/>
        <function-ref name="set" scoped="" ref="0x7fd94232fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94232fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94232e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94232e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd94232e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fd94231b810" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fd94231b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94231bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94231bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94231a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94231a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94231a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94231a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94231a660"/>
        <function-ref name="get" scoped="" ref="0x7fd94231a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94231a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94231ab10"/>
        <function-ref name="set" scoped="" ref="0x7fd94231aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94231ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942319020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423192b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942319440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fd942307810" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fd942307810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942307b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942307d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942306020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423061b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942306340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423064d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942306660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423067f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942306980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942306b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942306ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942306e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942305020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423052b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942305440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fd9422f29a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fd9422f29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422f2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422f1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422f11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422f1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422f14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422f1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422f17f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422f1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422f1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422f1ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422f1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422f0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422f01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422f0440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422f05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fd9422b5cc0" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fd9422b5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422b40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422b4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422b43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422b4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422b46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422b4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422b4a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422b4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422b4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422b3020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422b31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422b3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422b34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422b3760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fd9422afcb0" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fd9422afcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422ae0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422ae230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422ae3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422ae550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422ae6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422ae870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422aea00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422aeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422aed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422ad020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422ad1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422ad340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422ad4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422ad760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422ad8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fd9422a3cb0" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fd9422a3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422a20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422a2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422a23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422a2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422a26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422a2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422a2a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422a2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422a2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422a1020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422a11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422a1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422a14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422a1760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422a18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fd9422ee9a0" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fd9422ee9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422eed20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422ed020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422ed1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422ed340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422ed4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422ed660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422ed7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422ed980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422edb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422edca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422ede30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422ec020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422ec1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422ec440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422ec5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fd9422b3cc0" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fd9422b3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422b20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422b2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422b23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422b2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422b26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422b2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422b2a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422b2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422b2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422b1020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422b11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422b1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422b14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422b1760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422b18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fd94232a810" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fd94232a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94232ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94232ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942329020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942329340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942329660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423297f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942329980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942329b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942329ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942329e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942328020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423282b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942328440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fd942315810" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fd942315810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942315b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942315d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942314020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423141b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942314340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423144d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942314660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423147f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942314980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942314b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942314ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942314e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942313020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423132b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942313440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fd942301810" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fd942301810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942301b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942301d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942300020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423001b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942300340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423004d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942300660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423007f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942300980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942300b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942300ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942300e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422ff020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422ff2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422ff440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fd9422bbcc0" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fd9422bbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422ba0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422ba230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422ba3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422ba550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422ba6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422ba870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422baa00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422bab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422bad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422b9020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422b91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422b9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422b94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422b9760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fd9422a7cb0" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fd9422a7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422a60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422a6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422a63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422a6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422a66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422a6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422a6a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422a6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422a6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422a5020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422a51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422a5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422a54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422a5760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422a58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fd9422fd9a0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fd9422fd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422fdd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422fc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422fc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422fc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422fc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422fc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422fc7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422fc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422fcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422fcca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422fce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422fb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422fb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422fb440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422fb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fd9422e89a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fd9422e89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422e8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422e7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422e71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422e7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422e74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422e7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422e77f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422e7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422e7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422e7ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422e7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422e6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422e61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422e6440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422e65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fd9422d89a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fd9422d89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422d8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422d7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422d71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422d7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422d74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422d7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422d77f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422d7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422d7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422d7ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422d7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422d6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422d61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422d6440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422d65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fd942324810" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fd942324810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942324b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942324d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942322020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423221b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942322340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423224d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942322660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423227f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942322980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942322b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942322ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942322e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942321020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423212b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942321440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fd9422dc9a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fd9422dc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422dcd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422db020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422db1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422db340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422db4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422db660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422db7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422db980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422dbb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422dbca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422dbe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422da020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422da1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422da440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422da5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fd94231f810" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fd94231f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94231fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94231fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94231e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94231e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94231e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94231e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94231e660"/>
        <function-ref name="get" scoped="" ref="0x7fd94231e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94231e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94231eb10"/>
        <function-ref name="set" scoped="" ref="0x7fd94231eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94231ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94231d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94231d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd94231d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fd94230b810" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fd94230b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94230bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94230bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94230a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94230a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94230a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94230a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94230a660"/>
        <function-ref name="get" scoped="" ref="0x7fd94230a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94230a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94230ab10"/>
        <function-ref name="set" scoped="" ref="0x7fd94230aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94230ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942309020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423092b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942309440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fd9422f79a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fd9422f79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422f7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422f6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422f61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422f6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422f64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422f6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422f67f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422f6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422f6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422f6ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422f6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422f5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422f51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422f5440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422f55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fd9422e29a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fd9422e29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422e2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422e1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422e11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422e1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422e14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422e1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422e17f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422e1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422e1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422e1ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422e1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422e0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422e01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422e0440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422e05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fd9422d29a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fd9422d29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422d2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422d1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422d11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422d1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422d14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422d1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422d17f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422d1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422d1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422d1ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422d1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422d0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422d01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422d0440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422d05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fd94232e810" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fd94232e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94232eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94232ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94232d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94232d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94232d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94232d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94232d660"/>
        <function-ref name="get" scoped="" ref="0x7fd94232d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94232d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94232db10"/>
        <function-ref name="set" scoped="" ref="0x7fd94232dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94232de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94232c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94232c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd94232c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fd942319810" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fd942319810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942319b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942319d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942318020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942318340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942318660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423187f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942318980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942318b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942318ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942318e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942317020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423172b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942317440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fd942305810" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fd942305810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942305b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942305d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942304020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9423041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942304340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9423044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942304660"/>
        <function-ref name="get" scoped="" ref="0x7fd9423047f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942304980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942304b10"/>
        <function-ref name="set" scoped="" ref="0x7fd942304ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942304e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942303020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9423032b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd942303440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fd9422f09a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fd9422f09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422f0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422ef020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422ef1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422ef340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422ef4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422ef660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422ef7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422ef980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422efb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422efca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422efe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422ee020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422ee1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422ee440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422ee5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fd9422c3ca0" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fd9422c3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422c20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422c2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422c23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422c2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422c26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422c2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422c2a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422c2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422c2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422c1020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422c1760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fd9422adcb0" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fd9422adcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422ac0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422ac230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422ac3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422ac550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422ac6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422ac870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422aca00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422acb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422acd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422ab020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422ab1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422ab340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422ab4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422ab760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422ab8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fd9422c6cc0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fd9422c6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422c40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422c4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422c43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422c4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422c46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422c4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422c4a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422c4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422c4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422c3020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422c31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422c3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422c34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422c3760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422c38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fd9422ec9a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fd9422ec9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422ecd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422eb020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422eb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422eb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422eb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422eb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422eb7f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9422eb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422ebb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422ebca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9422ebe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422ea020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422ea1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422ea440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422ea5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fd9422a1cb0" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fd9422a1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422a00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422a0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422a03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422a0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422a06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422a0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422a0a00"/>
        <function-ref name="get" scoped="" ref="0x7fd9422a0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422a0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94229f020"/>
        <function-ref name="set" scoped="" ref="0x7fd94229f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94229f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94229f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94229f760"/>
        <function-ref name="clr" scoped="" ref="0x7fd94229f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fd94229bcc0" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fd94229bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94229a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94229a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94229a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94229a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94229a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94229a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94229aa00"/>
        <function-ref name="get" scoped="" ref="0x7fd94229ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94229ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942299020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422991b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942299340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422994d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942299760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422998f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fd9422ce9f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fd9422ce9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422cd1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9422cd350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422cd4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9422cd670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422cd800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422cd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422cdb20"/>
        <function-ref name="get" scoped="" ref="0x7fd9422cdcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422cde40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9422cc020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422cc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9422cc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422cc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9422cc760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422cc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942296d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942296d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94226e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94226e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94226e400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94226e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94226e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94226e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94226ea40"/>
        <function-ref name="get" scoped="" ref="0x7fd94226ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94226ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94226d020"/>
        <function-ref name="set" scoped="" ref="0x7fd94226d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94226d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94226d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94226d760"/>
        <function-ref name="clr" scoped="" ref="0x7fd94226d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd94226a740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd94226a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94226aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94226ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94226ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942269020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422691b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd942269340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422694d0"/>
        <function-ref name="get" scoped="" ref="0x7fd942269660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422697f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942269980"/>
        <function-ref name="set" scoped="" ref="0x7fd942269b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942269ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942269e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942268120"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942265100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942265100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942265480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942265610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422657a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942265930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942265ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd942265c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942265de0"/>
        <function-ref name="get" scoped="" ref="0x7fd942264020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422641b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942264340"/>
        <function-ref name="set" scoped="" ref="0x7fd9422644d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942264660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942264a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd942264c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942261d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942261d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422600e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942260270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942260400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942260590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942260720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422608b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942260a40"/>
        <function-ref name="get" scoped="" ref="0x7fd942260bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942260d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94225f020"/>
        <function-ref name="set" scoped="" ref="0x7fd94225f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94225f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94225f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94225f760"/>
        <function-ref name="clr" scoped="" ref="0x7fd94225f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd94225c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd94225c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94225cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94225cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94225cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94225b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94225b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94225b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94225b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd94225b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94225b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94225b980"/>
        <function-ref name="set" scoped="" ref="0x7fd94225bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94225bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94225be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94225a120"/>
        <function-ref name="clr" scoped="" ref="0x7fd94225a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942257100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942257100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942257480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942257610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422577a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942257930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942257ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd942257c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942257de0"/>
        <function-ref name="get" scoped="" ref="0x7fd942256020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422561b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942256340"/>
        <function-ref name="set" scoped="" ref="0x7fd9422564d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942256660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422567f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942256a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd942256c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942253d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942253d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422520e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942252270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942252400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942252590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942252720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422528b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942252a40"/>
        <function-ref name="get" scoped="" ref="0x7fd942252bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942252d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942251020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422511b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942251340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422514d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942251760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd94224e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd94224e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94224eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94224ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94224ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94224c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94224c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94224c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94224c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd94224c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94224c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94224c980"/>
        <function-ref name="set" scoped="" ref="0x7fd94224cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94224cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94224ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94224b120"/>
        <function-ref name="clr" scoped="" ref="0x7fd94224b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942248100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942248100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942248480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942248610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422487a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942248930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942248ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd942248c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942248de0"/>
        <function-ref name="get" scoped="" ref="0x7fd942247020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422471b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942247340"/>
        <function-ref name="set" scoped="" ref="0x7fd9422474d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942247660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422477f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942247a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd942247c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942244d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942244d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422430e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942243270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942243400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942243590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942243720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422438b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942243a40"/>
        <function-ref name="get" scoped="" ref="0x7fd942243bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942243d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942242020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422421b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942242340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422424d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942242760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422428f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd94223f740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd94223f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94223fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94223fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94223fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94223e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94223e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94223e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94223e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd94223e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94223e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94223e980"/>
        <function-ref name="set" scoped="" ref="0x7fd94223eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94223eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94223ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94223d120"/>
        <function-ref name="clr" scoped="" ref="0x7fd94223d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd94223a100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd94223a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94223a480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94223a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94223a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94223a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94223aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94223ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94223ade0"/>
        <function-ref name="get" scoped="" ref="0x7fd942239020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422391b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942239340"/>
        <function-ref name="set" scoped="" ref="0x7fd9422394d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942239660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422397f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942239a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd942239c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942236d80" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942236d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942235180"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942235310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422354a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942235630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422357c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd942235950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942235ae0"/>
        <function-ref name="get" scoped="" ref="0x7fd942235c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942235e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942234020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422341b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942234340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422344d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942234760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422348f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942231740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942231740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942231ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942231c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942231de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942230020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422301b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd942230340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422304d0"/>
        <function-ref name="get" scoped="" ref="0x7fd942230660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422307f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942230980"/>
        <function-ref name="set" scoped="" ref="0x7fd942230b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942230ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942230e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94222f120"/>
        <function-ref name="clr" scoped="" ref="0x7fd94222f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd94222c100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd94222c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94222c480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94222c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94222c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94222c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94222cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94222cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94222cde0"/>
        <function-ref name="get" scoped="" ref="0x7fd94222b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94222b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94222b340"/>
        <function-ref name="set" scoped="" ref="0x7fd94222b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94222b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94222b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94222ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fd94222bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942227d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942227d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422260e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942226270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942226400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942226590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942226720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422268b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942226a40"/>
        <function-ref name="get" scoped="" ref="0x7fd942226bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942226d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942225020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422251b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942225340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422254d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942225760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422258f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942222740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942222740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942222ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942222c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942222de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942221020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422211b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd942221340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422214d0"/>
        <function-ref name="get" scoped="" ref="0x7fd942221660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422217f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942221980"/>
        <function-ref name="set" scoped="" ref="0x7fd942221b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942221ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942221e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942220120"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422202b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd94221d100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd94221d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94221d480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94221d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94221d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94221d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94221dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94221dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94221dde0"/>
        <function-ref name="get" scoped="" ref="0x7fd94221c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94221c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94221c340"/>
        <function-ref name="set" scoped="" ref="0x7fd94221c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94221c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94221c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94221ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fd94221cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942219d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942219d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9422180e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942218270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942218400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942218590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942218720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9422188b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942218a40"/>
        <function-ref name="get" scoped="" ref="0x7fd942218bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942218d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942217020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422171b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942217340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422174d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942217760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422178f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942214740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942214740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942214ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942214c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942214de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942213020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422131b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd942213340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422134d0"/>
        <function-ref name="get" scoped="" ref="0x7fd942213660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422137f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942213980"/>
        <function-ref name="set" scoped="" ref="0x7fd942213b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942213ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942213e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942212120"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422122b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd94220f100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd94220f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94220f480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94220f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94220f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94220f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94220fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94220fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94220fde0"/>
        <function-ref name="get" scoped="" ref="0x7fd94220e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94220e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94220e340"/>
        <function-ref name="set" scoped="" ref="0x7fd94220e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94220e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94220e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94220ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fd94220ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd94220bd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd94220bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94220a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94220a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94220a400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94220a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94220a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94220a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94220aa40"/>
        <function-ref name="get" scoped="" ref="0x7fd94220abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94220ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942209020"/>
        <function-ref name="set" scoped="" ref="0x7fd9422091b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942209340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9422094d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942209760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422098f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942206740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942206740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942206ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942206c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942206de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942204020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9422041b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd942204340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9422044d0"/>
        <function-ref name="get" scoped="" ref="0x7fd942204660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9422047f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942204980"/>
        <function-ref name="set" scoped="" ref="0x7fd942204b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942204ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942204e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942203120"/>
        <function-ref name="clr" scoped="" ref="0x7fd9422032b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942200100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942200100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942200480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942200610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9422007a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942200930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942200ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd942200c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942200de0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421ff020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421ff1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421ff340"/>
        <function-ref name="set" scoped="" ref="0x7fd9421ff4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421ff660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421ff7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421ffa80"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421ffc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421fce60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421fce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421fb210"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421fb3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421fb530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421fb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421fb850"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421fb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421fbb70"/>
        <function-ref name="get" scoped="" ref="0x7fd9421fbd00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421fa020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421fa1b0"/>
        <function-ref name="set" scoped="" ref="0x7fd9421fa340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421fa4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421fa660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421fa8f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421faa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421f79f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421f79f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421f7d70"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421f6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421f61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421f6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421f64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421f6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421f67f0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421f6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421f6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421f6ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd9421f6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421f5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421f51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421f5440"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421f55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421f2460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421f2460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421f27e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421f2970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421f2b00"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421f2c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421f2e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421f1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421f11b0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421f1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421f14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421f1660"/>
        <function-ref name="set" scoped="" ref="0x7fd9421f17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421f1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421f1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421f1da0"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421eee00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421eee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421ed1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421ed350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421ed4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421ed670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421ed800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421ed990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421edb20"/>
        <function-ref name="get" scoped="" ref="0x7fd9421edcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421ede40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421ec020"/>
        <function-ref name="set" scoped="" ref="0x7fd9421ec1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421ec340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421ec4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421ec760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421ec8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421e9740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421e9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421e9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421e9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421e9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421e8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421e81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421e8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421e84d0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421e8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421e87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421e8980"/>
        <function-ref name="set" scoped="" ref="0x7fd9421e8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421e8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421e8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421e7120"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421e72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421e4100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421e4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421e4480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421e4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421e47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421e4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421e4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421e4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421e4de0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421e3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421e31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421e3340"/>
        <function-ref name="set" scoped="" ref="0x7fd9421e34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421e3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421e37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421e3a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421e3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421e0d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421e0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421de0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421de270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421de400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421de590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421de720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421de8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421dea40"/>
        <function-ref name="get" scoped="" ref="0x7fd9421debd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421ded60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421dd020"/>
        <function-ref name="set" scoped="" ref="0x7fd9421dd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421dd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421dd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421dd760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421dd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421da740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421da740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421daac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421dac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421dade0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421d9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421d91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421d9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421d94d0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421d9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421d97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421d9980"/>
        <function-ref name="set" scoped="" ref="0x7fd9421d9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421d9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421d9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421d8120"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421d5100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421d5480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421d5610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421d57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421d5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421d5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421d5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421d5de0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421d4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421d41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421d4340"/>
        <function-ref name="set" scoped="" ref="0x7fd9421d44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421d4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421d47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421d4a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421d4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421d1d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421d1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421d00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421d0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421d0400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421d0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421d0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421d08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421d0a40"/>
        <function-ref name="get" scoped="" ref="0x7fd9421d0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421d0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421cf020"/>
        <function-ref name="set" scoped="" ref="0x7fd9421cf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421cf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421cf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421cf760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421cf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421cc740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421cc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421ccac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421ccc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421ccde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421cb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421cb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421cb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421cb4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421cb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421cb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421cb980"/>
        <function-ref name="set" scoped="" ref="0x7fd9421cbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421cbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421cbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421ca120"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421ca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421c7100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421c7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421c7480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421c7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421c77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421c7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421c7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421c7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421c7de0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421c6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421c61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421c6340"/>
        <function-ref name="set" scoped="" ref="0x7fd9421c64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421c6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421c67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421c6a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421c6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421c3d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421c3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421c20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421c2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421c2400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421c2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421c2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421c28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421c2a40"/>
        <function-ref name="get" scoped="" ref="0x7fd9421c2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421c2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421c1020"/>
        <function-ref name="set" scoped="" ref="0x7fd9421c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421c1760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421be740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421be740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421beac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421bec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421bede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421bd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421bd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421bd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421bd4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421bd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421bd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421bd980"/>
        <function-ref name="set" scoped="" ref="0x7fd9421bdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421bdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421bde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421bc120"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421bc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421b8100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421b8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421b8480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421b8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421b87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421b8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421b8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421b8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421b8de0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421b7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421b71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421b7340"/>
        <function-ref name="set" scoped="" ref="0x7fd9421b74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421b7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421b77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421b7a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421b7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421b4d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421b4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421b30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421b3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421b3400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421b3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421b3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421b38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421b3a40"/>
        <function-ref name="get" scoped="" ref="0x7fd9421b3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421b3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421b2020"/>
        <function-ref name="set" scoped="" ref="0x7fd9421b21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421b2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421b24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421b2760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421b28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421af740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421af740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421afac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421afc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421afde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421ae020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421ae1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421ae340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421ae4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421ae660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421ae7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421ae980"/>
        <function-ref name="set" scoped="" ref="0x7fd9421aeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421aeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421aee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421ad120"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421ad2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421aa100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421aa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421aa480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421aa610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421aa7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421aa930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421aaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421aac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421aade0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421a9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421a91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421a9340"/>
        <function-ref name="set" scoped="" ref="0x7fd9421a94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421a9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421a97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421a9a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421a9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421a6d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421a6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421a50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421a5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421a5400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421a5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421a5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421a58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421a5a40"/>
        <function-ref name="get" scoped="" ref="0x7fd9421a5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421a5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421a4020"/>
        <function-ref name="set" scoped="" ref="0x7fd9421a41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421a4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421a44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9421a4760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421a48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd9421a1740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd9421a1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421a1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9421a1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9421a1de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9421a0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421a01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421a0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421a04d0"/>
        <function-ref name="get" scoped="" ref="0x7fd9421a0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421a07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9421a0980"/>
        <function-ref name="set" scoped="" ref="0x7fd9421a0b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9421a0ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421a0e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94219f120"/>
        <function-ref name="clr" scoped="" ref="0x7fd94219f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd94219c100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd94219c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94219c480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94219c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94219c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94219c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94219cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94219cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94219cde0"/>
        <function-ref name="get" scoped="" ref="0x7fd94219b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94219b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94219b340"/>
        <function-ref name="set" scoped="" ref="0x7fd94219b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94219b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94219b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94219ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fd94219bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942198d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942198d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9421960e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942196270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942196400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942196590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd942196720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9421968b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd942196a40"/>
        <function-ref name="get" scoped="" ref="0x7fd942196bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd942196d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942195020"/>
        <function-ref name="set" scoped="" ref="0x7fd9421951b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942195340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9421954d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942195760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421958f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd942192740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd942192740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd942192ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd942192c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd942192de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd942191020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9421911b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd942191340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9421914d0"/>
        <function-ref name="get" scoped="" ref="0x7fd942191660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9421917f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd942191980"/>
        <function-ref name="set" scoped="" ref="0x7fd942191b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd942191ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd942191e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd942190120"/>
        <function-ref name="clr" scoped="" ref="0x7fd9421902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd94218d100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fd94218d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94218d480"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94218d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94218d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94218d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94218dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94218dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94218dde0"/>
        <function-ref name="get" scoped="" ref="0x7fd94218c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94218c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94218c340"/>
        <function-ref name="set" scoped="" ref="0x7fd94218c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94218c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94218c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94218ca80"/>
        <function-ref name="clr" scoped="" ref="0x7fd94218cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd94211fd20" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd94211fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd94211cb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd94211b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd94211b090"/>
        <function-ref name="overflow" scoped="" ref="0x7fd94211ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fd942119d90" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fd942119d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd942116bc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd942115590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9421150d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd942115a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fd942101020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd942101020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd9421013a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd942101530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9421016c0"/>
        <function-ref name="get" scoped="" ref="0x7fd942101850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9421019e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd942101b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fd942101d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd942100020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd9421001b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd942100340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd9421004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd942113e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd942113e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd942103ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd942102670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9421021b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd942102b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd9420fd020" loc="47:../../../tos/platforms/shimmer2r/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd9420fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd9420fd3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd9420fd530"/>
        <function-ref name="led1On" scoped="" ref="0x7fd9420fd6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd9420fd850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd9420fd9e0"/>
        <function-ref name="get" scoped="" ref="0x7fd9420fdb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd9420fdd00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd9420fc4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd9420fc020"/>
        <function-ref name="led0On" scoped="" ref="0x7fd9420fc1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd9420fc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fd9420f6060" loc="51:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fd9420f6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9420f63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9420f6570"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9420f6700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9420f6890"/>
        <function-ref name="get" scoped="" ref="0x7fd9420f6a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9420f6bb0"/>
        <function-ref name="set" scoped="" ref="0x7fd9420f6d40"/>
        <function-ref name="clr" scoped="" ref="0x7fd9420f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd9420f9470" loc="47:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd9420f9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd9420f97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fd9420f5340" loc="52:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fd9420f5340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9420f56c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9420f5850"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9420f59e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9420f5b70"/>
        <function-ref name="get" scoped="" ref="0x7fd9420f5d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9420ef020"/>
        <function-ref name="set" scoped="" ref="0x7fd9420ef1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd9420ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd9420f9a70" loc="48:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd9420f9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd9420f9df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd9420f8020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd9420f81b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd9420f8340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd9420f84d0"/>
        <function-ref name="get" scoped="" ref="0x7fd9420f8660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd9420f87f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd9420f8e30"/>
        <function-ref name="set" scoped="" ref="0x7fd9420f8980"/>
        <function-ref name="led0On" scoped="" ref="0x7fd9420f8b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fd9420f8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fd9420ef660" loc="53:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fd9420ef660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9420ef9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9420efb70"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9420efd00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9420ee020"/>
        <function-ref name="get" scoped="" ref="0x7fd9420ee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9420ee340"/>
        <function-ref name="set" scoped="" ref="0x7fd9420ee4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd9420ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fd9420fab10" loc="42:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fd9420fab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9420d3020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9420d31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9420d3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9420d34d0"/>
        <function-ref name="get" scoped="" ref="0x7fd9420d3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9420d37f0"/>
        <function-ref name="set" scoped="" ref="0x7fd9420d3980"/>
        <function-ref name="clr" scoped="" ref="0x7fd9420d3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fd9420d3e70" loc="43:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fd9420d3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9420d2220"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9420d23b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9420d2540"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9420d26d0"/>
        <function-ref name="get" scoped="" ref="0x7fd9420d2860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9420d29f0"/>
        <function-ref name="set" scoped="" ref="0x7fd9420d2b80"/>
        <function-ref name="clr" scoped="" ref="0x7fd9420d2d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fd9420d02e0" loc="45:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd9420d02e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd9420d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fd9420d10f0" loc="44:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fd9420d10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9420d1470"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9420d1600"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9420d1790"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9420d1920"/>
        <function-ref name="get" scoped="" ref="0x7fd9420d1ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9420d1c40"/>
        <function-ref name="set" scoped="" ref="0x7fd9420d1dd0"/>
        <function-ref name="clr" scoped="" ref="0x7fd9420d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd9420bc2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd9420bc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9420bc670"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9420bc800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9420bc990"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9420bcb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9420bccb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9420bce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9420bb020"/>
        <function-ref name="get" scoped="" ref="0x7fd9420bb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9420bb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9420bb4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd9420bb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9420bb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9420bb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9420bbc10"/>
        <function-ref name="clr" scoped="" ref="0x7fd9420bbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd9420cd020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd9420cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9420cd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9420cd530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9420cd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9420cd850"/>
        <function-ref name="get" scoped="" ref="0x7fd9420cd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9420cdb70"/>
        <function-ref name="set" scoped="" ref="0x7fd9420cdd00"/>
        <function-ref name="clr" scoped="" ref="0x7fd9420bc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd9420b7de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd9420b7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9420b6180"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9420b6310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9420b64a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9420b6630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9420b67c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9420b6950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9420b6ae0"/>
        <function-ref name="get" scoped="" ref="0x7fd9420b6c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9420b6e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9420b5020"/>
        <function-ref name="set" scoped="" ref="0x7fd9420b51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9420b5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9420b54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9420b5760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9420b58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd9420b8b90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd9420b8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9420b7020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9420b71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9420b7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9420b74d0"/>
        <function-ref name="get" scoped="" ref="0x7fd9420b7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9420b77f0"/>
        <function-ref name="set" scoped="" ref="0x7fd9420b7980"/>
        <function-ref name="clr" scoped="" ref="0x7fd9420b7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd9420b2930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd9420b2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9420b2cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9420b2e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9420b1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9420b11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9420b1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9420b14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9420b1660"/>
        <function-ref name="get" scoped="" ref="0x7fd9420b17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd9420b1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd9420b1b10"/>
        <function-ref name="set" scoped="" ref="0x7fd9420b1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd9420b1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9420b0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd9420b02b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd9420b0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd9420b3710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd9420b3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9420b3a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd9420b3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9420b3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9420b2020"/>
        <function-ref name="get" scoped="" ref="0x7fd9420b21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9420b2340"/>
        <function-ref name="set" scoped="" ref="0x7fd9420b24d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd9420b2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd940f6b020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd940f6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd940f6b3a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd940f6b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fd940f65440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fd940f65440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd940f657c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd940f5d760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd940f5d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd940f5dae0"/>
        <function-ref name="configure" scoped="" ref="0x7fd940f5dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fd940f65a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd940f65a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fd940f65dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fd940f63020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fd940f631b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fd940f63340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fd940f634d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fd940f63660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fd940f637f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fd940f63980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd940f63b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fd940f63ca0"/>
        <function-ref name="getData" scoped="" ref="0x7fd940f63e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fd940f62020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fd940f621b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fd940f62440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fd940f625d0"/>
        <function-ref name="getIV" scoped="" ref="0x7fd940f62760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fd940f628f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fd940f62a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fd940f62c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fd940f62da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fd940f61020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fd940f611b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fd940f61340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fd940f614d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fd940f61660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fd940f619f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fd940f61b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fd940f61d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fd940f60020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fd940f601b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fd940f60340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fd940f604d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fd940f60660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fd940f607f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fd940f60980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fd940f60b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fd940f60ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fd940f60e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fd940f5f020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fd940f5f1b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fd940f5f340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fd940f5f4d0"/>
        <function-ref name="setData" scoped="" ref="0x7fd940f5f660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fd940f5f7f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fd940f5f980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fd940f5fb10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fd940f5fca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fd940f5fe30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fd940f5e020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fd940f5e5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fd940f5e740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fd940f5e8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fd940f5ea60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fd940f5ebf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fd940f5ed80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fd940f5d020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fd940f5d1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fd940f5d340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fd940f5d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fd940f66c10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd940f66c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd940f65020"/>
        <function-ref name="txDone" scoped="" ref="0x7fd940f651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd940f6c340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd940f6c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd940f6c6c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd940f6c850"/>
        <function-ref name="request" scoped="" ref="0x7fd940f6c9e0"/>
        <function-ref name="granted" scoped="" ref="0x7fd940f6cb70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd940f6cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fd940f6a020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd940f6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd940f6a3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd940f6a530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd940f6a6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd940f6a850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd940f6a9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd940f6ab70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd940f6ad00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd940f69020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd940f691b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd940f69340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd940f694d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd940f69660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd940f697f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd940f69a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd940f69c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd940f69da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd940f68020"/>
        <function-ref name="isUart" scoped="" ref="0x7fd940f681b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd940f68340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd940f684d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd940f68660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd940f687f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd940f68980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd940f68b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fd940f68ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd940f67220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd940f673b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd940f67540"/>
        <function-ref name="tx" scoped="" ref="0x7fd940f676d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd940f67860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd940f679f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd940f67b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd940f67d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd940f66020"/>
        <function-ref name="rx" scoped="" ref="0x7fd940f661b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd940f66340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd940f664d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd940f66660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd940f667f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd940f66980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd940f6b7c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd940f6b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd940f6bb40"/>
        <function-ref name="userId" scoped="" ref="0x7fd940f6bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd9420832c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd9420832c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd942083640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd9420837d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd9420828a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9420828a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd942082c20"/>
        <function-ref name="configure" scoped="" ref="0x7fd942082db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd9420874d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd9420874d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd942087850"/>
        <function-ref name="txDone" scoped="" ref="0x7fd9420879e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd942084020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd942084020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9420843a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd942084530"/>
        <function-ref name="request" scoped="" ref="0x7fd9420846c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd942084850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9420849e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fd9420853f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd9420853f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd942085770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd942083ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd942083ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd942083e50"/>
        <function-ref name="userId" scoped="" ref="0x7fd942082020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd94206dbf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd94206dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd94206c020"/>
        <function-ref name="userId" scoped="" ref="0x7fd94206c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd942080d60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd942080d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd94207f180"/>
        <function-ref name="txDone" scoped="" ref="0x7fd94207f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fd94206d5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fd94206d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd94206d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fd94207f710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd94207f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd94207fab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fd94207fd80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fd94207fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd94206d180"/>
        <function-ref name="txDone" scoped="" ref="0x7fd94206d310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd941ff3020" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd941ff3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd941ff33c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd941ff3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd941ff1cd0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd941ff1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd941ff00a0"/>
        <function-ref name="configure" scoped="" ref="0x7fd941ff0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd941ff37a0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd941ff37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941ff3b20"/>
        <function-ref name="requested" scoped="" ref="0x7fd941ff3cb0"/>
        <function-ref name="granted" scoped="" ref="0x7fd941ff3e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941ff1020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd941ff11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd941ff4210" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd941ff4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941ff45b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941ff4740"/>
        <function-ref name="request" scoped="" ref="0x7fd941ff48d0"/>
        <function-ref name="granted" scoped="" ref="0x7fd941ff4a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941ff4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd941ff1400" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd941ff1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd941ff1780"/>
        <function-ref name="userId" scoped="" ref="0x7fd941ff1910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd940b95e50" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd940b95e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd940b94210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd940b944a0" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd940b944a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd940b94820"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd940b949b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd940b94b40"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd940b94cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd940b91530" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd940b91530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd940b918d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd940b91a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd940b8e270" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd940b8e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd940b8e610"/>
        <function-ref name="configure" scoped="" ref="0x7fd940b8e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd940b8ea30" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fd940b8ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd940b8edb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd940b8d020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd940b8d1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd940b8d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd940b91cb0" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd940b91cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd940b8f0a0"/>
        <function-ref name="requested" scoped="" ref="0x7fd940b8f230"/>
        <function-ref name="granted" scoped="" ref="0x7fd940b8f3c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd940b8f550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd940b8f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd940b8d590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd940b8d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd940b8d910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd940b8daa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd940b8dc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd940b8ddc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd940b8c020"/>
        <function-ref name="get" scoped="" ref="0x7fd940b8c1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd940b8c340"/>
        <function-ref name="led0On" scoped="" ref="0x7fd940b8c980"/>
        <function-ref name="set" scoped="" ref="0x7fd940b8c660"/>
        <function-ref name="led2On" scoped="" ref="0x7fd940b8c4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd940b8c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd940b92740" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd940b92740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd940b92ae0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd940b92c70"/>
        <function-ref name="request" scoped="" ref="0x7fd940b92e00"/>
        <function-ref name="granted" scoped="" ref="0x7fd940b91020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd940b911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd940b8f930" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd940b8f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd940b8fcb0"/>
        <function-ref name="userId" scoped="" ref="0x7fd940b8fe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd940b8cc50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fd940b8cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd940b8b020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd940b8b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fd941fead70" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fd941fead70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fd941fe7180"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fd941fe7310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fd941fe74a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fd941fe7630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fd941fe77c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fd941fe7950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fd941fe7ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fd941fe7c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd941fe7e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fd941fe6020"/>
        <function-ref name="getData" scoped="" ref="0x7fd941fe61b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fd941fe6340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fd941fe64d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fd941fe6760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fd941fe68f0"/>
        <function-ref name="getIV" scoped="" ref="0x7fd941fe6a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fd941fe6c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fd941fe6da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fd941fe5020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fd941fe51b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fd941fe5340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fd941fe54d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fd941fe5660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fd941fe57f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fd941fe5980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fd941fe5d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fd941fe4020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fd941fe41b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fd941fe4340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fd941fe44d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fd941fe4660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fd941fe47f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fd941fe4980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fd941fe4b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fd941fe4ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fd941fe4e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fd941fe3020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fd941fe31b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fd941fe3340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fd941fe34d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fd941fe3660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fd941fe37f0"/>
        <function-ref name="setData" scoped="" ref="0x7fd941fe3980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fd941fe3b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fd941fe3ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fd941fe3e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fd941fe2020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fd941fe21b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fd941fe2340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fd941fe28d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fd941fe2a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fd941fe2bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fd941fe2d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fd941fe1020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fd941fe11b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fd941fe1340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fd941fe14d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fd941fe1660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fd941fe17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fd941fd7700" loc="41:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fd941fd7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd941fd7a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd941fd7c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd941fd7da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd941fd6020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd941fd61b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd941fd6340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd941fd64d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd941fd6660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd941fd67f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd941fd6980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd941fd6b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd941fd6ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd941fd6e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd941fd5120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd941fd52b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd941fd5440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd941fd55d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fd941fd5760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd941fd58f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd941fd5a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd941fd5c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd941fd5da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd941fd4020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd941fd41b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd941fd4340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd941fd46d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd941fd4860"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd941fd49f0"/>
        <function-ref name="tx" scoped="" ref="0x7fd941fd4b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd941fd4d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd941fd3020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd941fd31b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd941fd3340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd941fd34d0"/>
        <function-ref name="rx" scoped="" ref="0x7fd941fd3660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd941fd37f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd941fd3980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd941fd3b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd941fd3ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd941fd3e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fd941fd01f0" loc="43:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fd941fd01f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941fd0570"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941fd0700"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd941fd0890"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941fd0a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941fd0bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd941fd0d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941fcf020"/>
        <function-ref name="get" scoped="" ref="0x7fd941fcf1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd941fcf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd941fcf4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd941fcf660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd941fcf7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd941fcf980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd941fcfc10"/>
        <function-ref name="clr" scoped="" ref="0x7fd941fcfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fd941fe0940" loc="39:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fd941fe0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fd941fe0cc0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fd941fe0e50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fd941fdd020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fd941fdd1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fd941fdd340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fd941fdd4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fd941fdd660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fd941fdd7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd941fdd980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fd941fddb10"/>
        <function-ref name="getData" scoped="" ref="0x7fd941fddca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fd941fdde30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fd941fdc020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fd941fdc2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fd941fdc440"/>
        <function-ref name="getIV" scoped="" ref="0x7fd941fdc5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fd941fdc760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fd941fdc8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fd941fdca80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fd941fdcc10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fd941fdcda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fd941fdb020"/>
        <function-ref name="isI2C" scoped="" ref="0x7fd941fdb1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fd941fdb340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fd941fdb4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fd941fdb860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fd941fdb9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fd941fdbb80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fd941fdbd10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fd941fda020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fd941fda1b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fd941fda340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fd941fda4d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fd941fda660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fd941fda7f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fd941fda980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fd941fdab10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fd941fdaca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fd941fdae30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fd941fd9020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fd941fd91b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fd941fd9340"/>
        <function-ref name="setData" scoped="" ref="0x7fd941fd94d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fd941fd9660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fd941fd97f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fd941fd9980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fd941fd9b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fd941fd9ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fd941fd9e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fd941fd8420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fd941fd85b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fd941fd8740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fd941fd88d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fd941fd8a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fd941fd8bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fd941fd8d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fd941fd7020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fd941fd71b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fd941fd7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fd941fd2250" loc="42:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fd941fd2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941fd25d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941fd2760"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd941fd28f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941fd2a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941fd2c10"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd941fd2da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941fd1020"/>
        <function-ref name="get" scoped="" ref="0x7fd941fd11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd941fd1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd941fd14d0"/>
        <function-ref name="set" scoped="" ref="0x7fd941fd1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd941fd17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd941fd1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd941fd1c10"/>
        <function-ref name="clr" scoped="" ref="0x7fd941fd1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7fd941f1f920" loc="37:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fd941f1f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd941f1fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd941f1e020" loc="38:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd941f1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941f1e3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941f1e530"/>
        <function-ref name="request" scoped="" ref="0x7fd941f1e6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd941f1e850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941f1e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd941f1f0c0" loc="36:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd941f1f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd941f1f440"/>
        <function-ref name="stop" scoped="" ref="0x7fd941f1f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7fd941f0ba30" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7fd941f0ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fd941f0bdb0"/>
        <function-ref name="offset" scoped="" ref="0x7fd941f08020"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fd941f081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7fd941eedbf0" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fd941eedbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fd941ec8ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fd941ec6880"/>
        <function-ref name="element" scoped="" ref="0x7fd941ec5020"/>
        <function-ref name="full" scoped="" ref="0x7fd941eecce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fd941ec8660"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd941ec61d0"/>
        <function-ref name="empty" scoped="" ref="0x7fd941eec860"/>
        <function-ref name="size" scoped="" ref="0x7fd941ec81e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd941ebda20" loc="93:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fd941ebda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fd941ebc920"/>
        <function-ref name="enqueue" scoped="" ref="0x7fd941ebb6d0"/>
        <function-ref name="element" scoped="" ref="0x7fd941ebbd40"/>
        <function-ref name="full" scoped="" ref="0x7fd941ebfaf0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fd941ebc4a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd941ebb020"/>
        <function-ref name="empty" scoped="" ref="0x7fd941ebf670"/>
        <function-ref name="size" scoped="" ref="0x7fd941ebc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fd941eba440" loc="94:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd941eba440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941eba7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941eba950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941ebaae0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941ebac70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941ebae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd941eb80c0" loc="95:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd941eb80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941eb8440"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd941eb85d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941eb8760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941eb88f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd941eb8a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7fd941eb3500" loc="114:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7fd941eb3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd941eb3880"/>
        <function-ref name="runTask" scoped="" ref="0x7fd941eb3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd941ec4a60" loc="89:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd941ec4a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd941ec4de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd941eb8d00" loc="96:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd941eb8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd941eb70a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd941eb7230"/>
        <function-ref name="led1On" scoped="" ref="0x7fd941eb73c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd941eb7550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd941eb76e0"/>
        <function-ref name="get" scoped="" ref="0x7fd941eb7870"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd941eb7a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd941eb61b0"/>
        <function-ref name="set" scoped="" ref="0x7fd941eb7b90"/>
        <function-ref name="led0On" scoped="" ref="0x7fd941eb7d20"/>
        <function-ref name="led2On" scoped="" ref="0x7fd941eb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7fd941ebd1a0" loc="90:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fd941ebd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fd941ebd520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fd941e9cbe0" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fd941e9cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fd941e99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd941e96020" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd941e96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd941e963a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fd941e96680" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fd941e96680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fd941e96a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fd941e90380" loc="39:../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fd941e90380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd941e90700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fd941e90aa0" loc="40:../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fd941e90aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd941e90e20"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd941e8d020"/>
        <function-ref name="start" scoped="" ref="0x7fd941e8d1b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd941e8d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fd941e76ad0" loc="67:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd941e76ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd941e76e50"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd941e74020"/>
        <function-ref name="start" scoped="" ref="0x7fd941e741b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd941e74340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fd941e850f0" loc="63:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fd941e850f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd941e85470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fd941e85d20" loc="65:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd941e85d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941e840e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941e84270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941e84400"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941e84590"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941e84720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd941e745d0" loc="68:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd941e745d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941e74950"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd941e74ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941e74c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941e74e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd941e73020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RC4" ref="0x7fd941e6a0d0" loc="70:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RC4" scoped="" ref="0x7fd941e6a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RC4"/>
      </instance>
      <interface-functions>
        <function-ref name="lsb" scoped="" ref="0x7fd941e6a450"/>
        <function-ref name="rc4" scoped="" ref="0x7fd941e6a5e0"/>
        <function-ref name="msb" scoped="" ref="0x7fd941e6a770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fd941e85710" loc="64:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd941e85710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd941e85a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x7fd941e79820" loc="66:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MilliTimer" scoped="" ref="0x7fd941e79820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd941e77cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941e82300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd941e770d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd941e82c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fd941e76660"/>
        <function-ref name="gett0" scoped="" ref="0x7fd941e761e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd941e82780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd941e83480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd941e776e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd941e83950"/>
        <function-ref name="stop" scoped="" ref="0x7fd941e83e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd941e9aa80" loc="62:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd941e9aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd941e9ae00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd941e86020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd941e861b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd941e86340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd941e864d0"/>
        <function-ref name="get" scoped="" ref="0x7fd941e86660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd941e867f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd941e86e30"/>
        <function-ref name="set" scoped="" ref="0x7fd941e86980"/>
        <function-ref name="led0On" scoped="" ref="0x7fd941e86b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fd941e86ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TEA" ref="0x7fd941e6d2c0" loc="69:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TEA" scoped="" ref="0x7fd941e6d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TEA"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x7fd941e6d640"/>
        <function-ref name="lsb" scoped="" ref="0x7fd941e6d7d0"/>
        <function-ref name="msb" scoped="" ref="0x7fd941e6d960"/>
        <function-ref name="encrypt" scoped="" ref="0x7fd941e6daf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="XXTEA" ref="0x7fd941e66bc0" loc="71:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="XXTEA" scoped="" ref="0x7fd941e66bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="XXTEA"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x7fd941e72020"/>
        <function-ref name="lsb" scoped="" ref="0x7fd941e721b0"/>
        <function-ref name="msb" scoped="" ref="0x7fd941e72340"/>
        <function-ref name="encrypt" scoped="" ref="0x7fd941e724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TEA" ref="0x7fd941e49250" loc="2:../../../tos/platforms/shimmer2r/TEAC.nc">
      <component-ref qname="TEAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TEA" scoped="" ref="0x7fd941e49250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TEA"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x7fd941e495d0"/>
        <function-ref name="lsb" scoped="" ref="0x7fd941e49760"/>
        <function-ref name="msb" scoped="" ref="0x7fd941e498f0"/>
        <function-ref name="encrypt" scoped="" ref="0x7fd941e49a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TEA" ref="0x7fd941e46870" loc="2:../../../tos/platforms/shimmer2r/TEAP.nc">
      <component-ref qname="TEAP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TEA" scoped="" ref="0x7fd941e46870"/></type-interface>
      <instance>
        <interfacedef-ref qname="TEA"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x7fd941e46bf0"/>
        <function-ref name="lsb" scoped="" ref="0x7fd941e46d80"/>
        <function-ref name="msb" scoped="" ref="0x7fd941e43020"/>
        <function-ref name="encrypt" scoped="" ref="0x7fd941e431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RC4" ref="0x7fd941e487c0" loc="2:../../../tos/platforms/shimmer2r/RC4C.nc">
      <component-ref qname="RC4C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RC4" scoped="" ref="0x7fd941e487c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RC4"/>
      </instance>
      <interface-functions>
        <function-ref name="lsb" scoped="" ref="0x7fd941e48b40"/>
        <function-ref name="rc4" scoped="" ref="0x7fd941e48cd0"/>
        <function-ref name="msb" scoped="" ref="0x7fd941e48e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RC4" ref="0x7fd941e2cc40" loc="2:../../../tos/platforms/shimmer2r/RC4P.nc">
      <component-ref qname="RC4P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RC4" scoped="" ref="0x7fd941e2cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RC4"/>
      </instance>
      <interface-functions>
        <function-ref name="lsb" scoped="" ref="0x7fd941e29020"/>
        <function-ref name="rc4" scoped="" ref="0x7fd941e291b0"/>
        <function-ref name="msb" scoped="" ref="0x7fd941e29340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="XXTEA" ref="0x7fd941e2a080" loc="2:../../../tos/platforms/shimmer2r/XXTEAC.nc">
      <component-ref qname="XXTEAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="XXTEA" scoped="" ref="0x7fd941e2a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="XXTEA"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x7fd941e2a400"/>
        <function-ref name="lsb" scoped="" ref="0x7fd941e2a590"/>
        <function-ref name="msb" scoped="" ref="0x7fd941e2a720"/>
        <function-ref name="encrypt" scoped="" ref="0x7fd941e2a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="XXTEA" ref="0x7fd941e146c0" loc="2:../../../tos/platforms/shimmer2r/XXTEAP.nc">
      <component-ref qname="XXTEAP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="XXTEA" scoped="" ref="0x7fd941e146c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="XXTEA"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x7fd941e14a40"/>
        <function-ref name="lsb" scoped="" ref="0x7fd941e14bd0"/>
        <function-ref name="msb" scoped="" ref="0x7fd941e14d60"/>
        <function-ref name="encrypt" scoped="" ref="0x7fd941e11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd941e44a10" loc="58:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd941e44a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd941e44d90"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd941df0020"/>
        <function-ref name="start" scoped="" ref="0x7fd941df01b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd941df0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd941df0b10" loc="60:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd941df0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941def020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941def1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941def340"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941def4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941def660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd941deea40" loc="62:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fd941deea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd941deedc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd941dec080" loc="64:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd941dec080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941dec400"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd941dec590"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941dec720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941dec8b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd941deca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd941de06b0" loc="67:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd941de06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd941de8ce0"/>
        <function-ref name="clear" scoped="" ref="0x7fd941de7460"/>
        <function-ref name="isValid" scoped="" ref="0x7fd941de85b0"/>
        <function-ref name="set" scoped="" ref="0x7fd941de7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd941dd35b0" loc="69:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd941dd35b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd941dd3930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd941dd3ac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd941dd3c50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd941dd3de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd941defe40" loc="61:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd941defe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd941dee1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd941dea4e0" loc="66:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd941dea4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd941dea860"/>
        <function-ref name="noAck" scoped="" ref="0x7fd941dea9f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd941deab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd941deccf0" loc="65:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd941deccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd941deb0a0"/>
        <function-ref name="source" scoped="" ref="0x7fd941deb230"/>
        <function-ref name="address" scoped="" ref="0x7fd941deb3c0"/>
        <function-ref name="destination" scoped="" ref="0x7fd941deb550"/>
        <function-ref name="setSource" scoped="" ref="0x7fd941deb6e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd941deb870"/>
        <function-ref name="type" scoped="" ref="0x7fd941deba00"/>
        <function-ref name="setType" scoped="" ref="0x7fd941debb90"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd941debd20"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd941dea020"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd941dea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd941de1840" loc="68:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd941de1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd941ddddd0"/>
        <function-ref name="clear" scoped="" ref="0x7fd941ddc540"/>
        <function-ref name="isValid" scoped="" ref="0x7fd941ddd6a0"/>
        <function-ref name="set" scoped="" ref="0x7fd941ddcc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd941dc72f0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd941dc72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd941dc7670"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd941dc7800"/>
        <function-ref name="start" scoped="" ref="0x7fd941dc7990"/>
        <function-ref name="stop" scoped="" ref="0x7fd941dc7b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd941dc02c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd941dc02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd941dc0640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd941dc07d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd941dc0960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd941dc0af0"/>
        <function-ref name="setCca" scoped="" ref="0x7fd941dc0c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd941dc0e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd941dab1d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fd941dab1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd941dab650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd941dc2020" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd941dc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941dc23a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd941dc2530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941dc26c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941dc2850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd941dc29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd941dc6320" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd941dc6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941dc66a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941dc6830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941dc69c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941dc6b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941dc6ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd941dc41d0" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fd941dc41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd941dc4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd941db80f0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd941db80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd941db8470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd941db8600"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd941db8790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd941db8920"/>
        <function-ref name="getPower" scoped="" ref="0x7fd941db8ab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd941db8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd941db5170" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd941db5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd941db54f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd941db5680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd941db5810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd941db59a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd941dc5510" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd941dc5510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd941dc5890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd941dc1020" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd941dc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd941dc13a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fd941dc1530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd941dc16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd941da2430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fd941da2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd941da27b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd941da2940"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd941da2ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd941da2c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd941da2df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd941dc4800" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd941dc4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd941dc4b80"/>
        <function-ref name="source" scoped="" ref="0x7fd941dc4d10"/>
        <function-ref name="address" scoped="" ref="0x7fd941dc3020"/>
        <function-ref name="destination" scoped="" ref="0x7fd941dc31b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd941dc3340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd941dc34d0"/>
        <function-ref name="type" scoped="" ref="0x7fd941dc3660"/>
        <function-ref name="setType" scoped="" ref="0x7fd941dc37f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd941dc3980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd941dc3b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd941dc3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd941db4170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd941db4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd941db44f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd941d9d020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd941d9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd941d9d3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd941d9d530"/>
        <function-ref name="start" scoped="" ref="0x7fd941d9d6c0"/>
        <function-ref name="stop" scoped="" ref="0x7fd941d9d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd941d95080" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd941d95080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd941d95400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd941d942e0" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fd941d942e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd941d94660"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd941d947f0"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd941d94980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd941d94b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd941d94ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd941d98670" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd941d98670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd941d989f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd941d98b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd941d98d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd941d97020"/>
        <function-ref name="getPower" scoped="" ref="0x7fd941d971b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd941d97340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd941d99170" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fd941d99170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941d994f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941d99680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941d99810"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941d999a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941d99b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd941d95700" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd941d95700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd941d95a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd941d95c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd941d95da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd941d94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fd941d9bd30" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fd941d9bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd941d9a0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd941d97670" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd941d97670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd941d979f0"/>
        <function-ref name="noAck" scoped="" ref="0x7fd941d97b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd941d97d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd941d9c1d0" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd941d9c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941d9c550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941d9c6e0"/>
        <function-ref name="request" scoped="" ref="0x7fd941d9c870"/>
        <function-ref name="granted" scoped="" ref="0x7fd941d9ca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941d9cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fd941d9b020" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fd941d9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941d9b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941d9b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941d9b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941d9b850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941d9b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd941d9a420" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fd941d9a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941d9a7a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd941d9a930"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941d9aac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941d9ac50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd941d9ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd941d98020" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd941d98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd941d983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd941d93ac0" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd941d93ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd941d93e40"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd941d90020"/>
        <function-ref name="start" scoped="" ref="0x7fd941d901b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd941d90340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd941d8f990" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd941d8f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd941d8fd10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd941d8e020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd941d8e1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd941d8e340"/>
        <function-ref name="setCca" scoped="" ref="0x7fd941d8e4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd941d8e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd941d90600" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd941d90600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941d90980"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941d90b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941d90ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941d90e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941d8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd941d8f300" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd941d8f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd941d8f680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420RxState" ref="0x7fd941d8a2d0" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420RxState" scoped="" ref="0x7fd941d8a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420RxState"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x7fd941d8a650"/>
        <function-ref name="enableCca" scoped="" ref="0x7fd941d8a7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd941d8d8d0" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd941d8d8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd941d8dc50"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd941d8dde0"/>
        <function-ref name="start" scoped="" ref="0x7fd941d88020"/>
        <function-ref name="stop" scoped="" ref="0x7fd941d881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd941d871a0" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd941d871a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd941d87520"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd941d876b0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd941d87840"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd941d879d0"/>
        <function-ref name="setCca" scoped="" ref="0x7fd941d87b60"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd941d87cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fd941d7cae0" loc="55:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fd941d7cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd941d7ce60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd941d7b020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd941d7b1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd941d7b340"/>
        <function-ref name="setCca" scoped="" ref="0x7fd941d7b4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd941d7b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd941d71020" loc="58:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd941d71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd941d713a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd941d71530"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd941d716c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd941d71850"/>
        <function-ref name="getPower" scoped="" ref="0x7fd941d719e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd941d71b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fd941d75d30" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd941d75d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941d7c0e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941d7c270"/>
        <function-ref name="modify" scoped="" ref="0x7fd941d7c400"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941d7c590"/>
        <function-ref name="resend" scoped="" ref="0x7fd941d7c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd941d88470" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd941d88470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941d887f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941d88980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941d88b10"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941d88ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941d88e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fd941d74020" loc="56:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fd941d74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd941d743a0"/>
        <function-ref name="rand32" scoped="" ref="0x7fd941d74530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fd941d830d0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fd941d830d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd941d83450"/>
        <function-ref name="stop" scoped="" ref="0x7fd941d835e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd941d6a660" loc="59:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd941d6a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd941d6aae0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd941d6ac70"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd941d6ae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fd941d7ee30" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fd941d7ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd941d841e0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd941d84370"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd941d84500"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd941d84690"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd941d84820"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd941d849b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd941d84b40"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd941d84cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd941d747f0" loc="57:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd941d747f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd941d74b70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd941d74d00"/>
        <function-ref name="led1On" scoped="" ref="0x7fd941d73020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd941d731b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd941d73340"/>
        <function-ref name="get" scoped="" ref="0x7fd941d734d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd941d73660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd941d73ca0"/>
        <function-ref name="set" scoped="" ref="0x7fd941d737f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fd941d73980"/>
        <function-ref name="led2On" scoped="" ref="0x7fd941d73b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd941d86880" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd941d86880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941d86c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941d86d90"/>
        <function-ref name="request" scoped="" ref="0x7fd941d85020"/>
        <function-ref name="granted" scoped="" ref="0x7fd941d851b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941d85340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fd941d65e40" loc="60:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fd941d65e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd941d6e1e0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd941d6e370"/>
        <function-ref name="isState" scoped="" ref="0x7fd941d6e500"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd941d6e690"/>
        <function-ref name="requestState" scoped="" ref="0x7fd941d6e820"/>
        <function-ref name="forceState" scoped="" ref="0x7fd941d6e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fd941d60b70" loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fd941d60b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd941d5f020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd941d5f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420RxState" ref="0x7fd941d86080" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420RxState" scoped="" ref="0x7fd941d86080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420RxState"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x7fd941d86400"/>
        <function-ref name="enableCca" scoped="" ref="0x7fd941d86590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fd941d61c60" loc="85:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fd941d61c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd941d60020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd941d601b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fd941d62d20" loc="84:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fd941d62d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd941d610e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd941d61270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fd941d0f020" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fd941d0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd941d0f3a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd941d0f530"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd941d0f6c0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd941d0f850"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd941d0f9e0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd941d0fb70"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd941d0fd00"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd941d0e020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd941d0e1b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd941d0e340"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd941d0e4d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd941d0e660"/>
        <function-ref name="sync" scoped="" ref="0x7fd941d0e7f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd941d0ea80"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd941d0ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fd941cfc5c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fd941cfc5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941d00200"/>
        <function-ref name="readDone" scoped="" ref="0x7fd941d00680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fd941d02020" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fd941d02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd941d023a0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd941d02530"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd941d026c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd941d02850"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd941d029e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd941d02b70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd941d02d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd941d01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd941d139d0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd941d139d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941d13d50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941d10020"/>
        <function-ref name="request" scoped="" ref="0x7fd941d101b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd941d10340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941d104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fd941cf9e50" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fd941cf9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd941cf8210"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd941cf83a0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd941cf8530"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd941cf86c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd941cf8850"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd941cf89e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd941cf8b70"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd941cf8d00"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd941cf7020"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd941cf71b0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd941cf7340"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd941cf74d0"/>
        <function-ref name="sync" scoped="" ref="0x7fd941cf7660"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd941cf78f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd941cf7a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fd941ccf020" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd941ccf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941ccf3a0"/>
        <function-ref name="write" scoped="" ref="0x7fd941ccf530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fd941cf0600" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd941cf0600"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fd941cf0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fd941cf2260" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fd941cf2260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd941ce9b30"/>
        <function-ref name="fired" scoped="" ref="0x7fd941cf1a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fd941ce94e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd941ce9020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd941ce7020"/>
        <function-ref name="start" scoped="" ref="0x7fd941cf1090"/>
        <function-ref name="stop" scoped="" ref="0x7fd941cf15a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fd941cd4c90" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd941cd4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941cd30a0"/>
        <function-ref name="write" scoped="" ref="0x7fd941cd3230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fd941ce6830" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fd941ce6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941ce6bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941ce6d40"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941ce5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941ce51b0"/>
        <function-ref name="get" scoped="" ref="0x7fd941ce5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941ce54d0"/>
        <function-ref name="set" scoped="" ref="0x7fd941ce5660"/>
        <function-ref name="clr" scoped="" ref="0x7fd941ce57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fd941cf51b0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fd941cf51b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941cf5da0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd941cf4260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fd941cbd020" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fd941cbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd941cbd3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd941cbd530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fd941ccf8c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd941ccf8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941ccfc40"/>
        <function-ref name="write" scoped="" ref="0x7fd941ccfdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fd941cce1d0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd941cce1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941cce550"/>
        <function-ref name="write" scoped="" ref="0x7fd941cce6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fd941cd0a80" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd941cd0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941cd0e00"/>
        <function-ref name="write" scoped="" ref="0x7fd941cd4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fd941cdadd0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd941cdadd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd941ce1180"/>
        <function-ref name="changed" scoped="" ref="0x7fd941ce1310"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd941ce14a0"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd941ce1630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd941ce7510" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fd941ce7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941ce7890"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941ce7a20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941ce7bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941ce7d40"/>
        <function-ref name="get" scoped="" ref="0x7fd941ce6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941ce61b0"/>
        <function-ref name="set" scoped="" ref="0x7fd941ce6340"/>
        <function-ref name="clr" scoped="" ref="0x7fd941ce64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fd941ccd830" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd941ccd830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941ccddb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fd941ce5b50" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fd941ce5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941ce4020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941ce41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941ce4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941ce44d0"/>
        <function-ref name="get" scoped="" ref="0x7fd941ce4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941ce47f0"/>
        <function-ref name="set" scoped="" ref="0x7fd941ce4980"/>
        <function-ref name="clr" scoped="" ref="0x7fd941ce4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd941cffab0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd941cffab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd941cffe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fd941cd35f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd941cd35f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941cd3970"/>
        <function-ref name="write" scoped="" ref="0x7fd941cd3b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fd941ccc1d0" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd941ccc1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941ccc550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd941ccc8f0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fd941ccc8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941cccc70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941ccce00"/>
        <function-ref name="request" scoped="" ref="0x7fd941cca020"/>
        <function-ref name="granted" scoped="" ref="0x7fd941cca1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941cca340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fd941cc9560" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fd941cc9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941cc98e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941cc9a70"/>
        <function-ref name="request" scoped="" ref="0x7fd941cc9c00"/>
        <function-ref name="granted" scoped="" ref="0x7fd941cc9d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941cc8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fd941cf7d80" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fd941cf7d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fd941cf6180"/>
        <function-ref name="rfOff" scoped="" ref="0x7fd941cf6310"/>
        <function-ref name="rxOn" scoped="" ref="0x7fd941cf64a0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fd941cf6630"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fd941cf67c0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fd941cf6950"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fd941cf6ae0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fd941cf6c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fd941cd43c0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd941cd43c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941cd4740"/>
        <function-ref name="write" scoped="" ref="0x7fd941cd48d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fd941cd01d0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd941cd01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941cd0550"/>
        <function-ref name="write" scoped="" ref="0x7fd941cd06e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fd941ccb990" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd941ccb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941ccbd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd941cc82e0" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd941cc82e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd941cc8660"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd941cc87f0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd941cc8980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd941cc8b10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd941cc8ca0"/>
        <function-ref name="get" scoped="" ref="0x7fd941cc8e30"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd941cc7020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd941cc7660"/>
        <function-ref name="set" scoped="" ref="0x7fd941cc71b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fd941cc7340"/>
        <function-ref name="led2On" scoped="" ref="0x7fd941cc74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fd941cbe020" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fd941cbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd941cbe3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd941cbe530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd941cf9180" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd941cf9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941cf9500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941cf9690"/>
        <function-ref name="request" scoped="" ref="0x7fd941cf9820"/>
        <function-ref name="granted" scoped="" ref="0x7fd941cf99b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941cf9b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fd941cdd9a0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd941cdd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941cddd20"/>
        <function-ref name="write" scoped="" ref="0x7fd941cd9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fd941cdd020" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd941cdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941cdd4a0"/>
        <function-ref name="write" scoped="" ref="0x7fd941cdd630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fd941cde5b0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fd941cde5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd941cde930"/>
        <function-ref name="disable" scoped="" ref="0x7fd941cdeac0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd941cdec50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd941cdede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fd941cca6f0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fd941cca6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941ccaa70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941ccac00"/>
        <function-ref name="request" scoped="" ref="0x7fd941ccad90"/>
        <function-ref name="granted" scoped="" ref="0x7fd941cc9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941cc91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fd941ccd100" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd941ccd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941ccd480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd941c477e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd941c477e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd941c47b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fd941c44220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd941c44220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd941c42b30"/>
        <function-ref name="fired" scoped="" ref="0x7fd941c43a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fd941c424e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd941c42020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd941c40020"/>
        <function-ref name="start" scoped="" ref="0x7fd941c43090"/>
        <function-ref name="stop" scoped="" ref="0x7fd941c435a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd941c3fa20" loc="42:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd941c3fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd941c3fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fd941c3e2e0" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fd941c3e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd941b5fb30"/>
        <function-ref name="fired" scoped="" ref="0x7fd941b60ae0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd941b5f4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd941b5f020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd941b5d020"/>
        <function-ref name="start" scoped="" ref="0x7fd941b60110"/>
        <function-ref name="stop" scoped="" ref="0x7fd941b60620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd940b295b0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd940b295b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd940b27df0"/>
        <function-ref name="fired" scoped="" ref="0x7fd940b28df0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd940b277a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd940b272e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd940b252e0"/>
        <function-ref name="start" scoped="" ref="0x7fd940b28420"/>
        <function-ref name="stop" scoped="" ref="0x7fd940b28930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd940b2bd20" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd940b2bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd940b290e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd940b21570" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd940b21570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd940b1fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fd940b20da0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd940b1f760"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd940b1f2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd940b1e2a0"/>
        <function-ref name="start" scoped="" ref="0x7fd940b203d0"/>
        <function-ref name="stop" scoped="" ref="0x7fd940b208e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd940b23cc0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd940b23cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd940b210a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fd940b08020" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd940b08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd940b083a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd940b08530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd940b086c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd940b08850"/>
        <function-ref name="fired" scoped="" ref="0x7fd940b089e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fd940b0b570" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd940b0b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd940b0b8f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd940b0ba80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd940b0bc10"/>
        <function-ref name="get" scoped="" ref="0x7fd940b0bda0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd940b0a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd940b0a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd940b0a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd940b0a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd940b0a660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd940b0a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd940b0a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fd940b0ac10" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd940b0ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd940b09020"/>
        <function-ref name="getControl" scoped="" ref="0x7fd940b091b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd940b09340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd940b094d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd940b09660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd940b097f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd940b09980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd940b09b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fd940b09ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fd941c1cba0" loc="52:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd941c1cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd941c1b020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd941c1b1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd941c1b340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd941c1b4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941c1b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fd941c204d0" loc="50:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd941c204d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941c20850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd941c209e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd941c20b70"/>
        <function-ref name="get" scoped="" ref="0x7fd941c20d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd941c1f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941c1f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd941c1f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941c1f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941c1f660"/>
        <function-ref name="setMode" scoped="" ref="0x7fd941c1f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd941c1f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fd941c1d280" loc="51:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd941c1d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd941c1d600"/>
        <function-ref name="getControl" scoped="" ref="0x7fd941c1d790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd941c1d920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd941c1dab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd941c1dc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd941c1ddd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd941c1c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd941c1c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fd941c1c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fd940affda0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd940affda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd940afe180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd940afe310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd940afe4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd940afe630"/>
        <function-ref name="fired" scoped="" ref="0x7fd940afe7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fd940b014c0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd940b014c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd940b01840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd940b019d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd940b01b60"/>
        <function-ref name="get" scoped="" ref="0x7fd940b01cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd940b01e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd940b00030"/>
        <function-ref name="getMode" scoped="" ref="0x7fd940b001c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd940b00350"/>
        <function-ref name="overflow" scoped="" ref="0x7fd940b004e0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd940b00670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd940b00800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd940b05340" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd940b05340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd940b02ba0"/>
        <function-ref name="fired" scoped="" ref="0x7fd940b04b80"/>
        <function-ref name="startAt" scoped="" ref="0x7fd940b02550"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd940b02090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd940b01090"/>
        <function-ref name="start" scoped="" ref="0x7fd940b041b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd940b046c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd940b06a30" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd940b06a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd940b06db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fd940b00a90" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd940b00a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd940b00e10"/>
        <function-ref name="getControl" scoped="" ref="0x7fd940aff020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd940aff1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd940aff340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd940aff4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd940aff660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd940aff7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd940aff980"/>
        <function-ref name="setControl" scoped="" ref="0x7fd940affb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd941bc8020" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd941bc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941bc8e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941bc7800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941bc7340"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941bc7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fd941ba5950" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fd941ba5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941ba4780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941ba3150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941ba4c40"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941ba3610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd941bc25f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd941bc25f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941ba7430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941ba7db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941ba78f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941ba52a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd940b1c890" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd940b1c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd940b180d0"/>
        <function-ref name="fired" scoped="" ref="0x7fd940b190d0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd940b19a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd940b19590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd940b18590"/>
        <function-ref name="start" scoped="" ref="0x7fd940b1b6e0"/>
        <function-ref name="stop" scoped="" ref="0x7fd940b1bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fd940b150a0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fd940b150a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd940b12b30"/>
        <function-ref name="fired" scoped="" ref="0x7fd940b139f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd940b124e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd940b12020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd940b11020"/>
        <function-ref name="start" scoped="" ref="0x7fd940b13020"/>
        <function-ref name="stop" scoped="" ref="0x7fd940b13530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd940b18c00" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd940b18c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd940b17a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd940b164e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd940b16020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd940b169a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fd941b586a0" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fd941b586a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b58a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b58bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b58d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b57020"/>
        <function-ref name="get" scoped="" ref="0x7fd941b571b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b57340"/>
        <function-ref name="set" scoped="" ref="0x7fd941b574d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b57660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fd941b579d0" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fd941b579d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b57d50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b56020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b56340"/>
        <function-ref name="get" scoped="" ref="0x7fd941b564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b56660"/>
        <function-ref name="set" scoped="" ref="0x7fd941b567f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b56980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fd941b56ce0" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fd941b56ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b550a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b55230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b553c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b55550"/>
        <function-ref name="get" scoped="" ref="0x7fd941b556e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b55870"/>
        <function-ref name="set" scoped="" ref="0x7fd941b55a00"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b55b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fd941b59370" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fd941b59370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b596f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b59880"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b59a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b59ba0"/>
        <function-ref name="get" scoped="" ref="0x7fd941b59d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b58020"/>
        <function-ref name="set" scoped="" ref="0x7fd941b581b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b58340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fd941b53380" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fd941b53380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b53700"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b53890"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b53a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b53bb0"/>
        <function-ref name="get" scoped="" ref="0x7fd941b53d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b52020"/>
        <function-ref name="set" scoped="" ref="0x7fd941b521b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b52340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fd941b5a020" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fd941b5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b5a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b5a530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b5a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b5a850"/>
        <function-ref name="get" scoped="" ref="0x7fd941b5a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b5ab70"/>
        <function-ref name="set" scoped="" ref="0x7fd941b5ad00"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fd941b54020" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fd941b54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b54530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b546c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b54850"/>
        <function-ref name="get" scoped="" ref="0x7fd941b549e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b54b70"/>
        <function-ref name="set" scoped="" ref="0x7fd941b54d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b53020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd941b50930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b50930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b50cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b50e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd941b4f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b4f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b4f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd941b4f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b4f660"/>
        <function-ref name="get" scoped="" ref="0x7fd941b4f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd941b4f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd941b4fb10"/>
        <function-ref name="set" scoped="" ref="0x7fd941b4fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd941b4fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd941b4e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd941b4e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b4e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd941b51710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b51710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b51a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b51c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b51db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b50020"/>
        <function-ref name="get" scoped="" ref="0x7fd941b501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b50340"/>
        <function-ref name="set" scoped="" ref="0x7fd941b504d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b50660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd941b4b480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b4b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b4b800"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b4b990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd941b4bb20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b4bcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b4be40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd941b49020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b491b0"/>
        <function-ref name="get" scoped="" ref="0x7fd941b49340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd941b494d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd941b49660"/>
        <function-ref name="set" scoped="" ref="0x7fd941b497f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd941b49980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd941b49b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd941b49da0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd941b4c1b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b4c1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b4c530"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b4c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b4c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b4c9e0"/>
        <function-ref name="get" scoped="" ref="0x7fd941b4cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b4cd00"/>
        <function-ref name="set" scoped="" ref="0x7fd941b4b020"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b4b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd941b45020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b453a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b45530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd941b456c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b45850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b459e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd941b45b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b45d00"/>
        <function-ref name="get" scoped="" ref="0x7fd941b44020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd941b441b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd941b44340"/>
        <function-ref name="set" scoped="" ref="0x7fd941b444d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd941b44660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd941b447f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd941b44a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b44c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd941b47d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b47d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b46180"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b46310"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b464a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b46630"/>
        <function-ref name="get" scoped="" ref="0x7fd941b467c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b46950"/>
        <function-ref name="set" scoped="" ref="0x7fd941b46ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b46c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd941b41de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b41de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b40180"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b40310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd941b404a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b40630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b407c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd941b40950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b40ae0"/>
        <function-ref name="get" scoped="" ref="0x7fd941b40c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd941b40e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd941b3f020"/>
        <function-ref name="set" scoped="" ref="0x7fd941b3f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd941b3f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd941b3f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd941b3f760"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b3f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd941b42b70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b42b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b41020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b411b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b41340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b414d0"/>
        <function-ref name="get" scoped="" ref="0x7fd941b41660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b417f0"/>
        <function-ref name="set" scoped="" ref="0x7fd941b41980"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b41b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd941b3c930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b3c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b3ccb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b3ce40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd941b3b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b3b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b3b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd941b3b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b3b660"/>
        <function-ref name="get" scoped="" ref="0x7fd941b3b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd941b3b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd941b3bb10"/>
        <function-ref name="set" scoped="" ref="0x7fd941b3bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd941b3be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd941b3a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd941b3a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b3a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd941b3d710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b3d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b3da90"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b3dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b3ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b3c020"/>
        <function-ref name="get" scoped="" ref="0x7fd941b3c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b3c340"/>
        <function-ref name="set" scoped="" ref="0x7fd941b3c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b3c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd941b37480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b37480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b37800"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b37990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd941b37b20"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b37cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b37e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd941b36020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b361b0"/>
        <function-ref name="get" scoped="" ref="0x7fd941b36340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd941b364d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd941b36660"/>
        <function-ref name="set" scoped="" ref="0x7fd941b367f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd941b36980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd941b36b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd941b36da0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd941b381b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b381b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b38530"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b386c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b38850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b389e0"/>
        <function-ref name="get" scoped="" ref="0x7fd941b38b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b38d00"/>
        <function-ref name="set" scoped="" ref="0x7fd941b37020"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b371b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fd941b31020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fd941b31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b313a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b31530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd941b316c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b31850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b319e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd941b31b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b31d00"/>
        <function-ref name="get" scoped="" ref="0x7fd941b30020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd941b301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd941b30340"/>
        <function-ref name="set" scoped="" ref="0x7fd941b304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd941b30660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd941b307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd941b30a80"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b30c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fd941b34d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd941b34d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941b32180"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941b32310"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941b324a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941b32630"/>
        <function-ref name="get" scoped="" ref="0x7fd941b327c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941b32950"/>
        <function-ref name="set" scoped="" ref="0x7fd941b32ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941b32c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fd941b195a0" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fd941b195a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd941b19920"/>
        <function-ref name="disable" scoped="" ref="0x7fd941b19ab0"/>
        <function-ref name="captured" scoped="" ref="0x7fd941b19c40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd941b19dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fd941b1d210" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fd941b1d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd941b1d590"/>
        <function-ref name="disable" scoped="" ref="0x7fd941b1d720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd941b1d8b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd941b1da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fd941b1de30" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd941b1de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd941b1c1e0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941b1c370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd941b1c500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd941b1c690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fd941afc020" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fd941afc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd941afc3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fd941afc530"/>
        <function-ref name="captured" scoped="" ref="0x7fd941afc6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941afc850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941afc9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fd941afcb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd941afe1f0" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fd941afe1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd941afe570"/>
        <function-ref name="disable" scoped="" ref="0x7fd941afe700"/>
        <function-ref name="captured" scoped="" ref="0x7fd941afe890"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd941afea20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMicro" ref="0x7fd941af8020" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMicro" scoped="" ref="0x7fd941af8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249c6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd94249ca20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941af8c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fd941aface0" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd941aface0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941af9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fd941afecb0" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd941afecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd941afd0a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd941afd230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd941afd3c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd941afd550"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd941afd6e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd941afd870"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd941afda00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd941afdb90"/>
        <function-ref name="setControl" scoped="" ref="0x7fd941afdd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fd941afce40" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fd941afce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941afb1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941afb370"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd941afb500"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941afb690"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941afb820"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd941afb9b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941afbb40"/>
        <function-ref name="get" scoped="" ref="0x7fd941afbcd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd941afbe60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd941afa020"/>
        <function-ref name="set" scoped="" ref="0x7fd941afa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd941afa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd941afa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd941afa760"/>
        <function-ref name="clr" scoped="" ref="0x7fd941afa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd941af1020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fd941af1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941af1c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd941ae7300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd941ae7300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941ae5150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941ae5ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941ae5610"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941ae4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd941ae0020" loc="43:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd941ae0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249c6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd94249ca20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941ae0e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941adf800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941adf340"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941adfcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fd941ada120" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fd941ada120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249c6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd94249ca20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941ad9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941ad99a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941ad94e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941ad9e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fd941ad4a60" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd941ad4a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941ad4de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd941ad3020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd941ad31b0"/>
        <function-ref name="get" scoped="" ref="0x7fd941ad3340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd941ad34d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941ad3660"/>
        <function-ref name="getMode" scoped="" ref="0x7fd941ad37f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941ad3980"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941ad3b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fd941ad3ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd941ad3e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd941ad7990" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd941ad7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249c6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd94249ca20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941ad57c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941ad4170"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941ad5c80"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941ad4630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fd941acc6d0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fd941acc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249c6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd94249ca20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941aca5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941ac9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941acaa70"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941ac94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd941ace210" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd941ace210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249c6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd94249ca20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941acd090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941acda10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941acd550"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941acc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd941ae1cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterMicroToLocalTime"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fd941ae1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249c6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd94249ca20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941ac7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd941ac5020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterMicroToLocalTime"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd941ac5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249c6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd94249ca20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941ac5e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941ac4800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941ac4340"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941ac4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fd941ab7020" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fd941ab7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941ab73a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941ab7530"/>
        <function-ref name="disable" scoped="" ref="0x7fd941ab76c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941ab7850"/>
        <function-ref name="enable" scoped="" ref="0x7fd941ab79e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941ab7b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fd941aac020" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fd941aac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941aac3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941aac530"/>
        <function-ref name="disable" scoped="" ref="0x7fd941aac6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941aac850"/>
        <function-ref name="enable" scoped="" ref="0x7fd941aac9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941aacb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fd941ab4020" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fd941ab4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941ab43a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941ab4530"/>
        <function-ref name="disable" scoped="" ref="0x7fd941ab46c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941ab4850"/>
        <function-ref name="enable" scoped="" ref="0x7fd941ab49e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941ab4b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fd941ab2020" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fd941ab2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941ab23a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941ab2530"/>
        <function-ref name="disable" scoped="" ref="0x7fd941ab26c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941ab2850"/>
        <function-ref name="enable" scoped="" ref="0x7fd941ab29e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941ab2b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fd941abe060" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fd941abe060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941abe3e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941abe570"/>
        <function-ref name="disable" scoped="" ref="0x7fd941abe700"/>
        <function-ref name="edge" scoped="" ref="0x7fd941abe890"/>
        <function-ref name="enable" scoped="" ref="0x7fd941abea20"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941abebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fd941aae020" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fd941aae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941aae4a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941aae630"/>
        <function-ref name="disable" scoped="" ref="0x7fd941aae7c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941aae950"/>
        <function-ref name="enable" scoped="" ref="0x7fd941aaeae0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941aaec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fd941ab6020" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fd941ab6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941ab63a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941ab6530"/>
        <function-ref name="disable" scoped="" ref="0x7fd941ab66c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941ab6850"/>
        <function-ref name="enable" scoped="" ref="0x7fd941ab69e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941ab6b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fd941aab020" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fd941aab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941aab3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941aab530"/>
        <function-ref name="disable" scoped="" ref="0x7fd941aab6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941aab850"/>
        <function-ref name="enable" scoped="" ref="0x7fd941aab9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941aabb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fd941ab9170" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fd941ab9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941ab94f0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941ab9680"/>
        <function-ref name="disable" scoped="" ref="0x7fd941ab9810"/>
        <function-ref name="edge" scoped="" ref="0x7fd941ab99a0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941ab9b30"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941ab9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fd941ab1020" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fd941ab1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941ab13a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941ab1530"/>
        <function-ref name="disable" scoped="" ref="0x7fd941ab16c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941ab1850"/>
        <function-ref name="enable" scoped="" ref="0x7fd941ab19e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941ab1b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fd941ab8020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fd941ab8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941ab83a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941ab8530"/>
        <function-ref name="disable" scoped="" ref="0x7fd941ab86c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941ab8850"/>
        <function-ref name="enable" scoped="" ref="0x7fd941ab89e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941ab8b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fd941aad060" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fd941aad060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941aad3e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941aad570"/>
        <function-ref name="disable" scoped="" ref="0x7fd941aad700"/>
        <function-ref name="edge" scoped="" ref="0x7fd941aad890"/>
        <function-ref name="enable" scoped="" ref="0x7fd941aada20"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941aadbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fd941ab5020" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fd941ab5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941ab53a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941ab5530"/>
        <function-ref name="disable" scoped="" ref="0x7fd941ab56c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941ab5850"/>
        <function-ref name="enable" scoped="" ref="0x7fd941ab59e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941ab5b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fd941ab3020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fd941ab3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941ab33a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941ab3530"/>
        <function-ref name="disable" scoped="" ref="0x7fd941ab36c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941ab3850"/>
        <function-ref name="enable" scoped="" ref="0x7fd941ab39e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941ab3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fd941abf100" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fd941abf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941abf480"/>
        <function-ref name="fired" scoped="" ref="0x7fd941abf610"/>
        <function-ref name="disable" scoped="" ref="0x7fd941abf7a0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941abf930"/>
        <function-ref name="enable" scoped="" ref="0x7fd941abfac0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941abfc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fd941ab0020" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fd941ab0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941ab03a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941ab0530"/>
        <function-ref name="disable" scoped="" ref="0x7fd941ab06c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941ab0850"/>
        <function-ref name="enable" scoped="" ref="0x7fd941ab09e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941ab0b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fd941aa3bc0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fd941aa3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941aa2020"/>
        <function-ref name="fired" scoped="" ref="0x7fd941aa21b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941aa2340"/>
        <function-ref name="edge" scoped="" ref="0x7fd941aa24d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941aa2660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941aa27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fd941a99bc0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fd941a99bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941a98020"/>
        <function-ref name="fired" scoped="" ref="0x7fd941a981b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941a98340"/>
        <function-ref name="edge" scoped="" ref="0x7fd941a984d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941a98660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941a987f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fd941aa0bc0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fd941aa0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941a9f020"/>
        <function-ref name="fired" scoped="" ref="0x7fd941a9f1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941a9f340"/>
        <function-ref name="edge" scoped="" ref="0x7fd941a9f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941a9f660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941a9f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fd941a9ebc0" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fd941a9ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941a9d020"/>
        <function-ref name="fired" scoped="" ref="0x7fd941a9d1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941a9d340"/>
        <function-ref name="edge" scoped="" ref="0x7fd941a9d4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941a9d660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941a9d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fd941aa5c40" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fd941aa5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941aa4020"/>
        <function-ref name="fired" scoped="" ref="0x7fd941aa41b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941aa4340"/>
        <function-ref name="edge" scoped="" ref="0x7fd941aa44d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941aa4660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941aa47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fd941a9bbc0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fd941a9bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941a9a0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941a9a230"/>
        <function-ref name="disable" scoped="" ref="0x7fd941a9a3c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941a9a550"/>
        <function-ref name="enable" scoped="" ref="0x7fd941a9a6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941a9a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fd941aa2bc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fd941aa2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941aa1020"/>
        <function-ref name="fired" scoped="" ref="0x7fd941aa11b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941aa1340"/>
        <function-ref name="edge" scoped="" ref="0x7fd941aa14d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941aa1660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941aa17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fd941a98bc0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fd941a98bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941a97020"/>
        <function-ref name="fired" scoped="" ref="0x7fd941a971b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941a97340"/>
        <function-ref name="edge" scoped="" ref="0x7fd941a974d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941a97660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941a977f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fd941aaad30" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fd941aaad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941aa60e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941aa6270"/>
        <function-ref name="disable" scoped="" ref="0x7fd941aa6400"/>
        <function-ref name="edge" scoped="" ref="0x7fd941aa6590"/>
        <function-ref name="enable" scoped="" ref="0x7fd941aa6720"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941aa68b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fd941a9dbc0" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fd941a9dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941a9c020"/>
        <function-ref name="fired" scoped="" ref="0x7fd941a9c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941a9c340"/>
        <function-ref name="edge" scoped="" ref="0x7fd941a9c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941a9c660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941a9c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fd941aa4bc0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fd941aa4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941aa3020"/>
        <function-ref name="fired" scoped="" ref="0x7fd941aa31b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941aa3340"/>
        <function-ref name="edge" scoped="" ref="0x7fd941aa34d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941aa3660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941aa37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fd941a9ac40" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fd941a9ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941a99020"/>
        <function-ref name="fired" scoped="" ref="0x7fd941a991b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941a99340"/>
        <function-ref name="edge" scoped="" ref="0x7fd941a994d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941a99660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941a997f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fd941aa1bc0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fd941aa1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941aa0020"/>
        <function-ref name="fired" scoped="" ref="0x7fd941aa01b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941aa0340"/>
        <function-ref name="edge" scoped="" ref="0x7fd941aa04d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941aa0660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941aa07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fd941a9fbc0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fd941a9fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941a9e020"/>
        <function-ref name="fired" scoped="" ref="0x7fd941a9e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941a9e340"/>
        <function-ref name="edge" scoped="" ref="0x7fd941a9e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941a9e660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941a9e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fd941aa6c80" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fd941aa6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941aa50a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941aa5230"/>
        <function-ref name="disable" scoped="" ref="0x7fd941aa53c0"/>
        <function-ref name="edge" scoped="" ref="0x7fd941aa5550"/>
        <function-ref name="enable" scoped="" ref="0x7fd941aa56e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941aa5870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fd941a9cbc0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fd941a9cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941a9b020"/>
        <function-ref name="fired" scoped="" ref="0x7fd941a9b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941a9b340"/>
        <function-ref name="edge" scoped="" ref="0x7fd941a9b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fd941a9b660"/>
        <function-ref name="getValue" scoped="" ref="0x7fd941a9b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fd9419c4610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fd9419c4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd9419c4990"/>
        <function-ref name="fired" scoped="" ref="0x7fd9419c4b20"/>
        <function-ref name="disable" scoped="" ref="0x7fd9419c4cb0"/>
        <function-ref name="edge" scoped="" ref="0x7fd9419c4e40"/>
        <function-ref name="enable" scoped="" ref="0x7fd9419b7020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd9419b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fd9419c5a30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fd9419c5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9419c5db0"/>
        <function-ref name="disable" scoped="" ref="0x7fd9419c4020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd9419c41b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd9419c4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fd9419b5610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fd9419b5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd9419b5990"/>
        <function-ref name="fired" scoped="" ref="0x7fd9419b5b20"/>
        <function-ref name="disable" scoped="" ref="0x7fd9419b5cb0"/>
        <function-ref name="edge" scoped="" ref="0x7fd9419b5e40"/>
        <function-ref name="enable" scoped="" ref="0x7fd9419b4020"/>
        <function-ref name="getValue" scoped="" ref="0x7fd9419b41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fd9419b6a70" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fd9419b6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9419b6df0"/>
        <function-ref name="disable" scoped="" ref="0x7fd9419b5020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd9419b51b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd9419b5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd94172de50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd94172de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94172c410"/>
        <function-ref name="write" scoped="" ref="0x7fd94172c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd941736160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd941736160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9417364e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd941730e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd941730e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94172f210"/>
        <function-ref name="write" scoped="" ref="0x7fd94172f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd94172a880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd94172a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94172ac00"/>
        <function-ref name="write" scoped="" ref="0x7fd94172ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd9417220a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd9417220a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941722420"/>
        <function-ref name="write" scoped="" ref="0x7fd9417225b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd9417290a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd9417290a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941729420"/>
        <function-ref name="write" scoped="" ref="0x7fd9417295b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd941716500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd941716500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941716880"/>
        <function-ref name="write" scoped="" ref="0x7fd941716a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd941719500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd941719500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941719880"/>
        <function-ref name="write" scoped="" ref="0x7fd941719a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd941735490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd941735490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941735810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd94171f880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd94171f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94171fc00"/>
        <function-ref name="write" scoped="" ref="0x7fd94171fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd94171a500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd94171a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94171a880"/>
        <function-ref name="write" scoped="" ref="0x7fd94171aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd94172fe50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd94172fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94172e210"/>
        <function-ref name="write" scoped="" ref="0x7fd94172e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd94172ee50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd94172ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94172d210"/>
        <function-ref name="write" scoped="" ref="0x7fd94172d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd941724880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd941724880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941724c00"/>
        <function-ref name="write" scoped="" ref="0x7fd941724d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd9417260a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd9417260a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941726420"/>
        <function-ref name="write" scoped="" ref="0x7fd9417265b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd941729880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd941729880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941729c00"/>
        <function-ref name="write" scoped="" ref="0x7fd941729d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd941739a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd941739a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd941739e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd941737020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd9417371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd941734e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd941734e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9417331c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd941733490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd941733490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941733910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd94171dc80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd94171dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94171c0a0"/>
        <function-ref name="write" scoped="" ref="0x7fd94171c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd941733be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd941733be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941731020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd94171ace0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd94171ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9417190a0"/>
        <function-ref name="write" scoped="" ref="0x7fd941719230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd941734160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd941734160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9417344e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd94171f0a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd94171f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94171f420"/>
        <function-ref name="write" scoped="" ref="0x7fd94171f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd94172e670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd94172e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94172e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd94172eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd94172f670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd94172f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94172f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd94172fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd941737ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd941737ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941737e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd9417200a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd9417200a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941720420"/>
        <function-ref name="write" scoped="" ref="0x7fd9417205b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd941722880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd941722880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941722c00"/>
        <function-ref name="write" scoped="" ref="0x7fd941722d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd941720880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd941720880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941720c00"/>
        <function-ref name="write" scoped="" ref="0x7fd941720d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd941718ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd941718ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9417160a0"/>
        <function-ref name="write" scoped="" ref="0x7fd941716230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd941719ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd941719ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9417180a0"/>
        <function-ref name="write" scoped="" ref="0x7fd941718230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd941726880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd941726880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941726c00"/>
        <function-ref name="write" scoped="" ref="0x7fd941726d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd9417210a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd9417210a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941721420"/>
        <function-ref name="write" scoped="" ref="0x7fd9417215b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd94171bce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd94171bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94171a0a0"/>
        <function-ref name="write" scoped="" ref="0x7fd94171a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd941728880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd941728880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941728c00"/>
        <function-ref name="write" scoped="" ref="0x7fd941728d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd941716ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd941716ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd9417130a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd941713230"/>
        <function-ref name="write" scoped="" ref="0x7fd9417133c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd941713550"/>
        <function-ref name="readDone" scoped="" ref="0x7fd9417136e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd941737480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd941737480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941737800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd941730670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd941730670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9417309f0"/>
        <function-ref name="write" scoped="" ref="0x7fd941730b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd94172d670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd94172d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94172d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd94172db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd9417230a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd9417230a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941723420"/>
        <function-ref name="write" scoped="" ref="0x7fd9417235b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd9417280a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd9417280a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941728420"/>
        <function-ref name="write" scoped="" ref="0x7fd9417285b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd941723880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd941723880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941723c00"/>
        <function-ref name="write" scoped="" ref="0x7fd941723d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd94172c870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd94172c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94172cbf0"/>
        <function-ref name="write" scoped="" ref="0x7fd94172cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd9417367b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd9417367b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941736b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd94172a0a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd94172a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94172a420"/>
        <function-ref name="write" scoped="" ref="0x7fd94172a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd94173ae20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd94173ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9417391c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941739350"/>
        <function-ref name="request" scoped="" ref="0x7fd9417394e0"/>
        <function-ref name="granted" scoped="" ref="0x7fd941739670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941739800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd9417312f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd9417312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941731670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd941730020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd941730020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9417303a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd94171b500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd94171b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94171b880"/>
        <function-ref name="write" scoped="" ref="0x7fd94171ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd94171cce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd94171cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94171b0a0"/>
        <function-ref name="write" scoped="" ref="0x7fd94171b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd9417347b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd9417347b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941734b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd94171c500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd94171c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94171c880"/>
        <function-ref name="write" scoped="" ref="0x7fd94171ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd941718500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd941718500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941718880"/>
        <function-ref name="write" scoped="" ref="0x7fd941718a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd9417240a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd9417240a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941724420"/>
        <function-ref name="write" scoped="" ref="0x7fd9417245b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd941721880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd941721880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941721c00"/>
        <function-ref name="write" scoped="" ref="0x7fd941721d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd941736e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd941736e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9417351c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd941735ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd941735ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941735e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd9417270a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd9417270a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941727420"/>
        <function-ref name="write" scoped="" ref="0x7fd9417275b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd941731940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd941731940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941731cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd941727880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd941727880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941727c00"/>
        <function-ref name="write" scoped="" ref="0x7fd941727d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd94171d0a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd94171d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94171d820"/>
        <function-ref name="write" scoped="" ref="0x7fd94171d9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd9417139b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd9417139b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd941713d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd941712020"/>
        <function-ref name="write" scoped="" ref="0x7fd9417121b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd941712340"/>
        <function-ref name="readDone" scoped="" ref="0x7fd9417124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fd9419722c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fd9419722c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd941972640"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd9419727d0"/>
        <function-ref name="write" scoped="" ref="0x7fd941972960"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd941972af0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd941972c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd941973350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd941973350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd9419736d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd941973860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd9419739f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fd941971540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fd941971540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9419718c0"/>
        <function-ref name="write" scoped="" ref="0x7fd941971a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fd941970370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fd941970370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9419706f0"/>
        <function-ref name="write" scoped="" ref="0x7fd941970880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd9419744d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd9419744d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941974850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9419749e0"/>
        <function-ref name="request" scoped="" ref="0x7fd941974b70"/>
        <function-ref name="granted" scoped="" ref="0x7fd941974d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941973020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fd94196e1d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fd94196e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd94196e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fd9419592e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd9419592e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941959660"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9419597f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fd941969890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fd941969890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd941969c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd941969da0"/>
        <function-ref name="write" scoped="" ref="0x7fd941968020"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd9419681b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fd941968340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd94196b660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd94196b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd94196b9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd94196bb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd94196bd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fd941961c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd941961c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd941963020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fd941959b40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fd941959b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd941962020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd9419621b0"/>
        <function-ref name="isState" scoped="" ref="0x7fd941962340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd9419624d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fd941962660"/>
        <function-ref name="forceState" scoped="" ref="0x7fd9419627f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd941964060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fd941964060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9419643e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941964570"/>
        <function-ref name="request" scoped="" ref="0x7fd941964700"/>
        <function-ref name="granted" scoped="" ref="0x7fd941964890"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941964a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fd941968ba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fd941968ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941967020"/>
        <function-ref name="write" scoped="" ref="0x7fd9419671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fd941967a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fd941967a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941967db0"/>
        <function-ref name="write" scoped="" ref="0x7fd941965020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd941962a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd941962a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd941962df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd941960020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd9419601b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd941960340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd9419604d0"/>
        <function-ref name="get" scoped="" ref="0x7fd941960660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd9419607f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd941960e30"/>
        <function-ref name="set" scoped="" ref="0x7fd941960980"/>
        <function-ref name="led0On" scoped="" ref="0x7fd941960b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fd941960ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd94196a510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd94196a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd94196a890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd94196aa20"/>
        <function-ref name="request" scoped="" ref="0x7fd94196abb0"/>
        <function-ref name="granted" scoped="" ref="0x7fd94196ad40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941969020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fd941955bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fd941955bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd941954020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd9419541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fd9419658b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fd9419658b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941965c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd9418fa770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd9418fa770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd9418faaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd9418fac80"/>
        <function-ref name="isState" scoped="" ref="0x7fd9418fae10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd9418f6020"/>
        <function-ref name="requestState" scoped="" ref="0x7fd9418f61b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fd9418f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd9418f51d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd9418f51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd9418f5550"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd9418f56e0"/>
        <function-ref name="isState" scoped="" ref="0x7fd9418f5870"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd9418f5a00"/>
        <function-ref name="requestState" scoped="" ref="0x7fd9418f5b90"/>
        <function-ref name="forceState" scoped="" ref="0x7fd9418f5d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd9418f1020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd9418f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd9418f13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd9418f1b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd9418f1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd9418f0020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd9418f01b0"/>
        <function-ref name="isState" scoped="" ref="0x7fd9418f0340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd9418f04d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fd9418f0660"/>
        <function-ref name="forceState" scoped="" ref="0x7fd9418f07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd941760410" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd941760410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941760790"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941760920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd9418d7d90" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd9418d7d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd941760180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd9418d7140" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd9418d7140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9418d74c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9418d7650"/>
        <function-ref name="request" scoped="" ref="0x7fd9418d77e0"/>
        <function-ref name="granted" scoped="" ref="0x7fd9418d7970"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9418d7b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd940a09440" loc="82:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd940a09440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd940a097c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd940a09950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd940a08d70" loc="87:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd940a08d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd940a07180"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd940a07310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fd940a075a0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd940a075a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd940a07920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd940a09be0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd940a09be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd940a08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd940a0b770" loc="81:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd940a0b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd940a0baf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd940a0bc80"/>
        <function-ref name="request" scoped="" ref="0x7fd940a0be10"/>
        <function-ref name="granted" scoped="" ref="0x7fd940a09020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd940a091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd940a082b0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd940a082b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd940a08630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd940a087c0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd940a08950"/>
        <function-ref name="write" scoped="" ref="0x7fd940a08ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fd9418c46b0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9418c46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd9418c4a30"/>
        <function-ref name="configure" scoped="" ref="0x7fd9418c4bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd9418c2850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd9418c2850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9418c2bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9418c2d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fd9418c0a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd9418c0a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd9418c0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd9418c3020" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd9418c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd9418c33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fd9418c1690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fd9418c1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9418c1a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9418c1ba0"/>
        <function-ref name="request" scoped="" ref="0x7fd9418c1d30"/>
        <function-ref name="granted" scoped="" ref="0x7fd9418c0020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9418c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd9418c5430" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd9418c5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9418c57b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9418c5940"/>
        <function-ref name="request" scoped="" ref="0x7fd9418c5ad0"/>
        <function-ref name="granted" scoped="" ref="0x7fd9418c5c60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9418c5df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd9418c36a0" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd9418c36a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd9418c3a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd9418c3bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd9418c3d40"/>
        <function-ref name="write" scoped="" ref="0x7fd9418c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fd9418be2a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd9418be2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd9418be620"/>
        <function-ref name="txDone" scoped="" ref="0x7fd9418be7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fd941866250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd941866250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd9418665f0"/>
        <function-ref name="configure" scoped="" ref="0x7fd941866780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd941865c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fd941865c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941864020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9418641b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fd9418633e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fd9418633e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fd941863780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd941866a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fd941866a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd941866d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fd941863a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fd941863a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd941863dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd941862020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd9418621b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd941862340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd9418624d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd941862660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd9418627f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd941862980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd941862b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd941862ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd941862e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd941861020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd9418611b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd941861440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd9418615d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd941861760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd9418618f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fd941861a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd941861c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd941861da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd941860020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd9418601b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd941860340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd9418604d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd941860660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd9418609f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd941860b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd941860d10"/>
        <function-ref name="tx" scoped="" ref="0x7fd94185f020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd94185f1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd94185f340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd94185f4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd94185f660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd94185f7f0"/>
        <function-ref name="rx" scoped="" ref="0x7fd94185f980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd94185fb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd94185fca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd94185fe30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd94185e020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd94185e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd94185ec20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd94185ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd94185d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd94185d1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd94185d340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd94185d4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd94185d660"/>
        <function-ref name="get" scoped="" ref="0x7fd94185d7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd94185d980"/>
        <function-ref name="led2On" scoped="" ref="0x7fd94185c020"/>
        <function-ref name="set" scoped="" ref="0x7fd94185dca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd94185db10"/>
        <function-ref name="led0On" scoped="" ref="0x7fd94185de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fd9418645b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fd9418645b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941864950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941864ae0"/>
        <function-ref name="request" scoped="" ref="0x7fd941864c70"/>
        <function-ref name="granted" scoped="" ref="0x7fd941864e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941863020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd941867470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd941867470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941867810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9418679a0"/>
        <function-ref name="request" scoped="" ref="0x7fd941867b30"/>
        <function-ref name="granted" scoped="" ref="0x7fd941867cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd941867e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd941865060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd941865060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd9418653e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd941865570"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd941865700"/>
        <function-ref name="write" scoped="" ref="0x7fd941865890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fd94185e480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fd94185e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd94185e800"/>
        <function-ref name="txDone" scoped="" ref="0x7fd94185e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fd94185c2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fd94185c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd94185c670"/>
        <function-ref name="runTask" scoped="" ref="0x7fd94185c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fd94184dd10" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd94184dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd94184c0e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fd94184c270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fd941850840" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd941850840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd941850bc0"/>
        <function-ref name="stop" scoped="" ref="0x7fd941850d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fd9418520c0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd9418520c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd941852440"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd9418525d0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd941852760"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd9418528f0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd941852a80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd941852c10"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd941852da0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd941851020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd9418511b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd941851340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd9418514d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd941851660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd9418517f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd941851a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd941851c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd941851da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd94184f020"/>
        <function-ref name="isUart" scoped="" ref="0x7fd94184f1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd94184f340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd94184f4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd94184f660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd94184f7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd94184f980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd94184fb10"/>
        <function-ref name="getMode" scoped="" ref="0x7fd94184fca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd94184e220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd94184e3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd94184e540"/>
        <function-ref name="tx" scoped="" ref="0x7fd94184e6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd94184e860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd94184e9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd94184eb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd94184ed10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd94184d020"/>
        <function-ref name="rx" scoped="" ref="0x7fd94184d1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd94184d340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd94184d4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd94184d660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd94184d7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd94184d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fd941840cb0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fd941840cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94183f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94183f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94183f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94183f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94183f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94183f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94183fa00"/>
        <function-ref name="get" scoped="" ref="0x7fd94183fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94183fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94183e020"/>
        <function-ref name="set" scoped="" ref="0x7fd94183e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94183e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94183e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94183e760"/>
        <function-ref name="clr" scoped="" ref="0x7fd94183e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd941844460" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd941844460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd9418447e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fd941844970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fd94183ecb0" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fd94183ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94183d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94183d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94183d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94183d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94183d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94183d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94183da00"/>
        <function-ref name="get" scoped="" ref="0x7fd94183db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94183dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94183c020"/>
        <function-ref name="set" scoped="" ref="0x7fd94183c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94183c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94183c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94183c760"/>
        <function-ref name="clr" scoped="" ref="0x7fd94183c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fd94183ccb0" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fd94183ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94183b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94183b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd94183b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94183b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94183b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd94183b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94183ba00"/>
        <function-ref name="get" scoped="" ref="0x7fd94183bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd94183bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd94183a020"/>
        <function-ref name="set" scoped="" ref="0x7fd94183a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd94183a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd94183a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd94183a760"/>
        <function-ref name="clr" scoped="" ref="0x7fd94183a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fd941849970" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fd941849970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd941849cf0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd941849e80"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd941848030"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd9418481c0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd941848350"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd9418484e0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd941848670"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd941848800"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd941848990"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd941848b20"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd941848cb0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd941848e40"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd941847020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd9418472b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd941847440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd9418475d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd941847760"/>
        <function-ref name="isUart" scoped="" ref="0x7fd9418478f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd941847a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd941847c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd941847da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd941846020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd9418461b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd941846340"/>
        <function-ref name="getMode" scoped="" ref="0x7fd9418464d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd941846860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd9418469f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd941846b80"/>
        <function-ref name="tx" scoped="" ref="0x7fd941846d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd941845020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd9418451b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd941845340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd9418454d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd941845660"/>
        <function-ref name="rx" scoped="" ref="0x7fd9418457f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd941845980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd941845b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd941845ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd941845e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd941844020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fd9418490c0" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd9418490c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd941849440"/>
        <function-ref name="stop" scoped="" ref="0x7fd9418495d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fd941842cb0" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fd941842cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9418410a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941841230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd9418413c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941841550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd9418416e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd941841870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941841a00"/>
        <function-ref name="get" scoped="" ref="0x7fd941841b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd941841d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd941840020"/>
        <function-ref name="set" scoped="" ref="0x7fd9418401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd941840340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9418404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd941840760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9418408f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fd941844d30" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fd941844d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9418430e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941843270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fd941843400"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941843590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941843720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fd9418438b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941843a40"/>
        <function-ref name="get" scoped="" ref="0x7fd941843bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fd941843d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fd941842020"/>
        <function-ref name="set" scoped="" ref="0x7fd9418421b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fd941842340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fd9418424d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fd941842760"/>
        <function-ref name="clr" scoped="" ref="0x7fd9418428f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd940a00d90" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd940a00d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd9409ff180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd9409ff310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd9409f9020" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9409f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd9409f93a0"/>
        <function-ref name="configure" scoped="" ref="0x7fd9409f9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fd9409fa760" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fd9409fa760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd9409faae0"/>
        <function-ref name="txDone" scoped="" ref="0x7fd9409fac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd940a00140" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd940a00140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd940a004c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd940a00650"/>
        <function-ref name="request" scoped="" ref="0x7fd940a007e0"/>
        <function-ref name="granted" scoped="" ref="0x7fd940a00970"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd940a00b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fd9409ffd40" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fd9409ffd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fd9409fe0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fd9409fe270"/>
        <function-ref name="setUctl" scoped="" ref="0x7fd9409fe400"/>
        <function-ref name="enableUart" scoped="" ref="0x7fd9409fe590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fd9409fe720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fd9409fe8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fd9409fea40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fd9409febd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fd9409fed60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fd9409fd020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fd9409fd1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fd9409fd340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fd9409fd4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fd9409fd760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fd9409fd8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fd9409fda80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fd9409fdc10"/>
        <function-ref name="isUart" scoped="" ref="0x7fd9409fdda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fd9409fc020"/>
        <function-ref name="isSpi" scoped="" ref="0x7fd9409fc1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fd9409fc340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fd9409fc4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fd9409fc660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fd9409fc7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fd9409fc980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fd9409fcd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fd9409fb020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fd9409fb1b0"/>
        <function-ref name="tx" scoped="" ref="0x7fd9409fb340"/>
        <function-ref name="getUctl" scoped="" ref="0x7fd9409fb4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fd9409fb660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd9409fb7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fd9409fb980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fd9409fbb10"/>
        <function-ref name="rx" scoped="" ref="0x7fd9409fbca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fd9409fbe30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fd9409fa020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fd9409fa1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fd9409fa340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fd9409fa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd9409ff5a0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd9409ff5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd9409ff920"/>
        <function-ref name="userId" scoped="" ref="0x7fd9409ffab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd9417a52c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd9417a52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd9417a5640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd9417a57d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd9417a48a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd9417a48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd9417a4c20"/>
        <function-ref name="configure" scoped="" ref="0x7fd9417a4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd9417a81d0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd9417a81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd9417a8550"/>
        <function-ref name="txDone" scoped="" ref="0x7fd9417a86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd9417a6020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd9417a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9417a63a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9417a6530"/>
        <function-ref name="request" scoped="" ref="0x7fd9417a66c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd9417a6850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9417a69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd9417a5ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd9417a5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd9417a5e50"/>
        <function-ref name="userId" scoped="" ref="0x7fd9417a4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd9417a1e50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd9417a1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd94179f210"/>
        <function-ref name="userId" scoped="" ref="0x7fd94179f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fd9417a2060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fd9417a2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd9417a2400"/>
        <function-ref name="txDone" scoped="" ref="0x7fd9417a2590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fd9417a1840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fd9417a1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9417a1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fd9417a2990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fd9417a2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd9417a2d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fd9417a1060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fd9417a1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fd9417a13e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fd9417a1570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd94179c9e0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd94179c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd94179cd80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd94179b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd94179a770" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd94179a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd94179ab10"/>
        <function-ref name="configure" scoped="" ref="0x7fd94179aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd94179b270" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd94179b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd94179b5f0"/>
        <function-ref name="requested" scoped="" ref="0x7fd94179b780"/>
        <function-ref name="granted" scoped="" ref="0x7fd94179b910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd94179baa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd94179bc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd94179db60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd94179db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd94179c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd94179c1b0"/>
        <function-ref name="request" scoped="" ref="0x7fd94179c340"/>
        <function-ref name="granted" scoped="" ref="0x7fd94179c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd94179c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd94179be80" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd94179be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd94179a220"/>
        <function-ref name="userId" scoped="" ref="0x7fd94179a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd9409a3460" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd9409a3460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd9409a37e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd9409a3a70" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd9409a3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd9409a3df0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd9409a2020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd9409a21b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd9409a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd9409a0a60" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd9409a0a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd9409a0e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd94099f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd94099e790" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd94099e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd94099eb30"/>
        <function-ref name="configure" scoped="" ref="0x7fd94099ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd94099d020" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fd94099d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd94099d3a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd94099d530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd94099d6c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd94099d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd94099f270" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd94099f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd94099f5f0"/>
        <function-ref name="requested" scoped="" ref="0x7fd94099f780"/>
        <function-ref name="granted" scoped="" ref="0x7fd94099f910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd94099faa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd94099fc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd94099daa0" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd94099daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd94099de20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd94099b020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd94099b1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd94099b340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd94099b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd94099b660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd94099b7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fd94099be30"/>
        <function-ref name="set" scoped="" ref="0x7fd94099bb10"/>
        <function-ref name="led2On" scoped="" ref="0x7fd94099b980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd94099bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd9409a1c80" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd9409a1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9409a00a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9409a0230"/>
        <function-ref name="request" scoped="" ref="0x7fd9409a03c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd9409a0550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9409a06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd94099fe80" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd94099fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd94099e220"/>
        <function-ref name="userId" scoped="" ref="0x7fd94099e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd94099a160" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fd94099a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd94099a4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd94099a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd94177f020" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd94177f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd94177f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd94177f5f0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd94177f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd94177f970"/>
        <function-ref name="requested" scoped="" ref="0x7fd94177fb00"/>
        <function-ref name="granted" scoped="" ref="0x7fd94177fc90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd94177fe20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd94177e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fd941795880" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd941795880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd941795c00"/>
        <function-ref name="stop" scoped="" ref="0x7fd941795d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd94177e270" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd94177e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd94177e5f0"/>
        <function-ref name="userId" scoped="" ref="0x7fd94177e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd94096a0e0" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd94096a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd94096a460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd94096a6b0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd94096a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd94096aa30"/>
        <function-ref name="requested" scoped="" ref="0x7fd94096abc0"/>
        <function-ref name="granted" scoped="" ref="0x7fd94096ad50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd940969020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd9409691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fd94096b900" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd94096b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd94096bc80"/>
        <function-ref name="stop" scoped="" ref="0x7fd94096be10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd940969400" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd940969400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd940969780"/>
        <function-ref name="userId" scoped="" ref="0x7fd940969910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd9416fac60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd9416fac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f9210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd941705da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd941705da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941704180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd9416feb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd9416feb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416fc020"/>
        <function-ref name="write" scoped="" ref="0x7fd9416fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd9416f8670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd9416f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f89f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd9416f1e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd9416f1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f0210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd9416f8e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd9416f8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f7210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd9416e42f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd9416e42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416e4670"/>
        <function-ref name="write" scoped="" ref="0x7fd9416e4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd9416e62f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd9416e62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416e6670"/>
        <function-ref name="write" scoped="" ref="0x7fd9416e6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd941702120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd941702120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9417024a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd9416ec670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd9416ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416ec9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416ecb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd9416e72f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd9416e72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416e7670"/>
        <function-ref name="write" scoped="" ref="0x7fd9416e7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd9416fcc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd9416fcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416fb020"/>
        <function-ref name="write" scoped="" ref="0x7fd9416fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd9416fbc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd9416fbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416fa020"/>
        <function-ref name="write" scoped="" ref="0x7fd9416fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd9416f2670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd9416f2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f29f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd9416f4e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd9416f4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f3210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd9416f7670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd9416f7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f79f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd941706760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd941706760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd941706ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd941706c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd941706e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd941701aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd941701aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941701e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd941700120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd941700120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9417005a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd9416eba70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd9416eba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416ebdf0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd941700870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd941700870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941700bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd9416e7ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd9416e7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416e7e50"/>
        <function-ref name="write" scoped="" ref="0x7fd9416e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd941702dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd941702dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941701180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd9416ede50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd9416ede50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416ec210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd9416fb480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd9416fb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416fb800"/>
        <function-ref name="write" scoped="" ref="0x7fd9416fb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd9416fc480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd9416fc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416fc800"/>
        <function-ref name="write" scoped="" ref="0x7fd9416fc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd941705750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd941705750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941705ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd9416eee50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd9416eee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416ed210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416ed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd9416f0670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd9416f0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f09f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd9416ed670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd9416ed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416ed9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416edb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd9416e5ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd9416e5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416e5e50"/>
        <function-ref name="write" scoped="" ref="0x7fd9416e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd9416e6ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd9416e6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416e6e50"/>
        <function-ref name="write" scoped="" ref="0x7fd9416e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd9416f3670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd9416f3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f39f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd9416f0e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd9416f0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416ee210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd9416e9ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd9416e9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416e9e50"/>
        <function-ref name="write" scoped="" ref="0x7fd9416e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd9416f5670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd9416f5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f59f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd9416e4ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd9416e4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd9416e4e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd9416e3020"/>
        <function-ref name="write" scoped="" ref="0x7fd9416e31b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd9416e3340"/>
        <function-ref name="readDone" scoped="" ref="0x7fd9416e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd941705100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd941705100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941705480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd9416fe370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd9416fe370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416fe6f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416fe880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd9416fa480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd9416fa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416fa800"/>
        <function-ref name="write" scoped="" ref="0x7fd9416fa990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd9416f2e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd9416f2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f1210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd9416f7e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd9416f7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f5210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd9416f1670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd9416f1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f19f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd9416f9670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd9416f9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f99f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd941704450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd941704450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9417047d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd9416f9e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9416f9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f8210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd941707a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd941707a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941707e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941706020"/>
        <function-ref name="request" scoped="" ref="0x7fd9417061b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd941706340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9417064d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd9416ff020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd9416ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416ff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd9416ffcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd9416ffcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416fe0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd9416e92f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd9416e92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416e9670"/>
        <function-ref name="write" scoped="" ref="0x7fd9416e9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd9416eaad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd9416eaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416eae50"/>
        <function-ref name="write" scoped="" ref="0x7fd9416e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd941701450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd941701450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9417017d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd9416ea2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd9416ea2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416ea670"/>
        <function-ref name="write" scoped="" ref="0x7fd9416ea800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd9416e52f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd9416e52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416e5670"/>
        <function-ref name="write" scoped="" ref="0x7fd9416e5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd9416f3e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd9416f3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f2210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd9416ee670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd9416ee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416ee9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416eeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd941704aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd941704aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941704e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd941702770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd941702770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941702af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd9416f5e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd9416f5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f4210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd9416ff670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd9416ff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416ff9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd9416f4670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd9416f4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416f49f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416f4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd9416ece50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd9416ece50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416eb610"/>
        <function-ref name="write" scoped="" ref="0x7fd9416eb7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd9416e37a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd9416e37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd9416e3b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd9416e3cb0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416e3e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd9416e2020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd9416e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd9416cec60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd9416cec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416cc210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd9416d8da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd9416d8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d7180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd9416d1b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd9416d1b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416d0020"/>
        <function-ref name="write" scoped="" ref="0x7fd9416d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd9416cb670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd9416cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416cb9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416cbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd9416c4e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd9416c4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c3210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd9416cbe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd9416cbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416ca210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd9416b72f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd9416b72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416b7670"/>
        <function-ref name="write" scoped="" ref="0x7fd9416b7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd9416ba2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd9416ba2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416ba670"/>
        <function-ref name="write" scoped="" ref="0x7fd9416ba800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd9416d6120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd9416d6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d64a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd9416bf670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd9416bf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416bf9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416bfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd9416bb2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd9416bb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416bb670"/>
        <function-ref name="write" scoped="" ref="0x7fd9416bb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd9416d0c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd9416d0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416cf020"/>
        <function-ref name="write" scoped="" ref="0x7fd9416cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd9416cfc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd9416cfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416ce020"/>
        <function-ref name="write" scoped="" ref="0x7fd9416ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd9416c5670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd9416c5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c59f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd9416c8e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd9416c8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c7210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd9416ca670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd9416ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416ca9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416cab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd9416d9760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd9416d9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd9416d9ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd9416d9c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd9416d9e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd9416d5aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd9416d5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d5e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd9416d4120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd9416d4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd9416bea70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd9416bea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416bedf0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd9416d4870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd9416d4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd9416bbad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd9416bbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416bbe50"/>
        <function-ref name="write" scoped="" ref="0x7fd9416ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd9416d6dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd9416d6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd9416c1e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd9416c1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416bf210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416bf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd9416cf480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd9416cf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416cf800"/>
        <function-ref name="write" scoped="" ref="0x7fd9416cf990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd9416d0480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd9416d0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416d0800"/>
        <function-ref name="write" scoped="" ref="0x7fd9416d0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd9416d8750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd9416d8750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd9416c2e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd9416c2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c1210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd9416c3670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd9416c3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c39f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd9416c1670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd9416c1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c19f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd9416b9ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd9416b9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416b9e50"/>
        <function-ref name="write" scoped="" ref="0x7fd9416b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd9416baad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd9416baad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416bae50"/>
        <function-ref name="write" scoped="" ref="0x7fd9416b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd9416c7670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd9416c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c79f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd9416c3e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd9416c3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c2210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd9416bcad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd9416bcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416bce50"/>
        <function-ref name="write" scoped="" ref="0x7fd9416bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd9416c9670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd9416c9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c99f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd9416b7ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd9416b7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd9416b7e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd9416b6020"/>
        <function-ref name="write" scoped="" ref="0x7fd9416b61b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd9416b6340"/>
        <function-ref name="readDone" scoped="" ref="0x7fd9416b64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd9416d8100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd9416d8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d8480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd9416d1370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd9416d1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416d16f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416d1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd9416ce480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd9416ce480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416ce800"/>
        <function-ref name="write" scoped="" ref="0x7fd9416ce990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd9416c5e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd9416c5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c4210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd9416cae50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd9416cae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c9210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd9416c4670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd9416c4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c49f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd9416cc670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd9416cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416cc9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416ccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd9416d7450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd9416d7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d77d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd9416cce50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9416cce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416cb210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd9416db9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd9416db9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9416dbd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9416d9020"/>
        <function-ref name="request" scoped="" ref="0x7fd9416d91b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd9416d9340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9416d94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd9416d2020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd9416d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd9416d2cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd9416d2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd9416bc2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd9416bc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416bc670"/>
        <function-ref name="write" scoped="" ref="0x7fd9416bc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd9416bdad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd9416bdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416bde50"/>
        <function-ref name="write" scoped="" ref="0x7fd9416bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd9416d5450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd9416d5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d57d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd9416bd2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd9416bd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416bd670"/>
        <function-ref name="write" scoped="" ref="0x7fd9416bd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd9416b92f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd9416b92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416b9670"/>
        <function-ref name="write" scoped="" ref="0x7fd9416b9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd9416c7e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd9416c7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c5210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd9416c2670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd9416c2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c29f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd9416d7aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd9416d7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd9416d6770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd9416d6770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d6af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd9416c9e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd9416c9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c8210"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd9416d2670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd9416d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416d29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd9416c8670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd9416c8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416c89f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416c8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd9416bfe50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd9416bfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416be610"/>
        <function-ref name="write" scoped="" ref="0x7fd9416be7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd9416b67a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd9416b67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd9416b6b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd9416b6cb0"/>
        <function-ref name="write" scoped="" ref="0x7fd9416b6e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd9416b5020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd9416b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fd9416aeb20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd9416aeb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd9416aa020"/>
        <function-ref name="changed" scoped="" ref="0x7fd9416aa1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd9416aa340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd9416aa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fd9416add70" loc="40:../../../tos/platforms/shimmer/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fd9416add70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fd941696180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd941683cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd941683cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd9416820a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd941682230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd9416823c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd941682550"/>
        <function-ref name="setCca" scoped="" ref="0x7fd9416826e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd941682870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fd94167f990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd94167f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd94167fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fd941683020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fd941683020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9416833a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941683530"/>
        <function-ref name="modify" scoped="" ref="0x7fd9416836c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941683850"/>
        <function-ref name="resend" scoped="" ref="0x7fd9416839e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd9416866c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd9416866c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd941686a40"/>
        <function-ref name="stop" scoped="" ref="0x7fd941686bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fd941681150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fd941681150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd9416814d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd941679650" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd941679650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd9416799d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd941679b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd941679cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd941679e80"/>
        <function-ref name="setCca" scoped="" ref="0x7fd941678030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd9416781c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd9416717c0" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd9416717c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd941670d50"/>
        <function-ref name="clear" scoped="" ref="0x7fd94166f4c0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd941670620"/>
        <function-ref name="set" scoped="" ref="0x7fd94166fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fd941656020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd941656020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416563a0"/>
        <function-ref name="write" scoped="" ref="0x7fd941656530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fd941656890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd941656890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941656c10"/>
        <function-ref name="write" scoped="" ref="0x7fd941656da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fd9416785e0" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fd9416785e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd941678960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fd941659530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd941659530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9416598b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fd94166c880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fd94166c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd94166cc00"/>
        <function-ref name="disable" scoped="" ref="0x7fd94166cd90"/>
        <function-ref name="captured" scoped="" ref="0x7fd94166b020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd94166b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fd9416777f0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fd9416777f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd941674090"/>
        <function-ref name="fired" scoped="" ref="0x7fd941675090"/>
        <function-ref name="startAt" scoped="" ref="0x7fd941675a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd941675550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd941674550"/>
        <function-ref name="start" scoped="" ref="0x7fd9416766a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd941676bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd941674a00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd941674a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd941674d80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd941672020"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd9416721b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd941672340"/>
        <function-ref name="getPower" scoped="" ref="0x7fd9416724d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd941672660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fd94165b550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd94165b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94165b8d0"/>
        <function-ref name="write" scoped="" ref="0x7fd94165ba60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fd94165be00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd94165be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94165a1c0"/>
        <function-ref name="write" scoped="" ref="0x7fd94165a350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fd94164fd40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd94164fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9416530e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd941653270"/>
        <function-ref name="sfd" scoped="" ref="0x7fd941653400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd94167b8c0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd94167b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd94167bc40"/>
        <function-ref name="cancel" scoped="" ref="0x7fd94167bdd0"/>
        <function-ref name="modify" scoped="" ref="0x7fd941679020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9416791b0"/>
        <function-ref name="resend" scoped="" ref="0x7fd941679340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fd94165dd10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd94165dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd94165c0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd94165c270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd94165c400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fd941659c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd941659c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941658020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd941661820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fd941661820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941661ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941661d30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94165f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94165f1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd94165f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94165f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd94165f660"/>
        <function-ref name="clr" scoped="" ref="0x7fd94165f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd94167c820" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd94167c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd94167cba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd9416729a0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9416729a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd941672d20"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd941671020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd9416711b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fd941662b30" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd941662b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd94166c020"/>
        <function-ref name="isSet" scoped="" ref="0x7fd94166c1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd94166c340"/>
        <function-ref name="set" scoped="" ref="0x7fd94166c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fd9416583e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd9416583e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941658960"/>
        <function-ref name="write" scoped="" ref="0x7fd941658af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd94165d020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fd94165d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd94165d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd94165d530"/>
        <function-ref name="request" scoped="" ref="0x7fd94165d6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd94165d850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd94165d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fd94166b500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fd94166b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94166b980"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94166bb10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94166bca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94166be30"/>
        <function-ref name="get" scoped="" ref="0x7fd941661020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd9416611b0"/>
        <function-ref name="set" scoped="" ref="0x7fd941661340"/>
        <function-ref name="clr" scoped="" ref="0x7fd9416614d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fd941655130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd941655130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9416554b0"/>
        <function-ref name="write" scoped="" ref="0x7fd941655640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fd9416559c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd9416559c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941655d40"/>
        <function-ref name="write" scoped="" ref="0x7fd941654020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fd94165a6d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd94165a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd94165aa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fd94165fb40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fd94165fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd94165e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd94165e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd94165e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd94165e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd94165e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd94165e7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd94165e980"/>
        <function-ref name="clr" scoped="" ref="0x7fd94165eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd9416536c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd9416536c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd941653a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd941653bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd941653d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd941652020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd9416521b0"/>
        <function-ref name="get" scoped="" ref="0x7fd941652340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd9416524d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd941652b10"/>
        <function-ref name="set" scoped="" ref="0x7fd941652660"/>
        <function-ref name="led0On" scoped="" ref="0x7fd9416527f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd941652980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fd9416575e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9416575e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941657960"/>
        <function-ref name="write" scoped="" ref="0x7fd941657af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd94167b020" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd94167b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd94167b3a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd94167b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fd94165c780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd94165c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd94165cb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd94165cc90"/>
        <function-ref name="write" scoped="" ref="0x7fd94165ce20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd94165b020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd94165b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fd94165ade0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd94165ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941659180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fd941658e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd941658e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941657220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fd941678d70" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fd941678d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd941677180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd9415b5c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd9415b5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b4210"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd9415bf020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd9415bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415bf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd9415b9c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd9415b9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b7020"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd9415b3670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd9415b3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b39f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd9415ace50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd9415ace50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415ab210"/>
        <function-ref name="write" scoped="" ref="0x7fd9415ab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd9415b3e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd9415b3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b2210"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd94159f2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd94159f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94159f670"/>
        <function-ref name="write" scoped="" ref="0x7fd94159f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd9415a12f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd9415a12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a1670"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd9415be370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd9415be370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415be6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd9415a7670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd9415a7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a79f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd9415a22f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd9415a22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a2670"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd9415b7c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd9415b7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b6020"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd9415b6c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd9415b6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b5020"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd9415ad670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd9415ad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415ad9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9415adb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd9415afe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd9415afe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415ae210"/>
        <function-ref name="write" scoped="" ref="0x7fd9415ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd9415b2670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd9415b2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b29f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd9415c18f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd9415c18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd9415c1c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd9415c1e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd9415c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd9415bcd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd9415bcd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415bb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd9415bb370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd9415bb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415bb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd9415a6a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd9415a6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a6df0"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd9415bbac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd9415bbac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415bbe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd9415a2ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd9415a2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a2e50"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd9415bc060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd9415bc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415bc3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd9415a8e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd9415a8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a7210"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd9415b6480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd9415b6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b6800"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd9415b7480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd9415b7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b7800"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd9415c0940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd9415c0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415c0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd9415a9e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd9415a9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a8210"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd9415ab670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd9415ab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415ab9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9415abb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd9415a8670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd9415a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a89f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd9415a0ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd9415a0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a0e50"/>
        <function-ref name="write" scoped="" ref="0x7fd94159f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd9415a1ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd9415a1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a1e50"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd9415ae670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd9415ae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415ae9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9415aeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd9415abe50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd9415abe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a9210"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd9415a4ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd9415a4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a4e50"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd9415b0670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd9415b0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b09f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd94159fad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd94159fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd94159fe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd94159e020"/>
        <function-ref name="write" scoped="" ref="0x7fd94159e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd94159e340"/>
        <function-ref name="readDone" scoped="" ref="0x7fd94159e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd9415c02f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd9415c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415c0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd9415b9490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd9415b9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b9810"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd9415b5480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd9415b5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b5800"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd9415ade50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd9415ade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415ac210"/>
        <function-ref name="write" scoped="" ref="0x7fd9415ac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd9415b2e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd9415b2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b0210"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd9415ac670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd9415ac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415ac9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9415acb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd9415b4670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd9415b4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b49f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd9415bf670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd9415bf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415bf9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd9415b4e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9415b4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415b3210"/>
        <function-ref name="write" scoped="" ref="0x7fd9415b33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd9415c2c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd9415c2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9415c1020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9415c11b0"/>
        <function-ref name="request" scoped="" ref="0x7fd9415c1340"/>
        <function-ref name="granted" scoped="" ref="0x7fd9415c14d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9415c1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd9415ba160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd9415ba160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415ba4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd9415bae00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd9415bae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415b91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd9415a42f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd9415a42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a4670"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd9415a5ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd9415a5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a5e50"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd9415bc6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd9415bc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415bca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd9415a52f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd9415a52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a5670"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd9415a02f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd9415a02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a0670"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd9415aee50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd9415aee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415ad210"/>
        <function-ref name="write" scoped="" ref="0x7fd9415ad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd9415a9670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd9415a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a99f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd9415bfcc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd9415bfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415be0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd9415be9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd9415be9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415bed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd9415b0e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd9415b0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415af210"/>
        <function-ref name="write" scoped="" ref="0x7fd9415af3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd9415ba7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd9415ba7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9415bab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd9415af670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd9415af670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415af9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9415afb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd9415a7e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd9415a7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415a6610"/>
        <function-ref name="write" scoped="" ref="0x7fd9415a67a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd94159e7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd94159e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd94159eb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd94159ecb0"/>
        <function-ref name="write" scoped="" ref="0x7fd94159ee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd94159d020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd94159d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fd941592df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd941592df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd94158f1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd94158f350"/>
        <function-ref name="sfd" scoped="" ref="0x7fd94158f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd94158f7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd94158f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd94158fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fd94158d020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fd94158d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd94158d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd9415925c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd9415925c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd941592940"/>
        <function-ref name="stop" scoped="" ref="0x7fd941592ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fd941586380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fd941586380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941586700"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941586890"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941586a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941586bb0"/>
        <function-ref name="get" scoped="" ref="0x7fd941586d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941585020"/>
        <function-ref name="set" scoped="" ref="0x7fd9415851b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941585340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fd94157fb90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fd94157fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd94157e020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd94157e1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd94157e340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd94157e4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd94157e660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd94157e7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd94157e980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd94157eb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd94157eca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd94157ee30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd94157d020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd94157d1b0"/>
        <function-ref name="sync" scoped="" ref="0x7fd94157d340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd94157d5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd94157d760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fd9415689d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fd9415689d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd941568d50"/>
        <function-ref name="runTask" scoped="" ref="0x7fd941566020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd94157dd70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd94157dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd94157a330"/>
        <function-ref name="clear" scoped="" ref="0x7fd94157aa60"/>
        <function-ref name="isValid" scoped="" ref="0x7fd94157cba0"/>
        <function-ref name="set" scoped="" ref="0x7fd941579210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fd9415856b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fd9415856b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd941585a30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941585bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd941585d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941584020"/>
        <function-ref name="get" scoped="" ref="0x7fd9415841b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941584340"/>
        <function-ref name="set" scoped="" ref="0x7fd9415844d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd941584660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fd941578cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd941578cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415770a0"/>
        <function-ref name="write" scoped="" ref="0x7fd941577230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fd941577590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd941577590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941577910"/>
        <function-ref name="write" scoped="" ref="0x7fd941577aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fd9415756d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd9415756d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941575a50"/>
        <function-ref name="write" scoped="" ref="0x7fd941575be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd941580330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd941580330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd9415806b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd941580840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd9415809d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd941580b60"/>
        <function-ref name="getPower" scoped="" ref="0x7fd941580cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd941580e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fd941589550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fd941589550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9415898d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fd941589a60"/>
        <function-ref name="sfd" scoped="" ref="0x7fd941589bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fd9415813a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd9415813a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941581720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fd941587020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fd941587020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd9415873a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd941587530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd9415876c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd941587850"/>
        <function-ref name="get" scoped="" ref="0x7fd9415879e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd941587b70"/>
        <function-ref name="set" scoped="" ref="0x7fd941587d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd941586020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fd941574020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd941574020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415743a0"/>
        <function-ref name="write" scoped="" ref="0x7fd941574530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd94158a620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd94158a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd94158a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd94157f1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd94157f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd94157f560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd94157f6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd94157f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd941588020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd941588020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9415883a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd9415836e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fd9415836e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd941583a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd941583bf0"/>
        <function-ref name="request" scoped="" ref="0x7fd941583d80"/>
        <function-ref name="granted" scoped="" ref="0x7fd941582020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9415821b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fd941577e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd941577e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9415751c0"/>
        <function-ref name="write" scoped="" ref="0x7fd941575350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fd941582530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd941582530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd9415828b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd941582a40"/>
        <function-ref name="write" scoped="" ref="0x7fd941582bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd941582d60"/>
        <function-ref name="readDone" scoped="" ref="0x7fd941581020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fd9415748b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd9415748b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941574e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fd9415887c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fd9415887c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fd941588b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd941573150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd941573150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd9415734d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd941573660"/>
        <function-ref name="led1On" scoped="" ref="0x7fd9415737f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd941573980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd941573b10"/>
        <function-ref name="get" scoped="" ref="0x7fd941573ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd941573e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd9415724d0"/>
        <function-ref name="set" scoped="" ref="0x7fd941572020"/>
        <function-ref name="led0On" scoped="" ref="0x7fd9415721b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd941572340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fd9415783e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9415783e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941578760"/>
        <function-ref name="write" scoped="" ref="0x7fd9415788f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fd941579b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd941579b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941578020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fd941584a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fd941584a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd941584dd0"/>
        <function-ref name="disable" scoped="" ref="0x7fd941583020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fd9415831b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fd941583340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fd941581ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd941581ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd941580020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fd94158aca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fd94158aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd9415890a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd941589230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd941507a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd941507a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd941507df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd94150b670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd94150b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd94150b9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd94150bb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd94150bd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd941508020"/>
        <function-ref name="getPower" scoped="" ref="0x7fd9415081b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd941508340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd941506550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd941506550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd941505b00"/>
        <function-ref name="clear" scoped="" ref="0x7fd9415032a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd9415053d0"/>
        <function-ref name="set" scoped="" ref="0x7fd9415039d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fd9415070c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9415070c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd941507440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd9415075d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd941507760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fd9414fe480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd9414fe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd9414fe800"/>
        <function-ref name="isSet" scoped="" ref="0x7fd9414fe990"/>
        <function-ref name="cancel" scoped="" ref="0x7fd9414feb20"/>
        <function-ref name="set" scoped="" ref="0x7fd9414fecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd941502660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd941502660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd941501ce0"/>
        <function-ref name="clear" scoped="" ref="0x7fd9414ff460"/>
        <function-ref name="isValid" scoped="" ref="0x7fd9415015b0"/>
        <function-ref name="set" scoped="" ref="0x7fd9414ffb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd9415086e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fd9415086e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd941508a60"/>
        <function-ref name="noAck" scoped="" ref="0x7fd941508bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd941508d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd9414f8020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd9414f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd9414f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fd9414fdd20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd9414fdd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd9414fa0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd9414fa270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd9414fa400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd9414fa590"/>
        <function-ref name="getPower" scoped="" ref="0x7fd9414fa720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd9414fa8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd9414ef4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd9414ef4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd9414ef820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd9414ef9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9414efb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9414efcd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd9414efe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fd9414f8a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fd9414f8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd9414f5020"/>
        <function-ref name="clear" scoped="" ref="0x7fd9414f5750"/>
        <function-ref name="isValid" scoped="" ref="0x7fd9414f68d0"/>
        <function-ref name="set" scoped="" ref="0x7fd9414f5e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fd9414f9640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9414f9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd9414f99c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd9414f9b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd9414f9ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fd9414f08b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd9414f08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd9414f0c30"/>
        <function-ref name="isSet" scoped="" ref="0x7fd9414f0dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd9414ef020"/>
        <function-ref name="set" scoped="" ref="0x7fd9414ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fd9414ed3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fd9414ed3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd9414ec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fd9414ec6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd9414ec6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd9414eb3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd9414f4af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd9414f4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd9414f10d0"/>
        <function-ref name="clear" scoped="" ref="0x7fd9414f1800"/>
        <function-ref name="isValid" scoped="" ref="0x7fd9414f2970"/>
        <function-ref name="set" scoped="" ref="0x7fd9414f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd9414fac50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fd9414fac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd9414f9020"/>
        <function-ref name="noAck" scoped="" ref="0x7fd9414f91b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd9414f9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd94149dcf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fd94149dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd94149b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd94149a020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd94149a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd94149ae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941499800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941499340"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941499cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd941494700" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fd941494700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd941490c40"/>
        <function-ref name="fired" scoped="" ref="0x7fd9414911e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd941490020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd941491ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd94148f590"/>
        <function-ref name="gett0" scoped="" ref="0x7fd94148f110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd941491660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd941493390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd941490630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd941493860"/>
        <function-ref name="stop" scoped="" ref="0x7fd941493d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd94148fb80" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fd94148fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd94148d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd941497920" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd941497920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd941497ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd941460af0" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd941460af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd94145c390"/>
        <function-ref name="fired" scoped="" ref="0x7fd94145e360"/>
        <function-ref name="startAt" scoped="" ref="0x7fd94145ece0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd94145e820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd94145c850"/>
        <function-ref name="start" scoped="" ref="0x7fd94145f970"/>
        <function-ref name="stop" scoped="" ref="0x7fd94145fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd9414602a0" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd9414602a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd941460620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd940885260" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd940885260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd940883b30"/>
        <function-ref name="fired" scoped="" ref="0x7fd940884a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fd9408834e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd940883020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd940882020"/>
        <function-ref name="start" scoped="" ref="0x7fd940884090"/>
        <function-ref name="stop" scoped="" ref="0x7fd9408845a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd9408869d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd9408869d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd940886d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fd94086da80" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd94086da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd94086de00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd94086c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd94086c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd94086c340"/>
        <function-ref name="fired" scoped="" ref="0x7fd94086c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fd94086f020" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd94086f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd94086f3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd94086f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd94086f6c0"/>
        <function-ref name="get" scoped="" ref="0x7fd94086f850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd94086f9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd94086fb70"/>
        <function-ref name="getMode" scoped="" ref="0x7fd94086fd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd94086e020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd94086e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fd94086e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd94086e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fd94086e760" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd94086e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd94086eae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd94086ec70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd94086ee00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd94086d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd94086d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd94086d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd94086d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd94086d660"/>
        <function-ref name="setControl" scoped="" ref="0x7fd94086d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fd940863760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fd940863760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fd940863ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fd940863c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fd940863e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fd940862020"/>
        <function-ref name="fired" scoped="" ref="0x7fd9408621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fd940866dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fd940866dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd940865180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fd940865310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd9408654a0"/>
        <function-ref name="get" scoped="" ref="0x7fd940865630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd9408657c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd940865950"/>
        <function-ref name="getMode" scoped="" ref="0x7fd940865ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd940865c70"/>
        <function-ref name="overflow" scoped="" ref="0x7fd940865e00"/>
        <function-ref name="setMode" scoped="" ref="0x7fd940864020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fd9408641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd94086abf0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd94086abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd9408664e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd9408674e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd940867e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd9408679a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd9408669a0"/>
        <function-ref name="start" scoped="" ref="0x7fd940868a80"/>
        <function-ref name="stop" scoped="" ref="0x7fd940867020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd94086a360" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd94086a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd94086a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fd940864440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fd940864440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fd9408647c0"/>
        <function-ref name="getControl" scoped="" ref="0x7fd940864950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fd940864ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fd940864c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fd940864e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fd940863020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd9408631b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fd940863340"/>
        <function-ref name="setControl" scoped="" ref="0x7fd9408634d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd94147c080" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd94147c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd94147b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd94147b9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd94147b4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd94147be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fd9414730f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fd9414730f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941472020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9414729a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9414724e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941472e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd941477cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd941477cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd941476b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd941474550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd941474090"/>
        <function-ref name="overflow" scoped="" ref="0x7fd941474a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd94087f5f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd94087f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd94087de50"/>
        <function-ref name="fired" scoped="" ref="0x7fd94087ee00"/>
        <function-ref name="startAt" scoped="" ref="0x7fd94087d800"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd94087d340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd94087c340"/>
        <function-ref name="start" scoped="" ref="0x7fd94087e430"/>
        <function-ref name="stop" scoped="" ref="0x7fd94087e940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fd940879d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fd940879d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249ded0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fd94249c270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd940876670"/>
        <function-ref name="fired" scoped="" ref="0x7fd940877550"/>
        <function-ref name="startAt" scoped="" ref="0x7fd940876020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd940877a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd940876b30"/>
        <function-ref name="start" scoped="" ref="0x7fd940878b60"/>
        <function-ref name="stop" scoped="" ref="0x7fd940877090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd94087c9b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd94087c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd94087b7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9408791b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd94087bca0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd940879670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fd941429020" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fd941429020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd9414293a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd941429530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fd94142ecd0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fd94142ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd94142b670"/>
        <function-ref name="fired" scoped="" ref="0x7fd94142c550"/>
        <function-ref name="startAt" scoped="" ref="0x7fd94142b020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd94142ca10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd94142bb30"/>
        <function-ref name="start" scoped="" ref="0x7fd94142db60"/>
        <function-ref name="stop" scoped="" ref="0x7fd94142c090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd941434830" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd941434830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd941430cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fd941431300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd9414300d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd941431c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fd94142e660"/>
        <function-ref name="gett0" scoped="" ref="0x7fd94142e1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd941431780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd941432480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd9414306e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd941432950"/>
        <function-ref name="stop" scoped="" ref="0x7fd941432e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fd9413d9a00" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fd9413d9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd9413d9d80"/>
        <function-ref name="runTask" scoped="" ref="0x7fd9413d8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fd9413de640" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fd9413de640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd9413dbc40"/>
        <function-ref name="fired" scoped="" ref="0x7fd9413dc1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd9413db020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd9413dcae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd9413d9590"/>
        <function-ref name="gett0" scoped="" ref="0x7fd9413d9110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd9413dc660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd9413dd390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd9413db630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd9413dd860"/>
        <function-ref name="stop" scoped="" ref="0x7fd9413ddd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd9413e4150" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd9413e4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd9413e0700"/>
        <function-ref name="fired" scoped="" ref="0x7fd9413e3c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd9413e1a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd9413e15b0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd9413de090"/>
        <function-ref name="gett0" scoped="" ref="0x7fd9413e0ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd9413e1110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd9413e4d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd9413e00d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd9413e32a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd9413e3790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd9413d62b0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fd9413d62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd9413d5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd9413d5690" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fd9413d5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd9413d35b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd9413d2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd9413d3a70"/>
        <function-ref name="overflow" scoped="" ref="0x7fd9413d24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd9413cb8c0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd9413cb8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd9413b7cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fd9413b8320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd9413b70d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd9413b8c20"/>
        <function-ref name="getdt" scoped="" ref="0x7fd9413b6660"/>
        <function-ref name="gett0" scoped="" ref="0x7fd9413b61e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd9413b87a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd9413ba4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd9413b76e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd9413ba9b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd9413bae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd9413c22c0" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fd9413c22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd9413be870"/>
        <function-ref name="fired" scoped="" ref="0x7fd9413c1e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd9413bfc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd9413bf780"/>
        <function-ref name="getdt" scoped="" ref="0x7fd9413bd1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fd9413becf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd9413bf300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd9413c1020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd9413be260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd9413c14f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd9413c19c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fd9413a5c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fd9413a5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a4210"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fd9413af020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fd9413af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413af3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fd9413a9c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fd9413a9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a8020"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fd9413a3670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fd9413a3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a39f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fd94139ce50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fd94139ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94139b210"/>
        <function-ref name="write" scoped="" ref="0x7fd94139b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fd9413a3e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fd9413a3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a2210"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fd94138f2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fd94138f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94138f670"/>
        <function-ref name="write" scoped="" ref="0x7fd94138f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fd9413922f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fd9413922f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941392670"/>
        <function-ref name="write" scoped="" ref="0x7fd941392800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fd9413ae370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fd9413ae370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413ae6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fd941397670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fd941397670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413979f0"/>
        <function-ref name="write" scoped="" ref="0x7fd941397b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fd9413932f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fd9413932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941393670"/>
        <function-ref name="write" scoped="" ref="0x7fd941393800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fd9413a8c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fd9413a8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a7020"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fd9413a7c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fd9413a7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a5020"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fd94139d670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fd94139d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94139d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd94139db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fd9413a0e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fd9413a0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94139e210"/>
        <function-ref name="write" scoped="" ref="0x7fd94139e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fd9413a2670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fd9413a2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a29f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fd9413b1970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fd9413b1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fd9413b1cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fd9413b1e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fd9413b0030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fd9413add00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fd9413add00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413ab0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fd9413ab370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fd9413ab370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413ab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fd941396a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fd941396a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941396df0"/>
        <function-ref name="write" scoped="" ref="0x7fd941395020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fd9413abac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fd9413abac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413abe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fd941393ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fd941393ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941393e50"/>
        <function-ref name="write" scoped="" ref="0x7fd941392020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fd9413ad060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fd9413ad060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413ad3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fd941399e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fd941399e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941397210"/>
        <function-ref name="write" scoped="" ref="0x7fd9413973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fd9413a7480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fd9413a7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a7800"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fd9413a8480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fd9413a8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a8800"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fd9413b0950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fd9413b0950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413b0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fd94139ae50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fd94139ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941399210"/>
        <function-ref name="write" scoped="" ref="0x7fd9413993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fd94139b670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fd94139b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94139b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd94139bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fd941399670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fd941399670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413999f0"/>
        <function-ref name="write" scoped="" ref="0x7fd941399b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fd941390ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fd941390ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941390e50"/>
        <function-ref name="write" scoped="" ref="0x7fd94138f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fd941392ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fd941392ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941392e50"/>
        <function-ref name="write" scoped="" ref="0x7fd941390020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fd94139e670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fd94139e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94139e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd94139eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fd94139be50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fd94139be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94139a210"/>
        <function-ref name="write" scoped="" ref="0x7fd94139a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fd941394ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fd941394ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941394e50"/>
        <function-ref name="write" scoped="" ref="0x7fd941393020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fd9413a1670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fd9413a1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a19f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fd94138fad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fd94138fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd94138fe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd94138e020"/>
        <function-ref name="write" scoped="" ref="0x7fd94138e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd94138e340"/>
        <function-ref name="readDone" scoped="" ref="0x7fd94138e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fd9413b0300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fd9413b0300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413b0680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fd9413a9490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fd9413a9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a9810"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fd9413a5480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fd9413a5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a5800"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fd94139de50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fd94139de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94139c210"/>
        <function-ref name="write" scoped="" ref="0x7fd94139c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fd9413a2e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fd9413a2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a1210"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fd94139c670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fd94139c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94139c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd94139cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fd9413a4670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fd9413a4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a49f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fd9413af670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fd9413af670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413af9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fd9413a4e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fd9413a4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a3210"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd9413b2d00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd9413b2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9413b10a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9413b1230"/>
        <function-ref name="request" scoped="" ref="0x7fd9413b13c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd9413b1550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9413b16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fd9413aa160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fd9413aa160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413aa4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fd9413aae00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fd9413aae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413a91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fd9413942f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fd9413942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941394670"/>
        <function-ref name="write" scoped="" ref="0x7fd941394800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fd941395ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fd941395ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941395e50"/>
        <function-ref name="write" scoped="" ref="0x7fd941394020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fd9413ad6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fd9413ad6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413ada30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fd9413952f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fd9413952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941395670"/>
        <function-ref name="write" scoped="" ref="0x7fd941395800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fd9413902f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fd9413902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941390670"/>
        <function-ref name="write" scoped="" ref="0x7fd941390800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fd94139ee50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fd94139ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94139d210"/>
        <function-ref name="write" scoped="" ref="0x7fd94139d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fd94139a670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fd94139a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd94139a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fd94139ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fd9413afcc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fd9413afcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413ae0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fd9413ae9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fd9413ae9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413aed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fd9413a1e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fd9413a1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a0210"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fd9413aa7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fd9413aa7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fd9413aab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fd9413a0670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fd9413a0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd9413a09f0"/>
        <function-ref name="write" scoped="" ref="0x7fd9413a0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fd941397e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fd941397e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd941396610"/>
        <function-ref name="write" scoped="" ref="0x7fd9413967a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fd94138e7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fd94138e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fd94138eb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd94138ecb0"/>
        <function-ref name="write" scoped="" ref="0x7fd94138ee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fd94138d020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd94138d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fd941364a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fd941364a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd941364da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fd941363020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fd941362920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fd941362920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd941364560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd941368990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd941368990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd941368d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fd94135ea20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fd94135ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd94135eda0"/>
        <function-ref name="rand32" scoped="" ref="0x7fd94135d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fd94135f940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fd94135f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd94135e560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd94135f080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd94135f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd94135f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd941366aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd941366aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd941366e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd94134c020"/>
        <function-ref name="isState" scoped="" ref="0x7fd94134c1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd94134c340"/>
        <function-ref name="requestState" scoped="" ref="0x7fd94134c4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fd94134c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd9413423b0" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd9413423b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941342730"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9413428c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941342a50"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941342be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941342d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd9413454d0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd9413454d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941345850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9413459e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941345b70"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941345d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941342020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd94133d110" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd94133d110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd94133d490"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd94133d620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd94133d7b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd94133d940"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd94133dad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd941341d50" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd941341d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd94133e100"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd94133e290"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd94133e420"/>
        <function-ref name="cancel" scoped="" ref="0x7fd94133e5b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd94133e740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fd94133cbe0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fd94133cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd94133b020"/>
        <function-ref name="rand32" scoped="" ref="0x7fd94133b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd94133e9c0" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd94133e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd94133ed40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd94133b4b0" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd94133b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd94133b830"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd94133b9c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd94133bb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fd94133dd60" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd94133dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd94133c180"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd94133c310"/>
        <function-ref name="isState" scoped="" ref="0x7fd94133c4a0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd94133c630"/>
        <function-ref name="requestState" scoped="" ref="0x7fd94133c7c0"/>
        <function-ref name="forceState" scoped="" ref="0x7fd94133c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd94133fb00" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd94133fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd94133fe80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd94132a030"/>
        <function-ref name="isState" scoped="" ref="0x7fd94132a1c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd94132a350"/>
        <function-ref name="requestState" scoped="" ref="0x7fd94132a4e0"/>
        <function-ref name="forceState" scoped="" ref="0x7fd94132a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd941324b80" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd941324b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd941323020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd941327d00" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd941327d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9413240a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fd941324430" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd941324430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9413247b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd94131e770" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd94131e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd94131eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd94131e020" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd94131e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd94131e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd94131f1e0" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd94131f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd94131f560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd94131edf0" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd94131edf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd94131d1c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd94131d350"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd94131d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fd94131f8f0" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fd94131f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd94131fc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd9412f0200" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd9412f0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9412f0580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd9412f0890" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd9412f0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9412f0c10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9412f0da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9412ef020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd9412ef1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9412ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd9412f4c60" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd9412f4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9412f3020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9412f31b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9412f3340"/>
        <function-ref name="cancel" scoped="" ref="0x7fd9412f34d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9412f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd9412f2020" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fd9412f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9412f23a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9412f2530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9412f26c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd9412f2850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9412f29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd9412f3900" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd9412f3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9412f3c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd9412f4020" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd9412f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9412f43a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9412f4530"/>
        <function-ref name="request" scoped="" ref="0x7fd9412f46c0"/>
        <function-ref name="granted" scoped="" ref="0x7fd9412f4850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9412f49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd9412f2d50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd9412f2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9412f1100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd9412f1440" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fd9412f1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd9412f17c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd9412f1950"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9412f1ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9412f1c70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd9412f1e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd9412e6e20" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd9412e6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9412e51c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9412e5350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9412e54e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd9412e5670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9412e5800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd9412e5b50" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd9412e5b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9412e4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fd9412b7db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fd9412b7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd9412b5180"/>
        <function-ref name="runTask" scoped="" ref="0x7fd9412b5310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd9412e42f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd9412e42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd9412e4670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd9412e4800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd9412e4990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd9412e4b20"/>
        <function-ref name="getPower" scoped="" ref="0x7fd9412e4cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd9412e4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fd9412e8bb0" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fd9412e8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9412e7020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9412e71b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9412e7340"/>
        <function-ref name="cancel" scoped="" ref="0x7fd9412e74d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9412e7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd9412e3b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fd9412e3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd9412e2020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd9412e21b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd9412e2340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd9412e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd9412e3170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd9412e3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd9412e34f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd9412e3680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd9412e3810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fd9412e8500" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fd9412e8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9412e8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd9412eb910" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fd9412eb910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd9412ebc90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd9412ebe20"/>
        <function-ref name="request" scoped="" ref="0x7fd9412e9020"/>
        <function-ref name="granted" scoped="" ref="0x7fd9412e91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd9412e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fd9412e9660" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fd9412e9660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9412e99e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9412e9b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9412e9d00"/>
        <function-ref name="cancel" scoped="" ref="0x7fd9412e8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9412e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fd9412e79d0" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fd9412e79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9412e7d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fd9412e60d0" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fd9412e60d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd9412e6450"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd9412e65e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9412e6770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9412e6900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd9412e6a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd941297dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fd941297dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd941296180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd941296410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd941296410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd941296790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd941296920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd941296ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd941296c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd94128ab80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fd94128ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd941289020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd9412891b0"/>
        <function-ref name="start" scoped="" ref="0x7fd941289340"/>
        <function-ref name="stop" scoped="" ref="0x7fd9412894d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd941288860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd941288860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941288be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941288d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941287020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd9412871b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941287340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd941287690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd941287690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd941287a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd94128ece0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd94128ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd94128b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd94128b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd94128b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd94128b550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd94128b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd94128a080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd94128a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd94128a400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd94128a590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd94128a720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd94128a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fd941289800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fd941289800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd941289b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd941289d10"/>
        <function-ref name="isState" scoped="" ref="0x7fd941288020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd9412881b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fd941288340"/>
        <function-ref name="forceState" scoped="" ref="0x7fd9412884d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fd941287d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fd941287d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd941286180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd941286310"/>
        <function-ref name="start" scoped="" ref="0x7fd9412864a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd941286630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd94128b980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd94128b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd94128bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd9412832d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd9412832d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd941283650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd9412837e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd941283970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd941283b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fd941285580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fd941285580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fd941285900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fd941285a90"/>
        <function-ref name="isState" scoped="" ref="0x7fd941285c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fd941285db0"/>
        <function-ref name="requestState" scoped="" ref="0x7fd941284020"/>
        <function-ref name="forceState" scoped="" ref="0x7fd9412841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd941276d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd941276d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941275180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941275310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9412754a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941275630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9412757c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd941279350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fd941279350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9412796d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941279860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9412799f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941279b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941279d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd941276020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fd941276020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd9412763a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd941276530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd9412766c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd941276850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd9412769e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fd9412701c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd9412701c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd941270540"/>
        <function-ref name="noAck" scoped="" ref="0x7fd9412706d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd941270860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd941273410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fd941273410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd941273790"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd941273920"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd941273ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd941273c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd941273dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd941251690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fd941251690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd941251a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd941252860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fd941252860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd941252be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941252d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941251020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd9412511b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd941251340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fd94124f610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fd94124f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fd94124f990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fd94124fb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fd94124fcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fd94124fe40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fd94124e020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fd94124e1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd94124e340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fd94124e4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fd94124e660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fd94124e7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fd94124e980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fd94124eb10"/>
        <function-ref name="sync" scoped="" ref="0x7fd94124eca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd94124d020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fd94124d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fd9412538b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fd9412538b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd941253c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd941253dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd941252020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd9412521b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fd941252340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd9412524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd941254ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fd941254ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd9412530a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fd94124b1f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fd94124b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fd94124b570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fd94124b700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fd94124b890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fd94124ba20"/>
        <function-ref name="setCca" scoped="" ref="0x7fd94124bbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fd94124bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd941255a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fd941255a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd941255e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd941254020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd9412541b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd941254340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd9412544d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd941259020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fd941259020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd9412593a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd941259530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd9412596c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd941259850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd9412599e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd941258df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fd941258df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd9412561c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fd941251ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fd941251ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fd9412500a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fd941250230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fd9412503c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fd941250550"/>
        <function-ref name="getPower" scoped="" ref="0x7fd9412506e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fd941250870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fd94124d4d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd94124d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd94124d950"/>
        <function-ref name="changed" scoped="" ref="0x7fd94124dae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd94124dc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd94124de00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fd941250b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fd941250b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fd94124f020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fd94124f1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fd94124f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd941258210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fd941258210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd941258590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd94124ad30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fd94124ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd9412490e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd941249270"/>
        <function-ref name="led1On" scoped="" ref="0x7fd941249400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd941249590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd941249720"/>
        <function-ref name="get" scoped="" ref="0x7fd9412498b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd941249a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd9412481b0"/>
        <function-ref name="set" scoped="" ref="0x7fd941249bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fd941249d60"/>
        <function-ref name="led2On" scoped="" ref="0x7fd941248020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd941256470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fd941256470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd9412567f0"/>
        <function-ref name="source" scoped="" ref="0x7fd941256980"/>
        <function-ref name="address" scoped="" ref="0x7fd941256b10"/>
        <function-ref name="destination" scoped="" ref="0x7fd941256ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd941256e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd941255020"/>
        <function-ref name="type" scoped="" ref="0x7fd9412551b0"/>
        <function-ref name="setType" scoped="" ref="0x7fd941255340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd9412554d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd941255660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd9412557f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fd94124a0f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fd94124a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd94124a470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd94124a600"/>
        <function-ref name="request" scoped="" ref="0x7fd94124a790"/>
        <function-ref name="granted" scoped="" ref="0x7fd94124a920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd94124aab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd9411c18c0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestAMAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fd9411c18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fd94249d720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd94249da90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd9411bdcf0"/>
        <function-ref name="fired" scoped="" ref="0x7fd9411be320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd9411bd0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd9411bec20"/>
        <function-ref name="getdt" scoped="" ref="0x7fd9411bc660"/>
        <function-ref name="gett0" scoped="" ref="0x7fd9411bc1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd9411be7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd9411c04e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd9411bd6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd9411c09b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd9411c0e80"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd942987a40" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fd942985690" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fd94293e0e0" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fd942941350" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fd94293f990" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fd942942bf0" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fd942941ac0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fd942945df0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fd942942510" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fd94293f270" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fd942cc5020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fd942f863a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fd9428ec020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fd9428eecc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fd9428f0390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd942937b60"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fd942936650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fd9428ec890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fd9428eb7b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fd9428ee560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fd9428eb020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fd9428f0b30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fd9428ef350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fd9428efda0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd942937b60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fd942936650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd9428efb20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd942937b60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fd942936650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fd9428df0e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fd9428dc730" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fd9428dc4b0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fd9428db2e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd9428db060" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd9428deca0" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd9428de3e0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fd9428dfa90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fd9428df810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fd9428e63e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fd9428e6d60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd9428e6ae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fd9428e5790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fd9428e5510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fd9428e32a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fd9428e3020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd9428e3990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd9428f6810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fd9428f42a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fd9428f4020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fd9428f5020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd9428fcaa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fd9428f5760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd9428f99b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fd9428f6120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd9428f9270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd9428f70e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fd9428f79f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd9428f7770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fd9428f4cb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fd9428f4a30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd9428b51f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fd942a177f0" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fd942a14020" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fd942a17020" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fd942e9f810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd943045020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fd943044020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fd943045790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fd943039270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fd943039ac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd94279ebb0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd94279e260" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd94279e5e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd94279e910" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd942799620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd942799020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd942799350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd9427986d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd94279c2a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd94279c020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd94279b7f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd94279b210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd94279b560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd942794020" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd9427a0c60" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fd942793110" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd942794e10" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd94278f490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd942790e50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd94278f1c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd942790560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fd9427915e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd942791020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd942791350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fd94277ed30" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd94299f930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd94277eab0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fd942789a10" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd942789790" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fd94279fe50" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fd94278b950" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd94278b6d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fd9427863a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd942788d70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd942786110" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fd942787e50" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd942787870" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd942787bc0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fd942783810" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd942783590" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fd942780b90" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd9427805e0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fd942780900" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd94299f550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fd942784600" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd942784380" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fd94277d2f0" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd94299f930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd942781cf0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fd94277d060" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd94299f930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fd94277b190" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd94299f930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fd942779ad0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd942779850" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fd942777cd0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd942777a50" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fd942775020" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd942776ce0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd94276f5e0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd94276f020" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd94276f350" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd94276abb0" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd94276a5b0" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd94276a8e0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd94276dd20" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd94276c900" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd94276c680" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd94276be00" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd94276b820" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd94276bb70" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fd9426feab0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd9426fe830" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fd9426fc020" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd9426fdd30" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd942701d60" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd9426fd350" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fd9426f8410" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
              <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd9426fba80" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fd9426fbdd0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd9426f8130" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="52:../../../tos/platforms/shimmer2r/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fd9426ed020" loc="62:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="59:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fd9426ed7d0" loc="68:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="64:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fd9426eb020" loc="73:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="70:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fd9426ea020" loc="84:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="80:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fd9426e97d0" loc="101:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="97:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd9426e8020" loc="117:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="103:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fd9426eb7b0" loc="78:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="75:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd9426e8b90" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="120:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fd9426e8910" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fd9426ee850" loc="57:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="54:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fd9426ea800" loc="90:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="87:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fd9426e9020" loc="95:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="92:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7fd942680b00" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd9426804f0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7fd942680870" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7fd942684c70" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7fd942681b60" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd942681560" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7fd9426818d0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fd942663760" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd942662020" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7fd942661e10" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7fd9426616a0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7fd94266b770" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7fd94266abe0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7fd942667840" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd9426675c0" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7fd9426694a0" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7fd94266a350" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd94266a0d0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7fd9426660e0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7fd942669d50" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7fd942673d70" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7fd942672750" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7fd942673400" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7fd942673180" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7fd942671350" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd9426710d0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7fd94266f350" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7fd94266d020" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd94266fcf0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7fd94266daf0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fd94266d870" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd942538c40" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fd942538670" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd9425389b0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fd942533a70" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fd9425337f0" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fd942532890" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fd9425322c0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd942532600" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fd942534610" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fd9425312c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fd942530820" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd942530b60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd942531020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fd942533020" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd942537610" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fd942536bd0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd942537020" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd942537370" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd94250f5b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fd94250f330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7fd94250fdf0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fd94250ecf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fd94250e700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fd94250ea60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7fd94250bb50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fd9424b3270" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fd9424b3ba0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fd9424af070" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd9424d7450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fd9424d7870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fd9424b79c0" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fd9424b8990" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fd9424b8020" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fd9424b71f0" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fd9424b5470" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fd9424a8510" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fd9424abcb0" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fd94249f2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd94249f020" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fd9424a1780" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fd942478af0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fd942483790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fd942490530" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd942507360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fd942507ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd9424902b0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd942507360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fd942507ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fd942486870" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fd94248da40" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd9425022d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fd942502b10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd94248d7c0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd9425022d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fd942502b10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fd94247de70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fd942479480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fd94248d020" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd942504230"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fd9425049c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fd94248c270" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd9425022d0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fd942502b10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fd942488020" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fd942489d30" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fd942489610" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fd94247d740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fd94248f780" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd942504230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fd9425049c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd94248f500" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd942504230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fd9425049c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fd94248b420" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fd94247b5d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fd94248be00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fd94248bb80" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fd942487910" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fd9424860e0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fd94247e840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fd942481790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fd9424847e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fd94247d020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fd942482020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fd94247bcf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fd942488800" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fd942510320"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fd942509a10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fd94247a4c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fd942478350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fd94248cc10" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fd94248c990" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fd9424764d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd942476250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fd942490d10" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd942507360"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fd942507ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fd942484020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fd942482770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fd94247e020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd9424d7450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fd9424d7870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fd94247fcf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd9424d7450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fd9424d7870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fd94247f2a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fd9424ea420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fd9424ea840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fd94247f020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fd9424ea420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fd9424ea840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fd942476d90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fd94247acb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fd942487070" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fd942479be0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fd942481020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fd942483020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd94246f410" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd94246f410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd94246f650" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd94246f650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd94246e020" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd94246f650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd94246d120" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd94246e8a0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd94246d880" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd9423f9930" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fd9423bba50" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fd9423b91f0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fd9423b6b10" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd9423b6890" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fd9423bc2d0" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fd9423b80e0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fd9423b4490" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fd9423b9930" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd9423bb2b0" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fd9423b77c0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fd9423bca70" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd9423bd420" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fd9423b8860" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fd9423b6020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fd9423b7070" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fd9423bdb50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/platforms/shimmer/chips/msp430/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fd9423ce780" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fd9423e1c90" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fd9423d5020" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd9423d6ca0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fd9423e9390" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fd9423d27a0" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fd9423da020" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fd9423e3da0" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fd9423e0b70" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fd9423e4d40" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fd9423e4ac0" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fd9423e5270" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fd9423de900" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fd9423d3020" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fd9423ce020" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fd9423d6560" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fd9423c91f0" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fd9423c6880" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fd9423e8270" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fd9423de190" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fd9423dca90" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fd9423e3650" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fd9423ea190" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fd9423d7d40" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd9423d7ac0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fd9423ee9f0" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fd9423d2020" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fd9423cd020" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fd9423c89a0" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fd9423c6120" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fd9423d1790" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fd9423cd750" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fd9423d57b0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fd9423cb1f0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fd9423e8990" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fd9423d81f0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fd9423cc630" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fd9423d0790" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fd9423db760" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fd9423db4e0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fd9423c7190" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fd9423d7390" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fd9423d1020" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fd9423eac10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd9424c3240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fd9424c3660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fd9423ea990" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fd9424c3240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fd9424c3660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fd9423dfa00" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fd9423e6a80" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd9423e6800" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fd9423dc2a0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd9423dc020" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fd9423cb9c0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fd9423e43b0" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fd9423e6120" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fd9423d8bb0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fd9423d8930" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fd9423e9ac0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fd9423cde70" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fd9423d0020" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fd9423d3790" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fd9423da9f0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fd9423da770" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fd9423df2b0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fd9423e1530" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fd9423c7900" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fd9423e5bf0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fd9423e5970" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fd9423c99b0" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fd9423e0420" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fd9423c81f0" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fd9420f2730" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fd9420f2e60" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fd9420f3880" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fd9420f1cf0" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd9420f2020" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fd9420f15b0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd9420f7a90" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fd9420f3190" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fd942097020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fd942097880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fd942062e00" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fd94205f020" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fd942062570" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fd9420616d0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fd94205f950" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fd942054020" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd94205b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd942055d20" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd94205b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fd942057020" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fd942057b20" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd94205b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd9420578a0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd94205b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fd942055470" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fd94205b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fd941eebad0" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd941eebad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7fd941ee5270" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd941eebad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7fd941ee4cb0" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd941eebad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fd941ee4a30" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd941eebad0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7fd943a25c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7fd943a25c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7fd941ee2c70" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd941eebad0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fd941ee29f0" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7fd941ee8b20" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fd941ee7ad0" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fd941ee5e50" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd941eebad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7fd941ee83b0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fd941ee72d0" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7fd941ec0dd0" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7fd941ec0b50" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RC4" loc="1:../../../tos/platforms/shimmer2r/RC4.nc">
      <function command="" provided="0" name="lsb" ref="0x7fd941e6b4e0" loc="3:../../../tos/platforms/shimmer2r/RC4.nc">
        <interfacedef-ref qname="RC4"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd941e6b260" loc="3:../../../tos/platforms/shimmer2r/RC4.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc4" ref="0x7fd941e6cb80" loc="2:../../../tos/platforms/shimmer2r/RC4.nc">
        <interfacedef-ref qname="RC4"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd941e6c580" loc="2:../../../tos/platforms/shimmer2r/RC4.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="data_len" ref="0x7fd941e6c8f0" loc="2:../../../tos/platforms/shimmer2r/RC4.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="msb" ref="0x7fd941e6bde0" loc="4:../../../tos/platforms/shimmer2r/RC4.nc">
        <interfacedef-ref qname="RC4"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd941e6bb60" loc="4:../../../tos/platforms/shimmer2r/RC4.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd941e81350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd941e81350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd941e7a1f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd941e7fa60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fd941e7c820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd941e7c250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd941e7c590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fd941e7da60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fd941e79270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fd941e7a980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd941e7d270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fd941e80020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd941e81c40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fd941e7b820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd941e7b250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd941e7b590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fd941e80ae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd941e80860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd941e7f350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TEA" loc="1:../../../tos/platforms/shimmer2r/TEA.nc">
      <function command="" provided="0" name="decrypt" ref="0x7fd941e70c90" loc="3:../../../tos/platforms/shimmer2r/TEA.nc">
        <interfacedef-ref qname="TEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v0" ref="0x7fd941e706d0" loc="3:../../../tos/platforms/shimmer2r/TEA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
          <variable name="v1" ref="0x7fd941e70a00" loc="3:../../../tos/platforms/shimmer2r/TEA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lsb" ref="0x7fd941e6f5c0" loc="4:../../../tos/platforms/shimmer2r/TEA.nc">
        <interfacedef-ref qname="TEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd941e6f340" loc="4:../../../tos/platforms/shimmer2r/TEA.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="msb" ref="0x7fd941e6d020" loc="5:../../../tos/platforms/shimmer2r/TEA.nc">
        <interfacedef-ref qname="TEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd941e6fc40" loc="5:../../../tos/platforms/shimmer2r/TEA.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="encrypt" ref="0x7fd941e70040" loc="2:../../../tos/platforms/shimmer2r/TEA.nc">
        <interfacedef-ref qname="TEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v0" ref="0x7fd941e73a50" loc="2:../../../tos/platforms/shimmer2r/TEA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
          <variable name="v1" ref="0x7fd941e73d80" loc="2:../../../tos/platforms/shimmer2r/TEA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="XXTEA" loc="1:../../../tos/platforms/shimmer2r/XXTEA.nc">
      <function command="" provided="0" name="decrypt" ref="0x7fd941e675f0" loc="3:../../../tos/platforms/shimmer2r/XXTEA.nc">
        <interfacedef-ref qname="XXTEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7fd941e67020" loc="3:../../../tos/platforms/shimmer2r/XXTEA.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd941e67360" loc="3:../../../tos/platforms/shimmer2r/XXTEA.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lsb" ref="0x7fd941e66020" loc="4:../../../tos/platforms/shimmer2r/XXTEA.nc">
        <interfacedef-ref qname="XXTEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd941e67c70" loc="4:../../../tos/platforms/shimmer2r/XXTEA.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="msb" ref="0x7fd941e66920" loc="5:../../../tos/platforms/shimmer2r/XXTEA.nc">
        <interfacedef-ref qname="XXTEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd941e666a0" loc="5:../../../tos/platforms/shimmer2r/XXTEA.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="encrypt" ref="0x7fd941e69870" loc="2:../../../tos/platforms/shimmer2r/XXTEA.nc">
        <interfacedef-ref qname="XXTEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block" ref="0x7fd941e692a0" loc="2:../../../tos/platforms/shimmer2r/XXTEA.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd941e695e0" loc="2:../../../tos/platforms/shimmer2r/XXTEA.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fd941de9320" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd941de9320"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd941de9560" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd941de9560"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fd941de5510" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd941de9560"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941de5290" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fd941de36c0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941de3440" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fd941de62a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941de6020" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd941de29c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd941de9560"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941de23d0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fd941de2730" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd941de9560"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fd941dd6b50" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941dd6530" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fd941dd68c0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fd941dd4d00" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941dd4a80" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fd941dd7c60" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fd941dd72a0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fd941dd7020" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fd941dad980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941dad700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fd941db0c30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941db09b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fd941db1350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fd941db10d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fd941db3800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fd941db3580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fd941db1d80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fd941db1b00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fd941dafb10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941daf890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fd941da12b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fd941dacc50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd941da1020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fd941dbd810" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd941dbd230" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fd941dbd580" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fd941db9e20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd941db9820" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fd941db9b90" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fd941dbc350" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fd943a20110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd941dbc0d0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fd941dbbd30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd941dbbab0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fd941dbf9c0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd941dbf740" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fd941dbce80" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd941dbcc00" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fd941da5b30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941da58b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fd941daabc0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941daa5a0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fd941daa930" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fd941da8ad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941da8850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fd941da8020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941da79c0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fd941da7d50" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fd941da3b70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941da38f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fd941db6780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941db6500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420RxState" loc="41:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
      <documentation loc="33:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <short>&#10; strictly for manipulating the receiver prior to radio start-up&#10; so that we can run without reception and/or cca under certain circumstances&#10;&#10; </short>
        <long>&#10; strictly for manipulating the receiver prior to radio start-up&#10; so that we can run without reception and/or cca under certain circumstances&#10;&#10; @author Steve Ayer&#10; @date   February, 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="enableRx" ref="0x7fd941d8b680" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <interfacedef-ref qname="CC2420RxState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fd941d8b400" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x7fd941d8a030" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <interfacedef-ref qname="CC2420RxState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fd941d8bd80" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd941d7ace0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd941d7a720" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fd941d7aa50" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd941d78030" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fd941d75930" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd941d77ab0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fd941d75360" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd941d75690" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd941d772b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fd941d78bc0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd941d77020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fd941d797c0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fd941d79540" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fd941d72b50" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fd941d72350" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fd941d6b020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941d6cc90" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fd941d6c490" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fd9429da720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fd9429d7090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941d6c190" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fd941d6a360" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7fd9429d7b90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fd9429d5b80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941d6a060" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fd941d80a30" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fd941d7eb20" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fd941d7e350" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fd941d82190" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fd941d801f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fd941d7f2d0" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fd941d7faf0" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fd941d829f0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fd941d65a70" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fd941d66020" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fd941d652a0" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fd941d65020" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fd941d66790" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fd941d6fd20" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fd941d6faa0" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fd941d67800" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fd941d67580" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fd941d049b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fd941d043d0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fd941d04720" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fd941d053b0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fd941d07a50" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fd941d073e0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fd941d077c0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fd941d0dd70" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd941d0daf0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fd941d05c30" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fd941d09a00" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fd941d09780" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fd941d0a020" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fd941d0cc40" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fd941d03c10" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fd941d08b90" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fd941d08910" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fd941d033e0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fd941d0a7a0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fd941dd1020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fd941dd1780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fd941d09020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fd941d0d350" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fd941d0c520" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fd941d081f0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fd941d01920" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd941d01920"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fd941cfe270" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd941cfc020" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd941d01920"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fd941cfe9f0" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fd941cfed10" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd941d01920"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd941cd22a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd9429dc8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd941cd2020" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd941cd2d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd9429dc8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd941cd2b00" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fd941cf02d0" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fd941dd1020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fd941dd1780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd941cef490" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd941cef490"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd941cef6d0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd941cef6d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd941cea2d0" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd941cef6d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd941ced2b0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fd941cec900" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd941cef6d0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd941cef6d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd941cec330" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd941cef6d0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fd941cec670" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd941cef6d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd941ceda90" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fd941ceaac0" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd941cef6d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd941cee2a0" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd941cef6d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd941cee020" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd941cef6d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd941ceead0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fd941cdbaf0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fd941cdaab0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fd941cda350" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd94299f930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fd941cdb2b0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd94299f930"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fd941ce2b40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd94299f930"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd941cdb020" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd94299fd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fd941ccb540" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd9429dc8d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fd941cd62c0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd9429dc8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd941cd83d0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd941cd8c40" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd941cd6020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd941cd5a80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd9429dc8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fd941cd6b90" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd941cd5490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd941cd57e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fd941cde190" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd941ce0960" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fd941ce01f0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fd941ce38d0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fd941b1a020" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd941b191f0" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fd941b1a9c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd941b1a740" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fd941b1b700" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd941b0f6d0" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd941b0f6d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd941b0c020" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd941abc2b0" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd941abad50" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd941abdaf0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fd941aba530" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fd941aba2b0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fd941abd350" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fd941abcab0" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fd9419a7810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fd9419a50e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fd9419a5920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fd94197e420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd94197fe10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd94197e190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fd941979700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd94197ad90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd941979110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd941979460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd94197a020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd9429dc8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd94197b970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd94197bcc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fd94197f020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fd9429dc8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd9419819d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd941981d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd94197db90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd94197d250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd94197d5a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd94197d8f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd94195fa40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fd94195f0d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fd94195f460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd94195f7a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd94195b020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fd94195e2a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fd94195e630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd94195e970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd943a1f520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd94195ece0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fd9419618f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fd941961670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fd9418c8120" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fd9424ea420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fd9424ea840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fd9418d0d60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd9418d0ae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fd9418cb2a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd9418cb020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fd9418cc610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd9418cbd30" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd9418cbab0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fd941853b80" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd941850420" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fd9417912b0" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fd94167f580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fd94164f9e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fd94164f020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fd94164f750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fd9416517f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fd941651020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd941654d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fd943a1f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fd9416652a0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd943a1f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941665020" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fd94166a2a0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd943049090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd94166a020" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd9416622a0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941662020" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd9416642a0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd941664020" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd94298f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fd94298ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fd9413655e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd9413655e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fd9413622a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd943040c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd9413655e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fd941362020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd9413655e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
