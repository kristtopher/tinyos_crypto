<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="44:BtStreamAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f2ba3bdd9f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f2ba46f5680"/></to>
    </wire>
    <wire loc="72:../../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f2ba46f5680"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f2ba452d590"/></to>
    </wire>
    <wire loc="47:BtStreamAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2ba3bc02a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2ba3e7a020"/></to>
    </wire>
    <wire loc="52:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2ba3e7a020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2ba3e76a70"/></to>
    </wire>
    <wire loc="50:BtStreamAppC.nc">
      <from><interface-ref name="SampleTimerInit" scoped="" ref="0x7f2ba3bd9160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba38a6760"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba38a6760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba265b340"/></to>
    </wire>
    <wire loc="51:BtStreamAppC.nc">
      <from><interface-ref name="SampleTimer" scoped="" ref="0x7f2ba3b92850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2ba38a4020"/></to>
    </wire>
    <wire loc="53:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2ba38a4020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2ba2654020"/></to>
    </wire>
    <wire loc="53:BtStreamAppC.nc">
      <from><interface-ref name="SetupTimer" scoped="" ref="0x7f2ba3ba0a10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba389e640"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba389e640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2ba38951d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:BtStreamAppC.nc">
      <from><interface-ref name="BlinkTimerInit" scoped="" ref="0x7f2ba3bd9830"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba37b5340"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba37b5340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba255c380"/></to>
    </wire>
    <wire loc="56:BtStreamAppC.nc">
      <from><interface-ref name="BlinkTimer" scoped="" ref="0x7f2ba3b9c340"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2ba37b5b90"/></to>
    </wire>
    <wire loc="53:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2ba37b5b90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2ba2555020"/></to>
    </wire>
    <wire loc="60:BtStreamAppC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2ba379fe40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2ba37af9a0"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2ba37af9a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2ba37a75f0"/></to>
    </wire>
    <wire loc="61:BtStreamAppC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f2ba3b8c1a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2ba37a0b60"/></to>
    </wire>
    <wire loc="64:BtStreamAppC.nc">
      <from><interface-ref name="BluetoothInit" scoped="" ref="0x7f2ba3bdc0f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba3795d90"/></to>
    </wire>
    <wire loc="62:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba3795d90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba370dc00"/></to>
    </wire>
    <wire loc="65:BtStreamAppC.nc">
      <from><interface-ref name="BTStdControl" scoped="" ref="0x7f2ba3b8b340"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2ba379a6f0"/></to>
    </wire>
    <wire loc="60:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2ba379a6f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2ba370c2e0"/></to>
    </wire>
    <wire loc="66:BtStreamAppC.nc">
      <from><interface-ref name="Bluetooth" scoped="" ref="0x7f2ba3b74380"/></from>
      <to><interface-ref name="Bluetooth" scoped="" ref="0x7f2ba3797020"/></to>
    </wire>
    <wire loc="61:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="Bluetooth" scoped="" ref="0x7f2ba3797020"/></from>
      <to><interface-ref name="Bluetooth" scoped="" ref="0x7f2ba370caa0"/></to>
    </wire>
    <wire loc="69:BtStreamAppC.nc">
      <from><interface-ref name="AccelInit" scoped="" ref="0x7f2ba3bdc790"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba34b3020"/></to>
    </wire>
    <wire loc="44:../../../../tos/platforms/shimmer2r/AccelC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba34b3020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba34b3e40"/></to>
    </wire>
    <wire loc="70:BtStreamAppC.nc">
      <from><interface-ref name="Accel" scoped="" ref="0x7f2ba3bc2020"/></from>
      <to><interface-ref name="Accel" scoped="" ref="0x7f2ba34b6820"/></to>
    </wire>
    <wire loc="45:../../../../tos/platforms/shimmer2r/AccelC.nc">
      <from><interface-ref name="Accel" scoped="" ref="0x7f2ba34b6820"/></from>
      <to><interface-ref name="Accel" scoped="" ref="0x7f2ba34ae510"/></to>
    </wire>
    <wire loc="53:../../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2ba46f7d10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba3890e50"/></to>
    </wire>
    <wire loc="49:../../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2ba46f7d10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba3c13020"/></to>
    </wire>
    <wire loc="103:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2ba46f7d10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba26aae50"/></to>
    </wire>
    <wire loc="59:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2ba46f7d10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba4408540"/></to>
    </wire>
    <wire loc="65:../../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2ba46f7d10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba3c40a60"/></to>
    </wire>
    <wire loc="73:BtStreamAppC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2ba46f7d10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba34b42b0"/></to>
    </wire>
    <wire loc="45:../../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba34b42b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba349f850"/></to>
    </wire>
    <wire loc="74:BtStreamAppC.nc">
      <from><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f2ba3baa410"/></from>
      <to><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f2ba34b4940"/></to>
    </wire>
    <wire loc="44:../../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f2ba34b4940"/></from>
      <to><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f2ba34a3d00"/></to>
    </wire>
    <wire loc="75:BtStreamAppC.nc">
      <from><interface-ref name="DMA0" scoped="" ref="0x7f2ba3b51970"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7f2ba33f1590"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Channel0" scoped="" ref="0x7f2ba33f1590"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f2ba32e9020"/></to>
    </wire>
    <wire loc="78:BtStreamAppC.nc">
      <from><interface-ref name="GyroInit" scoped="" ref="0x7f2ba3bdce30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba32962f0"/></to>
    </wire>
    <wire loc="48:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba32962f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba32926c0"/></to>
    </wire>
    <wire loc="79:BtStreamAppC.nc">
      <from><interface-ref name="GyroStdControl" scoped="" ref="0x7f2ba3bc1da0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2ba3296930"/></to>
    </wire>
    <wire loc="49:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2ba3296930"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2ba3292d00"/></to>
    </wire>
    <wire loc="80:BtStreamAppC.nc">
      <from><interface-ref name="GyroBoard" scoped="" ref="0x7f2ba3bd35f0"/></from>
      <to><interface-ref name="GyroBoard" scoped="" ref="0x7f2ba3293120"/></to>
    </wire>
    <wire loc="50:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="GyroBoard" scoped="" ref="0x7f2ba3293120"/></from>
      <to><interface-ref name="GyroBoard" scoped="" ref="0x7f2ba328f4e0"/></to>
    </wire>
    <wire loc="83:BtStreamAppC.nc">
      <from><interface-ref name="MagInit" scoped="" ref="0x7f2ba3bdb4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba3294bc0"/></to>
    </wire>
    <wire loc="55:../../../../tos/platforms/shimmer2/chips/hmc5843/MagnetometerC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba3294bc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba32116e0"/></to>
    </wire>
    <wire loc="84:BtStreamAppC.nc">
      <from><interface-ref name="Magnetometer" scoped="" ref="0x7f2ba3bc8630"/></from>
      <to><interface-ref name="Magnetometer" scoped="" ref="0x7f2ba32132f0"/></to>
    </wire>
    <wire loc="56:../../../../tos/platforms/shimmer2/chips/hmc5843/MagnetometerC.nc">
      <from><interface-ref name="Magnetometer" scoped="" ref="0x7f2ba32132f0"/></from>
      <to><interface-ref name="Magnetometer" scoped="" ref="0x7f2ba3211d30"/></to>
    </wire>
    <wire loc="87:BtStreamAppC.nc">
      <from><interface-ref name="StrainInit" scoped="" ref="0x7f2ba3bdbba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba31360c0"/></to>
    </wire>
    <wire loc="45:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGaugeC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba31360c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba3135c90"/></to>
    </wire>
    <wire loc="88:BtStreamAppC.nc">
      <from><interface-ref name="StrainGauge" scoped="" ref="0x7f2ba3bc3990"/></from>
      <to><interface-ref name="StrainGauge" scoped="" ref="0x7f2ba3136700"/></to>
    </wire>
    <wire loc="46:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGaugeC.nc">
      <from><interface-ref name="StrainGauge" scoped="" ref="0x7f2ba3136700"/></from>
      <to><interface-ref name="StrainGauge" scoped="" ref="0x7f2ba3132360"/></to>
    </wire>
    <wire loc="91:BtStreamAppC.nc">
      <from><interface-ref name="DigitalHeartInit" scoped="" ref="0x7f2ba3bda390"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba3137460"/></to>
    </wire>
    <wire loc="52:../../../../tos/platforms/shimmer/chips/rmcm01/DigitalHeartRateC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba3137460"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba3121900"/></to>
    </wire>
    <wire loc="92:BtStreamAppC.nc">
      <from><interface-ref name="DigitalHeartRate" scoped="" ref="0x7f2ba3bc1690"/></from>
      <to><interface-ref name="DigitalHeartRate" scoped="" ref="0x7f2ba3137ae0"/></to>
    </wire>
    <wire loc="53:../../../../tos/platforms/shimmer/chips/rmcm01/DigitalHeartRateC.nc">
      <from><interface-ref name="DigitalHeartRate" scoped="" ref="0x7f2ba3137ae0"/></from>
      <to><interface-ref name="DigitalHeartRate" scoped="" ref="0x7f2ba311e020"/></to>
    </wire>
    <wire loc="95:BtStreamAppC.nc">
      <from><interface-ref name="GsrInit" scoped="" ref="0x7f2ba3bdaa20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba3109df0"/></to>
    </wire>
    <wire loc="43:../../../../tos/platforms/shimmer/chips/gsr/GsrC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba3109df0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba3105a70"/></to>
    </wire>
    <wire loc="96:BtStreamAppC.nc">
      <from><interface-ref name="Gsr" scoped="" ref="0x7f2ba3bb53d0"/></from>
      <to><interface-ref name="Gsr" scoped="" ref="0x7f2ba3106430"/></to>
    </wire>
    <wire loc="44:../../../../tos/platforms/shimmer/chips/gsr/GsrC.nc">
      <from><interface-ref name="Gsr" scoped="" ref="0x7f2ba3106430"/></from>
      <to><interface-ref name="Gsr" scoped="" ref="0x7f2ba31020e0"/></to>
    </wire>
    <wire loc="99:BtStreamAppC.nc">
      <from><interface-ref name="BtCommandParser" scoped="" ref="0x7f2ba3b4d8d0"/></from>
      <to><interface-ref name="BtCommandParser" scoped="" ref="0x7f2ba30d2160"/></to>
    </wire>
    <wire loc="43:BtCommandParserC.nc">
      <from><interface-ref name="BtCommandParser" scoped="" ref="0x7f2ba30d2160"/></from>
      <to><interface-ref name="BtCommandParser" scoped="" ref="0x7f2ba30cf270"/></to>
    </wire>
    <wire loc="102:BtStreamAppC.nc">
      <from><interface-ref name="InternalFlash" scoped="" ref="0x7f2ba3b48940"/></from>
      <to><interface-ref name="InternalFlash" scoped="" ref="0x7f2ba30be0c0"/></to>
    </wire>
    <wire loc="106:BtStreamAppC.nc">
      <from><interface-ref name="DockInterrupt" scoped="" ref="0x7f2ba3b43a70"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f2ba362ca30"/></to>
    </wire>
    <wire loc="109:BtStreamAppC.nc">
      <from><interface-ref name="UserButton" scoped="" ref="0x7f2ba3b471c0"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f2ba30a6020"/></to>
    </wire>
    <wire loc="60:../../../../tos/platforms/shimmer/UserButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f2ba30a6020"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f2ba308d840"/></to>
    </wire>
    <wire loc="112:BtStreamAppC.nc">
      <from><interface-ref name="CRYPTO" scoped="" ref="0x7f2ba3b3e020"/></from>
      <to><interface-ref name="CRYPTO" scoped="" ref="0x7f2ba306daa0"/></to>
    </wire>
    <wire loc="6:../../../../tos/platforms/shimmer2r/CRYPTOC.nc">
      <from><interface-ref name="CRYPTO" scoped="" ref="0x7f2ba306daa0"/></from>
      <to><interface-ref name="CRYPTO" scoped="" ref="0x7f2ba3066680"/></to>
    </wire>
    <wire loc="115:BtStreamAppC.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f2ba3b023a0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7f2ba405b9a0"/></to>
    </wire>
    <wire loc="493:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f2ba405b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f2d740"/></to>
    </wire>
    <wire loc="116:BtStreamAppC.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f2ba3b003a0"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7f2ba40599a0"/></to>
    </wire>
    <wire loc="494:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f2ba40599a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f27100"/></to>
    </wire>
    <wire loc="120:BtStreamAppC.nc">
      <from><interface-ref name="FastClockInit" scoped="" ref="0x7f2ba3afe390"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba2d098e0"/></to>
    </wire>
    <wire loc="47:../../../../tos/platforms/shimmer/chips/msp430/FastClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba2d098e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba2d030c0"/></to>
    </wire>
    <wire loc="121:BtStreamAppC.nc">
      <from><interface-ref name="FastClock" scoped="" ref="0x7f2ba3afbe30"/></from>
      <to><interface-ref name="FastClock" scoped="" ref="0x7f2ba2d06020"/></to>
    </wire>
    <wire loc="48:../../../../tos/platforms/shimmer/chips/msp430/FastClockC.nc">
      <from><interface-ref name="FastClock" scoped="" ref="0x7f2ba2d06020"/></from>
      <to><interface-ref name="FastClock" scoped="" ref="0x7f2ba2d036f0"/></to>
    </wire>
    <wire loc="66:../../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f2ba3c3aa20"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f2ba3c69bf0"/></to>
    </wire>
    <wire loc="67:../../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2ba3c37440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2ba3c70020"/></to>
    </wire>
    <wire loc="63:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2ba3c70020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2ba2b3cb40"/></to>
    </wire>
    <wire loc="68:../../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2ba3c360c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2ba3c70c30"/></to>
    </wire>
    <wire loc="64:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2ba3c70c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2ba44777e0"/></to>
    </wire>
    <wire loc="71:../../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f2ba3c1abe0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f2ba3c3a1a0"/></to>
    </wire>
    <wire loc="67:../../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f2ba452dc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f2ba4dbf3a0"/></to>
    </wire>
    <wire loc="53:../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f2ba4dbf3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f2ba4797c30"/></to>
    </wire>
    <wire loc="68:../../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f2ba452c6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba46f6c00"/></to>
    </wire>
    <wire loc="46:../../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba46f6c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba46f2a90"/></to>
    </wire>
    <wire loc="71:../../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2ba452cdc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f2ba46f7d10"/></to>
    </wire>
    <wire loc="47:../../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f2ba46ee1e0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f2ba46ef910"/></to>
    </wire>
    <wire loc="46:../../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f2ba46ef910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba46c1850"/></to>
    </wire>
    <wire loc="48:../../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f2ba46ee8c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba46f18a0"/></to>
    </wire>
    <wire loc="57:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f2ba46ed020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba3e4d2e0"/></to>
    </wire>
    <wire loc="46:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba46c1850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba46a83c0"/></to>
    </wire>
    <wire loc="47:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2ba46b8de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2ba46a8a70"/></to>
    </wire>
    <wire loc="48:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2ba4a404c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2ba46a7cc0"/></to>
    </wire>
    <wire loc="113:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f2ba4664a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2ba45a26d0"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f2ba4652410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2ba459ab30"/></to>
    </wire>
    <wire loc="108:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f2ba465bd10"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2ba45a7160"/></to>
    </wire>
    <wire loc="149:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f2ba463e020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2ba4581cb0"/></to>
    </wire>
    <wire loc="107:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f2ba4660020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2ba45a8480"/></to>
    </wire>
    <wire loc="148:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f2ba4646570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2ba4581020"/></to>
    </wire>
    <wire loc="170:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f2ba463b020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2ba4569cb0"/></to>
    </wire>
    <wire loc="154:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f2ba464da50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2ba457a220"/></to>
    </wire>
    <wire loc="99:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f2ba466b020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2ba45f79d0"/></to>
    </wire>
    <wire loc="135:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f2ba4640020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2ba45902f0"/></to>
    </wire>
    <wire loc="134:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f2ba4648890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2ba4591610"/></to>
    </wire>
    <wire loc="133:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f2ba46518c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2ba4592220"/></to>
    </wire>
    <wire loc="115:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f2ba465ac70"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2ba45a07a0"/></to>
    </wire>
    <wire loc="156:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f2ba463d020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2ba45782f0"/></to>
    </wire>
    <wire loc="140:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f2ba464f020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2ba458a6d0"/></to>
    </wire>
    <wire loc="114:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f2ba4660da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2ba45a1ac0"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f2ba466d7b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba4605540"/></to>
    </wire>
    <wire loc="155:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f2ba46453e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2ba4579610"/></to>
    </wire>
    <wire loc="106:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f2ba466a5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2ba45a9020"/></to>
    </wire>
    <wire loc="161:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f2ba464b020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2ba45736d0"/></to>
    </wire>
    <wire loc="101:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f2ba4655dc0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2ba45b0a90"/></to>
    </wire>
    <wire loc="142:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f2ba463f020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2ba45887a0"/></to>
    </wire>
    <wire loc="100:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f2ba4661140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2ba45b1de0"/></to>
    </wire>
    <wire loc="141:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f2ba4647700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2ba4589ac0"/></to>
    </wire>
    <wire loc="163:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f2ba463c020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2ba45717a0"/></to>
    </wire>
    <wire loc="147:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f2ba464e5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2ba4583b30"/></to>
    </wire>
    <wire loc="120:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f2ba4654b70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba45fe3e0"/></to>
    </wire>
    <wire loc="162:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f2ba46441f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2ba4572ac0"/></to>
    </wire>
    <wire loc="128:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f2ba4641020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2ba4598cb0"/></to>
    </wire>
    <wire loc="169:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f2ba4643020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2ba4569020"/></to>
    </wire>
    <wire loc="127:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f2ba4649a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2ba4598020"/></to>
    </wire>
    <wire loc="168:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f2ba464a5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2ba456bb30"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f2ba4603450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2ba4604d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f2ba4603aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f2ba4564a90"/></to>
    </wire>
    <wire loc="96:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2ba4602120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f2ba4561260"/></to>
    </wire>
    <wire loc="102:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba45af930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba4605540"/></to>
    </wire>
    <wire loc="103:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2ba45ac020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2ba4604d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba45a6020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba4605540"/></to>
    </wire>
    <wire loc="110:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2ba45a57a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2ba4604d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba459f610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba4605540"/></to>
    </wire>
    <wire loc="117:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2ba459dc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2ba4604d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f2ba45fc2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2ba45fdbf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f2ba45fc940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f2ba45619f0"/></to>
    </wire>
    <wire loc="123:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2ba45fb020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f2ba4560240"/></to>
    </wire>
    <wire loc="129:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba4597b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba45fe3e0"/></to>
    </wire>
    <wire loc="130:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2ba45952f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2ba45fdbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba458f160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba45fe3e0"/></to>
    </wire>
    <wire loc="137:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2ba458e7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2ba45fdbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba4587610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba45fe3e0"/></to>
    </wire>
    <wire loc="144:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2ba4586c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2ba45fdbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba4580b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba45fe3e0"/></to>
    </wire>
    <wire loc="151:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2ba457e2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2ba45fdbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba4577160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba45fe3e0"/></to>
    </wire>
    <wire loc="158:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2ba45767a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2ba45fdbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba4570610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba45fe3e0"/></to>
    </wire>
    <wire loc="165:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2ba456fc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2ba45fdbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba4568b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba45fe3e0"/></to>
    </wire>
    <wire loc="172:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2ba45662f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f2ba45fdbf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4796b70"/></to>
    </wire>
    <wire loc="55:../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f2ba47912c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f2ba4db13b0"/></to>
    </wire>
    <wire loc="65:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2ba44777e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2ba440ed60"/></to>
    </wire>
    <wire loc="65:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2ba3c6f8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2ba4474470"/></to>
    </wire>
    <wire loc="66:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2ba4474470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2ba440f6c0"/></to>
    </wire>
    <wire loc="66:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2ba3c6c020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2ba4472b20"/></to>
    </wire>
    <wire loc="67:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2ba4472b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2ba440da10"/></to>
    </wire>
    <wire loc="60:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2ba2b3b910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2ba44d4ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2ba2b3a590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2ba4474470"/></to>
    </wire>
    <wire loc="54:../../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2ba44d4ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2ba4488580"/></to>
    </wire>
    <wire loc="55:../../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2ba4487400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2ba447d3f0"/></to>
    </wire>
    <wire loc="63:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2ba447d3f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2ba4464300"/></to>
    </wire>
    <wire loc="56:../../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2ba4486060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2ba4474470"/></to>
    </wire>
    <wire loc="57:../../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2ba4485720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2ba44777e0"/></to>
    </wire>
    <wire loc="169:../../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f2ba4484480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f2ba4484c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2ba44793b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2ba4408b90"/></to>
    </wire>
    <wire loc="67:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2ba4408b90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2ba43f6c40"/></to>
    </wire>
    <wire loc="64:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2ba44771d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2ba440f0d0"/></to>
    </wire>
    <wire loc="69:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba4408540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba43f65f0"/></to>
    </wire>
    <wire loc="60:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2ba44022b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2ba4465330"/></to>
    </wire>
    <wire loc="69:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2ba440b4a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2ba4404790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2ba440a120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2ba4405c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f2ba43fd970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f2ba3c87a30"/></to>
    </wire>
    <wire loc="64:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2ba4404790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2ba42c3de0"/></to>
    </wire>
    <wire loc="65:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2ba4405c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2ba42c36c0"/></to>
    </wire>
    <wire loc="66:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f2ba42c2c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f2ba43fd970"/></to>
    </wire>
    <wire loc="70:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2ba43ee760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2ba44022b0"/></to>
    </wire>
    <wire loc="71:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2ba42c0920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2ba44022b0"/></to>
    </wire>
    <wire loc="72:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2ba42b6cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2ba44022b0"/></to>
    </wire>
    <wire loc="74:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f2ba42c1590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f2ba43ea530"/></to>
    </wire>
    <wire loc="75:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f2ba42c1e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f2ba43efa40"/></to>
    </wire>
    <wire loc="77:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f2ba43e47e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f2ba42bce00"/></to>
    </wire>
    <wire loc="78:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f2ba43df780"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2ba42910c0"/></to>
    </wire>
    <wire loc="49:../../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2ba42910c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2ba3c9a0c0"/></to>
    </wire>
    <wire loc="80:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f2ba42aed20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f2ba42918d0"/></to>
    </wire>
    <wire loc="45:../../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f2ba42918d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f2ba3ca0440"/></to>
    </wire>
    <wire loc="332:../../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f2ba438c6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f2ba43c44f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f2ba4390c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f2ba4389a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f2ba42be020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f2ba42be800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:../../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f2ba428f020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f2ba3c9f440"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f2ba3c9f440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f2ba4227d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f2ba3ca0440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f2ba4228670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2ba3c9e020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2ba3c9a920"/></to>
    </wire>
    <wire loc="51:../../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2ba3c99020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2ba3ca1020"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2ba3ca1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2ba422ec90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2ba3ca1c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2ba2a80a90"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2ba2a80a90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2ba3e002c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2ba42211d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2ba3c9e020"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba2a72020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba42258e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f2ba4224e50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2ba2a81e00"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2ba2a81e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2ba3e01020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2ba421d710"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2ba2a7a440"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2ba2a7a440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f2ba3e044d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba42258e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba4190dc0"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f2ba4227d00"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f2ba418e890"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f2ba4228670"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f2ba418f6d0"/></to>
    </wire>
    <wire loc="53:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2ba422ec90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2ba4190020"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2ba418c3e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2ba42211d0"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f2ba418d5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f2ba4224e50"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2ba41875b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2ba421d710"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f2ba418ca50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2ba417db60"/></to>
    </wire>
    <wire loc="85:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2ba417db60"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f2ba4171360"/></to>
    </wire>
    <wire loc="65:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2ba4186020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2ba3e9ad20"/></to>
    </wire>
    <wire loc="49:../../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2ba3e9ad20"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2ba3e95d90"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2ba4183120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2ba3e7a020"/></to>
    </wire>
    <wire loc="87:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f2ba4175bd0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2ba416c970"/></to>
    </wire>
    <wire loc="86:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2ba41766d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f2ba416c020"/></to>
    </wire>
    <wire loc="90:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f2ba4132860"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f2ba4049cc0"/></to>
    </wire>
    <wire loc="530:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f2ba4049cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f9b100"/></to>
    </wire>
    <wire loc="91:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f2ba413c800"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f2ba4045cc0"/></to>
    </wire>
    <wire loc="532:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f2ba4045cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f96d10"/></to>
    </wire>
    <wire loc="92:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f2ba4130800"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f2ba4043cc0"/></to>
    </wire>
    <wire loc="533:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f2ba4043cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f91740"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f2ba412d800"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f2ba403dcc0"/></to>
    </wire>
    <wire loc="536:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f2ba403dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f88d10"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f2ba412b800"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f2ba403fcc0"/></to>
    </wire>
    <wire loc="535:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f2ba403fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f8c100"/></to>
    </wire>
    <wire loc="14:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f2ba4143bc0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f2ba3d5c950"/></to>
    </wire>
    <wire loc="442:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f2ba40a5810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fd9740"/></to>
    </wire>
    <wire loc="455:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f2ba4090810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fa9100"/></to>
    </wire>
    <wire loc="531:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f2ba4047ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f9b100"/></to>
    </wire>
    <wire loc="551:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f2ba4022cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f10740"/></to>
    </wire>
    <wire loc="460:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f2ba408c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fa0740"/></to>
    </wire>
    <wire loc="473:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f2ba40789a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f6f460"/></to>
    </wire>
    <wire loc="486:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f2ba40649a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f40d10"/></to>
    </wire>
    <wire loc="497:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f2ba40539a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f19100"/></to>
    </wire>
    <wire loc="545:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f2ba402ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f2d740"/></to>
    </wire>
    <wire loc="557:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f2ba401acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f0b100"/></to>
    </wire>
    <wire loc="445:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f2ba409f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fcb740"/></to>
    </wire>
    <wire loc="450:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f2ba409b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fc2d10"/></to>
    </wire>
    <wire loc="463:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f2ba4086810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f91740"/></to>
    </wire>
    <wire loc="476:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f2ba40729a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f61100"/></to>
    </wire>
    <wire loc="489:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f2ba405d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f32d10"/></to>
    </wire>
    <wire loc="500:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f2ba404d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f0b100"/></to>
    </wire>
    <wire loc="440:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f2ba40a9810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fe2100"/></to>
    </wire>
    <wire loc="453:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f2ba4095810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fb3d80"/></to>
    </wire>
    <wire loc="466:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f2ba4080810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f83740"/></to>
    </wire>
    <wire loc="548:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f2ba4028cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f1e740"/></to>
    </wire>
    <wire loc="555:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f2ba401ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f0b100"/></to>
    </wire>
    <wire loc="541:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f2ba4035cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f44100"/></to>
    </wire>
    <wire loc="471:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f2ba407c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f7ae60"/></to>
    </wire>
    <wire loc="484:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f2ba40689a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f49740"/></to>
    </wire>
    <wire loc="495:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f2ba40579a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f23d10"/></to>
    </wire>
    <wire loc="549:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f2ba4026cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f19100"/></to>
    </wire>
    <wire loc="538:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f2ba403bcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f53100"/></to>
    </wire>
    <wire loc="443:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f2ba40a3810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fd4100"/></to>
    </wire>
    <wire loc="456:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f2ba408e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fa5d10"/></to>
    </wire>
    <wire loc="461:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f2ba408a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f9b100"/></to>
    </wire>
    <wire loc="474:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f2ba40769a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f6be00"/></to>
    </wire>
    <wire loc="487:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f2ba40619a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f3b740"/></to>
    </wire>
    <wire loc="498:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f2ba40519a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f15d10"/></to>
    </wire>
    <wire loc="540:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f2ba4037cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f49740"/></to>
    </wire>
    <wire loc="438:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f2ba40af800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba4013d10"/></to>
    </wire>
    <wire loc="451:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f2ba4099810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fbc740"/></to>
    </wire>
    <wire loc="464:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f2ba4084810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f8c100"/></to>
    </wire>
    <wire loc="477:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f2ba40709a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f5dd10"/></to>
    </wire>
    <wire loc="542:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f2ba4032cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f83740"/></to>
    </wire>
    <wire loc="546:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f2ba402ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f27100"/></to>
    </wire>
    <wire loc="552:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f2ba4020cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f0b100"/></to>
    </wire>
    <wire loc="482:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f2ba406c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f53100"/></to>
    </wire>
    <wire loc="543:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f2ba4030cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f7e100"/></to>
    </wire>
    <wire loc="441:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f2ba40a7810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fded10"/></to>
    </wire>
    <wire loc="454:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f2ba4093810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fae740"/></to>
    </wire>
    <wire loc="467:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f2ba407e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f7e100"/></to>
    </wire>
    <wire loc="539:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f2ba4039cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f4ed10"/></to>
    </wire>
    <wire loc="550:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f2ba4024cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f15d10"/></to>
    </wire>
    <wire loc="472:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f2ba407a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f749f0"/></to>
    </wire>
    <wire loc="485:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f2ba40669a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f44100"/></to>
    </wire>
    <wire loc="496:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f2ba40559a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f1e740"/></to>
    </wire>
    <wire loc="444:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f2ba40a1810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fd0d10"/></to>
    </wire>
    <wire loc="449:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f2ba409d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fc6100"/></to>
    </wire>
    <wire loc="462:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f2ba4088810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f96d10"/></to>
    </wire>
    <wire loc="475:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f2ba40749a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f66740"/></to>
    </wire>
    <wire loc="488:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f2ba405f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f36100"/></to>
    </wire>
    <wire loc="499:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f2ba404f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f10740"/></to>
    </wire>
    <wire loc="439:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f2ba40ab810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fe8740"/></to>
    </wire>
    <wire loc="452:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f2ba4097810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fb7100"/></to>
    </wire>
    <wire loc="465:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f2ba4082810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f88d10"/></to>
    </wire>
    <wire loc="478:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f2ba406e9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f58740"/></to>
    </wire>
    <wire loc="534:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f2ba4041ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f91740"/></to>
    </wire>
    <wire loc="547:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f2ba402acb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f23d10"/></to>
    </wire>
    <wire loc="483:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f2ba406a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f4ed10"/></to>
    </wire>
    <wire loc="554:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f2ba401ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f10740"/></to>
    </wire>
    <wire loc="558:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f2ba4018cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3f32d10"/></to>
    </wire>
    <wire loc="529:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f2ba404b9f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2ba3fa0740"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2ba3e95d90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2ba3e8ee50"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba3e7e020"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2ba4654b70"/></to>
    </wire>
    <wire loc="54:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba3e4d2e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba3e76470"/></to>
    </wire>
    <wire loc="55:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f2ba3e73060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f2ba3e77b10"/></to>
    </wire>
    <wire loc="59:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f2ba3e77b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba3e4a020"/></to>
    </wire>
    <wire loc="56:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f2ba3e72340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f2ba3e50e70"/></to>
    </wire>
    <wire loc="62:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f2ba3e50e70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba3e36b90"/></to>
    </wire>
    <wire loc="57:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f2ba3e6d660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f2ba3e4e0f0"/></to>
    </wire>
    <wire loc="65:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f2ba3e4e0f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba3e31710"/></to>
    </wire>
    <wire loc="60:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2ba3e392f0"/></from>
      <to><interface-ref name="Port40" scoped="" ref="0x7f2ba407c810"/></to>
    </wire>
    <wire loc="63:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2ba3e35de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f2ba40789a0"/></to>
    </wire>
    <wire loc="66:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2ba3e2f930"/></from>
      <to><interface-ref name="Port43" scoped="" ref="0x7f2ba40769a0"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f2ba2a7abe0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2ba3e033f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2ba2a792b0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2ba3d66d70"/></to>
    </wire>
    <wire loc="11:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2ba3d66d70"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f2ba3d5c950"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2ba2a7fa50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2ba417db60"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2ba2a7f2b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2ba3e00ad0"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2ba3e00ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2ba3d6e400"/></to>
    </wire>
    <wire loc="65:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba3dff8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba2a72020"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2ba3e002c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2ba3d6f020"/></to>
    </wire>
    <wire loc="106:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2ba3d6f020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2ba26a6530"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f2ba3e044d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f2ba3dfdd60"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2ba3e01020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2ba3d70210"/></to>
    </wire>
    <wire loc="105:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2ba3d70210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2ba26a7740"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2ba3e033f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2ba3dfc710"/></to>
    </wire>
    <wire loc="108:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2ba3d6e400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2ba26a5930"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba3d6ecd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba3dff8a0"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2ba3deabf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2ba3d6e400"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f2ba3dfcd80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2ba41766d0"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f2ba3dea5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f2ba4175bd0"/></to>
    </wire>
    <wire loc="107:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2ba3d6f7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2ba26a6cb0"/></to>
    </wire>
    <wire loc="109:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba26a3270"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba3d6ecd0"/></to>
    </wire>
    <wire loc="111:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f2ba26a3a30"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f2ba26a94a0"/></to>
    </wire>
    <wire loc="75:../../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f2ba26a1c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f2ba3d53700"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f2ba4171360"/></to>
    </wire>
    <wire loc="18:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f2ba3d4e250"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f2ba4049cc0"/></to>
    </wire>
    <wire loc="19:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f2ba3d4c1f0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f2ba4043cc0"/></to>
    </wire>
    <wire loc="114:../../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f2ba3c30500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f2ba3c13680"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f2ba3c1abe0"/></to>
    </wire>
    <wire loc="44:../../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f2ba3c0d380"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f2ba46f5680"/></to>
    </wire>
    <wire loc="47:../../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f2ba3c0daa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2ba44793b0"/></to>
    </wire>
    <wire loc="352:BtStreamC.nc">
      <from><interface-ref name="sendResponse" scoped="" ref="0x7f2ba3aae1f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="479:BtStreamC.nc">
      <from><interface-ref name="startConfigTimer" scoped="" ref="0x7f2ba3a79670"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="484:BtStreamC.nc">
      <from><interface-ref name="ProcessCommand" scoped="" ref="0x7f2ba3a76400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="756:BtStreamC.nc">
      <from><interface-ref name="gsr_range" scoped="" ref="0x7f2ba3a20020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:BtStreamC.nc">
      <from><interface-ref name="ToggleLed" scoped="" ref="0x7f2ba3ae01f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="746:BtStreamC.nc">
      <from><interface-ref name="clockin_result" scoped="" ref="0x7f2ba3a24500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="269:BtStreamC.nc">
      <from><interface-ref name="stopSensing" scoped="" ref="0x7f2ba3ac40c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="264:BtStreamC.nc">
      <from><interface-ref name="ConfigureChannelsTask" scoped="" ref="0x7f2ba3ac7510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="332:BtStreamC.nc">
      <from><interface-ref name="sendSensorData" scoped="" ref="0x7f2ba3ab50c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="199:BtStreamC.nc">
      <from><interface-ref name="startSensors" scoped="" ref="0x7f2ba3adba20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="709:BtStreamC.nc">
      <from><interface-ref name="collect_results" scoped="" ref="0x7f2ba3a2f440"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba265b340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba2640ca0"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f2ba264e780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2ba265bb90"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2ba265bb90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2ba263e5b0"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2ba26513d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2ba3906020"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/CounterMilli16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2ba3906020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2ba39015f0"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba263b710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba26459d0"/></to>
    </wire>
    <wire loc="49:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba26459d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba3961bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba263ada0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba2643120"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba2643120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba395c8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba26380c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba2642440"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba2642440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba3959210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba3961bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2ba4654b70"/></to>
    </wire>
    <wire loc="59:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba395c8b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f2ba4652410"/></to>
    </wire>
    <wire loc="60:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba3959210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f2ba4649a20"/></to>
    </wire>
    <wire loc="62:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba3961bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2ba4654b70"/></to>
    </wire>
    <wire loc="63:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba395c8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f2ba46518c0"/></to>
    </wire>
    <wire loc="64:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba3959210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB1" scoped="" ref="0x7f2ba4648890"/></to>
    </wire>
    <wire loc="66:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba3961bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2ba4654b70"/></to>
    </wire>
    <wire loc="67:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba395c8b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f2ba464f020"/></to>
    </wire>
    <wire loc="68:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba3959210"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f2ba4647700"/></to>
    </wire>
    <wire loc="70:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba3961bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2ba4654b70"/></to>
    </wire>
    <wire loc="71:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba395c8b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f2ba464e5a0"/></to>
    </wire>
    <wire loc="72:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba3959210"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f2ba4646570"/></to>
    </wire>
    <wire loc="74:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba3961bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2ba4654b70"/></to>
    </wire>
    <wire loc="75:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba395c8b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f2ba464da50"/></to>
    </wire>
    <wire loc="76:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba3959210"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f2ba46453e0"/></to>
    </wire>
    <wire loc="78:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba3961bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2ba4654b70"/></to>
    </wire>
    <wire loc="79:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba395c8b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f2ba464b020"/></to>
    </wire>
    <wire loc="80:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba3959210"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f2ba46441f0"/></to>
    </wire>
    <wire loc="82:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba3961bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f2ba4654b70"/></to>
    </wire>
    <wire loc="83:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba395c8b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f2ba464a5a0"/></to>
    </wire>
    <wire loc="84:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba3959210"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f2ba4643020"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/CounterMilli16C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f2ba38e4950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2ba3e95d90"/></to>
    </wire>
    <wire loc="54:../../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f2ba38951d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2ba388cc30"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f2ba388cc30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba37dd690"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba3890e50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba3858760"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f2ba3885080"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2ba37cecf0"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba3858760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba25ec860"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f2ba37d7c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba382ccf0"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2ba38261d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2ba3857020"/></to>
    </wire>
    <wire loc="53:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2ba3857020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2ba25e55f0"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2ba37c3020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2ba3874650"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2ba3874650"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2ba386e2e0"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba25ec860"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba25d0360"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f2ba25dfd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2ba25eb140"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2ba25eb140"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2ba25d0bf0"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2ba25e29b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2ba3874650"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba25ccdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba25d5020"/></to>
    </wire>
    <wire loc="49:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba25d5020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba3961bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba25ca440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba25d4760"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba25d4760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba395c8b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba25c9760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba25d3a80"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba25d3a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba3959210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f2ba386c6d0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2ba3e95d90"/></to>
    </wire>
    <wire loc="74:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f2ba3822490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f2ba37d2e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2ba255c380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2ba2540a30"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f2ba254f780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2ba255cbd0"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2ba255cbd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2ba253f340"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2ba25513d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2ba3906020"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba253c4c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba25457b0"/></to>
    </wire>
    <wire loc="49:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba25457b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba3961bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba253aa90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba2544da0"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba2544da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba395c8b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba2539da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba25420c0"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba25420c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba3959210"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f2ba37a4950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2ba3e95d90"/></to>
    </wire>
    <wire loc="64:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="UARTControl" scoped="" ref="0x7f2ba37088e0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2ba3550c80"/></to>
    </wire>
    <wire loc="88:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2ba3550c80"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f2ba3549550"/></to>
    </wire>
    <wire loc="65:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="UARTData" scoped="" ref="0x7f2ba3703410"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2ba354d860"/></to>
    </wire>
    <wire loc="89:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2ba354d860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f2ba3544130"/></to>
    </wire>
    <wire loc="66:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="RTSInterrupt" scoped="" ref="0x7f2ba3703cf0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f2ba3645bc0"/></to>
    </wire>
    <wire loc="72:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f2ba3645bc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f2ba3631a30"/></to>
    </wire>
    <wire loc="67:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="ConnectionInterrupt" scoped="" ref="0x7f2ba3702c80"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f2ba363cbc0"/></to>
    </wire>
    <wire loc="82:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f2ba363cbc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f2ba3629bc0"/></to>
    </wire>
    <wire loc="68:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2ba3701af0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2ba3e7a020"/></to>
    </wire>
    <wire loc="376:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <from><interface-ref name="runSetCommands" scoped="" ref="0x7f2ba369dd60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="302:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <from><interface-ref name="runMasterCommands" scoped="" ref="0x7f2ba36af1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <from><interface-ref name="sendNextChar" scoped="" ref="0x7f2ba36f0500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f2ba3647bc0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f2ba3633a30"/></to>
    </wire>
    <wire loc="73:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f2ba3644bc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f2ba3630a30"/></to>
    </wire>
    <wire loc="77:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f2ba3642bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f2ba362ea30"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f2ba3649c40"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f2ba3635a30"/></to>
    </wire>
    <wire loc="80:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f2ba363ebc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f2ba362ba30"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f2ba3646bc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f2ba3632a30"/></to>
    </wire>
    <wire loc="83:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f2ba363bbc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f2ba3628bc0"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f2ba364dd20"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f2ba36399c0"/></to>
    </wire>
    <wire loc="78:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f2ba3640bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f2ba362da30"/></to>
    </wire>
    <wire loc="69:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f2ba3648bc0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f2ba3634a30"/></to>
    </wire>
    <wire loc="81:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f2ba363dc40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f2ba362abc0"/></to>
    </wire>
    <wire loc="76:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f2ba3643bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f2ba362fa30"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f2ba364ac80"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f2ba3636a30"/></to>
    </wire>
    <wire loc="79:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f2ba363fbc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f2ba362ca30"/></to>
    </wire>
    <wire loc="87:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2ba3550450"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2ba354cbc0"/></to>
    </wire>
    <wire loc="91:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f2ba3544a00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f2ba4039cc0"/></to>
    </wire>
    <wire loc="92:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f2ba3542990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f2ba4037cc0"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f2ba353f990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f2ba4035cc0"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f2ba353d990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f2ba4030cc0"/></to>
    </wire>
    <wire loc="95:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f2ba353b990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f2ba4032cc0"/></to>
    </wire>
    <wire loc="48:../../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f2ba3474370"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f2ba342c840"/></to>
    </wire>
    <wire loc="51:../../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Msp430DmaControl" scoped="" ref="0x7f2ba349ace0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2ba3429b70"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7f2ba3429b70"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2ba32cc060"/></to>
    </wire>
    <wire loc="52:../../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Msp430DmaChannel" scoped="" ref="0x7f2ba349d530"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7f2ba33f1590"/></to>
    </wire>
    <wire loc="55:../../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2ba34982a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2ba3e7a020"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7f2ba33ef8b0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f2ba32d7d80"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7f2ba33f0720"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f2ba32df7a0"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel" scoped="" ref="0x7f2ba32e8020"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7f2ba33c7df0"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Channel0" scoped="" ref="0x7f2ba33c7df0"/></from>
      <to><interface-ref name="DMA" scoped="" ref="0x7f2ba3332c90"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel" scoped="" ref="0x7f2ba32de7a0"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7f2ba33c4730"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7f2ba33c4730"/></from>
      <to><interface-ref name="DMA" scoped="" ref="0x7f2ba33299b0"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel" scoped="" ref="0x7f2ba32d6db0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7f2ba33bf0c0"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7f2ba33bf0c0"/></from>
      <to><interface-ref name="DMA" scoped="" ref="0x7f2ba331f3f0"/></to>
    </wire>
    <wire loc="72:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplControl" scoped="" ref="0x7f2ba32cc970"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2ba33e4d90"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7f2ba33e4d90"/></from>
      <to><interface-ref name="DmaControl" scoped="" ref="0x7f2ba33ba520"/></to>
    </wire>
    <wire loc="73:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel0" scoped="" ref="0x7f2ba32cbd90"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7f2ba33c7df0"/></to>
    </wire>
    <wire loc="74:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel1" scoped="" ref="0x7f2ba32c6740"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7f2ba33c4730"/></to>
    </wire>
    <wire loc="75:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel2" scoped="" ref="0x7f2ba32c10d0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7f2ba33bf0c0"/></to>
    </wire>
    <wire loc="65:../../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x7f2ba332d610"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f2ba33b4710"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x7f2ba33242f0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f2ba33b4710"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x7f2ba331bc50"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f2ba33b4710"/></to>
    </wire>
    <wire loc="53:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="buttonNotify" scoped="" ref="0x7f2ba328e5a0"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f2ba3271020"/></to>
    </wire>
    <wire loc="60:../../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f2ba3271020"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f2ba3236af0"/></to>
    </wire>
    <wire loc="56:../../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f2ba3239760"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7f2ba3267c90"/></to>
    </wire>
    <wire loc="56:../../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f2ba3267c90"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f2ba325c490"/></to>
    </wire>
    <wire loc="57:../../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba323a510"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba326c380"/></to>
    </wire>
    <wire loc="52:../../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba326c380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba3263d50"/></to>
    </wire>
    <wire loc="63:../../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7f2ba3232750"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f2ba323cb10"/></to>
    </wire>
    <wire loc="64:../../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="debounceTimer" scoped="" ref="0x7f2ba322f3d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba321e8c0"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba321e8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2ba38951d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2ba3261020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f2ba40a7810"/></to>
    </wire>
    <wire loc="55:../../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f2ba324f020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f2ba3648bc0"/></to>
    </wire>
    <wire loc="51:../../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7f2ba32382f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <from><interface-ref name="debounce" scoped="" ref="0x7f2ba3225c40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../../../tos/platforms/shimmer2/chips/hmc5843/MagnetometerC.nc">
      <from><interface-ref name="testTimer" scoped="" ref="0x7f2ba31ec020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba3196cd0"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba3196cd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2ba38951d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../../tos/platforms/shimmer2/chips/hmc5843/MagnetometerC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f2ba31fdd60"/></from>
      <to><interface-ref name="I2CBasicAddr" scoped="" ref="0x7f2ba318b220"/></to>
    </wire>
    <wire loc="67:../../../../tos/platforms/shimmer2/chips/hmc5843/MagnetometerC.nc">
      <from><interface-ref name="I2CInit" scoped="" ref="0x7f2ba31fbc20"/></from>
      <to><interface-ref name="I2CInit" scoped="" ref="0x7f2ba3186020"/></to>
    </wire>
    <wire loc="70:../../../../tos/platforms/shimmer2/chips/hmc5843/MagnetometerC.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f2ba31f9370"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2ba3d66d70"/></to>
    </wire>
    <wire loc="71:../../../../tos/platforms/shimmer2/chips/hmc5843/MagnetometerC.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f2ba3186730"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2ba3d66d70"/></to>
    </wire>
    <wire loc="74:../../../../tos/platforms/shimmer2/chips/hmc5843/MagnetometerC.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2ba317f780"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f2ba4175bd0"/></to>
    </wire>
    <wire loc="88:../../../../tos/platforms/shimmer/chips/msp430/Msp430I2CP.nc">
      <from><interface-ref name="writeDone" scoped="" ref="0x7f2ba3174600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../../tos/platforms/shimmer/chips/msp430/Msp430I2CP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7f2ba3179720"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../tos/platforms/shimmer/chips/rmcm01/DigitalHeartRateC.nc">
      <from><interface-ref name="BeatInterrupt" scoped="" ref="0x7f2ba311e800"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f2ba362fa30"/></to>
    </wire>
    <wire loc="57:../../../../tos/platforms/shimmer/chips/rmcm01/DigitalHeartRateC.nc">
      <from><interface-ref name="Msp430GeneralIO" scoped="" ref="0x7f2ba311d8c0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f2ba409d810"/></to>
    </wire>
    <wire loc="60:../../../../tos/platforms/shimmer/chips/rmcm01/DigitalHeartRateC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2ba310fe40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2ba37af9a0"/></to>
    </wire>
    <wire loc="61:../../../../tos/platforms/shimmer/chips/rmcm01/DigitalHeartRateC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f2ba311b850"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2ba3110b70"/></to>
    </wire>
    <wire loc="56:../../../../tos/platforms/shimmer/UserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f2ba3090440"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7f2ba30a0660"/></to>
    </wire>
    <wire loc="56:../../../../tos/platforms/shimmer2r/HplUserButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f2ba30a0660"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f2ba3099b40"/></to>
    </wire>
    <wire loc="57:../../../../tos/platforms/shimmer/UserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba3091290"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba30a1380"/></to>
    </wire>
    <wire loc="52:../../../../tos/platforms/shimmer2r/HplUserButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba30a1380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba309e850"/></to>
    </wire>
    <wire loc="63:../../../../tos/platforms/shimmer/UserButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7f2ba3089490"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f2ba3094880"/></to>
    </wire>
    <wire loc="64:../../../../tos/platforms/shimmer/UserButtonC.nc">
      <from><interface-ref name="debounceTimer" scoped="" ref="0x7f2ba30860f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2ba3076c30"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2ba3076c30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2ba38951d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../../../tos/platforms/shimmer2r/HplUserButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2ba309dac0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f2ba409d810"/></to>
    </wire>
    <wire loc="55:../../../../tos/platforms/shimmer2r/HplUserButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f2ba30987a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f2ba3643bc0"/></to>
    </wire>
    <wire loc="51:../../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7f2ba308f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../../tos/platforms/shimmer/UserButtonP.nc">
      <from><interface-ref name="debounce" scoped="" ref="0x7f2ba307cbb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../../../tos/platforms/shimmer/chips/msp430/FastClockC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2ba2d02020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2ba3e7a020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../../tos/system/MainC.nc">
      <documentation loc="45:../../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="38:../../../../tos/platforms/shimmer2r/PlatformC.nc">
      <documentation loc="32:../../../../tos/platforms/shimmer2r/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../../tos/platforms/shimmer2r/PlatformP.nc">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:../../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <documentation loc="33:../../../../tos/platforms/shimmer2r/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2ba471a550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="37:../../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P" loc="39:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P.UartP" loc="41(Msp430Uart0P.UartP):../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.2 $ $Date: 2010/07/29 13:19:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="46:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <documentation loc="34:../../../../tos/platforms/shimmer2r/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="45:../../../../tos/platforms/shimmer2r/LedsP.nc" safe="">
      <documentation loc="35:../../../../tos/platforms/shimmer2r/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="41:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <documentation loc="34:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="39(PlatformSerialC.UartC.UsartC):../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2013/04/09 14:28:58 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ShimmerSerialP" loc="35:../../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../../tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:../../../../tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BtStreamC" loc="57:BtStreamC.nc">
      <documentation loc="33:../../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BtStreamAppC.SampleTimer" loc="41(BtStreamAppC.SampleTimer):../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BtStreamAppC.SampleTimer.AlarmFrom" loc="41(BtStreamAppC.SampleTimer.AlarmFrom):../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BtStreamAppC.SampleTimer.AlarmFrom.Msp430Timer" loc="37(BtStreamAppC.SampleTimer.AlarmFrom.Msp430Timer):../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BtStreamAppC.SampleTimer.AlarmFrom.Msp430Alarm" loc="43(BtStreamAppC.SampleTimer.AlarmFrom.Msp430Alarm):../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli16C" loc="41:../../../../tos/chips/msp430/timer/CounterMilli16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/CounterMilli16C.nc">
        <short>&#10; CounterMilli16C provides at 16-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli16C provides at 16-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli16C.Transform" loc="54(CounterMilli16C.Transform):../../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BtStreamAppC.SampleTimer.Transform" loc="51(BtStreamAppC.SampleTimer.Transform):../../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BtStreamAppC.SetupTimer" loc="44(BtStreamAppC.SetupTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BtStreamAppC.BlinkTimer" loc="41(BtStreamAppC.BlinkTimer):../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BtStreamAppC.BlinkTimer.AlarmFrom" loc="41(BtStreamAppC.BlinkTimer.AlarmFrom):../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BtStreamAppC.BlinkTimer.AlarmFrom.Msp430Timer" loc="37(BtStreamAppC.BlinkTimer.AlarmFrom.Msp430Timer):../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BtStreamAppC.BlinkTimer.AlarmFrom.Msp430Alarm" loc="43(BtStreamAppC.BlinkTimer.AlarmFrom.Msp430Alarm):../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BtStreamAppC.BlinkTimer.Transform" loc="51(BtStreamAppC.BlinkTimer.Transform):../../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BtStreamAppC.CounterToLocalTimeC" loc="46(BtStreamAppC.CounterToLocalTimeC):../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RovingNetworksC" loc="45:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <documentation loc="34:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
        <short>&#10; </short>
        <long>&#10; @author Steve Ayer&#10; @author Adrian Burns&#10; @date February, 2007&#10;&#10; @author Mike Healy&#10; @date April 20, 2009 - ported to TinyOS 2.x &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RovingNetworksP" loc="47:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AccelC" loc="36:../../../../tos/platforms/shimmer2r/AccelC.nc">
      <configuration/>
    </component>
    <component qname="Mma7361P" loc="37:../../../../tos/platforms/shimmer2r/Mma7361P.nc">
      <module/>
    </component>
    <component qname="shimmerAnalogSetupC" loc="35:../../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <configuration/>
    </component>
    <component qname="shimmerAnalogSetupP" loc="39:../../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430DmaC" loc="46:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
        <short>&#10; Implementation of the HAL level component for the MSP430 DMA module.</short>
        <long>&#10; Implementation of the HAL level component for the MSP430 DMA module.&#10; This configuration provides the available DMA channels through the&#10; MSP430DMA parameterized interface.  If more channels are requested&#10; than available through unique(&#34;DMA&#34;), there will be no mapping for&#10; that channel and compilation will fail.&#10;&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430DmaC" loc="39:../../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430DmaP" loc="41:../../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
      <documentation loc="34:../../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430DmaC.Dma0" loc="42(HplMsp430DmaC.Dma0):../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <documentation loc="34:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430DmaXP"/>
        <arguments>
          <value cst="I:480">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:482">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:484">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:486">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:15">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430DmaC.Dma1" loc="42(HplMsp430DmaC.Dma1):../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <documentation loc="34:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430DmaXP"/>
        <arguments>
          <value cst="I:488">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:490">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:492">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:494">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:240">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430DmaC.Dma2" loc="42(HplMsp430DmaC.Dma2):../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <documentation loc="34:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430DmaXP"/>
        <arguments>
          <value cst="I:496">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:498">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:500">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:502">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3840">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaC.Channel0P" loc="42(Msp430DmaC.Channel0P):../../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <documentation loc="34:../../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430DmaChannelP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaC.Channel1P" loc="42(Msp430DmaC.Channel1P):../../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <documentation loc="34:../../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430DmaChannelP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaC.Channel2P" loc="42(Msp430DmaC.Channel2P):../../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <documentation loc="34:../../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430DmaChannelP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaControlP" loc="42:../../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <documentation loc="34:../../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GyroBoardC" loc="38:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <configuration/>
    </component>
    <component qname="GyroBoardP" loc="41:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <documentation loc="32:../../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GyroButtonC" loc="50:../../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <documentation loc="32:../../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplGyroButtonC" loc="42:../../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <documentation loc="32:../../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $&#10; (not much to) port to shimmer2 gyro&#10; @author Steve Ayer&#10; @date March, 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplGyroButtonC.UserButtonC" loc="42(HplGyroButtonC.UserButtonC):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplGyroButtonC.InterruptUserButtonC" loc="43(HplGyroButtonC.InterruptUserButtonC):../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="GyroButtonC.SwitchToggleC" loc="44(GyroButtonC.SwitchToggleC):../../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <documentation loc="32:../../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="GyroButtonP" loc="44:../../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <documentation loc="32:../../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GyroButtonC.debounceTimer" loc="44(GyroButtonC.debounceTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagnetometerC" loc="46:../../../../tos/platforms/shimmer2/chips/hmc5843/MagnetometerC.nc">
      <documentation loc="31:../../../../tos/platforms/shimmer/chips/msp430/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Hmc5843P" loc="44:../../../../tos/platforms/shimmer2/chips/hmc5843/Hmc5843P.nc">
      <module/>
    </component>
    <component qname="MagnetometerC.testTimer" loc="44(MagnetometerC.testTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430I2CP" loc="39:../../../../tos/platforms/shimmer/chips/msp430/Msp430I2CP.nc">
      <documentation loc="33:../../../../tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="StrainGaugeC" loc="36:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGaugeC.nc">
      <configuration/>
    </component>
    <component qname="StrainGaugeP" loc="35:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGaugeP.nc">
      <module/>
    </component>
    <component qname="DigitalHeartRateC" loc="43:../../../../tos/platforms/shimmer/chips/rmcm01/DigitalHeartRateC.nc">
      <configuration/>
    </component>
    <component qname="Rmcm01P" loc="48:../../../../tos/platforms/shimmer/chips/rmcm01/Rmcm01P.nc">
      <module/>
    </component>
    <component qname="DigitalHeartRateC.CounterToLocalTimeC" loc="46(DigitalHeartRateC.CounterToLocalTimeC):../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="GsrC" loc="35:../../../../tos/platforms/shimmer/chips/gsr/GsrC.nc">
      <configuration/>
    </component>
    <component qname="GsrP" loc="40:../../../../tos/platforms/shimmer/chips/gsr/GsrP.nc">
      <module/>
    </component>
    <component qname="BtCommandParserC" loc="35:BtCommandParserC.nc">
      <configuration/>
    </component>
    <component qname="BtCommandParserP" loc="37:BtCommandParserP.nc">
      <module/>
    </component>
    <component qname="InternalFlashC" loc="43:../../../../tos/platforms/shimmer/chips/msp430/InternalFlashC.nc">
      <documentation loc="27:../../../../tos/platforms/shimmer/chips/msp430/InternalFlashC.nc">
        <short>&#10; InternalFlashC.nc - Internal flash implementation for telos msp&#10; platform.</short>
        <long>&#10; InternalFlashC.nc - Internal flash implementation for telos msp&#10; platform. On the msp, the flash must first be erased before a value&#10; can be written. However, the msp can only erase the flash at a&#10; segment granularity (128 bytes for the information section). This&#10; module allows transparent read/write of individual bytes to the&#10; information section by dynamically switching between the two&#10; provided segments in the information section.&#10;&#10; Valid address range is 0x1000 - 0x107E (0x107F is used to store the&#10; version number of the information segment).&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UserButtonC" loc="50:../../../../tos/platforms/shimmer/UserButtonC.nc">
      <documentation loc="32:../../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC" loc="42:../../../../tos/platforms/shimmer2r/HplUserButtonC.nc">
      <documentation loc="32:../../../../tos/platforms/shimmer2r/HplUserButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;&#10; @author Mike Healy&#10; @date May 9, 2009 - modified for use with SHIMMER2&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplUserButtonC.UserButtonC" loc="42(HplUserButtonC.UserButtonC):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplUserButtonC.InterruptUserButtonC" loc="43(HplUserButtonC.InterruptUserButtonC):../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonC.SwitchToggleC" loc="44(UserButtonC.SwitchToggleC):../../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <documentation loc="32:../../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="UserButtonP" loc="44:../../../../tos/platforms/shimmer/UserButtonP.nc">
      <documentation loc="32:../../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UserButtonC.debounceTimer" loc="44(UserButtonC.debounceTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CRYPTOC" loc="1:../../../../tos/platforms/shimmer2r/CRYPTOC.nc">
      <configuration/>
    </component>
    <component qname="CRYPTOP" loc="3:../../../../tos/platforms/shimmer2r/CRYPTOP.nc" safe="">
      <module/>
    </component>
    <component qname="FastClockC" loc="35:../../../../tos/platforms/shimmer/chips/msp430/FastClockC.nc">
      <configuration/>
    </component>
    <component qname="FastClockP" loc="50:../../../../tos/platforms/shimmer/chips/msp430/FastClockP.nc">
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f2ba4637890" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f2ba4637c30" loc="41:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f2ba4636020" loc="42:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f2ba46363a0" loc="43:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f2ba4636720" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f2ba4636a90" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f2ba4636e20" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f2ba4635200" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f2ba46355d0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f2ba45f9e70" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f2ba45f6270" loc="41:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f2ba46f8820" loc="47:../../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2ba471a550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f2ba44f00d0" loc="43:../../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2ba471a550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f2ba44cd0d0" loc="45:../../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart0C" loc="42:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f2ba4012190" loc="40:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f2ba4012540" loc="41:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f2ba40128f0" loc="42:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f2ba4012ca0" loc="43:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f2ba4011060" loc="44:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f2ba3e8fe60" loc="42:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f2ba3e8fe60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f2ba3de55b0" loc="89:../../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f2ba3dd85b0" loc="42:../../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f2ba3dbed90" loc="52:../../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f2ba3c6a4a0" loc="42:../../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f2ba3c6a4a0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f2ba3c6a820" loc="42:../../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli16C" loc="41:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f2ba393a9d0" loc="43:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f2ba393a9d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f2ba3903b10" loc="55:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f2ba3903b10"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f2ba3900370" loc="56:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f2ba3900370"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f2ba3900760" loc="57:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f2ba3900760"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f2ba38fe020" loc="58:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f2ba38fe020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f2ba38fe3f0" loc="59:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f2ba38febf0" loc="60:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f2ba38febf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f2ba38dd020" loc="52:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f2ba38dd020"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f2ba38dd7f0" loc="53:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f2ba38dd7f0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f2ba38ddbe0" loc="54:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f2ba38ddbe0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f2ba38dc400" loc="55:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f2ba38dc400"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f2ba38dc7d0" loc="56:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2ba38504f0" loc="46:../../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2ba38504f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2ba3820d70" loc="46:../../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2ba3820d70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f2ba381c0d0" loc="46:../../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2ba37cc1f0" loc="46:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2ba37cc1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430DmaXP" loc="42:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="DMAxCTL_addr" ref="0x7f2ba33b85f0" loc="42:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxSA_addr" ref="0x7f2ba33b89a0" loc="43:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxDA_addr" ref="0x7f2ba33b8d50" loc="44:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxSZ_addr" ref="0x7f2ba339e180" loc="45:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxTSEL_mask" ref="0x7f2ba339e550" loc="46:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxTSEL_shift" ref="0x7f2ba339e920" loc="47:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430DmaChannelP" loc="42:../../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc" abstract="">
      <documentation loc="34:../../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="44:../../../../tos/platforms/shimmer/SwitchToggleC.nc" abstract="">
      <documentation loc="32:../../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f2ba46f7d10" loc="58:../../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f2ba46f7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba46f60e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f2ba46f5680" loc="57:../../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2ba46f5680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2ba46f5a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba46f6c00" loc="40:../../../../tos/platforms/shimmer2r/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba46f6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba46f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f2ba46ee8c0" loc="6:../../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f2ba46ee8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba46eec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba46f2a90" loc="4:../../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba46f2a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba46f2e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f2ba46ee1e0" loc="5:../../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f2ba46ee1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba46ee560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f2ba46ed020" loc="7:../../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f2ba46ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba46ed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba46f18a0" loc="39:../../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba46f18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba46f1c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f2ba46ef910" loc="39:../../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f2ba46ef910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba46efc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f2ba46b8de0" loc="40:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2ba46b8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f2ba46bdc70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f2ba46bd310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f2ba46bd4a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f2ba46bd630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f2ba46bd180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f2ba46bd7c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f2ba46bd950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f2ba46bdae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba46c1850" loc="39:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba46c1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba46c1bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f2ba46a8a70" loc="46:../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2ba46a8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f2ba46a7980"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f2ba46a7020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f2ba46a71b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f2ba46a7340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f2ba46a8df0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f2ba46a74d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f2ba46a7660"/>
        <function-ref name="initClocks" scoped="" ref="0x7f2ba46a77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f2ba46a7cc0" loc="47:../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2ba46a7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f2ba46a60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba46a83c0" loc="45:../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba46a83c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba46a8740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f2ba4664a50" loc="42:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f2ba4664a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba4664dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba4663020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba46631b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba4663340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba46634d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba4663660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba46637f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba4663980"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba4663b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f2ba4652410" loc="51:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f2ba4652410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba4652790"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba4652920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba4652ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba4652c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba4652dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba4651020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba46511b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba4651340"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba46514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f2ba465bd10" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f2ba465bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba465a0e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba465a270"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba465a400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba465a590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba465a720"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba465a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f2ba463e020" loc="68:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f2ba463e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba463e3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba463e530"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba463e6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba463e850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba463e9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba463eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f2ba4660020" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f2ba4660020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba46603a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4660530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba46606c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4660850"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba46609e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f2ba4646570" loc="61:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f2ba4646570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba46468f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4646a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba4646c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4646da0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba4645020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f2ba463b020" loc="71:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f2ba463b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba463b3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba463b530"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba463b6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba463b850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba463b9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba463bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f2ba464da50" loc="55:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f2ba464da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba464ddd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba464c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba464c1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba464c340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba464c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba464c660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba464c7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba464c980"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba464cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f2ba466b020" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f2ba466b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba466b3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba466b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba466b6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba466b850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba466b9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba466bb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba466bd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba466a020"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba466a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f2ba4640020" loc="66:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f2ba4640020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba46403a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba4640530"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba46406c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba4640850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba46409e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba4640b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f2ba4648890" loc="59:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f2ba4648890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4648c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4648da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba4647020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba46471b0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba4647340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f2ba46518c0" loc="52:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f2ba46518c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba4651d40"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba4650020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba46501b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba4650340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba46504d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba4650660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba46507f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba4650980"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba4650b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f2ba465ac70" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f2ba465ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4654020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba46541b0"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba4654340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba46544d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba4654660"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba46547f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f2ba463d020" loc="69:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f2ba463d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba463d3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba463d530"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba463d6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba463d850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba463d9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba463db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f2ba464f020" loc="53:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f2ba464f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba464f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba464f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba464f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba464f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba464f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba464fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba464fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba464e020"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba464e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f2ba4660da0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f2ba4660da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba465c180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba465c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba465c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba465c630"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba465c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f2ba466d7b0" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f2ba466d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba466db30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba466dcc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba466de50"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4675020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba46751b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba4675340"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba46754d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba4675660"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba46757f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba4675980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba4675b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f2ba46453e0" loc="62:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f2ba46453e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4645760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba46458f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba4645a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4645c10"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba4645da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f2ba466a5a0" loc="41:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f2ba466a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba466a920"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba466aab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba466ac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba466add0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba4664020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba46641b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba4664340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba46644d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba4664660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f2ba464b020" loc="56:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f2ba464b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba464b3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba464b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba464b6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba464b850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba464b9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba464bb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba464bd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba464a020"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba464a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f2ba4655dc0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f2ba4655dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba465b180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba465b310"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba465b4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba465b630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba465b7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba465b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f2ba463f020" loc="67:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f2ba463f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba463f3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba463f530"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba463f6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba463f850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba463f9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba463fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f2ba4661140" loc="43:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f2ba4661140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba46614c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4661650"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba46617e0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4661970"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba4661b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f2ba4647700" loc="60:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f2ba4647700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4647a80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4647c10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba4647da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4646020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba46461b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f2ba463c020" loc="70:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f2ba463c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba463c3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba463c530"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba463c6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba463c850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba463c9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba463cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f2ba464e5a0" loc="54:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f2ba464e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba464e920"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba464eab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba464ec40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba464edd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba464d020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba464d1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba464d340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba464d4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba464d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f2ba4654b70" loc="50:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f2ba4654b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba4653020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba46531b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba4653340"/>
        <function-ref name="get" scoped="" ref="0x7f2ba46534d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba4653660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba46537f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba4653980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba4653b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba4653ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba4653e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba4652020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f2ba46441f0" loc="63:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f2ba46441f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4644570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4644700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba4644890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4644a20"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba4644bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f2ba4641020" loc="65:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f2ba4641020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba46413a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba4641530"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba46416c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba4641850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba46419e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba4641b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f2ba4643020" loc="64:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f2ba4643020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba46435a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4643730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba46438c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4643a50"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba4643be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f2ba4649a20" loc="58:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f2ba4649a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4649da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4648020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba46481b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4648340"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba46484d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f2ba464a5a0" loc="57:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f2ba464a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba464a920"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba464aab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba464ac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba464add0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba4649020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba46491b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba4649340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba46494d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba4649660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f2ba4603aa0" loc="53:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f2ba4603aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba4603e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f2ba4603450" loc="52:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f2ba4603450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba46037d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f2ba4602120" loc="54:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2ba4602120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba46024a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f2ba4604d80" loc="51:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2ba4604d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba4603180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2ba4605540" loc="50:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba4605540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba46058c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba4605a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba4605be0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4605d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba4604020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba46041b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba4604340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba46044d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba4604660"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba46047f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba4604980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f2ba45fc940" loc="53:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f2ba45fc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba45fccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f2ba45fc2f0" loc="52:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f2ba45fc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba45fc670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f2ba45fb020" loc="54:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2ba45fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba45fb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f2ba45fdbf0" loc="51:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2ba45fdbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba45fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2ba45fe3e0" loc="50:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba45fe3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba45fe760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba45fe8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba45fea80"/>
        <function-ref name="get" scoped="" ref="0x7f2ba45fec10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba45feda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba45fd020"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba45fd1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba45fd340"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba45fd4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba45fd660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba45fd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2ba45b0a90" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2ba45b0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba45b0e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba45af020"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba45af1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba45af340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba45af4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba45af660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2ba45f79d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2ba45f79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba45f7d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba45b1020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba45b11b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba45b1340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba45b14d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba45b1660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba45b17f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba45b1980"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba45b1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2ba45ac020" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2ba45ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba45ac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2ba45b1de0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2ba45b1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba45b0180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba45b0310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba45b04a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba45b0630"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba45b07c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2ba45af930" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba45af930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba45afcb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba45afe40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba45ad020"/>
        <function-ref name="get" scoped="" ref="0x7f2ba45ad1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba45ad340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba45ad4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba45ad660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba45ad7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba45ad980"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba45adb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba45adca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2ba45a7160" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2ba45a7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba45a74e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba45a7670"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba45a7800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba45a7990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba45a7b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba45a7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2ba45a9020" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2ba45a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba45a93a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba45a9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba45a96c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba45a9850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba45a99e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba45a9b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba45a9d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba45a8020"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba45a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2ba45a57a0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2ba45a57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba45a5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2ba45a8480" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2ba45a8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba45a8800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba45a8990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba45a8b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba45a8cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba45a8e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2ba45a6020" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba45a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba45a63a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba45a6530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba45a66c0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba45a6850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba45a69e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba45a6b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba45a6d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba45a5020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba45a51b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba45a5340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba45a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2ba45a07a0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2ba45a07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba45a0b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba45a0cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba45a0e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba459f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba459f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba459f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2ba45a26d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2ba45a26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba45a2a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba45a2be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba45a2d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba45a1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba45a11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba45a1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba45a14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba45a1660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba45a17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2ba459dc50" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2ba459dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba459c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2ba45a1ac0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2ba45a1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba45a1e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba45a0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba45a01b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba45a0340"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba45a04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2ba459f610" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba459f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba459f990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba459fb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba459fcb0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba459fe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba459d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba459d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba459d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba459d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba459d660"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba459d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba459d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2ba4598cb0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2ba4598cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba45970a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba4597230"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba45973c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba4597550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba45976e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba4597870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2ba459ab30" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2ba459ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba4599020"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba45991b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba4599340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba45994d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba4599660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba45997f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba4599980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba4599b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba4599ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2ba45952f0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2ba45952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba4595670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2ba4598020" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2ba4598020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba45983a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4598530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba45986c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4598850"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba45989e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2ba4597b40" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba4597b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba4596020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba45961b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba4596340"/>
        <function-ref name="get" scoped="" ref="0x7f2ba45964d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba4596660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba45967f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba4596980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba4596b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba4596ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba4596e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba4595020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2ba45902f0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2ba45902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4590670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba4590800"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba4590990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba4590b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba4590cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba4590e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2ba4592220" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2ba4592220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba45925a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba4592730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba45928c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba4592a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba4592be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba4592d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba4591020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba45911b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba4591340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2ba458e7a0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2ba458e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba458eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2ba4591610" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2ba4591610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4591990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4591b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba4591cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4591e40"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba4590020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2ba458f160" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba458f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba458f4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba458f670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba458f800"/>
        <function-ref name="get" scoped="" ref="0x7f2ba458f990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba458fb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba458fcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba458fe40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba458e020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba458e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba458e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba458e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2ba45887a0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2ba45887a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4588b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba4588cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba4588e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba4587020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba45871b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba4587340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2ba458a6d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2ba458a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba458aa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba458abe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba458ad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba4589020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba45891b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba4589340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba45894d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba4589660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba45897f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2ba4586c50" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2ba4586c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba4585020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2ba4589ac0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2ba4589ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4589e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4588020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba45881b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4588340"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba45884d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2ba4587610" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba4587610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba4587990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba4587b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba4587cb0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4587e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba4586020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba45861b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba4586340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba45864d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba4586660"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba45867f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba4586980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2ba4581cb0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2ba4581cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba45800a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba4580230"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba45803c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba4580550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba45806e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba4580870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2ba4583b30" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2ba4583b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba4582020"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba45821b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba4582340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba45824d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba4582660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba45827f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba4582980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba4582b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba4582ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2ba457e2f0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2ba457e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba457e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2ba4581020" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2ba4581020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba45813a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4581530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba45816c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4581850"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba45819e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2ba4580b40" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba4580b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba457f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba457f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba457f340"/>
        <function-ref name="get" scoped="" ref="0x7f2ba457f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba457f660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba457f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba457f980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba457fb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba457fca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba457fe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba457e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2ba45782f0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2ba45782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4578670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba4578800"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba4578990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba4578b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba4578cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba4578e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2ba457a220" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2ba457a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba457a5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba457a730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba457a8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba457aa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba457abe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba457ad70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba4579020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba45791b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba4579340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2ba45767a0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2ba45767a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba4576b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2ba4579610" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2ba4579610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4579990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4579b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba4579cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4579e40"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba4578020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2ba4577160" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba4577160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba45774e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba4577670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba4577800"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4577990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba4577b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba4577cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba4577e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba4576020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba45761b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba4576340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba45764d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2ba45717a0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2ba45717a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4571b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba4571cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba4571e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba4570020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba45701b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba4570340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2ba45736d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2ba45736d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba4573a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba4573be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba4573d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba4572020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba45721b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba4572340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba45724d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba4572660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba45727f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2ba456fc50" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2ba456fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba456e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2ba4572ac0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2ba4572ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba4572e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4571020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba45711b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4571340"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba45714d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2ba4570610" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba4570610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba4570990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba4570b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba4570cb0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4570e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba456f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba456f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba456f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba456f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba456f660"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba456f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba456f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2ba4569cb0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2ba4569cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba45680a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2ba4568230"/>
        <function-ref name="captured" scoped="" ref="0x7f2ba45683c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba4568550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba45686e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2ba4568870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2ba456bb30" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2ba456bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba456a020"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba456a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba456a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba456a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba456a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba456a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba456a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba456ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba456aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2ba45662f0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2ba45662f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba4566670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2ba4569020" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2ba4569020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba45693a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba4569530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba45696c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba4569850"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba45699e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2ba4568b40" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba4568b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba4567020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba45671b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba4567340"/>
        <function-ref name="get" scoped="" ref="0x7f2ba45674d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba4567660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba45677f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba4567980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba4567b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba4567ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba4567e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba4566020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f2ba4560240" loc="7:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f2ba4560240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba45605c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f2ba4564a90" loc="4:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f2ba4564a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba4564e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f2ba4561260" loc="5:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f2ba4561260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba45615e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f2ba45619f0" loc="6:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f2ba45619f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba4561d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f2ba4a404c0" loc="55:../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2ba4a404c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f2ba4a40840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f2ba4db13b0" loc="51:../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f2ba4db13b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f2ba4db1730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f2ba4db18c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f2ba4db1a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f2ba4c1abc0" loc="52:../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f2ba4c1abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f2ba4d56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f2ba452cdc0" loc="60:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f2ba452cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba452b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f2ba452d590" loc="57:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2ba452d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2ba452d910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f2ba452c6c0" loc="59:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f2ba452c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba452ca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f2ba452dc00" loc="58:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f2ba452dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba452c020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2ba452c1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2ba452c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2ba4e2e410" loc="48:../../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4e2e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba4e2e790"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba4e2e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f2ba4dbf3a0" loc="47:../../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f2ba4dbf3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba4dbf720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2ba4dbf8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2ba4dbfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2ba4796b70" loc="56:../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f2ba4796b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba4795020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba47951b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f2ba47912c0" loc="57:../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f2ba47912c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f2ba4791640"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f2ba47917d0"/>
        <function-ref name="sleep" scoped="" ref="0x7f2ba4791960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f2ba4797c30" loc="55:../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f2ba4797c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba4796020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2ba47961b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2ba4796340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2ba3c70020" loc="49:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2ba3c70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba3c703a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba3c70530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba3c706c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2ba3c70850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba3c709e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2ba3c70c30" loc="50:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2ba3c70c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3c6f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2ba3c6f1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba3c6f340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba3c6f4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2ba3c6f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2ba3c6f8b0" loc="51:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2ba3c6f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2ba3c6fc30"/>
        <function-ref name="source" scoped="" ref="0x7f2ba3c6fdc0"/>
        <function-ref name="address" scoped="" ref="0x7f2ba3c6d020"/>
        <function-ref name="destination" scoped="" ref="0x7f2ba3c6d1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2ba3c6d340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2ba3c6d4d0"/>
        <function-ref name="type" scoped="" ref="0x7f2ba3c6d660"/>
        <function-ref name="setType" scoped="" ref="0x7f2ba3c6d7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2ba3c6d980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2ba3c6db10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2ba3c6dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2ba3c6c020" loc="52:../../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f2ba3c6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2ba3c6c3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f2ba3c6c530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2ba3c6c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2ba2b3cb40" loc="44:../../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2ba2b3cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba2b3b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba2b3b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba2b3b340"/>
        <function-ref name="cancel" scoped="" ref="0x7f2ba2b3b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba2b3b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f2ba2b3b910" loc="46:../../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2ba2b3b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba2b3bc90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba2b3be20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba2b3a020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2ba2b3a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba2b3a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2ba2b3a590" loc="47:../../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2ba2b3a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2ba2b3a910"/>
        <function-ref name="source" scoped="" ref="0x7f2ba2b3aaa0"/>
        <function-ref name="address" scoped="" ref="0x7f2ba2b3ac30"/>
        <function-ref name="destination" scoped="" ref="0x7f2ba2b3adc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2ba2b39020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2ba2b391b0"/>
        <function-ref name="type" scoped="" ref="0x7f2ba2b39340"/>
        <function-ref name="setType" scoped="" ref="0x7f2ba2b394d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2ba2b39660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2ba2b397f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2ba2b39980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2ba44d4ce0" loc="44:../../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2ba44d4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba44d10a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba44d1230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba44d13c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2ba44d1550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba44d16e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f2ba4487400" loc="48:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2ba4487400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2ba471a550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba44877a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba4487930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba4487ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2ba4487c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba4487de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2ba4488580" loc="46:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2ba4488580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba4488920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba4488ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba4488c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f2ba4488dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba4487020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f2ba4485720" loc="50:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2ba4485720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba4485aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2ba4485c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba4485dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba4484020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2ba44841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f2ba4484480" loc="169:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f2ba4484480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba4484800"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba4484990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f2ba4484c60" loc="126:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f2ba4484c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba4482020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba44821b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2ba4486060" loc="49:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2ba4486060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2ba44863e0"/>
        <function-ref name="source" scoped="" ref="0x7f2ba4486570"/>
        <function-ref name="address" scoped="" ref="0x7f2ba4486700"/>
        <function-ref name="destination" scoped="" ref="0x7f2ba4486890"/>
        <function-ref name="setSource" scoped="" ref="0x7f2ba4486a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2ba4486bb0"/>
        <function-ref name="type" scoped="" ref="0x7f2ba4486d40"/>
        <function-ref name="setType" scoped="" ref="0x7f2ba4485020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2ba44851b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2ba4485340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2ba44854d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2ba44793b0" loc="46:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2ba44793b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2ba4479730"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2ba44798c0"/>
        <function-ref name="start" scoped="" ref="0x7f2ba4479a50"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba4479be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2ba447d3f0" loc="47:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2ba447d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2ba471a550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba447d770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba447d900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba447da90"/>
        <function-ref name="cancel" scoped="" ref="0x7f2ba447dc20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba447ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2ba44777e0" loc="49:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2ba44777e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba4477b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2ba4477cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba4477e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba4474030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2ba44741c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2ba44771d0" loc="48:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2ba44771d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2ba471a550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2ba4477550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2ba4465330" loc="53:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba4465330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba44656b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba4465840"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba44659d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba4465b60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba4465cf0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4465e80"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba4470030"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba4470670"/>
        <function-ref name="set" scoped="" ref="0x7f2ba44701c0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba4470350"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba44704e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f2ba4472b20" loc="51:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2ba4472b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2ba4471020"/>
        <function-ref name="noAck" scoped="" ref="0x7f2ba44711b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2ba4471340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2ba4474470" loc="50:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2ba4474470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2ba44747f0"/>
        <function-ref name="source" scoped="" ref="0x7f2ba4474980"/>
        <function-ref name="address" scoped="" ref="0x7f2ba4474b10"/>
        <function-ref name="destination" scoped="" ref="0x7f2ba4474ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2ba4474e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2ba4472020"/>
        <function-ref name="type" scoped="" ref="0x7f2ba44721b0"/>
        <function-ref name="setType" scoped="" ref="0x7f2ba4472340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2ba44724d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2ba4472660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2ba44727f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2ba440b4a0" loc="54:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2ba440b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba440b820"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba440b9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba440bb40"/>
        <function-ref name="cancel" scoped="" ref="0x7f2ba440bcd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba440be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2ba440a120" loc="55:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2ba440a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2ba440a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2ba4464300" loc="47:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2ba4464300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2ba471a550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba44646a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba4464830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba44649c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2ba4464b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba4464ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2ba440ed60" loc="50:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2ba440ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba440d180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2ba440d310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba440d4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba440d630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2ba440d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2ba440f0d0" loc="48:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2ba440f0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2ba471a550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2ba440f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f2ba440da10" loc="51:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2ba440da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2ba440dd90"/>
        <function-ref name="noAck" scoped="" ref="0x7f2ba440b020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2ba440b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2ba440f6c0" loc="49:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2ba440f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2ba440fa40"/>
        <function-ref name="source" scoped="" ref="0x7f2ba440fbd0"/>
        <function-ref name="address" scoped="" ref="0x7f2ba440fd60"/>
        <function-ref name="destination" scoped="" ref="0x7f2ba440e020"/>
        <function-ref name="setSource" scoped="" ref="0x7f2ba440e1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2ba440e340"/>
        <function-ref name="type" scoped="" ref="0x7f2ba440e4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f2ba440e660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2ba440e7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2ba440e980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2ba440eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2ba4408b90" loc="50:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2ba4408b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2ba4405020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2ba44051b0"/>
        <function-ref name="start" scoped="" ref="0x7f2ba4405340"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba44054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2ba4404790" loc="52:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2ba4404790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2ba47170d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba4404b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba4404ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba4404e30"/>
        <function-ref name="cancel" scoped="" ref="0x7f2ba4403020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba44031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba4408540" loc="49:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba4408540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba44088c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2ba4405c60" loc="51:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2ba4405c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2ba47170d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2ba4404020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2ba44022b0" loc="56:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba44022b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba4402630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba44027c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba4402950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba4402ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba4402c70"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4402e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba4401020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba4401660"/>
        <function-ref name="set" scoped="" ref="0x7f2ba44011b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba4401340"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba44014d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f2ba43fd970" loc="55:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f2ba43fd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2ba47170d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f2ba43fdcf0"/>
        <function-ref name="offset" scoped="" ref="0x7f2ba43fde80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f2ba4402030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2ba43f6c40" loc="66:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2ba43f6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2ba43f5020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2ba43f51b0"/>
        <function-ref name="start" scoped="" ref="0x7f2ba43f5340"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba43f54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f2ba438c6e0" loc="332:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f2ba438c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba438ca60"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba438cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f2ba43df780" loc="74:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f2ba43df780"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2ba43dfb00"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba43dfc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f2ba43c44f0" loc="191:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f2ba43c44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba43c4870"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba43c4a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba43f65f0" loc="65:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba43f65f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba43f6970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f2ba43dd360" loc="75:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f2ba43dd360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f2ba43dd6e0"/>
        <function-ref name="flush" scoped="" ref="0x7f2ba43dd870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f2ba4390c70" loc="322:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f2ba4390c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba438f020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba438f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f2ba43e47e0" loc="72:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f2ba43e47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f2ba43e4b60"/>
        <function-ref name="resetSend" scoped="" ref="0x7f2ba43e4cf0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f2ba43e4e80"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f2ba43ee030"/>
        <function-ref name="putData" scoped="" ref="0x7f2ba43ee1c0"/>
        <function-ref name="putDone" scoped="" ref="0x7f2ba43ee350"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f2ba43ee4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2ba43ee760" loc="73:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba43ee760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba43eeae0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba43eec70"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba43eee00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba43e8020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba43e81b0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba43e8340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba43e84d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba43e8b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba43e8660"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba43e87f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba43e8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f2ba4389a00" loc="341:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f2ba4389a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba4389d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba4388020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f2ba43efa40" loc="67:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f2ba43efa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f2ba43efdc0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f2ba43f4020"/>
        <function-ref name="startSend" scoped="" ref="0x7f2ba43f41b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f2ba43f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f2ba43ea530" loc="68:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f2ba43ea530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f2ba43ea8b0"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f2ba43eaa40"/>
        <function-ref name="endPacket" scoped="" ref="0x7f2ba43eabd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f2ba42be020" loc="275:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f2ba42be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba42be3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba42be530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2ba42c3de0" loc="51:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2ba42c3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2ba47170d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba42c21c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba42c2350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba42c24e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2ba42c2670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba42c2800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f2ba42be800" loc="158:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f2ba42be800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba42beb80"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba42bed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2ba42c36c0" loc="50:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2ba42c36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2ba47170d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2ba42c3a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f2ba42c2c20" loc="54:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f2ba42c2c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f2ba47170d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f2ba42c1020"/>
        <function-ref name="offset" scoped="" ref="0x7f2ba42c11b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f2ba42c1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2ba42c0920" loc="57:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba42c0920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba42c0ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba42c0e30"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba42bf020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba42bf1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba42bf340"/>
        <function-ref name="get" scoped="" ref="0x7f2ba42bf4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba42bf660"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba42bfca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba42bf980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba42bf7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba42bfb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f2ba42c1e80" loc="56:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f2ba42c1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f2ba42c0220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f2ba42c03b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f2ba42c0540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f2ba42c06d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f2ba42c1590" loc="55:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f2ba42c1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f2ba42c1910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f2ba42c1aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f2ba42c1c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f2ba42aed20" loc="50:../../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f2ba42aed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba42b60e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2ba42b6270"/>
        <function-ref name="receive" scoped="" ref="0x7f2ba42b6400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2ba42b6590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2ba42b6720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2ba42b68b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba42b6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f2ba42bce00" loc="48:../../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f2ba42bce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f2ba42b91c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f2ba42b9350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f2ba42b94e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f2ba42b9670"/>
        <function-ref name="putData" scoped="" ref="0x7f2ba42b9800"/>
        <function-ref name="putDone" scoped="" ref="0x7f2ba42b9990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f2ba42b9b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2ba42b6cc0" loc="51:../../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba42b6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba42b50a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba42b5230"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba42b53c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba42b5550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba42b56e0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba42b5870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba42b5a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba42ab1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba42b5b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba42b5d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba42ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f2ba428f020" loc="40:../../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f2ba428f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba428f3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f2ba428f530"/>
        <function-ref name="receive" scoped="" ref="0x7f2ba428f6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f2ba428f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f2ba42918d0" loc="39:../../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f2ba42918d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba4291c50"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2ba4291de0"/>
        <function-ref name="receive" scoped="" ref="0x7f2ba4290020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2ba42901b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2ba4290340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2ba42904d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba4290660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2ba42910c0" loc="38:../../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2ba42910c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2ba4291440"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba42915d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2ba3ca1c70" loc="45:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2ba3ca1c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2ba3ca0020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2ba3ca01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f2ba3c9f440" loc="47:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f2ba3c9f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba3c9f7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f2ba3c9f950"/>
        <function-ref name="receive" scoped="" ref="0x7f2ba3c9fae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f2ba3c9fc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f2ba3c9e020" loc="49:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2ba3c9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f2ba3c9e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f2ba3ca0440" loc="46:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f2ba3ca0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba3ca07c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2ba3ca0950"/>
        <function-ref name="receive" scoped="" ref="0x7f2ba3ca0ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2ba3ca0c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2ba3ca0e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2ba3c9f020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba3c9f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2ba3ca1020" loc="44:../../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2ba3ca1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2ba3ca13a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2ba3ca1530"/>
        <function-ref name="request" scoped="" ref="0x7f2ba3ca16c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2ba3ca1850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2ba3ca19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f2ba42258e0" loc="42:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba42258e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2ba4225c60"/>
        <function-ref name="configure" scoped="" ref="0x7f2ba4225df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f2ba4227d00" loc="44:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f2ba4227d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba42240a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f2ba4224230"/>
        <function-ref name="receive" scoped="" ref="0x7f2ba42243c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f2ba4224550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f2ba42211d0" loc="47:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2ba42211d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f2ba4221550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f2ba4228670" loc="43:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f2ba4228670"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba42289f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2ba4228b80"/>
        <function-ref name="receive" scoped="" ref="0x7f2ba4228d10"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2ba4227020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2ba42271b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2ba4227340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba42274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f2ba4224e50" loc="46:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f2ba4224e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2ba4222210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2ba42223a0"/>
        <function-ref name="request" scoped="" ref="0x7f2ba4222530"/>
        <function-ref name="granted" scoped="" ref="0x7f2ba42226c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2ba4222850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2ba422ec90" loc="41:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2ba422ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2ba422a0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2ba422a230"/>
        <function-ref name="request" scoped="" ref="0x7f2ba422a3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2ba422a550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2ba422a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f2ba421d710" loc="48:../../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2ba421d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2ba421da90"/>
        <function-ref name="txDone" scoped="" ref="0x7f2ba421dc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f2ba4190dc0" loc="44:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba4190dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2ba418f180"/>
        <function-ref name="configure" scoped="" ref="0x7f2ba418f310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f2ba418e890" loc="46:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f2ba418e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba418ec30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f2ba418edc0"/>
        <function-ref name="receive" scoped="" ref="0x7f2ba418d020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f2ba418d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f2ba418c3e0" loc="49:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2ba418c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f2ba418c780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f2ba418ca50" loc="50:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f2ba418ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2ba418cdd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2ba418b020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2ba418b1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2ba418b340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2ba418b4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2ba418b660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2ba418b7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2ba418b980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2ba418bb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2ba418bca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2ba418be30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2ba418a020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2ba418a1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2ba418a440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2ba418a5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2ba418a760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2ba418a8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f2ba418aa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2ba418ac10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2ba418ada0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2ba4189020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2ba41891b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2ba4189340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2ba41894d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba4189660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2ba41899f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2ba4189b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2ba4189d10"/>
        <function-ref name="tx" scoped="" ref="0x7f2ba4188020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2ba41881b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2ba4188340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2ba41884d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2ba4188660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2ba41887f0"/>
        <function-ref name="rx" scoped="" ref="0x7f2ba4188980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2ba4188b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2ba4188ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2ba4188e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2ba4187020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2ba41871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f2ba418f6d0" loc="45:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f2ba418f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba418fa70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f2ba418fc00"/>
        <function-ref name="receive" scoped="" ref="0x7f2ba418fd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f2ba418e020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f2ba418e1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f2ba418e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba418e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2ba4186020" loc="52:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba4186020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba4186e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba4185800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba4185340"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba4185cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f2ba418d5b0" loc="48:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f2ba418d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2ba418d950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2ba418dae0"/>
        <function-ref name="request" scoped="" ref="0x7f2ba418dc70"/>
        <function-ref name="granted" scoped="" ref="0x7f2ba418de00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2ba418c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2ba4190020" loc="43:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2ba4190020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2ba41903c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2ba4190550"/>
        <function-ref name="request" scoped="" ref="0x7f2ba41906e0"/>
        <function-ref name="granted" scoped="" ref="0x7f2ba4190870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2ba4190a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f2ba41875b0" loc="51:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2ba41875b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2ba4187950"/>
        <function-ref name="txDone" scoped="" ref="0x7f2ba4187ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2ba4183120" loc="53:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba4183120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba41834a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba4183630"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba41837c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba4183950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba4183ae0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4183c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba4183e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba41824d0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba41821b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba4182020"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba4182340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f2ba4175bd0" loc="78:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f2ba4175bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba4174020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f2ba41766d0" loc="77:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2ba41766d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2ba4176a50"/>
        <function-ref name="txDone" scoped="" ref="0x7f2ba4176be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f2ba417db60" loc="76:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2ba417db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2ba417a020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2ba417a1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2ba417a340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2ba417a4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2ba417a660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2ba417a7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2ba417a980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2ba417ab10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2ba417aca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2ba417ae30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2ba4179020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2ba41791b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2ba4179340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2ba41795d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2ba4179760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2ba41798f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2ba4179a80"/>
        <function-ref name="isUart" scoped="" ref="0x7f2ba4179c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2ba4179da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2ba4178020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2ba41781b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2ba4178340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2ba41784d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2ba4178660"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba41787f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2ba4178b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2ba4178d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2ba4177020"/>
        <function-ref name="tx" scoped="" ref="0x7f2ba41771b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2ba4177340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2ba41774d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2ba4177660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2ba41777f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2ba4177980"/>
        <function-ref name="rx" scoped="" ref="0x7f2ba4177b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2ba4177ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2ba4177e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2ba4176020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2ba41761b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2ba4176340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f2ba4130800" loc="82:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f2ba4130800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4130b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4130d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba412e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba412e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba412e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba412e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba412e660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba412e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba412e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba412eb10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba412eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba412ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba412d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba412d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba412d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f2ba416c020" loc="76:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f2ba416c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2ba416c3a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f2ba416c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f2ba412d800" loc="83:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f2ba412d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba412db80"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba412dd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba412c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba412c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba412c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba412c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba412c660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba412c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba412c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba412cb10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba412cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba412ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba412b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba412b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba412b440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f2ba412b800" loc="84:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f2ba412b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba412bb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba412bd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba412a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba412a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba412a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba412a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba412a660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba412a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba412a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba412ab10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba412aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba412ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba4129020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba41292b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba4129440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f2ba4171360" loc="75:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f2ba4171360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2ba41716e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2ba4171870"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2ba4171a00"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2ba4171b90"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2ba4171d20"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2ba4170020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2ba41701b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2ba4170340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2ba41704d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2ba4170660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2ba41707f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2ba4170980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2ba4170b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2ba4170da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2ba416f020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2ba416f1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2ba416f340"/>
        <function-ref name="isUart" scoped="" ref="0x7f2ba416f4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2ba416f660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2ba416f7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2ba416f980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2ba416fb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2ba416fca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2ba416fe30"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba416e020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2ba416e3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2ba416e540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2ba416e6d0"/>
        <function-ref name="tx" scoped="" ref="0x7f2ba416e860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2ba416e9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2ba416eb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2ba416ed10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2ba416d020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2ba416d1b0"/>
        <function-ref name="rx" scoped="" ref="0x7f2ba416d340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2ba416d4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2ba416d660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2ba416d7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2ba416d980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2ba416db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2ba4129700" loc="86:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba4129700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba4129a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba4129c10"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba4129da0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba4128020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba41281b0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4128340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba41284d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba4128b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4128660"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba41287f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba4128980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f2ba4143bc0" loc="79:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f2ba4143bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f2ba416a020"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f2ba416a1b0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f2ba416a340"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f2ba416a4d0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f2ba416a660"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f2ba416a7f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f2ba416a980"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f2ba416ab10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba416aca0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f2ba416ae30"/>
        <function-ref name="getData" scoped="" ref="0x7f2ba4169020"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f2ba41691b0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f2ba4169340"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f2ba41695d0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f2ba4169760"/>
        <function-ref name="getIV" scoped="" ref="0x7f2ba41698f0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f2ba4169a80"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f2ba4169c10"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2ba4169da0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f2ba4142020"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2ba41421b0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f2ba4142340"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2ba41424d0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f2ba4142660"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2ba41427f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2ba4142b80"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f2ba4142d10"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f2ba4141020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f2ba41411b0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f2ba4141340"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f2ba41414d0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f2ba4141660"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2ba41417f0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2ba4141980"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f2ba4141b10"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2ba4141ca0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f2ba4141e30"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f2ba4140020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f2ba41401b0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f2ba4140340"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2ba41404d0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f2ba4140660"/>
        <function-ref name="setData" scoped="" ref="0x7f2ba41407f0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2ba4140980"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f2ba4140b10"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2ba4140ca0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f2ba4140e30"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f2ba413f020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f2ba413f1b0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f2ba413f740"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2ba413f8d0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f2ba413fa60"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2ba413fbf0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f2ba413fd80"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f2ba413e020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f2ba413e1b0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f2ba413e340"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2ba413e4d0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f2ba413e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f2ba413c800" loc="81:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f2ba413c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba413cb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba413cd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba4131020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba41311b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba4131340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba41314d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4131660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba41317f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4131980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4131b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4131ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4131e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba4130020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba41302b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba4130440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f2ba416c970" loc="77:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2ba416c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba416ccf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f2ba4132860" loc="80:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f2ba4132860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4132be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4132d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba413d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba413d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba413d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba413d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba413d660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba413d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba413d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba413db10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba413dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba413de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba413c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba413c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba413c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f2ba40a5810" loc="53:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f2ba40a5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40a5b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba40a5d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40a4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40a41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40a4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40a44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40a4660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40a47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba40a4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba40a4b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40a4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba40a4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40a3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40a32b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40a3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f2ba4090810" loc="66:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f2ba4090810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4090b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4090d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba408f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba408f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba408f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba408f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba408f660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba408f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba408f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba408fb10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba408fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba408fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba408e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba408e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba408e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f2ba4047ca0" loc="145:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f2ba4047ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40460a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4046230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40463c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4046550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40466e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4046870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4046a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4046b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4046d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4045020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40451b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4045340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40454d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4045760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40458f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f2ba4022cb0" loc="165:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f2ba4022cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40210a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4021230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40213c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4021550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40216e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4021870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4021a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4021b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4021d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4020020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40201b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4020340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40204d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4020760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40208f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f2ba4045cc0" loc="146:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f2ba4045cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40440a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4044230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40443c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4044550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40446e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4044870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4044a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4044b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4044d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4043020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40431b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4043340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40434d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4043760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40438f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f2ba408c810" loc="71:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f2ba408c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba408cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba408cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba408b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba408b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba408b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba408b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba408b660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba408b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba408b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba408bb10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba408bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba408be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba408a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba408a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba408a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f2ba40789a0" loc="84:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f2ba40789a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4078d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4077020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40771b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4077340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40774d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4077660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40777f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4077980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4077b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4077ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4077e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4076020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40761b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4076440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40765d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f2ba40649a0" loc="97:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f2ba40649a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4064d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4062020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40621b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4062340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40624d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4062660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40627f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4062980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4062b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4062ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4062e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4061020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40611b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4061440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40615d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f2ba40539a0" loc="108:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f2ba40539a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4053d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4052020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40521b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4052340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40524d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4052660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40527f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4052980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4052b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4052ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4052e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4051020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40511b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4051440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40515d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f2ba403fcc0" loc="149:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f2ba403fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba403e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba403e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba403e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba403e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba403e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba403e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba403ea00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba403eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba403ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba403d020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba403d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba403d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba403d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba403d760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba403d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f2ba402ecb0" loc="159:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f2ba402ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba402d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba402d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba402d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba402d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba402d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba402d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba402da00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba402db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba402dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba402c020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba402c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba402c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba402c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba402c760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba402c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f2ba401acc0" loc="171:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f2ba401acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40190a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4019230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40193c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4019550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40196e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4019870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4019a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4019b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4019d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4018020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40181b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4018340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40184d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4018760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40188f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f2ba409f810" loc="56:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f2ba409f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba409fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba409fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba409e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba409e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba409e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba409e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba409e660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba409e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba409e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba409eb10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba409eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba409ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba409d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba409d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba409d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f2ba403dcc0" loc="150:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f2ba403dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba403c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba403c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba403c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba403c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba403c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba403c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba403ca00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba403cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba403cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba403b020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba403b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba403b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba403b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba403b760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba403b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f2ba409b810" loc="61:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f2ba409b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba409bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba409bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba409a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba409a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba409a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba409a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba409a660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba409a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba409a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba409ab10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba409aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba409ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba4099020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40992b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba4099440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f2ba4086810" loc="74:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f2ba4086810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4086b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4086d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba4085020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40851b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba4085340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4085660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40857f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4085980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4085b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4085ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4085e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba4084020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40842b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba4084440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f2ba40729a0" loc="87:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f2ba40729a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4072d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4071020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40711b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4071340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40714d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4071660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40717f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4071980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4071b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4071ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4071e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4070020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40701b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4070440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40705d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f2ba405d9a0" loc="100:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f2ba405d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba405dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba405c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba405c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba405c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba405c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba405c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba405c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba405c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba405cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba405cca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba405ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba405b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba405b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba405b440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba405b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f2ba404d9a0" loc="111:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f2ba404d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba404dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba404c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba404c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba404c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba404c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba404c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba404c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba404c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba404cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba404cca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba404ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba404b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba404b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba404b440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba404b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f2ba40a9810" loc="51:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f2ba40a9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40a9b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba40a9d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40a8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40a81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40a8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40a84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40a8660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40a87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba40a8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba40a8b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40a8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba40a8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40a7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40a72b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40a7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f2ba4095810" loc="64:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f2ba4095810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4095c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4095e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba4094020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40941b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba4094340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40944d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4094660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40947f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4094980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4094b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4094ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4094e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba4093020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40932b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba4093440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f2ba4080810" loc="77:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f2ba4080810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4080b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4080d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba407f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba407f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba407f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba407f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba407f660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba407f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba407f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba407fb10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba407fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba407fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba407e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba407e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba407e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f2ba4049cc0" loc="144:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f2ba4049cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40480a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4048230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40483c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4048550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40486e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4048870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4048a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4048b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4048d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4047020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40471b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4047340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40474d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4047760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40478f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f2ba4028cb0" loc="162:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f2ba4028cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40270a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4027230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40273c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4027550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40276e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4027870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4027a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4027b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4027d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4026020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40261b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4026340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40264d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4026760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40268f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f2ba401ccb0" loc="169:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f2ba401ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba401b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba401b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba401b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba401b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba401b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba401b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba401ba00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba401bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba401bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba401a020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba401a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba401a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba401a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba401a760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba401a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f2ba4035cc0" loc="155:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f2ba4035cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40330a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4033230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40333c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4033550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40336e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4033870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4033a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4033b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4033d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4032020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40321b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4032340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40324d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4032760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40328f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f2ba407c810" loc="82:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f2ba407c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba407cd90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba407b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba407b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba407b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba407b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba407b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba407b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba407b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba407bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba407bca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba407be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba407a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba407a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba407a440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba407a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f2ba40689a0" loc="95:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f2ba40689a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4068d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4067020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40671b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4067340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40674d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4067660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40677f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4067980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4067b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4067ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4067e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4066020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40661b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4066440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40665d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f2ba40579a0" loc="106:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f2ba40579a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4057d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4056020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40561b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4056340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40564d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4056660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40567f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4056980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4056b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4056ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4056e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4055020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40551b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4055440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40555d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f2ba4026cb0" loc="163:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f2ba4026cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40250a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4025230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40253c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4025550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40256e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4025870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4025a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4025b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4025d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4024020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40241b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4024340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40244d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4024760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40248f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f2ba403bcb0" loc="152:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f2ba403bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba403a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba403a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba403a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba403a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba403a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba403a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba403aa00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba403ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba403ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4039020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40391b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4039340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40394d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4039760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40398f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f2ba40a3810" loc="54:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f2ba40a3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40a3b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba40a3d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40a2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40a21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40a2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40a24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40a2660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40a27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba40a2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba40a2b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40a2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba40a2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40a1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40a12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40a1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f2ba408e810" loc="67:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f2ba408e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba408eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba408ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba408d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba408d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba408d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba408d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba408d660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba408d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba408d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba408db10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba408dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba408de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba408c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba408c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba408c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f2ba405b9a0" loc="104:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f2ba405b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba405bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba405a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba405a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba405a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba405a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba405a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba405a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba405a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba405ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba405aca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba405ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4059020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40591b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4059440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40595d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f2ba408a810" loc="72:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f2ba408a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba408ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba408ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba4089020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40891b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba4089340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40894d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4089660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40897f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4089980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4089b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4089ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4089e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba4088020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40882b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba4088440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f2ba40769a0" loc="85:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f2ba40769a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4076d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4075020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40751b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4075340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40754d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4075660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40757f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4075980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4075b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4075ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4075e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4074020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40741b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4074440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40745d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f2ba40619a0" loc="98:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f2ba40619a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4061d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4060020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40601b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4060340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40604d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4060660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40607f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4060980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4060b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4060ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4060e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba405f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba405f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba405f440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba405f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f2ba40519a0" loc="109:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f2ba40519a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4051d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4050020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40501b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4050340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40504d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4050660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40507f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4050980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4050b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4050ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4050e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba404f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba404f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba404f440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba404f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f2ba4037cc0" loc="154:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f2ba4037cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40360a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4036230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40363c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4036550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40366e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4036870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4036a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4036b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4036d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4035020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40351b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4035340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40354d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4035760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40358f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f2ba40af800" loc="49:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f2ba40af800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40afb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba40afd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40ac020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40ac1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40ac340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40ac4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40ac660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40ac7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba40ac980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba40acb10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40acca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba40ace30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40ab020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40ab2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40ab440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f2ba4099810" loc="62:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f2ba4099810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4099b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4099d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba4098020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba4098340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40984d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4098660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40987f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4098980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4098b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4098ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4098e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba4097020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40972b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba4097440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f2ba4084810" loc="75:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f2ba4084810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4084b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4084d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba4083020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40831b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba4083340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40834d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4083660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40837f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4083980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4083b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4083ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4083e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba4082020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40822b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba4082440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f2ba40709a0" loc="88:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f2ba40709a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4070d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba406f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba406f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba406f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba406f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba406f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba406f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba406f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba406fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba406fca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba406fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba406e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba406e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba406e440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba406e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f2ba4032cc0" loc="156:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f2ba4032cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40310a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4031230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40313c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4031550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40316e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4031870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4031a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4031b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4031d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4030020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40301b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4030340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40304d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4030760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40308f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f2ba402ccb0" loc="160:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f2ba402ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba402b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba402b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba402b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba402b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba402b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba402b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba402ba00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba402bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba402bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba402a020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba402a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba402a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba402a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba402a760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba402a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f2ba4020cb0" loc="166:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f2ba4020cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba401f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba401f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba401f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba401f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba401f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba401f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba401fa00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba401fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba401fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba401e020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba401e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba401e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba401e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba401e760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba401e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f2ba406c9a0" loc="93:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f2ba406c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba406cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba406b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba406b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba406b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba406b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba406b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba406b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba406b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba406bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba406bca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba406be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba406a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba406a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba406a440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba406a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f2ba4030cc0" loc="157:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f2ba4030cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba402f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba402f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba402f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba402f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba402f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba402f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba402fa00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba402fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba402fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba402e020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba402e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba402e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba402e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba402e760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba402e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f2ba40a7810" loc="52:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f2ba40a7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40a7b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba40a7d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40a6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40a61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40a6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40a64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40a6660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40a67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba40a6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba40a6b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40a6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba40a6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40a5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40a52b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40a5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f2ba4093810" loc="65:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f2ba4093810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4093b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4093d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba4091020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40911b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba4091340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40914d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4091660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40917f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4091980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4091b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4091ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4091e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba4090020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40902b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba4090440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f2ba407e810" loc="78:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f2ba407e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba407eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba407ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba407d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba407d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba407d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba407d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba407d660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba407d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba407d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba407db10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba407dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba407de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba407c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba407c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba407c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f2ba4039cc0" loc="153:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f2ba4039cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40380a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4038230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40383c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4038550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40386e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4038870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4038a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4038b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4038d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4037020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40371b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4037340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40374d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4037760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40378f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f2ba4024cb0" loc="164:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f2ba4024cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40230a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4023230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40233c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4023550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40236e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4023870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4023a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4023b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4023d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4022020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40221b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4022340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40224d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4022760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40228f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f2ba407a9a0" loc="83:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f2ba407a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba407ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4079020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40791b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4079340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40794d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4079660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40797f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4079980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4079b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4079ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4079e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4078020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40781b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4078440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40785d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f2ba40669a0" loc="96:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f2ba40669a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4066d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4065020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40651b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4065340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40654d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4065660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40657f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4065980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4065b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4065ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4065e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4064020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40641b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4064440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40645d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f2ba40559a0" loc="107:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f2ba40559a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4055d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4054020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40541b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4054340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40544d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4054660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40547f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4054980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4054b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4054ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4054e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4053020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40531b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4053440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40535d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f2ba40a1810" loc="55:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f2ba40a1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40a1b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba40a1d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40a0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40a01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40a0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40a04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40a0660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40a07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba40a0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba40a0b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40a0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba40a0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba409f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba409f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba409f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f2ba40599a0" loc="105:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f2ba40599a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4059d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4058020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40581b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4058340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40584d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4058660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40587f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4058980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4058b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4058ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4058e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4057020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40571b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4057440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40575d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f2ba409d810" loc="60:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f2ba409d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba409db90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba409dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba409c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba409c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba409c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba409c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba409c660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba409c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba409c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba409cb10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba409cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba409ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba409b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba409b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba409b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f2ba4088810" loc="73:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f2ba4088810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4088b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4088d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba4087020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40871b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba4087340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40874d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4087660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40877f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4087980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4087b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4087ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4087e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba4086020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40862b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba4086440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f2ba40749a0" loc="86:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f2ba40749a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4074d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4073020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40731b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4073340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40734d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4073660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40737f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4073980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4073b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4073ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4073e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4072020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40721b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4072440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40725d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f2ba405f9a0" loc="99:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f2ba405f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba405fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba405e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba405e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba405e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba405e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba405e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba405e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba405e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba405eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba405eca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba405ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba405d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba405d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba405d440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba405d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f2ba404f9a0" loc="110:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f2ba404f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba404fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba404e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba404e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba404e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba404e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba404e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba404e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba404e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba404eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba404eca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba404ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba404d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba404d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba404d440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba404d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f2ba40ab810" loc="50:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f2ba40ab810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40abb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba40abd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40aa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40aa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40aa340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40aa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40aa660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40aa7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba40aa980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba40aab10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40aaca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba40aae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40a9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40a92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40a9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f2ba4097810" loc="63:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f2ba4097810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4097b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4097d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba4096020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40961b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba4096340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40964d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4096660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40967f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4096980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4096b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4096ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4096e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba4095020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40952b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba4095440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f2ba4082810" loc="76:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f2ba4082810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba4082b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4082d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba4081020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba40811b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba4081340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba40814d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4081660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba40817f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4081980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4081b10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4081ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4081e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba4080020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba40802b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba4080440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f2ba406e9a0" loc="89:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f2ba406e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba406ed20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba406d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba406d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba406d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba406d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba406d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba406d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba406d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba406db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba406dca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba406de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba406c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba406c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba406c440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba406c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f2ba4041ca0" loc="148:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f2ba4041ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40400a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4040230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40403c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4040550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40406e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4040870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4040a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4040b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4040d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba403f020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba403f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba403f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba403f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba403f760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba403f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f2ba402acb0" loc="161:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f2ba402acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40290a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4029230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40293c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4029550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40296e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4029870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4029a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4029b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4029d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4028020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40281b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4028340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40284d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4028760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40288f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f2ba4043cc0" loc="147:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f2ba4043cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40420a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4042230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40423c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4042550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40426e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4042870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4042a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4042b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4042d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4041020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4041340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4041760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40418f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f2ba406a9a0" loc="94:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f2ba406a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba406ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4069020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40691b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4069340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40694d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4069660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba40697f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4069980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4069b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4069ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba4069e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4068020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40681b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4068440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40685d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f2ba401ecb0" loc="168:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f2ba401ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba401d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba401d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba401d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba401d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba401d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba401d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba401da00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba401db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba401dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba401c020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba401c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba401c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba401c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba401c760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba401c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f2ba4018cc0" loc="172:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f2ba4018cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba40170a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba4017230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba40173c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba4017550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba40176e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba4017870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba4017a00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba4017b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba4017d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4016020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4016340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4016760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f2ba404b9f0" loc="143:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f2ba404b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba404a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba404a350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba404a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba404a670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba404a800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba404a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba404ab20"/>
        <function-ref name="get" scoped="" ref="0x7f2ba404acb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba404ae40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba4049020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba40491b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba4049340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba40494d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba4049760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba40498f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba4013d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba4013d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fec0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fec270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fec400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fec590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fec720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fec8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3feca40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fecbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fecd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3feb020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3feb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3feb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3feb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3feb760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3feb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fe8740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fe8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fe8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fe8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fe8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fe7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fe71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fe7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fe74d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fe7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fe77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fe7980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fe7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fe7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fe7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fe6120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fe62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fe2100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fe2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fe2480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fe2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fe27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fe2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fe2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fe2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fe2de0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fe1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fe11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fe1340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fe14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fe1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fe17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fe1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fe1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fded10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fded10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fdd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fdd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fdd400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fdd590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fdd720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fdd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fdda40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fddbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fddd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fdc020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fdc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fdc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fdc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fdc760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fdc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fd9740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fd9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fd9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fd9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fd9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fd8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fd81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fd8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fd84d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fd8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fd87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fd8980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fd8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fd8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fd8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fd7120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fd72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fd4100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fd4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fd4480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fd4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fd47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fd4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fd4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fd4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fd4de0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fd3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fd31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fd3340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fd34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fd3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fd37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fd3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fd3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fd0d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fd0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fcf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fcf270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fcf400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fcf590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fcf720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fcf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fcfa40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fcfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fcfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fce020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fce340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fce760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fcb740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fcb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fcbac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fcbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fcbde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fca020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fca1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fca4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fca660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fca7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fca980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fcab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fcaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fcae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fc9120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fc92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fc6100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fc6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fc6480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fc6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fc67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fc6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fc6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fc6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fc6de0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fc5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fc51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fc5340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fc54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fc5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fc57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fc5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fc5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fc2d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fc2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fc00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fc0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fc0400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fc0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fc0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fc08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fc0a40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fc0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fc0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fbf020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fbf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fbf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fbf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fbf760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fbf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fbc740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fbc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fbcac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fbcc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fbcde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fbb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fbb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fbb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fbb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fbb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fbb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fbb980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fbbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fbbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fbbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fba120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fb7100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fb7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fb7480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fb7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fb77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fb7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fb7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fb7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fb7de0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fb6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fb61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fb6340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fb64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fb6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fb67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fb6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fb6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fb3d80" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fb3d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fb2180"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fb2310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fb24a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fb2630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fb27c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fb2950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fb2ae0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fb2c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fb2e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fb1020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fb11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fb1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fb14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fb1760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fb18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fae740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fae740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3faeac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3faec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3faede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fad020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fad1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fad340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fad4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fad660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fad7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fad980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fadb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fadca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fade30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fac120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fa9100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fa9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fa9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fa9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fa97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fa9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fa9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fa9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fa9de0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fa8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fa81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fa8340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fa84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fa8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fa87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fa8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fa8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fa5d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fa5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fa40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fa4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fa4400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3fa4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3fa4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3fa48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3fa4a40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3fa4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3fa4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3fa3020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3fa31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3fa3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3fa34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3fa3760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3fa38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3fa0740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3fa0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3fa0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3fa0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3fa0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f9f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f9f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f9f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f9f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f9f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f9f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f9f980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f9fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f9fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f9fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f9e120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f9e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f9b100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f9b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f9b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f9b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f9b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f9b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f9bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f9bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f9bde0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f99020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f991b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f99340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f994d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f99660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f997f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f99a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f99c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f96d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f96d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f950e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f95270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f95400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f95590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f95720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f958b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f95a40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f95bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f95d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f94020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f941b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f94340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f944d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f94760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f948f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f91740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f91740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f91ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f91c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f91de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f90020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f901b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f90340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f904d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f90660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f907f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f90980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f90b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f90ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f90e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f8f120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f8f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f8c100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f8c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f8c480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f8c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f8c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f8c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f8cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f8cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f8cde0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f8b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f8b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f8b340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f8b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f8b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f8b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f8ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f8bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f88d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f88d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f870e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f87270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f87400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f87590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f87720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f878b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f87a40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f87bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f87d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f86020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f861b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f86340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f864d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f86760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f868f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f83740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f83740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f83ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f83c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f83de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f82020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f821b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f82340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f824d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f82660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f827f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f82980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f82b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f82ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f82e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f81120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f7e100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f7e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f7e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f7e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f7e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f7e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f7eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f7ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f7ede0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f7d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f7d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f7d340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f7d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f7d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f7d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f7da80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f7dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f7ae60" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f7ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f79210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f793a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f79530"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f796c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f79850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f799e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f79b70"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f79d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f78020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f781b0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f78340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f784d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f78660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f788f0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f78a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f749f0" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f749f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f74d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f73020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f731b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f73340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f734d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f73660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f737f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f73980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f73b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f73ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f73e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f72020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f721b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f72440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f725d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f6f460" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f6f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f6f7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f6f970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f6fb00"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f6fc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f6fe20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f6e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f6e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f6e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f6e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f6e660"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f6e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f6e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f6eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f6eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f6be00" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f6be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f6a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f6a350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f6a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f6a670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f6a800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f6a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f6ab20"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f6acb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f6ae40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f69020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f691b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f69340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f694d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f69760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f698f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f66740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f66740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f66ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f66c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f66de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f65020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f651b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f65340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f654d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f65660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f657f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f65980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f65b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f65ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f65e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f64120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f61100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f61100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f61480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f61610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f617a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f61930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f61ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f61c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f61de0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f60020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f601b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f60340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f604d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f60660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f607f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f60a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f60c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f5dd10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f5dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f5c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f5c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f5c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f5c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f5c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f5c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f5ca40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f5cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f5cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f5b020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f5b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f5b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f5b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f5b760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f5b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f58740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f58740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f58ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f58c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f58de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f57020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f571b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f57340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f574d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f57660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f577f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f57980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f57b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f57ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f57e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f56120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f53100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f53100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f53480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f53610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f537a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f53930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f53ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f53c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f53de0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f51020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f511b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f51340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f514d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f51660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f517f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f51a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f51c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f4ed10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f4ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f4d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f4d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f4d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f4d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f4d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f4d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f4da40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f4dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f4dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f4c020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f4c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f4c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f4c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f4c760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f4c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f49740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f49740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f49ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f49c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f49de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f48020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f481b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f48340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f484d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f48660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f487f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f48980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f48b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f48ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f48e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f47120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f472b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f44100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f44100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f44480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f44610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f447a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f44930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f44ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f44c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f44de0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f43020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f431b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f43340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f434d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f43660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f437f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f43a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f43c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f40d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f40d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f3f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f3f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f3f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f3f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f3f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f3f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f3fa40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f3fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f3fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f3e020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f3e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f3e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f3e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f3e760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f3e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f3b740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f3b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f3bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f3bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f3bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f3a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f3a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f3a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f3a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f3a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f3a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f3a980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f3ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f3aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f3ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f39120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f392b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f36100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f36100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f36480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f36610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f367a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f36930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f36ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f36c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f36de0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f35020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f351b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f35340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f354d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f35660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f357f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f35a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f35c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f32d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f32d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f310e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f31270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f31400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f31590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f31720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f318b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f31a40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f31bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f31d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f30020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f301b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f30340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f304d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f30760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f308f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f2d740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f2d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f2dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f2dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f2dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f2b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f2b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f2b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f2b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f2b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f2b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f2b980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f2bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f2bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f2be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f2a120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f2a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f27100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f27100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f27480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f27610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f277a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f27930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f27ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f27c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f27de0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f26020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f261b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f26340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f264d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f26660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f267f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f26a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f26c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f23d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f23d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f220e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f22270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f22400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f22590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f22720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f228b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f22a40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f22bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f22d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f21020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f211b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f21340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f214d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f21760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f218f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f1e740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f1e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f1eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f1ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f1ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f1d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f1d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f1d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f1d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f1d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f1d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f1d980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f1db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f1dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f1de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f1c120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f1c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f19100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f19100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f19480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f19610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f197a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f19930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f19ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f19c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f19de0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f18020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f181b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f18340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f184d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f18660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f187f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f18a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f18c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f15d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f15d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f140e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f14270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f14400"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f14590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f14720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f148b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f14a40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f14bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f14d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f13020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f131b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f13340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f134d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f13760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f10740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f10740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f10ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f10c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f10de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f0f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f0f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f0f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f0f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f0f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f0f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f0f980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f0fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f0fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f0fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f0e120"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f0e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2ba3f0b100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2ba3f0b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3f0b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3f0b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3f0b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3f0b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3f0bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3f0bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3f0bde0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3f0a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3f0a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3f0a340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3f0a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3f0a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3f0a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3f0aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3f0ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2ba3e9ad20" loc="43:../../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba3e9ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba3e97b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba3e96550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba3e96090"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba3e96a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f2ba3e95d90" loc="43:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f2ba3e95d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba3e92bc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba3e90590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba3e900d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba3e90a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2ba3e7e020" loc="45:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba3e7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3e7e3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba3e7e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba3e7e6c0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e7e850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba3e7e9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba3e7eb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba3e7ed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba3e7d020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba3e7d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba3e7d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba3e7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2ba3e8ee50" loc="44:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba3e8ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba3e8dca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba3e80670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba3e801b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba3e80b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f2ba3e7a020" loc="47:../../../../tos/platforms/shimmer2r/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba3e7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba3e7a3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba3e7a530"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba3e7a6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba3e7a850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba3e7a9e0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e7ab70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba3e7ad00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba3e794d0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e79020"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba3e791b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba3e79340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f2ba3e73060" loc="51:../../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f2ba3e73060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3e733e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3e73570"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3e73700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3e73890"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e73a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3e73bb0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e73d40"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3e72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba3e76470" loc="47:../../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba3e76470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3e767f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f2ba3e72340" loc="52:../../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f2ba3e72340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3e726c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3e72850"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3e729e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3e72b70"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e72d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3e6d020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e6d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3e6d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f2ba3e76a70" loc="48:../../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba3e76a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba3e76df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba3e75020"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba3e751b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba3e75340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba3e754d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e75660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba3e757f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba3e75e30"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e75980"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba3e75b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba3e75ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f2ba3e6d660" loc="53:../../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f2ba3e6d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3e6d9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3e6db70"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3e6dd00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3e6c020"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e6c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3e6c340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e6c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3e6c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f2ba3e77b10" loc="42:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f2ba3e77b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3e50020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3e501b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3e50340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3e504d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e50660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3e507f0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e50980"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3e50b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f2ba3e50e70" loc="43:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f2ba3e50e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3e4f220"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3e4f3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3e4f540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3e4f6d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e4f860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3e4f9f0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e4fb80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3e4fd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f2ba3e4d2e0" loc="45:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba3e4d2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3e4d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f2ba3e4e0f0" loc="44:../../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f2ba3e4e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3e4e470"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3e4e600"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3e4e790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3e4e920"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e4eab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3e4ec40"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e4edd0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3e4d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2ba3e392f0" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2ba3e392f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3e39670"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3e39800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3e39990"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3e39b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3e39cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3e39e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3e38020"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e381b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3e38340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3e384d0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e38660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3e387f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3e38980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3e38c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3e38da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2ba3e4a020" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba3e4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3e4a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3e4a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3e4a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3e4a850"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e4a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3e4ab70"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e4ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3e39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2ba3e35de0" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2ba3e35de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3e34180"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3e34310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3e344a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3e34630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3e347c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3e34950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3e34ae0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e34c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3e34e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3e33020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e331b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3e33340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3e334d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3e33760"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3e338f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2ba3e36b90" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba3e36b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3e35020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3e351b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3e35340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3e354d0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e35660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3e357f0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e35980"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3e35b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2ba3e2f930" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2ba3e2f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3e2fcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3e2fe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3e2e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3e2e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3e2e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3e2e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3e2e660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e2e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3e2e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3e2eb10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e2eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3e2ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3e2d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3e2d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3e2d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2ba3e31710" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba3e31710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3e31a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3e31c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3e31db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3e2f020"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3e2f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3e2f340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3e2f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3e2f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2ba2a80a90" loc="42:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2ba2a80a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2ba2a80e10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2ba2a7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f2ba2a7abe0" loc="46:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f2ba2a7abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba2a79020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2ba2a72020" loc="51:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba2a72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2ba2a723a0"/>
        <function-ref name="configure" scoped="" ref="0x7f2ba2a72530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f2ba2a792b0" loc="48:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2ba2a792b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f2ba2a79630"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f2ba2a797c0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f2ba2a79950"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f2ba2a79ae0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f2ba2a79c70"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f2ba2a79e00"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f2ba2a78020"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f2ba2a781b0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba2a78340"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f2ba2a784d0"/>
        <function-ref name="getData" scoped="" ref="0x7f2ba2a78660"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f2ba2a787f0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f2ba2a78980"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f2ba2a78c10"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f2ba2a78da0"/>
        <function-ref name="getIV" scoped="" ref="0x7f2ba2a77020"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f2ba2a771b0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f2ba2a77340"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2ba2a774d0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f2ba2a77660"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2ba2a777f0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f2ba2a77980"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2ba2a77b10"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f2ba2a77ca0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2ba2a77e30"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2ba2a76220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f2ba2a763b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f2ba2a76540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f2ba2a766d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f2ba2a76860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f2ba2a769f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f2ba2a76b80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2ba2a76d10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2ba2a75020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f2ba2a751b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2ba2a75340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f2ba2a754d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f2ba2a75660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f2ba2a757f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f2ba2a75980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2ba2a75b10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f2ba2a75ca0"/>
        <function-ref name="setData" scoped="" ref="0x7f2ba2a75e30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2ba2a74020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f2ba2a741b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2ba2a74340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f2ba2a744d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f2ba2a74660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f2ba2a747f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f2ba2a74d80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2ba2a73020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f2ba2a731b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2ba2a73340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f2ba2a734d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f2ba2a73660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f2ba2a737f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f2ba2a73980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2ba2a73b10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f2ba2a73ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f2ba2a7a440" loc="45:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2ba2a7a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2ba2a7a7c0"/>
        <function-ref name="txDone" scoped="" ref="0x7f2ba2a7a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2ba2a81e00" loc="41:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2ba2a81e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2ba2a801c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2ba2a80350"/>
        <function-ref name="request" scoped="" ref="0x7f2ba2a804e0"/>
        <function-ref name="granted" scoped="" ref="0x7f2ba2a80670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2ba2a80800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f2ba2a7fa50" loc="44:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2ba2a7fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2ba2a7fdd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2ba2a7e020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2ba2a7e1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2ba2a7e340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2ba2a7e4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2ba2a7e660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2ba2a7e7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2ba2a7e980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2ba2a7eb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2ba2a7eca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2ba2a7ee30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2ba2a7d020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2ba2a7d1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2ba2a7d440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2ba2a7d5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2ba2a7d760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2ba2a7d8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f2ba2a7da80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2ba2a7dc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2ba2a7dda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2ba2a7c020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2ba2a7c1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2ba2a7c340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2ba2a7c4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba2a7c660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2ba2a7c9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2ba2a7cb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2ba2a7cd10"/>
        <function-ref name="tx" scoped="" ref="0x7f2ba2a7b020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2ba2a7b1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2ba2a7b340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2ba2a7b4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2ba2a7b660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2ba2a7b7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f2ba2a7b980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2ba2a7bb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2ba2a7bca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2ba2a7be30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2ba2a7a020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2ba2a7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2ba2a7f2b0" loc="43:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2ba2a7f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2ba2a7f630"/>
        <function-ref name="userId" scoped="" ref="0x7f2ba2a7f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2ba3e002c0" loc="42:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2ba3e002c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2ba3e00640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2ba3e007d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2ba3dff8a0" loc="45:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba3dff8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2ba3dffc20"/>
        <function-ref name="configure" scoped="" ref="0x7f2ba3dffdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f2ba3e044d0" loc="39:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f2ba3e044d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2ba3e04850"/>
        <function-ref name="txDone" scoped="" ref="0x7f2ba3e049e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2ba3e01020" loc="41:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2ba3e01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2ba3e013a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2ba3e01530"/>
        <function-ref name="request" scoped="" ref="0x7f2ba3e016c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2ba3e01850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2ba3e019e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f2ba3e033f0" loc="40:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2ba3e033f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba3e03770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2ba3e00ad0" loc="43:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2ba3e00ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2ba3e00e50"/>
        <function-ref name="userId" scoped="" ref="0x7f2ba3dff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f2ba3deabf0" loc="43:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2ba3deabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2ba3de9020"/>
        <function-ref name="userId" scoped="" ref="0x7f2ba3de91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f2ba3dfdd60" loc="39:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f2ba3dfdd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2ba3dfc180"/>
        <function-ref name="txDone" scoped="" ref="0x7f2ba3dfc310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f2ba3dea5e0" loc="42:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f2ba3dea5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba3dea960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f2ba3dfc710" loc="40:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2ba3dfc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba3dfcab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f2ba3dfcd80" loc="41:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f2ba3dfcd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2ba3dea180"/>
        <function-ref name="txDone" scoped="" ref="0x7f2ba3dea310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2ba3d6f020" loc="92:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2ba3d6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2ba3d6f3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2ba3d6f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2ba3d6ecd0" loc="96:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba3d6ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2ba3d6d0a0"/>
        <function-ref name="configure" scoped="" ref="0x7f2ba3d6d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f2ba3d6f7a0" loc="93:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2ba3d6f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2ba3d6fb20"/>
        <function-ref name="requested" scoped="" ref="0x7f2ba3d6fcb0"/>
        <function-ref name="granted" scoped="" ref="0x7f2ba3d6fe40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2ba3d6e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2ba3d6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2ba3d70210" loc="91:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2ba3d70210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2ba3d705b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2ba3d70740"/>
        <function-ref name="request" scoped="" ref="0x7f2ba3d708d0"/>
        <function-ref name="granted" scoped="" ref="0x7f2ba3d70a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2ba3d70bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2ba3d6e400" loc="94:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2ba3d6e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2ba3d6e780"/>
        <function-ref name="userId" scoped="" ref="0x7f2ba3d6e910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba26aae50" loc="44:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba26aae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba26a9210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f2ba26a94a0" loc="45:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f2ba26a94a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2ba26a9820"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2ba26a99b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2ba26a9b40"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2ba26a9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2ba26a6530" loc="55:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2ba26a6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2ba26a68d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2ba26a6a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2ba26a3270" loc="60:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2ba26a3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2ba26a3610"/>
        <function-ref name="configure" scoped="" ref="0x7f2ba26a37a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f2ba26a3a30" loc="61:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f2ba26a3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2ba26a3db0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2ba26a2020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2ba26a21b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2ba26a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f2ba26a6cb0" loc="56:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2ba26a6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2ba26a50a0"/>
        <function-ref name="requested" scoped="" ref="0x7f2ba26a5230"/>
        <function-ref name="granted" scoped="" ref="0x7f2ba26a53c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2ba26a5550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2ba26a56e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2ba26a2590" loc="62:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba26a2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba26a2910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba26a2aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba26a2c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba26a2dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba26a1020"/>
        <function-ref name="get" scoped="" ref="0x7f2ba26a11b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba26a1340"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba26a1980"/>
        <function-ref name="set" scoped="" ref="0x7f2ba26a1660"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba26a14d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba26a17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2ba26a7740" loc="54:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2ba26a7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2ba26a7ae0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2ba26a7c70"/>
        <function-ref name="request" scoped="" ref="0x7f2ba26a7e00"/>
        <function-ref name="granted" scoped="" ref="0x7f2ba26a6020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2ba26a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2ba26a5930" loc="57:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2ba26a5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2ba26a5cb0"/>
        <function-ref name="userId" scoped="" ref="0x7f2ba26a5e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f2ba26a1c50" loc="75:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f2ba26a1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba26a0020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba26a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f2ba3d66d70" loc="4:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2ba3d66d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f2ba3d63180"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f2ba3d63310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f2ba3d634a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f2ba3d63630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f2ba3d637c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f2ba3d63950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f2ba3d63ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f2ba3d63c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba3d63e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f2ba3d62020"/>
        <function-ref name="getData" scoped="" ref="0x7f2ba3d621b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f2ba3d62340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f2ba3d624d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f2ba3d62760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f2ba3d628f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f2ba3d62a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f2ba3d62c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f2ba3d62da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2ba3d61020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f2ba3d611b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2ba3d61340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f2ba3d614d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2ba3d61660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f2ba3d617f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2ba3d61980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2ba3d61d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f2ba3d60020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f2ba3d601b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f2ba3d60340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f2ba3d604d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f2ba3d60660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f2ba3d607f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2ba3d60980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2ba3d60b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f2ba3d60ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2ba3d60e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f2ba3d5f020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f2ba3d5f1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f2ba3d5f340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f2ba3d5f4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2ba3d5f660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f2ba3d5f7f0"/>
        <function-ref name="setData" scoped="" ref="0x7f2ba3d5f980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2ba3d5fb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f2ba3d5fca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2ba3d5fe30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f2ba3d5e020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f2ba3d5e1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f2ba3d5e340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f2ba3d5e8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2ba3d5ea60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f2ba3d5ebf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2ba3d5ed80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f2ba3d5d020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f2ba3d5d1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f2ba3d5d340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f2ba3d5d4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2ba3d5d660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f2ba3d5d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f2ba3d53700" loc="41:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f2ba3d53700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2ba3d53a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2ba3d53c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2ba3d53da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2ba3d52020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2ba3d521b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2ba3d52340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2ba3d524d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2ba3d52660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2ba3d527f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2ba3d52980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2ba3d52b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2ba3d52ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2ba3d52e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2ba3d51120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2ba3d512b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2ba3d51440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2ba3d515d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f2ba3d51760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2ba3d518f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2ba3d51a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2ba3d51c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2ba3d51da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2ba3d50020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2ba3d501b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba3d50340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2ba3d506d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2ba3d50860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2ba3d509f0"/>
        <function-ref name="tx" scoped="" ref="0x7f2ba3d50b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2ba3d50d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2ba3d4f020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2ba3d4f1b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2ba3d4f340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2ba3d4f4d0"/>
        <function-ref name="rx" scoped="" ref="0x7f2ba3d4f660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2ba3d4f7f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2ba3d4f980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2ba3d4fb10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2ba3d4fca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2ba3d4fe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f2ba3d4c1f0" loc="43:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f2ba3d4c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3d4c570"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3d4c700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3d4c890"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3d4ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3d4cbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3d4cd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3d4b020"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3d4b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3d4b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3d4b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3d4b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3d4b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3d4b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3d4bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3d4bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f2ba3d5c950" loc="39:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f2ba3d5c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f2ba3d5ccd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f2ba3d5ce60"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f2ba3d59020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f2ba3d591b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f2ba3d59340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f2ba3d594d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f2ba3d59660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f2ba3d597f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba3d59980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f2ba3d59b10"/>
        <function-ref name="getData" scoped="" ref="0x7f2ba3d59ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f2ba3d59e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f2ba3d58020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f2ba3d582b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f2ba3d58440"/>
        <function-ref name="getIV" scoped="" ref="0x7f2ba3d585d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f2ba3d58760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f2ba3d588f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2ba3d58a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f2ba3d58c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2ba3d58da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f2ba3d57020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2ba3d571b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f2ba3d57340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2ba3d574d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2ba3d57860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f2ba3d579f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f2ba3d57b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f2ba3d57d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f2ba3d56020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f2ba3d561b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f2ba3d56340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2ba3d564d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2ba3d56660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f2ba3d567f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2ba3d56980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f2ba3d56b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f2ba3d56ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f2ba3d56e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f2ba3d55020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2ba3d551b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f2ba3d55340"/>
        <function-ref name="setData" scoped="" ref="0x7f2ba3d554d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2ba3d55660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f2ba3d557f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2ba3d55980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f2ba3d55b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f2ba3d55ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f2ba3d55e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f2ba3d54420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2ba3d545b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f2ba3d54740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2ba3d548d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f2ba3d54a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f2ba3d54bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f2ba3d54d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f2ba3d53020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2ba3d531b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f2ba3d53340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f2ba3d4e250" loc="42:../../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f2ba3d4e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3d4e5d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3d4e760"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3d4e8f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3d4ea80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3d4ec10"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3d4eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3d4d020"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3d4d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3d4d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3d4d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3d4d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3d4d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3d4d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3d4dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3d4dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f2ba3c9a920" loc="37:../../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f2ba3c9a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f2ba3c9aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f2ba3c99020" loc="38:../../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2ba3c99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2ba3c993a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2ba3c99530"/>
        <function-ref name="request" scoped="" ref="0x7f2ba3c996c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2ba3c99850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2ba3c999e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2ba3c9a0c0" loc="36:../../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2ba3c9a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2ba3c9a440"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3c9a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f2ba3c87a30" loc="47:../../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f2ba3c87a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f2ba3c87db0"/>
        <function-ref name="offset" scoped="" ref="0x7f2ba3c84020"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f2ba3c841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f2ba3c69bf0" loc="43:../../../../tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f2ba3c69bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f2ba3c44ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f2ba3c43880"/>
        <function-ref name="element" scoped="" ref="0x7f2ba3c41020"/>
        <function-ref name="full" scoped="" ref="0x7f2ba3c45ce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2ba3c44660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2ba3c431d0"/>
        <function-ref name="empty" scoped="" ref="0x7f2ba3c45860"/>
        <function-ref name="size" scoped="" ref="0x7f2ba3c441e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f2ba3c3aa20" loc="93:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f2ba3c3aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f2ba3c3b920"/>
        <function-ref name="enqueue" scoped="" ref="0x7f2ba3c386d0"/>
        <function-ref name="element" scoped="" ref="0x7f2ba3c38d40"/>
        <function-ref name="full" scoped="" ref="0x7f2ba3c3caf0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f2ba3c3b4a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2ba3c38020"/>
        <function-ref name="empty" scoped="" ref="0x7f2ba3c3c670"/>
        <function-ref name="size" scoped="" ref="0x7f2ba3c3b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f2ba3c37440" loc="94:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2ba3c37440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2ba3c377c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba3c37950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba3c37ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2ba3c37c70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2ba3c37e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f2ba3c360c0" loc="95:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2ba3c360c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3c36440"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2ba3c365d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2ba3c36760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2ba3c368f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2ba3c36a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f2ba3c30500" loc="114:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f2ba3c30500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3c30880"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3c30a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba3c40a60" loc="89:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba3c40a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3c40de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2ba3c36d00" loc="96:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba3c36d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba3c350a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba3c35230"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba3c353c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba3c35550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba3c356e0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3c35870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba3c35a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba3c341b0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3c35b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba3c35d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba3c34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f2ba3c3a1a0" loc="90:../../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f2ba3c3a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f2ba3c3a520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f2ba3c1abe0" loc="43:../../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f2ba3c1abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f2ba3c17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba3c13020" loc="94:../../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba3c13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3c133a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f2ba3c13680" loc="95:../../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f2ba3c13680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f2ba3c13a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f2ba3c0d380" loc="39:../../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2ba3c0d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2ba3c0d700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f2ba3c0daa0" loc="40:../../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f2ba3c0daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2ba3c0de20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2ba3c0a020"/>
        <function-ref name="start" scoped="" ref="0x7f2ba3c0a1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3c0a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="shimmerAnalogSetup" ref="0x7f2ba3baa410" loc="77:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f2ba3baa410"/></type-interface>
      <instance>
        <interfacedef-ref qname="shimmerAnalogSetup"/>
      </instance>
      <interface-functions>
        <function-ref name="addAccelInputs" scoped="" ref="0x7f2ba3baa790"/>
        <function-ref name="triggerConversion" scoped="" ref="0x7f2ba3baa920"/>
        <function-ref name="getNumberOfChannels" scoped="" ref="0x7f2ba3baaab0"/>
        <function-ref name="addECGInputs" scoped="" ref="0x7f2ba3baac40"/>
        <function-ref name="addAnExInput" scoped="" ref="0x7f2ba3baadd0"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba3bb4020"/>
        <function-ref name="addEMGInput" scoped="" ref="0x7f2ba3bb41b0"/>
        <function-ref name="addStrainGaugeInputs" scoped="" ref="0x7f2ba3bb4340"/>
        <function-ref name="addGSRInput" scoped="" ref="0x7f2ba3bb44d0"/>
        <function-ref name="finishADCSetup" scoped="" ref="0x7f2ba3bb4660"/>
        <function-ref name="addUVInputs" scoped="" ref="0x7f2ba3bb47f0"/>
        <function-ref name="addGyroInputs" scoped="" ref="0x7f2ba3bb4980"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f2ba3bb4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SampleTimerInit" ref="0x7f2ba3bd9160" loc="67:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SampleTimerInit" scoped="" ref="0x7f2ba3bd9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3bd94e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlinkTimer" ref="0x7f2ba3b9c340" loc="79:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlinkTimer" scoped="" ref="0x7f2ba3b9c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba3b93ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3b9bb80"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba3b93550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba3b93090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba3b92090"/>
        <function-ref name="start" scoped="" ref="0x7f2ba3b9b1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3b9b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GyroBoard" ref="0x7f2ba3bd35f0" loc="69:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroBoard" scoped="" ref="0x7f2ba3bd35f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GyroBoard"/>
      </instance>
      <interface-functions>
        <function-ref name="autoZero" scoped="" ref="0x7f2ba3bd3970"/>
        <function-ref name="buttonPressed" scoped="" ref="0x7f2ba3bd3b00"/>
        <function-ref name="ledOn" scoped="" ref="0x7f2ba3bd3c90"/>
        <function-ref name="ledOff" scoped="" ref="0x7f2ba3bd3e20"/>
        <function-ref name="ledToggle" scoped="" ref="0x7f2ba3bd7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BtCommandParser" ref="0x7f2ba3b4d8d0" loc="85:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BtCommandParser" scoped="" ref="0x7f2ba3b4d8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BtCommandParser"/>
      </instance>
      <interface-functions>
        <function-ref name="handleByte" scoped="" ref="0x7f2ba3b4dc50"/>
        <function-ref name="activate" scoped="" ref="0x7f2ba3b4dde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UserButton" ref="0x7f2ba3b471c0" loc="88:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UserButton" scoped="" ref="0x7f2ba3b471c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3be2e30"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f2ba3be1770"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f2ba3b42260"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3b47db0"/>
        <function-ref name="notify" scoped="" ref="0x7f2ba3b426e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendResponse" ref="0x7f2ba3aae1f0" loc="352:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendResponse" scoped="" ref="0x7f2ba3aae1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3aae570"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3aae700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Magnetometer" ref="0x7f2ba3bc8630" loc="70:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Magnetometer" scoped="" ref="0x7f2ba3bc8630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Magnetometer"/>
      </instance>
      <interface-functions>
        <function-ref name="disableBus" scoped="" ref="0x7f2ba3bd2020"/>
        <function-ref name="setIdle" scoped="" ref="0x7f2ba3bc8b40"/>
        <function-ref name="enableBus" scoped="" ref="0x7f2ba3bc8cd0"/>
        <function-ref name="convertRegistersToData" scoped="" ref="0x7f2ba3bc8e60"/>
        <function-ref name="readHeading" scoped="" ref="0x7f2ba3bd6020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2ba3bd61b0"/>
        <function-ref name="goToSleep" scoped="" ref="0x7f2ba3bd6340"/>
        <function-ref name="selfTest" scoped="" ref="0x7f2ba3bd64d0"/>
        <function-ref name="runSingleConversion" scoped="" ref="0x7f2ba3bd6660"/>
        <function-ref name="readData" scoped="" ref="0x7f2ba3bd67f0"/>
        <function-ref name="runContinuousConversion" scoped="" ref="0x7f2ba3bd6980"/>
        <function-ref name="setOutputRate" scoped="" ref="0x7f2ba3bd6b10"/>
        <function-ref name="setGain" scoped="" ref="0x7f2ba3bd6ca0"/>
        <function-ref name="readDone" scoped="" ref="0x7f2ba3bc89b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startConfigTimer" ref="0x7f2ba3a79670" loc="479:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startConfigTimer" scoped="" ref="0x7f2ba3a79670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3a799f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3a79b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f2ba3bdd9f0" loc="59:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2ba3bdd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2ba3bddd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InternalFlash" ref="0x7f2ba3b48940" loc="86:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InternalFlash" scoped="" ref="0x7f2ba3b48940"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2ba3b48cc0"/>
        <function-ref name="write" scoped="" ref="0x7f2ba3b48e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProcessCommand" ref="0x7f2ba3a76400" loc="484:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ProcessCommand" scoped="" ref="0x7f2ba3a76400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3a76780"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3a76910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DigitalHeartRate" ref="0x7f2ba3bc1690" loc="72:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DigitalHeartRate" scoped="" ref="0x7f2ba3bc1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="DigitalHeartRate"/>
      </instance>
      <interface-functions>
        <function-ref name="beat" scoped="" ref="0x7f2ba3bc1a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f2ba3b8c1a0" loc="81:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f2ba3b8c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba3b8cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="gsr_range" ref="0x7f2ba3a20020" loc="756:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="gsr_range" scoped="" ref="0x7f2ba3a20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3a203a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3a20530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ToggleLed" ref="0x7f2ba3ae01f0" loc="182:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ToggleLed" scoped="" ref="0x7f2ba3ae01f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3ae0570"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3ae0700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DigitalHeartInit" ref="0x7f2ba3bda390" loc="65:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DigitalHeartInit" scoped="" ref="0x7f2ba3bda390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3bda710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin0" ref="0x7f2ba3b023a0" loc="90:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin0" scoped="" ref="0x7f2ba3b023a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3b02720"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3b028b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3b02a40"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3b02bd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3b02d60"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3b01020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3b011b0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3b01340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3b014d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3b01660"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3b017f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3b01980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3b01b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3b01da0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3b00020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DockInterrupt" ref="0x7f2ba3b43a70" loc="87:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DockInterrupt" scoped="" ref="0x7f2ba3b43a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3b43df0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3b4c020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3b4c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba3b4c340"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3b4c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba3b4c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SampleTimer" ref="0x7f2ba3b92850" loc="80:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SampleTimer" scoped="" ref="0x7f2ba3b92850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba3b8e090"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3b8f090"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba3b8fa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba3b8f550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba3b8e550"/>
        <function-ref name="start" scoped="" ref="0x7f2ba3b906a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3b90bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GsrInit" ref="0x7f2ba3bdaa20" loc="66:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GsrInit" scoped="" ref="0x7f2ba3bdaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3bdada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StrainInit" ref="0x7f2ba3bdbba0" loc="64:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StrainInit" scoped="" ref="0x7f2ba3bdbba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3bda020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlinkTimerInit" ref="0x7f2ba3bd9830" loc="68:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlinkTimerInit" scoped="" ref="0x7f2ba3bd9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3bd9bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DMA0" ref="0x7f2ba3b51970" loc="84:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA0" scoped="" ref="0x7f2ba3b51970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f2ba3b51cf0"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f2ba3b51e80"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f2ba3b72030"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f2ba3b721c0"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f2ba3b72350"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba3b724e0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f2ba3b72670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastClock" ref="0x7f2ba3afbe30" loc="97:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastClock" scoped="" ref="0x7f2ba3afbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastClock"/>
      </instance>
      <interface-functions>
        <function-ref name="setSMCLK" scoped="" ref="0x7f2ba3afd1e0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3afd370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="clockin_result" ref="0x7f2ba3a24500" loc="746:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="clockin_result" scoped="" ref="0x7f2ba3a24500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3a24880"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3a24a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BluetoothInit" ref="0x7f2ba3bdc0f0" loc="60:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BluetoothInit" scoped="" ref="0x7f2ba3bdc0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3bdc470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Gsr" ref="0x7f2ba3bb53d0" loc="75:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gsr" scoped="" ref="0x7f2ba3bb53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Gsr"/>
      </instance>
      <interface-functions>
        <function-ref name="controlRange" scoped="" ref="0x7f2ba3bb5750"/>
        <function-ref name="smoothSample" scoped="" ref="0x7f2ba3bb58e0"/>
        <function-ref name="initSmoothing" scoped="" ref="0x7f2ba3bb5a70"/>
        <function-ref name="calcResistance" scoped="" ref="0x7f2ba3bb5c00"/>
        <function-ref name="setRange" scoped="" ref="0x7f2ba3bb5d90"/>
        <function-ref name="smoothTransition" scoped="" ref="0x7f2ba3bc0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopSensing" ref="0x7f2ba3ac40c0" loc="269:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopSensing" scoped="" ref="0x7f2ba3ac40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3ac4440"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3ac45d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GyroStdControl" ref="0x7f2ba3bc1da0" loc="73:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroStdControl" scoped="" ref="0x7f2ba3bc1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2ba3bc6180"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3bc6310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StrainGauge" ref="0x7f2ba3bc3990" loc="71:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StrainGauge" scoped="" ref="0x7f2ba3bc3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="StrainGauge"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x7f2ba3bc3e10"/>
        <function-ref name="powerOff" scoped="" ref="0x7f2ba3bc7020"/>
        <function-ref name="ledOn" scoped="" ref="0x7f2ba3bc71b0"/>
        <function-ref name="ledOff" scoped="" ref="0x7f2ba3bc7340"/>
        <function-ref name="ledToggle" scoped="" ref="0x7f2ba3bc74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2ba3bc02a0" loc="76:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba3bc02a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba3bc0620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba3bc07b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba3bc0940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba3bc0ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba3bc0c60"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3bc0df0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba3bbd020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba3bbd660"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3bbd1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba3bbd340"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba3bbd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetupTimer" ref="0x7f2ba3ba0a10" loc="78:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetupTimer" scoped="" ref="0x7f2ba3ba0a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba3b9d020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3b9f510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2ba3b9e300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2ba3b9fe10"/>
        <function-ref name="getdt" scoped="" ref="0x7f2ba3b9d920"/>
        <function-ref name="gett0" scoped="" ref="0x7f2ba3b9d4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba3b9f990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2ba3ba9670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2ba3b9e910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2ba3ba9b40"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3b9f090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastClockInit" ref="0x7f2ba3afe390" loc="96:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastClockInit" scoped="" ref="0x7f2ba3afe390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3afe710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfigureChannelsTask" ref="0x7f2ba3ac7510" loc="264:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfigureChannelsTask" scoped="" ref="0x7f2ba3ac7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3ac7890"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3ac7a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendSensorData" ref="0x7f2ba3ab50c0" loc="332:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendSensorData" scoped="" ref="0x7f2ba3ab50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3ab5440"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3ab55d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin1" ref="0x7f2ba3b003a0" loc="91:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin1" scoped="" ref="0x7f2ba3b003a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3b00720"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3b008b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba3b00a40"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3b00bd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3b00d60"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3aff020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3aff1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3aff340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3aff4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3aff660"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3aff7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3aff980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba3affb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3affda0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3afe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startSensors" ref="0x7f2ba3adba20" loc="199:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startSensors" scoped="" ref="0x7f2ba3adba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3adbda0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3ada020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GyroInit" ref="0x7f2ba3bdce30" loc="62:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroInit" scoped="" ref="0x7f2ba3bdce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3bdb1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="collect_results" ref="0x7f2ba3a2f440" loc="709:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="collect_results" scoped="" ref="0x7f2ba3a2f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3a2f7c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3a2f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelInit" ref="0x7f2ba3bdc790" loc="61:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AccelInit" scoped="" ref="0x7f2ba3bdc790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3bdcb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Bluetooth" ref="0x7f2ba3b74380" loc="83:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Bluetooth" scoped="" ref="0x7f2ba3b74380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Bluetooth"/>
      </instance>
      <interface-functions>
        <function-ref name="setDeviceClass" scoped="" ref="0x7f2ba3b88e30"/>
        <function-ref name="setBaudrate" scoped="" ref="0x7f2ba3b74a90"/>
        <function-ref name="setDiscoverable" scoped="" ref="0x7f2ba3b74c20"/>
        <function-ref name="dataAvailable" scoped="" ref="0x7f2ba3b89020"/>
        <function-ref name="disconnect" scoped="" ref="0x7f2ba3b73020"/>
        <function-ref name="connectionClosed" scoped="" ref="0x7f2ba3b891b0"/>
        <function-ref name="setName" scoped="" ref="0x7f2ba3b89340"/>
        <function-ref name="setServiceName" scoped="" ref="0x7f2ba3b894d0"/>
        <function-ref name="setRawBaudrate" scoped="" ref="0x7f2ba3b89660"/>
        <function-ref name="setPagingTime" scoped="" ref="0x7f2ba3b897f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2ba3b89980"/>
        <function-ref name="setInquiryTime" scoped="" ref="0x7f2ba3b89b10"/>
        <function-ref name="connect" scoped="" ref="0x7f2ba3b89ca0"/>
        <function-ref name="connectionMade" scoped="" ref="0x7f2ba3b88020"/>
        <function-ref name="setAuthentication" scoped="" ref="0x7f2ba3b881b0"/>
        <function-ref name="resetDefaults" scoped="" ref="0x7f2ba3b74900"/>
        <function-ref name="commandModeEnded" scoped="" ref="0x7f2ba3b74db0"/>
        <function-ref name="setServiceClass" scoped="" ref="0x7f2ba3b88340"/>
        <function-ref name="write" scoped="" ref="0x7f2ba3b884d0"/>
        <function-ref name="discoverDevices" scoped="" ref="0x7f2ba3b88660"/>
        <function-ref name="setRadioMode" scoped="" ref="0x7f2ba3b887f0"/>
        <function-ref name="setPIN" scoped="" ref="0x7f2ba3b88980"/>
        <function-ref name="setEncryption" scoped="" ref="0x7f2ba3b88b10"/>
        <function-ref name="disableRemoteConfig" scoped="" ref="0x7f2ba3b88ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BTStdControl" ref="0x7f2ba3b8b340" loc="82:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BTStdControl" scoped="" ref="0x7f2ba3b8b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2ba3b8b6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3b8b850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CRYPTO" ref="0x7f2ba3b3e020" loc="89:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CRYPTO" scoped="" ref="0x7f2ba3b3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CRYPTO"/>
      </instance>
      <interface-functions>
        <function-ref name="xtea_decrypt" scoped="" ref="0x7f2ba3b3e3a0"/>
        <function-ref name="kasumi_decrypt" scoped="" ref="0x7f2ba3b3e530"/>
        <function-ref name="blowfish_encrypt" scoped="" ref="0x7f2ba3b3e6c0"/>
        <function-ref name="skipjack_encrypt" scoped="" ref="0x7f2ba3b3e850"/>
        <function-ref name="safer_decrypt" scoped="" ref="0x7f2ba3b3e9e0"/>
        <function-ref name="blowfish_setup" scoped="" ref="0x7f2ba3b3eb70"/>
        <function-ref name="blowfish_done" scoped="" ref="0x7f2ba3b3ed00"/>
        <function-ref name="rc5_encrypt" scoped="" ref="0x7f2ba3b3d020"/>
        <function-ref name="lsb" scoped="" ref="0x7f2ba3b3d1b0"/>
        <function-ref name="kasumi_setup" scoped="" ref="0x7f2ba3b3d340"/>
        <function-ref name="rc4_encrypt" scoped="" ref="0x7f2ba3b3d4d0"/>
        <function-ref name="rc5_decrypt" scoped="" ref="0x7f2ba3b3d660"/>
        <function-ref name="rc2_decrypt" scoped="" ref="0x7f2ba3b3d7f0"/>
        <function-ref name="rc5_setup" scoped="" ref="0x7f2ba3b3da80"/>
        <function-ref name="kasumi_done" scoped="" ref="0x7f2ba3b3dc10"/>
        <function-ref name="xxtea_encrypt" scoped="" ref="0x7f2ba3b3dda0"/>
        <function-ref name="rc2_setup" scoped="" ref="0x7f2ba3b04020"/>
        <function-ref name="tea_decrypt" scoped="" ref="0x7f2ba3b041b0"/>
        <function-ref name="tea_encrypt" scoped="" ref="0x7f2ba3b04340"/>
        <function-ref name="skipjack_done" scoped="" ref="0x7f2ba3b044d0"/>
        <function-ref name="msb" scoped="" ref="0x7f2ba3b04660"/>
        <function-ref name="skipjack_decrypt" scoped="" ref="0x7f2ba3b047f0"/>
        <function-ref name="xxtea_decrypt" scoped="" ref="0x7f2ba3b04980"/>
        <function-ref name="safer_encrypt" scoped="" ref="0x7f2ba3b04b10"/>
        <function-ref name="skipjack_setup" scoped="" ref="0x7f2ba3b04ca0"/>
        <function-ref name="blowfish_decrypt" scoped="" ref="0x7f2ba3b03220"/>
        <function-ref name="safer_done" scoped="" ref="0x7f2ba3b033b0"/>
        <function-ref name="xtea_encrypt" scoped="" ref="0x7f2ba3b03540"/>
        <function-ref name="rc2_encrypt" scoped="" ref="0x7f2ba3b036d0"/>
        <function-ref name="rc2_done" scoped="" ref="0x7f2ba3b03860"/>
        <function-ref name="rc5_done" scoped="" ref="0x7f2ba3b039f0"/>
        <function-ref name="rc4_decrypt" scoped="" ref="0x7f2ba3b03b80"/>
        <function-ref name="kasumi_encrypt" scoped="" ref="0x7f2ba3b03d10"/>
        <function-ref name="safer_setup" scoped="" ref="0x7f2ba3b02020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Accel" ref="0x7f2ba3bc2020" loc="74:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Accel" scoped="" ref="0x7f2ba3bc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mma_Accel"/>
      </instance>
      <interface-functions>
        <function-ref name="setSensitivity" scoped="" ref="0x7f2ba3bc23a0"/>
        <function-ref name="wake" scoped="" ref="0x7f2ba3bc2530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagInit" ref="0x7f2ba3bdb4f0" loc="63:BtStreamC.nc">
      <component-ref qname="BtStreamC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MagInit" scoped="" ref="0x7f2ba3bdb4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3bdb870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2ba38a4020" loc="44:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <component-ref qname="BtStreamAppC.SampleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2ba38a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba38a2870"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba38a3840"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba38a2220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba38a3d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba38a2d30"/>
        <function-ref name="start" scoped="" ref="0x7f2ba38a4e30"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba38a3380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba38a6760" loc="43:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <component-ref qname="BtStreamAppC.SampleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba38a6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba38a6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2ba265bb90" loc="44:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="BtStreamAppC.SampleTimer.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2ba265bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba26584e0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba26594e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba2659e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba26599a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba26589a0"/>
        <function-ref name="start" scoped="" ref="0x7f2ba265a9d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba2659020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba265b340" loc="43:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="BtStreamAppC.SampleTimer.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba265b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba265b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f2ba2642440" loc="41:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="BtStreamAppC.SampleTimer.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba2642440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba26427c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba2642950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba2642ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba2642c70"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba2642e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f2ba26459d0" loc="39:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="BtStreamAppC.SampleTimer.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba26459d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba2645d50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba2644020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba26441b0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba2644340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba26444d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba2644660"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba26447f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba2644980"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba2644b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba2644ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba2644e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f2ba2643120" loc="40:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="BtStreamAppC.SampleTimer.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba2643120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba26434a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba2643630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba26437c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba2643950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba2643ae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba2643c70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba2643e00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba2642020"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba26421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f2ba3959210" loc="52:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba3959210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba3959590"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba3959720"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba39598b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba3959a40"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3959bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f2ba3961bf0" loc="50:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba3961bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba395d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba395d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba395d340"/>
        <function-ref name="get" scoped="" ref="0x7f2ba395d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba395d660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba395d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba395d980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba395db10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba395dca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba395de30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba395c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f2ba395c8b0" loc="51:../../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba395c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba395cc30"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba395cdc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba395b020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba395b1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba395b340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba395b4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba395b660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba395b7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba395b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f2ba26380c0" loc="49:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="BtStreamAppC.SampleTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba26380c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba2638440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba26385d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba2638760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba26388f0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba2638a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2ba263b710" loc="47:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="BtStreamAppC.SampleTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba263b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba263ba90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba263bc20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba263bdb0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba263a020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba263a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba263a340"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba263a4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba263a660"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba263a7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba263a980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba263ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2ba263e5b0" loc="46:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="BtStreamAppC.SampleTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2ba263e5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba263cdf0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba263ddf0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba263c7a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba263c2e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba263b2e0"/>
        <function-ref name="start" scoped="" ref="0x7f2ba263d420"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba263d930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba2640ca0" loc="45:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="BtStreamAppC.SampleTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba2640ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba263e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f2ba263ada0" loc="48:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="BtStreamAppC.SampleTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba263ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba2639180"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba2639310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba26394a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba2639630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba26397c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba2639950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba2639ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba2639c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba2639e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2ba3906020" loc="43:../../../../tos/chips/msp430/timer/CounterMilli16C.nc">
      <component-ref qname="CounterMilli16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba3906020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba3906e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba3905800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba3905340"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba3905cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f2ba38e4950" loc="63:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli16C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f2ba38e4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba38e3780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba38e1150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba38e3c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba38e1610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2ba39015f0" loc="62:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli16C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba39015f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba38e5430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba38e5db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba38e58f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba38e42a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2ba2654020" loc="61:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="BtStreamAppC.SampleTimer.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2ba2654020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba2652870"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba2653840"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba2652220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba2653d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba2652d30"/>
        <function-ref name="start" scoped="" ref="0x7f2ba2654e30"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba2653380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f2ba264e780" loc="73:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="BtStreamAppC.SampleTimer.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f2ba264e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba264b020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba264c020"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba264c9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba264c4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba264b4e0"/>
        <function-ref name="start" scoped="" ref="0x7f2ba264d5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba264dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2ba26513d0" loc="68:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="BtStreamAppC.SampleTimer.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba26513d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba2650240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba2650bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba2650700"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba264e0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2ba389e640" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="BtStreamAppC.SetupTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba389e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba37b8c40"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba37ba1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2ba37b8020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2ba37baae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2ba37b7590"/>
        <function-ref name="gett0" scoped="" ref="0x7f2ba37b7110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba37ba660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2ba37bb390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2ba37b8630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2ba37bb860"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba37bbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f2ba38951d0" loc="49:../../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f2ba38951d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba3891630"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3893c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2ba38929d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2ba3892550"/>
        <function-ref name="getdt" scoped="" ref="0x7f2ba3890020"/>
        <function-ref name="gett0" scoped="" ref="0x7f2ba3891ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba38920d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2ba3895dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2ba3891020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2ba38932e0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba38937b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f2ba388cc30" loc="46:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f2ba388cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba3887110"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba388a6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2ba38884a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2ba3888020"/>
        <function-ref name="getdt" scoped="" ref="0x7f2ba3887a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f2ba3887590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba388ab20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2ba388b860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2ba3888ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2ba388bd30"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba388a220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2ba3885080" loc="47:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f2ba3885080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba3885cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba3890e50" loc="45:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba3890e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba388c210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2ba3857020" loc="44:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2ba3857020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba3855870"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3856840"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba3855220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba3856d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba3855d30"/>
        <function-ref name="start" scoped="" ref="0x7f2ba3857e30"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3856380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba3858760" loc="43:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba3858760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3858ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2ba25eb140" loc="44:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2ba25eb140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba25e9b30"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba25ea9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba25e94e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba25e9020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba25e7020"/>
        <function-ref name="start" scoped="" ref="0x7f2ba25ea020"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba25ea530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba25ec860" loc="43:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba25ec860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba25ecbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f2ba25d3a80" loc="41:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba25d3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba25d3e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba25d2020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba25d21b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba25d2340"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba25d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f2ba25d5020" loc="39:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba25d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba25d53a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba25d5530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba25d56c0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba25d5850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba25d59e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba25d5b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba25d5d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba25d4020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba25d41b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba25d4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba25d44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f2ba25d4760" loc="40:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba25d4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba25d4ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba25d4c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba25d4e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba25d3020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba25d31b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba25d3340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba25d34d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba25d3660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba25d37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f2ba25c9760" loc="49:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba25c9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba25c9ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba25c9c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba25c9e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba25c8020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba25c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2ba25ccdd0" loc="47:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba25ccdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba25cb180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba25cb310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba25cb4a0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba25cb630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba25cb7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba25cb950"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba25cbae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba25cbc70"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba25cbe00"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba25ca020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba25ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2ba25d0bf0" loc="46:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2ba25d0bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba25cc4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba25cd4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba25cde60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba25cd9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba25cc9a0"/>
        <function-ref name="start" scoped="" ref="0x7f2ba25cea80"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba25cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba25d0360" loc="45:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba25d0360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba25d06e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f2ba25ca440" loc="48:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba25ca440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba25ca7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba25ca950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba25caae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba25cac70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba25cae00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba25c9020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba25c91b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba25c9340"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba25c94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2ba3874650" loc="43:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba3874650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba38735b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba3872020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba3873a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba38724e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f2ba386c6d0" loc="63:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f2ba386c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba386a5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba3869020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba386aa70"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba38694e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2ba386e2e0" loc="62:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba386e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba386d110"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba386da90"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba386d5d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba386c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2ba25e55f0" loc="61:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2ba25e55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba25e3e50"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba25e4e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba25e3800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba25e3340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba25e2340"/>
        <function-ref name="start" scoped="" ref="0x7f2ba25e4430"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba25e4940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f2ba25dfd20" loc="73:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f2ba25dfd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba25dc670"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba25dd550"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba25dc020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba25dda10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba25dcb30"/>
        <function-ref name="start" scoped="" ref="0x7f2ba25deb60"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba25dd090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2ba25e29b0" loc="68:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba25e29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba25e17e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba25df1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba25e1ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba25df670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f2ba3822490" loc="74:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f2ba3822490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3822810"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba38229a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f2ba38261d0" loc="49:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2ba38261d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba3823b30"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba38249f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba38234e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba3823020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba3822020"/>
        <function-ref name="start" scoped="" ref="0x7f2ba3824020"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3824530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2ba382ccf0" loc="48:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba382ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba3827220"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba38297c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2ba3828590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2ba3828110"/>
        <function-ref name="getdt" scoped="" ref="0x7f2ba3827b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f2ba38276a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba3829c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2ba382b940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2ba3828ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2ba382be10"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3829340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f2ba37d2e80" loc="71:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f2ba37d2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba37d0220"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba37d03b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f2ba37d7c30" loc="49:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f2ba37d7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba37d2110"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba37d46a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2ba37d34a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2ba37d3020"/>
        <function-ref name="getdt" scoped="" ref="0x7f2ba37d2a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f2ba37d2590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba37d4b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2ba37d5860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2ba37d3ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2ba37d5d30"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba37d4220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2ba37dd690" loc="48:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba37dd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba37d8cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba37da260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2ba37d8090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2ba37daba0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2ba37d7680"/>
        <function-ref name="gett0" scoped="" ref="0x7f2ba37d71e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba37da700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2ba37dc390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2ba37d86c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2ba37dc880"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba37dcd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2ba37cecf0" loc="48:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f2ba37cecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba37c4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2ba37c3020" loc="49:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba37c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba37c3e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba37c2800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba37c2340"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba37c2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2ba37b5b90" loc="44:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2ba37b5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba37b14e0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba37b34e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba37b3e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba37b39a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba37b19a0"/>
        <function-ref name="start" scoped="" ref="0x7f2ba37b49d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba37b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba37b5340" loc="43:../../../../tos/chips/msp430/timer/AlarmMilli16C.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba37b5340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba37b56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2ba255cbd0" loc="44:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2ba255cbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba25584e0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba255a4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba255ae60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba255a9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba25589a0"/>
        <function-ref name="start" scoped="" ref="0x7f2ba255ba80"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba255a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba255c380" loc="43:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba255c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba255c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f2ba25420c0" loc="41:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba25420c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba2542440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba25425d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba2542760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba25428f0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba2542a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f2ba25457b0" loc="39:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba25457b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba2545b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba2545cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba2545e50"/>
        <function-ref name="get" scoped="" ref="0x7f2ba2544020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba25441b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba2544340"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba25444d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba2544660"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba25447f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba2544980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba2544b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f2ba2544da0" loc="40:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba2544da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba2543180"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba2543310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba25434a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba2543630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba25437c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba2543950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba2543ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba2543c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba2543e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f2ba2539da0" loc="49:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2ba2539da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2ba2538180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2ba2538310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2ba25384a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2ba2538630"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba25387c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2ba253c4c0" loc="47:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2ba253c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba253c840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba253c9d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba253cb60"/>
        <function-ref name="get" scoped="" ref="0x7f2ba253ccf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba253ce80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba253a030"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba253a1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba253a350"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba253a4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2ba253a670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2ba253a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2ba253f340" loc="46:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2ba253f340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba253dba0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba253eb80"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba253d550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba253d090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba253c090"/>
        <function-ref name="start" scoped="" ref="0x7f2ba253e1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba253e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba2540a30" loc="45:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba2540a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba2540db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f2ba253aa90" loc="48:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2ba253aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2ba253ae10"/>
        <function-ref name="getControl" scoped="" ref="0x7f2ba2539020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2ba25391b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2ba2539340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2ba25394d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2ba2539660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2ba25397f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2ba2539980"/>
        <function-ref name="setControl" scoped="" ref="0x7f2ba2539b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2ba2555020" loc="61:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2ba2555020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba2553870"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba2554840"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba2553220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba2554d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba2553d30"/>
        <function-ref name="start" scoped="" ref="0x7f2ba2555e30"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba2554380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f2ba254f780" loc="73:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f2ba254f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba254b020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba254d020"/>
        <function-ref name="startAt" scoped="" ref="0x7f2ba254d9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba254d4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2ba254b4e0"/>
        <function-ref name="start" scoped="" ref="0x7f2ba254e5d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba254eae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2ba25513d0" loc="68:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="BtStreamAppC.BlinkTimer.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba25513d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba2550240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba2550bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba2550700"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba254f0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2ba37af9a0" loc="43:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba37af9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba37ac7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba37ab1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba37acca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba37ab670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f2ba37a4950" loc="63:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f2ba37a4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba37a3780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba37a2150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba37a3c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba37a2610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2ba37a75f0" loc="62:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba37a75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba37a6430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba37a6db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba37a68f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba37a42a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2ba37a0b60" loc="48:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="BtStreamAppC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f2ba37a0b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba379f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2ba379fe40" loc="49:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="BtStreamAppC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba379fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba379eca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba379d670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba379d1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba379db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba3795d90" loc="49:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <component-ref qname="RovingNetworksC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba3795d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3794180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Bluetooth" ref="0x7f2ba3797020" loc="48:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <component-ref qname="RovingNetworksC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Bluetooth" scoped="" ref="0x7f2ba3797020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Bluetooth"/>
      </instance>
      <interface-functions>
        <function-ref name="setDeviceClass" scoped="" ref="0x7f2ba3795980"/>
        <function-ref name="setBaudrate" scoped="" ref="0x7f2ba3797530"/>
        <function-ref name="setDiscoverable" scoped="" ref="0x7f2ba37976c0"/>
        <function-ref name="dataAvailable" scoped="" ref="0x7f2ba37979e0"/>
        <function-ref name="disconnect" scoped="" ref="0x7f2ba3795b10"/>
        <function-ref name="connectionClosed" scoped="" ref="0x7f2ba3797b70"/>
        <function-ref name="setName" scoped="" ref="0x7f2ba3797d00"/>
        <function-ref name="setServiceName" scoped="" ref="0x7f2ba3796020"/>
        <function-ref name="setRawBaudrate" scoped="" ref="0x7f2ba37961b0"/>
        <function-ref name="setPagingTime" scoped="" ref="0x7f2ba3796340"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2ba37964d0"/>
        <function-ref name="setInquiryTime" scoped="" ref="0x7f2ba3796660"/>
        <function-ref name="connect" scoped="" ref="0x7f2ba37967f0"/>
        <function-ref name="connectionMade" scoped="" ref="0x7f2ba3796a80"/>
        <function-ref name="setAuthentication" scoped="" ref="0x7f2ba3796c10"/>
        <function-ref name="resetDefaults" scoped="" ref="0x7f2ba37973a0"/>
        <function-ref name="commandModeEnded" scoped="" ref="0x7f2ba3797850"/>
        <function-ref name="setServiceClass" scoped="" ref="0x7f2ba3796da0"/>
        <function-ref name="write" scoped="" ref="0x7f2ba3795020"/>
        <function-ref name="discoverDevices" scoped="" ref="0x7f2ba37951b0"/>
        <function-ref name="setRadioMode" scoped="" ref="0x7f2ba3795340"/>
        <function-ref name="setPIN" scoped="" ref="0x7f2ba37954d0"/>
        <function-ref name="setEncryption" scoped="" ref="0x7f2ba3795660"/>
        <function-ref name="disableRemoteConfig" scoped="" ref="0x7f2ba37957f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2ba379a6f0" loc="47:../../../../tos/platforms/shimmer2/chips/bluetooth/RovingNetworksC.nc">
      <component-ref qname="RovingNetworksC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2ba379a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2ba379aa70"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba379ac00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="runSetCommands" ref="0x7f2ba369dd60" loc="376:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="runSetCommands" scoped="" ref="0x7f2ba369dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba369c180"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba369c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="runMasterCommands" ref="0x7f2ba36af1e0" loc="302:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="runMasterCommands" scoped="" ref="0x7f2ba36af1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba36af560"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba36af6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConnectionInterrupt" ref="0x7f2ba3702c80" loc="57:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConnectionInterrupt" scoped="" ref="0x7f2ba3702c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba37010a0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3701230"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba37013c0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba3701550"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba37016e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba3701870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba370dc00" loc="49:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba370dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba370c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTControl" ref="0x7f2ba37088e0" loc="54:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UARTControl" scoped="" ref="0x7f2ba37088e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2ba3708c60"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2ba3708df0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2ba3707020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2ba37071b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2ba3707340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2ba37074d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2ba3707660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2ba37077f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2ba3707980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2ba3707b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2ba3707ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2ba3707e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2ba3706020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2ba37062b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2ba3706440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2ba37065d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2ba3706760"/>
        <function-ref name="isUart" scoped="" ref="0x7f2ba37068f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2ba3706a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2ba3706c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2ba3706da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2ba3705020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2ba37051b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2ba3705340"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba37054d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2ba3705860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2ba37059f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2ba3705b80"/>
        <function-ref name="tx" scoped="" ref="0x7f2ba3705d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2ba3704020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2ba37041b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2ba3704340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2ba37044d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2ba3704660"/>
        <function-ref name="rx" scoped="" ref="0x7f2ba37047f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2ba3704980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2ba3704b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2ba3704ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2ba3704e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2ba3703020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTData" ref="0x7f2ba3703410" loc="55:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UARTData" scoped="" ref="0x7f2ba3703410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2ba3703790"/>
        <function-ref name="txDone" scoped="" ref="0x7f2ba3703920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RTSInterrupt" ref="0x7f2ba3703cf0" loc="56:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RTSInterrupt" scoped="" ref="0x7f2ba3703cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba37020a0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3702230"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba37023c0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba3702550"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba37026e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba3702870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2ba3701af0" loc="59:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba3701af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba3701e70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba3700030"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba37001c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba3700350"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba37004e0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3700670"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba3700800"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba3700e40"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3700990"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba3700b20"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba3700cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Bluetooth" ref="0x7f2ba370caa0" loc="51:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Bluetooth" scoped="" ref="0x7f2ba370caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Bluetooth"/>
      </instance>
      <interface-functions>
        <function-ref name="setDeviceClass" scoped="" ref="0x7f2ba3708340"/>
        <function-ref name="setBaudrate" scoped="" ref="0x7f2ba370a020"/>
        <function-ref name="setDiscoverable" scoped="" ref="0x7f2ba370a1b0"/>
        <function-ref name="dataAvailable" scoped="" ref="0x7f2ba370a4d0"/>
        <function-ref name="disconnect" scoped="" ref="0x7f2ba37084d0"/>
        <function-ref name="connectionClosed" scoped="" ref="0x7f2ba370a660"/>
        <function-ref name="setName" scoped="" ref="0x7f2ba370a7f0"/>
        <function-ref name="setServiceName" scoped="" ref="0x7f2ba370a980"/>
        <function-ref name="setRawBaudrate" scoped="" ref="0x7f2ba370ab10"/>
        <function-ref name="setPagingTime" scoped="" ref="0x7f2ba370aca0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2ba370ae30"/>
        <function-ref name="setInquiryTime" scoped="" ref="0x7f2ba3709020"/>
        <function-ref name="connect" scoped="" ref="0x7f2ba37091b0"/>
        <function-ref name="connectionMade" scoped="" ref="0x7f2ba3709440"/>
        <function-ref name="setAuthentication" scoped="" ref="0x7f2ba37095d0"/>
        <function-ref name="resetDefaults" scoped="" ref="0x7f2ba370ce20"/>
        <function-ref name="commandModeEnded" scoped="" ref="0x7f2ba370a340"/>
        <function-ref name="setServiceClass" scoped="" ref="0x7f2ba3709760"/>
        <function-ref name="write" scoped="" ref="0x7f2ba37098f0"/>
        <function-ref name="discoverDevices" scoped="" ref="0x7f2ba3709a80"/>
        <function-ref name="setRadioMode" scoped="" ref="0x7f2ba3709c10"/>
        <function-ref name="setPIN" scoped="" ref="0x7f2ba3709da0"/>
        <function-ref name="setEncryption" scoped="" ref="0x7f2ba3708020"/>
        <function-ref name="disableRemoteConfig" scoped="" ref="0x7f2ba37081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2ba370c2e0" loc="50:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2ba370c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2ba370c660"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba370c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNextChar" ref="0x7f2ba36f0500" loc="88:../../../../tos/platforms/shimmer/chips/bluetooth/RovingNetworksP.nc">
      <component-ref qname="RovingNetworksP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendNextChar" scoped="" ref="0x7f2ba36f0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba36f0880"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba36f0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f2ba3647bc0" loc="46:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f2ba3647bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3646020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba36461b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3646340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba36464d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3646660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba36467f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f2ba363cbc0" loc="58:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f2ba363cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba363b020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba363b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba363b340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba363b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba363b660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba363b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f2ba3644bc0" loc="49:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f2ba3644bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3643020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba36431b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3643340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba36434d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3643660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba36437f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f2ba3642bc0" loc="53:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f2ba3642bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3640020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba36401b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3640340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba36404d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3640660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba36407f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f2ba3649c40" loc="44:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f2ba3649c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3648020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba36481b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3648340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba36484d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3648660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba36487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f2ba363ebc0" loc="56:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f2ba363ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba363d0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba363d230"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba363d3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba363d550"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba363d6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba363d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f2ba3646bc0" loc="47:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f2ba3646bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3645020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba36451b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3645340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba36454d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3645660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba36457f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f2ba363bbc0" loc="59:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f2ba363bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba363a020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba363a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba363a340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba363a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba363a660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba363a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f2ba364dd20" loc="42:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f2ba364dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba364a0e0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba364a270"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba364a400"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba364a590"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba364a720"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba364a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f2ba3640bc0" loc="54:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f2ba3640bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba363f020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba363f1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba363f340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba363f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba363f660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba363f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f2ba3648bc0" loc="45:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f2ba3648bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3647020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba36471b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3647340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba36474d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3647660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba36477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f2ba363dc40" loc="57:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f2ba363dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba363c020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba363c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba363c340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba363c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba363c660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba363c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f2ba3645bc0" loc="48:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f2ba3645bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3644020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba36441b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3644340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba36444d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3644660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba36447f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f2ba3643bc0" loc="52:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f2ba3643bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3642020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba36421b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3642340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba36424d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3642660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba36427f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f2ba364ac80" loc="43:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f2ba364ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba36490a0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3649230"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba36493c0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba3649550"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba36496e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba3649870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f2ba363fbc0" loc="55:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f2ba363fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba363e020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba363e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba363e340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba363e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba363e660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba363e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f2ba3633a30" loc="43:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f2ba3633a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3633db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3632020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba36321b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba3632340"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba36324d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba3632660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f2ba3629bc0" loc="55:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f2ba3629bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3628020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba36281b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3628340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba36284d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3628660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba36287f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f2ba3630a30" loc="46:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f2ba3630a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3630db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba362f020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba362f1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba362f340"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba362f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba362f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f2ba362ea30" loc="50:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f2ba362ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba362edb0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba362d020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba362d1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba362d340"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba362d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba362d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f2ba3635a30" loc="41:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f2ba3635a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3635db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3634020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba36341b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba3634340"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba36344d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba3634660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f2ba362ba30" loc="53:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f2ba362ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba362a020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba362a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba362a340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba362a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba362a660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba362a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f2ba3632a30" loc="44:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f2ba3632a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3632db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3631020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba36311b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba3631340"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba36314d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba3631660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f2ba3628bc0" loc="56:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f2ba3628bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3626020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba36261b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3626340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba36264d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3626660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba36267f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f2ba36399c0" loc="39:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f2ba36399c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3639d40"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3636020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba36361b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba3636340"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba36364d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba3636660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f2ba362da30" loc="51:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f2ba362da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba362ddb0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba362c020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba362c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba362c340"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba362c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba362c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f2ba3634a30" loc="42:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f2ba3634a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3634db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3633020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba36331b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba3633340"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba36334d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba3633660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f2ba362abc0" loc="54:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f2ba362abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3629020"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba36291b0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3629340"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba36294d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3629660"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba36297f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f2ba3631a30" loc="45:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f2ba3631a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3631db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3630020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba36301b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba3630340"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba36304d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba3630660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f2ba362fa30" loc="49:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f2ba362fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba362fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba362e020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba362e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba362e340"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba362e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba362e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f2ba3636a30" loc="40:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f2ba3636a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3636db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3635020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba36351b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba3635340"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba36354d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba3635660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f2ba362ca30" loc="52:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f2ba362ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba362cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba362b020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba362b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba362b340"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba362b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba362b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f2ba354d860" loc="78:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2ba354d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2ba354dbe0"/>
        <function-ref name="txDone" scoped="" ref="0x7f2ba354dd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f2ba3550450" loc="76:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2ba3550450"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2ba35507d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3550960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f2ba3550c80" loc="77:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2ba3550c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2ba35530a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2ba3553230"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2ba35533c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2ba3553550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2ba35536e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2ba3553870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2ba3553a00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2ba3553b90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2ba3553d20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2ba3552020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2ba35521b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2ba3552340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2ba35524d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2ba3552760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2ba35528f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2ba3552a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2ba3552c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f2ba3552da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2ba354f020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2ba354f1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2ba354f340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2ba354f4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2ba354f660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2ba354f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba354f980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2ba354fd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2ba354e020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2ba354e1b0"/>
        <function-ref name="tx" scoped="" ref="0x7f2ba354e340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2ba354e4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2ba354e660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2ba354e7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2ba354e980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2ba354eb10"/>
        <function-ref name="rx" scoped="" ref="0x7f2ba354eca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2ba354ee30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2ba354d020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2ba354d1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2ba354d340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2ba354d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f2ba353f990" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f2ba353f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba353fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba353e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba353e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba353e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba353e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba353e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba353e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba353e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba353eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba353eca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba353ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba353d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba353d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba353d440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba353d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f2ba3544130" loc="76:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f2ba3544130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2ba35444b0"/>
        <function-ref name="txDone" scoped="" ref="0x7f2ba3544640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f2ba353d990" loc="81:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f2ba353d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba353dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba353c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba353c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba353c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba353c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba353c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba353c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba353c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba353cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba353cca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba353ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba353b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba353b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba353b440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba353b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f2ba353b990" loc="82:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f2ba353b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba353bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba353a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba353a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba353a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba353a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba353a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba353a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba353a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba353ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba353aca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba353ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3539020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba35391b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3539440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba35395d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f2ba3549550" loc="75:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f2ba3549550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2ba35498d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2ba3549a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2ba3549bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2ba3549d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2ba3548020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2ba35481b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2ba3548340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2ba35484d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2ba3548660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2ba35487f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2ba3548980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2ba3548b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2ba3548ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2ba3547020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2ba35471b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2ba3547340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2ba35474d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f2ba3547660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2ba35477f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2ba3547980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2ba3547b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2ba3547ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2ba3547e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2ba3546020"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba35461b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2ba3546540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2ba35466d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2ba3546860"/>
        <function-ref name="tx" scoped="" ref="0x7f2ba35469f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2ba3546b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2ba3546d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2ba3545020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2ba35451b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2ba3545340"/>
        <function-ref name="rx" scoped="" ref="0x7f2ba35454d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2ba3545660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2ba35457f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2ba3545980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2ba3545b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2ba3545ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f2ba354cbc0" loc="74:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f2ba354cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2ba3549020"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba35491b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f2ba3542990" loc="79:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f2ba3542990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3542d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3540020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba35401b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3540340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba35404d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3540660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba35407f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3540980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3540b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3540ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3540e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba353f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba353f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba353f440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba353f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f2ba3544a00" loc="78:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f2ba3544a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3544d80"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3543020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba35431b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3543340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba35434d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3543660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba35437f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3543980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba3543b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3543ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3543e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3542020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba35421b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3542440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba35425d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba34b3020" loc="39:../../../../tos/platforms/shimmer2r/AccelC.nc">
      <component-ref qname="AccelC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba34b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba34b33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Accel" ref="0x7f2ba34b6820" loc="38:../../../../tos/platforms/shimmer2r/AccelC.nc">
      <component-ref qname="AccelC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Accel" scoped="" ref="0x7f2ba34b6820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mma_Accel"/>
      </instance>
      <interface-functions>
        <function-ref name="setSensitivity" scoped="" ref="0x7f2ba34b6ba0"/>
        <function-ref name="wake" scoped="" ref="0x7f2ba34b6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba34b3e40" loc="39:../../../../tos/platforms/shimmer2r/Mma7361P.nc">
      <component-ref qname="Mma7361P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba34b3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba34ae1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Accel" ref="0x7f2ba34ae510" loc="40:../../../../tos/platforms/shimmer2r/Mma7361P.nc">
      <component-ref qname="Mma7361P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Accel" scoped="" ref="0x7f2ba34ae510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mma_Accel"/>
      </instance>
      <interface-functions>
        <function-ref name="setSensitivity" scoped="" ref="0x7f2ba34ae890"/>
        <function-ref name="wake" scoped="" ref="0x7f2ba34aea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba34b42b0" loc="37:../../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <component-ref qname="shimmerAnalogSetupC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba34b42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba34b4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="shimmerAnalogSetup" ref="0x7f2ba34b4940" loc="38:../../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <component-ref qname="shimmerAnalogSetupC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f2ba34b4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="shimmerAnalogSetup"/>
      </instance>
      <interface-functions>
        <function-ref name="addAccelInputs" scoped="" ref="0x7f2ba34b4cc0"/>
        <function-ref name="triggerConversion" scoped="" ref="0x7f2ba34b4e50"/>
        <function-ref name="getNumberOfChannels" scoped="" ref="0x7f2ba34a4020"/>
        <function-ref name="addECGInputs" scoped="" ref="0x7f2ba34a41b0"/>
        <function-ref name="addAnExInput" scoped="" ref="0x7f2ba34a4340"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba34a44d0"/>
        <function-ref name="addEMGInput" scoped="" ref="0x7f2ba34a4660"/>
        <function-ref name="addStrainGaugeInputs" scoped="" ref="0x7f2ba34a47f0"/>
        <function-ref name="addGSRInput" scoped="" ref="0x7f2ba34a4980"/>
        <function-ref name="finishADCSetup" scoped="" ref="0x7f2ba34a4b10"/>
        <function-ref name="addUVInputs" scoped="" ref="0x7f2ba34a4ca0"/>
        <function-ref name="addGyroInputs" scoped="" ref="0x7f2ba34a4e30"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f2ba34a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430DmaControl" ref="0x7f2ba349ace0" loc="45:../../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430DmaControl" scoped="" ref="0x7f2ba349ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setFlags" scoped="" ref="0x7f2ba349d0a0"/>
        <function-ref name="init" scoped="" ref="0x7f2ba349d230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430DmaChannel" ref="0x7f2ba349d530" loc="46:../../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430DmaChannel" scoped="" ref="0x7f2ba349d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f2ba349d8b0"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f2ba349da40"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f2ba349dbd0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f2ba349dd60"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f2ba349c020"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba349c1b0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f2ba349c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f2ba3474370" loc="47:../../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f2ba3474370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f2ba34746f0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f2ba3474880"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f2ba3474a10"/>
        <function-ref name="isBusy" scoped="" ref="0x7f2ba3474ba0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f2ba3474d30"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f2ba3499020"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f2ba34991b0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f2ba3499340"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f2ba34994d0"/>
        <function-ref name="getMem" scoped="" ref="0x7f2ba3499660"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f2ba34997f0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f2ba3499980"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f2ba3499b10"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f2ba3499da0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f2ba3498020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba349f850" loc="42:../../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba349f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba349fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2ba34982a0" loc="48:../../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba34982a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba3498620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba34987b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba3498940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba3498ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba3498c60"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3498df0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba3473020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba3473660"/>
        <function-ref name="set" scoped="" ref="0x7f2ba34731b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba3473340"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba34734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="shimmerAnalogSetup" ref="0x7f2ba34a3d00" loc="41:../../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f2ba34a3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="shimmerAnalogSetup"/>
      </instance>
      <interface-functions>
        <function-ref name="addAccelInputs" scoped="" ref="0x7f2ba34a00a0"/>
        <function-ref name="triggerConversion" scoped="" ref="0x7f2ba34a0230"/>
        <function-ref name="getNumberOfChannels" scoped="" ref="0x7f2ba34a03c0"/>
        <function-ref name="addECGInputs" scoped="" ref="0x7f2ba34a0550"/>
        <function-ref name="addAnExInput" scoped="" ref="0x7f2ba34a06e0"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba34a0870"/>
        <function-ref name="addEMGInput" scoped="" ref="0x7f2ba34a0a00"/>
        <function-ref name="addStrainGaugeInputs" scoped="" ref="0x7f2ba34a0b90"/>
        <function-ref name="addGSRInput" scoped="" ref="0x7f2ba34a0d20"/>
        <function-ref name="finishADCSetup" scoped="" ref="0x7f2ba349f020"/>
        <function-ref name="addUVInputs" scoped="" ref="0x7f2ba349f1b0"/>
        <function-ref name="addGyroInputs" scoped="" ref="0x7f2ba349f340"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f2ba349f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7f2ba342c840" loc="46:../../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f2ba342c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f2ba342cbc0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f2ba342cd50"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f2ba3428020"/>
        <function-ref name="isBusy" scoped="" ref="0x7f2ba34281b0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f2ba3428340"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f2ba34284d0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f2ba3428660"/>
        <function-ref name="startConversion" scoped="" ref="0x7f2ba34287f0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f2ba3428980"/>
        <function-ref name="getMem" scoped="" ref="0x7f2ba3428b10"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f2ba3428ca0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f2ba3428e30"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f2ba3427020"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f2ba34272b0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f2ba3427440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7f2ba33ef8b0" loc="51:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel2" scoped="" ref="0x7f2ba33ef8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f2ba33efc30"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f2ba33efdc0"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f2ba33ee020"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f2ba33ee1b0"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f2ba33ee340"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba33ee4d0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f2ba33ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel0" ref="0x7f2ba33f1590" loc="49:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel0" scoped="" ref="0x7f2ba33f1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f2ba33f1910"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f2ba33f1aa0"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f2ba33f1c30"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f2ba33f1dc0"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f2ba33f0020"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba33f01b0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f2ba33f0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2ba3429b70" loc="48:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2ba3429b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setFlags" scoped="" ref="0x7f2ba33f1020"/>
        <function-ref name="init" scoped="" ref="0x7f2ba33f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7f2ba33f0720" loc="50:../../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel1" scoped="" ref="0x7f2ba33f0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f2ba33f0aa0"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f2ba33f0c30"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f2ba33f0dc0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f2ba33ef020"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f2ba33ef1b0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba33ef340"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f2ba33ef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7f2ba33bf0c0" loc="44:../../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel2" scoped="" ref="0x7f2ba33bf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f2ba33bf440"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f2ba33bf5d0"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f2ba33bf760"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f2ba33bf8f0"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f2ba33bfa80"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba33bfc10"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f2ba33bfda0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f2ba33be020"/>
        <function-ref name="getDestination" scoped="" ref="0x7f2ba33be1b0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f2ba33be340"/>
        <function-ref name="aborted" scoped="" ref="0x7f2ba33be4d0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f2ba33be660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2ba33be7f0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f2ba33bea80"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f2ba33bec10"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f2ba33beda0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f2ba33bd020"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f2ba33bd1b0"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba33bd340"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f2ba33bd4d0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f2ba33bd660"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f2ba33bd7f0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f2ba33bd980"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f2ba33bdb10"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f2ba33bdca0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f2ba33bc220"/>
        <function-ref name="getSource" scoped="" ref="0x7f2ba33bc3b0"/>
        <function-ref name="getSize" scoped="" ref="0x7f2ba33bc540"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f2ba33bc6d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba33bc860"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f2ba33bc9f0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f2ba33bcb80"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f2ba33bcd10"/>
        <function-ref name="setSize" scoped="" ref="0x7f2ba33bb020"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba33bb1b0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f2ba33bb340"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f2ba33bb4d0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f2ba33bb660"/>
        <function-ref name="setDst" scoped="" ref="0x7f2ba33bb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel0" ref="0x7f2ba33c7df0" loc="42:../../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel0" scoped="" ref="0x7f2ba33c7df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f2ba33e31c0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f2ba33e3350"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f2ba33e34e0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f2ba33e3670"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f2ba33e3800"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba33e3990"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f2ba33e3b20"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f2ba33e3cb0"/>
        <function-ref name="getDestination" scoped="" ref="0x7f2ba33e3e40"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f2ba33e2020"/>
        <function-ref name="aborted" scoped="" ref="0x7f2ba33e21b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f2ba33e2340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2ba33e24d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f2ba33e2760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f2ba33e28f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f2ba33e2a80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f2ba33e2c10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f2ba33e2da0"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba33c6020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f2ba33c61b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f2ba33c6340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f2ba33c64d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f2ba33c6660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f2ba33c67f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f2ba33c6980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f2ba33c6d10"/>
        <function-ref name="getSource" scoped="" ref="0x7f2ba33c5020"/>
        <function-ref name="getSize" scoped="" ref="0x7f2ba33c51b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f2ba33c5340"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba33c54d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f2ba33c5660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f2ba33c57f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f2ba33c5980"/>
        <function-ref name="setSize" scoped="" ref="0x7f2ba33c5b10"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba33c5ca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f2ba33c5e30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f2ba33c4020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f2ba33c41b0"/>
        <function-ref name="setDst" scoped="" ref="0x7f2ba33c4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2ba33e4d90" loc="41:../../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2ba33e4d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="clearRoundRobin" scoped="" ref="0x7f2ba33eae00"/>
        <function-ref name="setRoundRobin" scoped="" ref="0x7f2ba33ea310"/>
        <function-ref name="clearOnFetch" scoped="" ref="0x7f2ba33ea4a0"/>
        <function-ref name="setENNMI" scoped="" ref="0x7f2ba33ea630"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba33ea7c0"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba33ea950"/>
        <function-ref name="setOnFetch" scoped="" ref="0x7f2ba33eaae0"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba33eac70"/>
        <function-ref name="clearENNMI" scoped="" ref="0x7f2ba33ea180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7f2ba33c4730" loc="43:../../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel1" scoped="" ref="0x7f2ba33c4730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f2ba33c4ab0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f2ba33c4c40"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f2ba33c4dd0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f2ba33c3020"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f2ba33c31b0"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba33c3340"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f2ba33c34d0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f2ba33c3660"/>
        <function-ref name="getDestination" scoped="" ref="0x7f2ba33c37f0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f2ba33c3980"/>
        <function-ref name="aborted" scoped="" ref="0x7f2ba33c3b10"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f2ba33c3ca0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2ba33c3e30"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f2ba33c2120"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f2ba33c22b0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f2ba33c2440"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f2ba33c25d0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f2ba33c2760"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba33c28f0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f2ba33c2a80"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f2ba33c2c10"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f2ba33c2da0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f2ba33c1020"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f2ba33c11b0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f2ba33c1340"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f2ba33c16d0"/>
        <function-ref name="getSource" scoped="" ref="0x7f2ba33c1860"/>
        <function-ref name="getSize" scoped="" ref="0x7f2ba33c19f0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f2ba33c1b80"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba33c1d10"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f2ba33c0020"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f2ba33c01b0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f2ba33c0340"/>
        <function-ref name="setSize" scoped="" ref="0x7f2ba33c04d0"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba33c0660"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f2ba33c07f0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f2ba33c0980"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f2ba33c0b10"/>
        <function-ref name="setDst" scoped="" ref="0x7f2ba33c0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DmaControl" ref="0x7f2ba33ba520" loc="43:../../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
      <component-ref qname="HplMsp430DmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DmaControl" scoped="" ref="0x7f2ba33ba520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="clearRoundRobin" scoped="" ref="0x7f2ba33b7660"/>
        <function-ref name="setRoundRobin" scoped="" ref="0x7f2ba33baa30"/>
        <function-ref name="clearOnFetch" scoped="" ref="0x7f2ba33babc0"/>
        <function-ref name="setENNMI" scoped="" ref="0x7f2ba33bad50"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba33b7020"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba33b71b0"/>
        <function-ref name="setOnFetch" scoped="" ref="0x7f2ba33b7340"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba33b74d0"/>
        <function-ref name="clearENNMI" scoped="" ref="0x7f2ba33ba8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f2ba33b4710" loc="44:../../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
      <component-ref qname="HplMsp430DmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f2ba33b4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba33b4a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMA" ref="0x7f2ba3332c90" loc="49:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA" scoped="" ref="0x7f2ba3332c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f2ba33310a0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f2ba3331230"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f2ba33313c0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f2ba3331550"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f2ba33316e0"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba3331870"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f2ba3331a00"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f2ba3331b90"/>
        <function-ref name="getDestination" scoped="" ref="0x7f2ba3331d20"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f2ba3330020"/>
        <function-ref name="aborted" scoped="" ref="0x7f2ba33301b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f2ba3330340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2ba33304d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f2ba3330760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f2ba33308f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f2ba3330a80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f2ba3330c10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f2ba3330da0"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba332f020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f2ba332f1b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f2ba332f340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f2ba332f4d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f2ba332f660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f2ba332f7f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f2ba332f980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f2ba332fd10"/>
        <function-ref name="getSource" scoped="" ref="0x7f2ba332e020"/>
        <function-ref name="getSize" scoped="" ref="0x7f2ba332e1b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f2ba332e340"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba332e4d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f2ba332e660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f2ba332e7f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f2ba332e980"/>
        <function-ref name="setSize" scoped="" ref="0x7f2ba332eb10"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba332eca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f2ba332ee30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f2ba332d020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f2ba332d1b0"/>
        <function-ref name="setDst" scoped="" ref="0x7f2ba332d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x7f2ba332d610" loc="50:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f2ba332d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba332d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMA" ref="0x7f2ba33299b0" loc="49:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA" scoped="" ref="0x7f2ba33299b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f2ba3329d30"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f2ba3328020"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f2ba33281b0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f2ba3328340"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f2ba33284d0"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba3328660"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f2ba33287f0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f2ba3328980"/>
        <function-ref name="getDestination" scoped="" ref="0x7f2ba3328b10"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f2ba3328ca0"/>
        <function-ref name="aborted" scoped="" ref="0x7f2ba3328e30"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f2ba3327020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2ba33271b0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f2ba3327440"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f2ba33275d0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f2ba3327760"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f2ba33278f0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f2ba3327a80"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba3327c10"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f2ba3327da0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f2ba3326020"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f2ba33261b0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f2ba3326340"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f2ba33264d0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f2ba3326660"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f2ba33269f0"/>
        <function-ref name="getSource" scoped="" ref="0x7f2ba3326b80"/>
        <function-ref name="getSize" scoped="" ref="0x7f2ba3326d10"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f2ba3325020"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba33251b0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f2ba3325340"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f2ba33254d0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f2ba3325660"/>
        <function-ref name="setSize" scoped="" ref="0x7f2ba33257f0"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba3325980"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f2ba3325b10"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f2ba3325ca0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f2ba3325e30"/>
        <function-ref name="setDst" scoped="" ref="0x7f2ba3324020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x7f2ba33242f0" loc="50:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f2ba33242f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba3324670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMA" ref="0x7f2ba331f3f0" loc="49:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA" scoped="" ref="0x7f2ba331f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f2ba331f770"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f2ba331f900"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f2ba331fa90"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f2ba331fc20"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f2ba331fdb0"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba331e020"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f2ba331e1b0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f2ba331e340"/>
        <function-ref name="getDestination" scoped="" ref="0x7f2ba331e4d0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f2ba331e660"/>
        <function-ref name="aborted" scoped="" ref="0x7f2ba331e7f0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f2ba331e980"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2ba331eb10"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f2ba331eda0"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f2ba331d020"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f2ba331d1b0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f2ba331d340"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f2ba331d4d0"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba331d660"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f2ba331d7f0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f2ba331d980"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f2ba331db10"/>
        <function-ref name="setSrc" scoped="" ref="0x7f2ba331dca0"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f2ba331de30"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f2ba331c020"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f2ba331c3b0"/>
        <function-ref name="getSource" scoped="" ref="0x7f2ba331c540"/>
        <function-ref name="getSize" scoped="" ref="0x7f2ba331c6d0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f2ba331c860"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba331c9f0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f2ba331cb80"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f2ba331cd10"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f2ba331b020"/>
        <function-ref name="setSize" scoped="" ref="0x7f2ba331b1b0"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba331b340"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f2ba331b4d0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f2ba331b660"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f2ba331b7f0"/>
        <function-ref name="setDst" scoped="" ref="0x7f2ba331b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x7f2ba331bc50" loc="50:../../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f2ba331bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba331a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel" ref="0x7f2ba32e8020" loc="45:../../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel" scoped="" ref="0x7f2ba32e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f2ba32e83a0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f2ba32e8530"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f2ba32e86c0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f2ba32e8850"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f2ba32e89e0"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba32e8b70"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f2ba32e8d00"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f2ba32e7020"/>
        <function-ref name="getDestination" scoped="" ref="0x7f2ba32e71b0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f2ba32e7340"/>
        <function-ref name="aborted" scoped="" ref="0x7f2ba32e74d0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f2ba32e7660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2ba32e77f0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f2ba32e7a80"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f2ba32e7c10"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f2ba32e7da0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f2ba32e6020"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f2ba32e61b0"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba32e6340"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f2ba32e64d0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f2ba32e6660"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f2ba32e67f0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f2ba32e6980"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f2ba32e6b10"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f2ba32e6ca0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f2ba32e5220"/>
        <function-ref name="getSource" scoped="" ref="0x7f2ba32e53b0"/>
        <function-ref name="getSize" scoped="" ref="0x7f2ba32e5540"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f2ba32e56d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba32e5860"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f2ba32e59f0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f2ba32e5b80"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f2ba32e5d10"/>
        <function-ref name="setSize" scoped="" ref="0x7f2ba32e4020"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba32e41b0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f2ba32e4340"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f2ba32e44d0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f2ba32e4660"/>
        <function-ref name="setDst" scoped="" ref="0x7f2ba32e47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7f2ba32e9020" loc="44:../../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel" scoped="" ref="0x7f2ba32e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f2ba32e93a0"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f2ba32e9530"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f2ba32e96c0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f2ba32e9850"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f2ba32e99e0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba32e9b70"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f2ba32e9d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel" ref="0x7f2ba32de7a0" loc="45:../../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel" scoped="" ref="0x7f2ba32de7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f2ba32deb20"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f2ba32decb0"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f2ba32dee40"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f2ba32dd020"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f2ba32dd1b0"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba32dd340"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f2ba32dd4d0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f2ba32dd660"/>
        <function-ref name="getDestination" scoped="" ref="0x7f2ba32dd7f0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f2ba32dd980"/>
        <function-ref name="aborted" scoped="" ref="0x7f2ba32ddb10"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f2ba32ddca0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2ba32dde30"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f2ba32dc120"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f2ba32dc2b0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f2ba32dc440"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f2ba32dc5d0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f2ba32dc760"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba32dc8f0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f2ba32dca80"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f2ba32dcc10"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f2ba32dcda0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f2ba32db020"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f2ba32db1b0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f2ba32db340"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f2ba32db6d0"/>
        <function-ref name="getSource" scoped="" ref="0x7f2ba32db860"/>
        <function-ref name="getSize" scoped="" ref="0x7f2ba32db9f0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f2ba32dbb80"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba32dbd10"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f2ba32da020"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f2ba32da1b0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f2ba32da340"/>
        <function-ref name="setSize" scoped="" ref="0x7f2ba32da4d0"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba32da660"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f2ba32da7f0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f2ba32da980"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f2ba32dab10"/>
        <function-ref name="setDst" scoped="" ref="0x7f2ba32daca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7f2ba32df7a0" loc="44:../../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel" scoped="" ref="0x7f2ba32df7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f2ba32dfb20"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f2ba32dfcb0"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f2ba32dfe40"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f2ba32de020"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f2ba32de1b0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba32de340"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f2ba32de4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel" ref="0x7f2ba32d6db0" loc="45:../../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel2P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel" scoped="" ref="0x7f2ba32d6db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f2ba32d5180"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f2ba32d5310"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f2ba32d54a0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f2ba32d5630"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f2ba32d57c0"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba32d5950"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f2ba32d5ae0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f2ba32d5c70"/>
        <function-ref name="getDestination" scoped="" ref="0x7f2ba32d5e00"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f2ba32d4020"/>
        <function-ref name="aborted" scoped="" ref="0x7f2ba32d41b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f2ba32d4340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2ba32d44d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f2ba32d4760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f2ba32d48f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f2ba32d4a80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f2ba32d4c10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f2ba32d4da0"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba32d3020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f2ba32d31b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f2ba32d3340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f2ba32d34d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f2ba32d3660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f2ba32d37f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f2ba32d3980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f2ba32d3d10"/>
        <function-ref name="getSource" scoped="" ref="0x7f2ba32d2020"/>
        <function-ref name="getSize" scoped="" ref="0x7f2ba32d21b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f2ba32d2340"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba32d24d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f2ba32d2660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f2ba32d27f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f2ba32d2980"/>
        <function-ref name="setSize" scoped="" ref="0x7f2ba32d2b10"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba32d2ca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f2ba32d2e30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f2ba32d1020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f2ba32d11b0"/>
        <function-ref name="setDst" scoped="" ref="0x7f2ba32d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7f2ba32d7d80" loc="44:../../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel2P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel" scoped="" ref="0x7f2ba32d7d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f2ba32d6180"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f2ba32d6310"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f2ba32d64a0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f2ba32d6630"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f2ba32d67c0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba32d6950"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f2ba32d6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel1" ref="0x7f2ba32c6740" loc="48:../../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel1" scoped="" ref="0x7f2ba32c6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f2ba32c6ac0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f2ba32c6c50"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f2ba32c6de0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f2ba32c5020"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f2ba32c51b0"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba32c5340"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f2ba32c54d0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f2ba32c5660"/>
        <function-ref name="getDestination" scoped="" ref="0x7f2ba32c57f0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f2ba32c5980"/>
        <function-ref name="aborted" scoped="" ref="0x7f2ba32c5b10"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f2ba32c5ca0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2ba32c5e30"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f2ba32c4120"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f2ba32c42b0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f2ba32c4440"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f2ba32c45d0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f2ba32c4760"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba32c48f0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f2ba32c4a80"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f2ba32c4c10"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f2ba32c4da0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f2ba32c3020"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f2ba32c31b0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f2ba32c3340"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f2ba32c36d0"/>
        <function-ref name="getSource" scoped="" ref="0x7f2ba32c3860"/>
        <function-ref name="getSize" scoped="" ref="0x7f2ba32c39f0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f2ba32c3b80"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba32c3d10"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f2ba32c2020"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f2ba32c21b0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f2ba32c2340"/>
        <function-ref name="setSize" scoped="" ref="0x7f2ba32c24d0"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba32c2660"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f2ba32c27f0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f2ba32c2980"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f2ba32c2b10"/>
        <function-ref name="setDst" scoped="" ref="0x7f2ba32c2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplControl" ref="0x7f2ba32cc970" loc="46:../../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplControl" scoped="" ref="0x7f2ba32cc970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="clearRoundRobin" scoped="" ref="0x7f2ba32cb990"/>
        <function-ref name="setRoundRobin" scoped="" ref="0x7f2ba32cce80"/>
        <function-ref name="clearOnFetch" scoped="" ref="0x7f2ba32cb030"/>
        <function-ref name="setENNMI" scoped="" ref="0x7f2ba32cb1c0"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba32cb350"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba32cb4e0"/>
        <function-ref name="setOnFetch" scoped="" ref="0x7f2ba32cb670"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba32cb800"/>
        <function-ref name="clearENNMI" scoped="" ref="0x7f2ba32cccf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel2" ref="0x7f2ba32c10d0" loc="49:../../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel2" scoped="" ref="0x7f2ba32c10d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f2ba32c1450"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f2ba32c15e0"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f2ba32c1770"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f2ba32c1900"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f2ba32c1a90"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba32c1c20"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f2ba32c1db0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f2ba32c0020"/>
        <function-ref name="getDestination" scoped="" ref="0x7f2ba32c01b0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f2ba32c0340"/>
        <function-ref name="aborted" scoped="" ref="0x7f2ba32c04d0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f2ba32c0660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2ba32c07f0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f2ba32c0a80"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f2ba32c0c10"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f2ba32c0da0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f2ba32bf020"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f2ba32bf1b0"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba32bf340"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f2ba32bf4d0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f2ba32bf660"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f2ba32bf7f0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f2ba32bf980"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f2ba32bfb10"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f2ba32bfca0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f2ba32be220"/>
        <function-ref name="getSource" scoped="" ref="0x7f2ba32be3b0"/>
        <function-ref name="getSize" scoped="" ref="0x7f2ba32be540"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f2ba32be6d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba32be860"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f2ba32be9f0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f2ba32beb80"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f2ba32bed10"/>
        <function-ref name="setSize" scoped="" ref="0x7f2ba32bd020"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba32bd1b0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f2ba32bd340"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f2ba32bd4d0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f2ba32bd660"/>
        <function-ref name="setDst" scoped="" ref="0x7f2ba32bd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2ba32cc060" loc="44:../../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2ba32cc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setFlags" scoped="" ref="0x7f2ba32cc3e0"/>
        <function-ref name="init" scoped="" ref="0x7f2ba32cc570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel0" ref="0x7f2ba32cbd90" loc="47:../../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel0" scoped="" ref="0x7f2ba32cbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f2ba32ca180"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f2ba32ca310"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f2ba32ca4a0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f2ba32ca630"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f2ba32ca7c0"/>
        <function-ref name="getState" scoped="" ref="0x7f2ba32ca950"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f2ba32caae0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f2ba32cac70"/>
        <function-ref name="getDestination" scoped="" ref="0x7f2ba32cae00"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f2ba32c9020"/>
        <function-ref name="aborted" scoped="" ref="0x7f2ba32c91b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f2ba32c9340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f2ba32c94d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f2ba32c9760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f2ba32c98f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f2ba32c9a80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f2ba32c9c10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f2ba32c9da0"/>
        <function-ref name="reset" scoped="" ref="0x7f2ba32c8020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f2ba32c81b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f2ba32c8340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f2ba32c84d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f2ba32c8660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f2ba32c87f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f2ba32c8980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f2ba32c8d10"/>
        <function-ref name="getSource" scoped="" ref="0x7f2ba32c7020"/>
        <function-ref name="getSize" scoped="" ref="0x7f2ba32c71b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f2ba32c7340"/>
        <function-ref name="transferDone" scoped="" ref="0x7f2ba32c74d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f2ba32c7660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f2ba32c77f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f2ba32c7980"/>
        <function-ref name="setSize" scoped="" ref="0x7f2ba32c7b10"/>
        <function-ref name="setState" scoped="" ref="0x7f2ba32c7ca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f2ba32c7e30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f2ba32c6020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f2ba32c61b0"/>
        <function-ref name="setDst" scoped="" ref="0x7f2ba32c6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GyroBoard" ref="0x7f2ba3293120" loc="42:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <component-ref qname="GyroBoardC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroBoard" scoped="" ref="0x7f2ba3293120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GyroBoard"/>
      </instance>
      <interface-functions>
        <function-ref name="autoZero" scoped="" ref="0x7f2ba32934a0"/>
        <function-ref name="buttonPressed" scoped="" ref="0x7f2ba3293630"/>
        <function-ref name="ledOn" scoped="" ref="0x7f2ba32937c0"/>
        <function-ref name="ledOff" scoped="" ref="0x7f2ba3293950"/>
        <function-ref name="ledToggle" scoped="" ref="0x7f2ba3293ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba32962f0" loc="40:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <component-ref qname="GyroBoardC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba32962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3296670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2ba3296930" loc="41:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <component-ref qname="GyroBoardC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2ba3296930"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2ba3296cb0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3296e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GyroBoard" ref="0x7f2ba328f4e0" loc="45:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroBoard" scoped="" ref="0x7f2ba328f4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GyroBoard"/>
      </instance>
      <interface-functions>
        <function-ref name="autoZero" scoped="" ref="0x7f2ba328f860"/>
        <function-ref name="buttonPressed" scoped="" ref="0x7f2ba328f9f0"/>
        <function-ref name="ledOn" scoped="" ref="0x7f2ba328fb80"/>
        <function-ref name="ledOff" scoped="" ref="0x7f2ba328fd10"/>
        <function-ref name="ledToggle" scoped="" ref="0x7f2ba328e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba32926c0" loc="43:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba32926c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3292a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="buttonNotify" ref="0x7f2ba328e5a0" loc="48:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="buttonNotify" scoped="" ref="0x7f2ba328e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3be2e30"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f2ba3be1770"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f2ba328d680"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba328d200"/>
        <function-ref name="notify" scoped="" ref="0x7f2ba328db00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2ba3292d00" loc="44:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2ba3292d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2ba328f0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba328f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f2ba3271020" loc="51:../../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <component-ref qname="GyroButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f2ba3271020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3be2e30"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f2ba3be1770"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f2ba326f0d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3271c10"/>
        <function-ref name="notify" scoped="" ref="0x7f2ba326f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7f2ba3267c90" loc="44:../../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <component-ref qname="HplGyroButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f2ba3267c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba326a0a0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba326a230"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2ba326a3c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2ba326a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2ba326c380" loc="43:../../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <component-ref qname="HplGyroButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba326c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba326c700"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba326c890"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba326ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba326cbb0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba326cd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba326b020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba326b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba326b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2ba3261020" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplGyroButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2ba3261020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba32613a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3261530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba32616c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3261850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba32619e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba3261b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3261d00"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3260020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba32601b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba3260340"/>
        <function-ref name="set" scoped="" ref="0x7f2ba32604d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba3260660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba32607f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba3260a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3260c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2ba3263d50" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplGyroButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba3263d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3262100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba3262290"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3262420"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba32625b0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3262740"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba32628d0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3262a60"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba3262bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f2ba324f020" loc="46:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplGyroButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f2ba324f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba324f3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba324f530"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba324f6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba324f850"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba324f9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba324fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f2ba325c490" loc="45:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplGyroButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f2ba325c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba325c810"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba325c9a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2ba325cb30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2ba325ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7f2ba32382f0" loc="51:../../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7f2ba32382f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3238670"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3238800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f2ba3239760" loc="48:../../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f2ba3239760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba3239ae0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3239c70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2ba3239e00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2ba3238020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f2ba323cb10" loc="45:../../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f2ba323cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f2ba323bbd0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba323b750"/>
        <function-ref name="notify" scoped="" ref="0x7f2ba323a090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f2ba323a510" loc="47:../../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba323a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba323a890"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba323aa20"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba323abb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba323ad40"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3239020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba32391b0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3239340"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba32394d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="debounce" ref="0x7f2ba3225c40" loc="64:../../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="debounce" scoped="" ref="0x7f2ba3225c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3224020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba32241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f2ba3236af0" loc="45:../../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f2ba3236af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3be2e30"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f2ba3be1770"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f2ba3233bd0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3233750"/>
        <function-ref name="notify" scoped="" ref="0x7f2ba3232090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7f2ba3232750" loc="47:../../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7f2ba3232750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f2ba3230810"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba3230390"/>
        <function-ref name="notify" scoped="" ref="0x7f2ba3230c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="debounceTimer" ref="0x7f2ba322f3d0" loc="48:../../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="debounceTimer" scoped="" ref="0x7f2ba322f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba322b870"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba322ee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2ba322dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2ba322d780"/>
        <function-ref name="getdt" scoped="" ref="0x7f2ba322a1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2ba322bcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba322d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2ba322e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2ba322b260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2ba322e4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba322e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2ba321e8c0" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="GyroButtonC.debounceTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba321e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba321bcf0"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba321c320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2ba321b0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2ba321cc20"/>
        <function-ref name="getdt" scoped="" ref="0x7f2ba3219660"/>
        <function-ref name="gett0" scoped="" ref="0x7f2ba32191e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba321c7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2ba321d4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2ba321b6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2ba321d9b0"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba321de80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Magnetometer" ref="0x7f2ba32132f0" loc="49:../../../../tos/platforms/shimmer2/chips/hmc5843/MagnetometerC.nc">
      <component-ref qname="MagnetometerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Magnetometer" scoped="" ref="0x7f2ba32132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Magnetometer"/>
      </instance>
      <interface-functions>
        <function-ref name="disableBus" scoped="" ref="0x7f2ba3212c10"/>
        <function-ref name="setIdle" scoped="" ref="0x7f2ba3213800"/>
        <function-ref name="enableBus" scoped="" ref="0x7f2ba3213990"/>
        <function-ref name="convertRegistersToData" scoped="" ref="0x7f2ba3213b20"/>
        <function-ref name="readHeading" scoped="" ref="0x7f2ba3213cb0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2ba3213e40"/>
        <function-ref name="goToSleep" scoped="" ref="0x7f2ba3212020"/>
        <function-ref name="selfTest" scoped="" ref="0x7f2ba32121b0"/>
        <function-ref name="runSingleConversion" scoped="" ref="0x7f2ba3212340"/>
        <function-ref name="readData" scoped="" ref="0x7f2ba32124d0"/>
        <function-ref name="runContinuousConversion" scoped="" ref="0x7f2ba3212660"/>
        <function-ref name="setOutputRate" scoped="" ref="0x7f2ba32127f0"/>
        <function-ref name="setGain" scoped="" ref="0x7f2ba3212980"/>
        <function-ref name="readDone" scoped="" ref="0x7f2ba3213670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba3294bc0" loc="48:../../../../tos/platforms/shimmer2/chips/hmc5843/MagnetometerC.nc">
      <component-ref qname="MagnetometerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba3294bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3213020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Magnetometer" ref="0x7f2ba3211d30" loc="47:../../../../tos/platforms/shimmer2/chips/hmc5843/Hmc5843P.nc">
      <component-ref qname="Hmc5843P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Magnetometer" scoped="" ref="0x7f2ba3211d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Magnetometer"/>
      </instance>
      <interface-functions>
        <function-ref name="disableBus" scoped="" ref="0x7f2ba320d760"/>
        <function-ref name="setIdle" scoped="" ref="0x7f2ba320e270"/>
        <function-ref name="enableBus" scoped="" ref="0x7f2ba320e400"/>
        <function-ref name="convertRegistersToData" scoped="" ref="0x7f2ba320e590"/>
        <function-ref name="readHeading" scoped="" ref="0x7f2ba320e720"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2ba320e8b0"/>
        <function-ref name="goToSleep" scoped="" ref="0x7f2ba320ea40"/>
        <function-ref name="selfTest" scoped="" ref="0x7f2ba320ebd0"/>
        <function-ref name="runSingleConversion" scoped="" ref="0x7f2ba320ed60"/>
        <function-ref name="readData" scoped="" ref="0x7f2ba320d020"/>
        <function-ref name="runContinuousConversion" scoped="" ref="0x7f2ba320d1b0"/>
        <function-ref name="setOutputRate" scoped="" ref="0x7f2ba320d340"/>
        <function-ref name="setGain" scoped="" ref="0x7f2ba320d4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f2ba320e0e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CInit" ref="0x7f2ba31fbc20" loc="51:../../../../tos/platforms/shimmer2/chips/hmc5843/Hmc5843P.nc">
      <component-ref qname="Hmc5843P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInit" scoped="" ref="0x7f2ba31fbc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba31f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="testTimer" ref="0x7f2ba31ec020" loc="57:../../../../tos/platforms/shimmer2/chips/hmc5843/Hmc5843P.nc">
      <component-ref qname="Hmc5843P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="testTimer" scoped="" ref="0x7f2ba31ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba31e9630"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba31eba60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2ba31ea920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2ba31ea4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2ba31e7020"/>
        <function-ref name="gett0" scoped="" ref="0x7f2ba31e9ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba31ea020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2ba31ecc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2ba31e9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2ba31eb110"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba31eb5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba32116e0" loc="46:../../../../tos/platforms/shimmer2/chips/hmc5843/Hmc5843P.nc">
      <component-ref qname="Hmc5843P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba32116e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3211a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f2ba31f21d0" loc="53:../../../../tos/platforms/shimmer2/chips/hmc5843/Hmc5843P.nc">
      <component-ref qname="Hmc5843P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f2ba31f21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2ba31f2550"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2ba31f26e0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2ba31f2870"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2ba31f2a00"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2ba31f2b90"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2ba31f2d20"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2ba31f1020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2ba31f11b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2ba31f1340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2ba31f14d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2ba31f1660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2ba31f17f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2ba31f1980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2ba31f1c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2ba31f1da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2ba31f0020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2ba31f01b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f2ba31f0340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2ba31f04d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2ba31f0660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2ba31f07f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2ba31f0980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2ba31f0b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2ba31f0ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2ba31f0e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2ba31ef220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2ba31ef3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2ba31ef540"/>
        <function-ref name="tx" scoped="" ref="0x7f2ba31ef6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2ba31ef860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2ba31ef9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2ba31efb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2ba31efd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2ba31ee020"/>
        <function-ref name="rx" scoped="" ref="0x7f2ba31ee1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2ba31ee340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2ba31ee4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2ba31ee660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2ba31ee7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2ba31ee980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f2ba31eedb0" loc="54:../../../../tos/platforms/shimmer2/chips/hmc5843/Hmc5843P.nc">
      <component-ref qname="Hmc5843P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2ba31eedb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2ba31ed180"/>
        <function-ref name="txDone" scoped="" ref="0x7f2ba31ed310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f2ba31f9370" loc="52:../../../../tos/platforms/shimmer2/chips/hmc5843/Hmc5843P.nc">
      <component-ref qname="Hmc5843P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f2ba31f9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f2ba31f96f0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f2ba31f9880"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f2ba31f9a10"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f2ba31f9ba0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f2ba31f9d30"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f2ba31f8020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f2ba31f81b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f2ba31f8340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba31f84d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f2ba31f8660"/>
        <function-ref name="getData" scoped="" ref="0x7f2ba31f87f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f2ba31f8980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f2ba31f8b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f2ba31f8da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f2ba31f7020"/>
        <function-ref name="getIV" scoped="" ref="0x7f2ba31f71b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f2ba31f7340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f2ba31f74d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2ba31f7660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f2ba31f77f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2ba31f7980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f2ba31f7b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2ba31f7ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f2ba31f7e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2ba31f6020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2ba31f63b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f2ba31f6540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f2ba31f66d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f2ba31f6860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f2ba31f69f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f2ba31f6b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f2ba31f6d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2ba31f5020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2ba31f51b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f2ba31f5340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2ba31f54d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f2ba31f5660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f2ba31f57f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f2ba31f5980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f2ba31f5b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2ba31f5ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f2ba31f5e30"/>
        <function-ref name="setData" scoped="" ref="0x7f2ba31f4020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2ba31f41b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f2ba31f4340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2ba31f44d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f2ba31f4660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f2ba31f47f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f2ba31f4980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f2ba31f3020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2ba31f31b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f2ba31f3340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2ba31f34d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f2ba31f3660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f2ba31f37f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f2ba31f3980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f2ba31f3b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2ba31f3ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f2ba31f3e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7f2ba31fdd60" loc="50:../../../../tos/platforms/shimmer2/chips/hmc5843/Hmc5843P.nc">
      <component-ref qname="Hmc5843P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CPacket" scoped="" ref="0x7f2ba31fdd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f2ba320a690"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f2ba320a950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2ba320c9c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2ba31fb020"/>
        <function-ref name="write" scoped="" ref="0x7f2ba320b620"/>
        <function-ref name="readDone" scoped="" ref="0x7f2ba31fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CInterrupts" ref="0x7f2ba31ed710" loc="55:../../../../tos/platforms/shimmer2/chips/hmc5843/Hmc5843P.nc">
      <component-ref qname="Hmc5843P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2ba31ed710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba31eda90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2ba3196cd0" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="MagnetometerC.testTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba3196cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba3191220"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba31947c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2ba3193590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2ba3193110"/>
        <function-ref name="getdt" scoped="" ref="0x7f2ba3191b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f2ba31916a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba3194c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2ba3195940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2ba3193ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2ba3195e10"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3194340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInit" ref="0x7f2ba3186020" loc="43:../../../../tos/platforms/shimmer/chips/msp430/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInit" scoped="" ref="0x7f2ba3186020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba31863a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeDone" ref="0x7f2ba3174600" loc="88:../../../../tos/platforms/shimmer/chips/msp430/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="writeDone" scoped="" ref="0x7f2ba3174600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3174980"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3174b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CBasicAddr" ref="0x7f2ba318b220" loc="41:../../../../tos/platforms/shimmer/chips/msp430/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CBasicAddr" scoped="" ref="0x7f2ba318b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f2ba320a690"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f2ba320a950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2ba318be50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2ba3187330"/>
        <function-ref name="write" scoped="" ref="0x7f2ba318aa90"/>
        <function-ref name="readDone" scoped="" ref="0x7f2ba31886d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f2ba3186730" loc="45:../../../../tos/platforms/shimmer/chips/msp430/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f2ba3186730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f2ba3186ab0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f2ba3186c40"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f2ba3186dd0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f2ba3185020"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f2ba31851b0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f2ba3185340"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f2ba31854d0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f2ba3185660"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2ba31857f0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f2ba3185980"/>
        <function-ref name="getData" scoped="" ref="0x7f2ba3185b10"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f2ba3185ca0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f2ba3185e30"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f2ba3184120"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f2ba31842b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f2ba3184440"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f2ba31845d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f2ba3184760"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2ba31848f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f2ba3184a80"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2ba3184c10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f2ba3184da0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2ba3183020"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f2ba31831b0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2ba3183340"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2ba31836d0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f2ba3183860"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f2ba31839f0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f2ba3183b80"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f2ba3183d10"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f2ba3182020"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f2ba31821b0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2ba3182340"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2ba31824d0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f2ba3182660"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2ba31827f0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f2ba3182980"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f2ba3182b10"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f2ba3182ca0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f2ba3182e30"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2ba3181020"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f2ba31811b0"/>
        <function-ref name="setData" scoped="" ref="0x7f2ba3181340"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2ba31814d0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f2ba3181660"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2ba31817f0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f2ba3181980"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f2ba3181b10"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f2ba3181ca0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f2ba3180420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2ba31805b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f2ba3180740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2ba31808d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f2ba3180a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f2ba3180bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f2ba3180d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f2ba317f020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2ba317f1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f2ba317f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CInterrupts" ref="0x7f2ba317f780" loc="46:../../../../tos/platforms/shimmer/chips/msp430/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f2ba317f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba317fb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7f2ba3179720" loc="72:../../../../tos/platforms/shimmer/chips/msp430/Msp430I2CP.nc">
      <component-ref qname="Msp430I2CP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7f2ba3179720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba3179aa0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba3179c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba31360c0" loc="38:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGaugeC.nc">
      <component-ref qname="StrainGaugeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba31360c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3136440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StrainGauge" ref="0x7f2ba3136700" loc="39:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGaugeC.nc">
      <component-ref qname="StrainGaugeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StrainGauge" scoped="" ref="0x7f2ba3136700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StrainGauge"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x7f2ba3136a80"/>
        <function-ref name="powerOff" scoped="" ref="0x7f2ba3136c10"/>
        <function-ref name="ledOn" scoped="" ref="0x7f2ba3136da0"/>
        <function-ref name="ledOff" scoped="" ref="0x7f2ba3135020"/>
        <function-ref name="ledToggle" scoped="" ref="0x7f2ba31351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba3135c90" loc="37:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGaugeP.nc">
      <component-ref qname="StrainGaugeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba3135c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba31320a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StrainGauge" ref="0x7f2ba3132360" loc="38:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGaugeP.nc">
      <component-ref qname="StrainGaugeP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StrainGauge" scoped="" ref="0x7f2ba3132360"/></type-interface>
      <instance>
        <interfacedef-ref qname="StrainGauge"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x7f2ba31326e0"/>
        <function-ref name="powerOff" scoped="" ref="0x7f2ba3132870"/>
        <function-ref name="ledOn" scoped="" ref="0x7f2ba3132a00"/>
        <function-ref name="ledOff" scoped="" ref="0x7f2ba3132b90"/>
        <function-ref name="ledToggle" scoped="" ref="0x7f2ba3132d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DigitalHeartRate" ref="0x7f2ba3137ae0" loc="46:../../../../tos/platforms/shimmer/chips/rmcm01/DigitalHeartRateC.nc">
      <component-ref qname="DigitalHeartRateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DigitalHeartRate" scoped="" ref="0x7f2ba3137ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DigitalHeartRate"/>
      </instance>
      <interface-functions>
        <function-ref name="beat" scoped="" ref="0x7f2ba3137e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba3137460" loc="45:../../../../tos/platforms/shimmer/chips/rmcm01/DigitalHeartRateC.nc">
      <component-ref qname="DigitalHeartRateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba3137460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba31377e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DigitalHeartRate" ref="0x7f2ba311e020" loc="51:../../../../tos/platforms/shimmer/chips/rmcm01/Rmcm01P.nc">
      <component-ref qname="Rmcm01P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DigitalHeartRate" scoped="" ref="0x7f2ba311e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DigitalHeartRate"/>
      </instance>
      <interface-functions>
        <function-ref name="beat" scoped="" ref="0x7f2ba311e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430GeneralIO" ref="0x7f2ba311d8c0" loc="55:../../../../tos/platforms/shimmer/chips/rmcm01/Rmcm01P.nc">
      <component-ref qname="Rmcm01P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430GeneralIO" scoped="" ref="0x7f2ba311d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba311dc40"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba311ddd0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba311c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba311c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba311c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba311c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba311c660"/>
        <function-ref name="get" scoped="" ref="0x7f2ba311c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba311c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba311cb10"/>
        <function-ref name="set" scoped="" ref="0x7f2ba311cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba311ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba311b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba311b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba311b440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f2ba311b850" loc="56:../../../../tos/platforms/shimmer/chips/rmcm01/Rmcm01P.nc">
      <component-ref qname="Rmcm01P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f2ba311b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba311a4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba3121900" loc="50:../../../../tos/platforms/shimmer/chips/rmcm01/Rmcm01P.nc">
      <component-ref qname="Rmcm01P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba3121900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3121c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeatInterrupt" ref="0x7f2ba311e800" loc="54:../../../../tos/platforms/shimmer/chips/rmcm01/Rmcm01P.nc">
      <component-ref qname="Rmcm01P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BeatInterrupt" scoped="" ref="0x7f2ba311e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba311eb80"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba311ed10"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba311d020"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba311d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba311d340"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba311d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2ba3110b70" loc="48:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="DigitalHeartRateC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f2ba3110b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba310f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2ba310fe40" loc="49:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="DigitalHeartRateC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2ba310fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a950"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2ba421acc0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2ba310eca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2ba310d670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2ba310d1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2ba310db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba3109df0" loc="37:../../../../tos/platforms/shimmer/chips/gsr/GsrC.nc">
      <component-ref qname="GsrC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba3109df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba31061c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gsr" ref="0x7f2ba3106430" loc="38:../../../../tos/platforms/shimmer/chips/gsr/GsrC.nc">
      <component-ref qname="GsrC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gsr" scoped="" ref="0x7f2ba3106430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Gsr"/>
      </instance>
      <interface-functions>
        <function-ref name="controlRange" scoped="" ref="0x7f2ba31067b0"/>
        <function-ref name="smoothSample" scoped="" ref="0x7f2ba3106940"/>
        <function-ref name="initSmoothing" scoped="" ref="0x7f2ba3106ad0"/>
        <function-ref name="calcResistance" scoped="" ref="0x7f2ba3106c60"/>
        <function-ref name="setRange" scoped="" ref="0x7f2ba3106df0"/>
        <function-ref name="smoothTransition" scoped="" ref="0x7f2ba3105020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba3105a70" loc="42:../../../../tos/platforms/shimmer/chips/gsr/GsrP.nc">
      <component-ref qname="GsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba3105a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba3105df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gsr" ref="0x7f2ba31020e0" loc="43:../../../../tos/platforms/shimmer/chips/gsr/GsrP.nc">
      <component-ref qname="GsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gsr" scoped="" ref="0x7f2ba31020e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Gsr"/>
      </instance>
      <interface-functions>
        <function-ref name="controlRange" scoped="" ref="0x7f2ba3102460"/>
        <function-ref name="smoothSample" scoped="" ref="0x7f2ba31025f0"/>
        <function-ref name="initSmoothing" scoped="" ref="0x7f2ba3102780"/>
        <function-ref name="calcResistance" scoped="" ref="0x7f2ba3102910"/>
        <function-ref name="setRange" scoped="" ref="0x7f2ba3102aa0"/>
        <function-ref name="smoothTransition" scoped="" ref="0x7f2ba3102c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BtCommandParser" ref="0x7f2ba30d2160" loc="37:BtCommandParserC.nc">
      <component-ref qname="BtCommandParserC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BtCommandParser" scoped="" ref="0x7f2ba30d2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="BtCommandParser"/>
      </instance>
      <interface-functions>
        <function-ref name="handleByte" scoped="" ref="0x7f2ba30d24e0"/>
        <function-ref name="activate" scoped="" ref="0x7f2ba30d2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BtCommandParser" ref="0x7f2ba30cf270" loc="38:BtCommandParserP.nc">
      <component-ref qname="BtCommandParserP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BtCommandParser" scoped="" ref="0x7f2ba30cf270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BtCommandParser"/>
      </instance>
      <interface-functions>
        <function-ref name="handleByte" scoped="" ref="0x7f2ba30cf5f0"/>
        <function-ref name="activate" scoped="" ref="0x7f2ba30cf780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InternalFlash" ref="0x7f2ba30be0c0" loc="44:../../../../tos/platforms/shimmer/chips/msp430/InternalFlashC.nc">
      <component-ref qname="InternalFlashC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InternalFlash" scoped="" ref="0x7f2ba30be0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2ba30be440"/>
        <function-ref name="write" scoped="" ref="0x7f2ba30be5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f2ba30a6020" loc="51:../../../../tos/platforms/shimmer/UserButtonC.nc">
      <component-ref qname="UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f2ba30a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3be2e30"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f2ba3be1770"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f2ba30a50d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba30a6c10"/>
        <function-ref name="notify" scoped="" ref="0x7f2ba30a5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7f2ba30a0660" loc="44:../../../../tos/platforms/shimmer2r/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f2ba30a0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba30a09e0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba30a0b70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2ba30a0d00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2ba309f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2ba30a1380" loc="43:../../../../tos/platforms/shimmer2r/HplUserButtonC.nc">
      <component-ref qname="HplUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba30a1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba30a1700"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba30a1890"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba30a1a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba30a1bb0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba30a1d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba30a0020"/>
        <function-ref name="set" scoped="" ref="0x7f2ba30a01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba30a0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2ba309dac0" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2ba309dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba309de40"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba309c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2ba309c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba309c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba309c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2ba309c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba309c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba309c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2ba309cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2ba309cca0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba309ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2ba309b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2ba309b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2ba309b440"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba309b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2ba309e850" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplUserButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba309e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba309ebd0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba309ed60"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba309d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba309d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba309d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba309d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba309d660"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba309d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f2ba30987a0" loc="46:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f2ba30987a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2ba3098b20"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3098cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3098e40"/>
        <function-ref name="edge" scoped="" ref="0x7f2ba3097020"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba30971b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2ba3097340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f2ba3099b40" loc="45:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplUserButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f2ba3099b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba3098020"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba30981b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2ba3098340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2ba30984d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7f2ba308f020" loc="51:../../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7f2ba308f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba308f3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba308f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f2ba3090440" loc="48:../../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f2ba3090440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2ba30907c0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba3090950"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2ba3090ae0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2ba3090c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f2ba3094880" loc="45:../../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f2ba3094880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f2ba3093940"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba30934c0"/>
        <function-ref name="notify" scoped="" ref="0x7f2ba3093dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f2ba3091290" loc="47:../../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="UserButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2ba3091290"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2ba3091610"/>
        <function-ref name="isInput" scoped="" ref="0x7f2ba30917a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2ba3091930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2ba3091ac0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba3091c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2ba3091de0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba3090020"/>
        <function-ref name="clr" scoped="" ref="0x7f2ba30901b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="debounce" ref="0x7f2ba307cbb0" loc="64:../../../../tos/platforms/shimmer/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="debounce" scoped="" ref="0x7f2ba307cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2ba307b020"/>
        <function-ref name="runTask" scoped="" ref="0x7f2ba307b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f2ba308d840" loc="45:../../../../tos/platforms/shimmer/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f2ba308d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3be2e30"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f2ba3be1770"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f2ba308a900"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba308a480"/>
        <function-ref name="notify" scoped="" ref="0x7f2ba308ad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7f2ba3089490" loc="47:../../../../tos/platforms/shimmer/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7f2ba3089490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f2ba3087550"/>
        <function-ref name="enable" scoped="" ref="0x7f2ba30870d0"/>
        <function-ref name="notify" scoped="" ref="0x7f2ba30879d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="debounceTimer" ref="0x7f2ba30860f0" loc="48:../../../../tos/platforms/shimmer/UserButtonP.nc">
      <component-ref qname="UserButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="debounceTimer" scoped="" ref="0x7f2ba30860f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba3082630"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba3085b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2ba3084920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2ba30844a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2ba3081020"/>
        <function-ref name="gett0" scoped="" ref="0x7f2ba3082ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba3084020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2ba3086ce0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2ba3082020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2ba3085220"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba30856f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2ba3076c30" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="UserButtonC.debounceTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2ba3076c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba421a1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2ba421a510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2ba3071110"/>
        <function-ref name="fired" scoped="" ref="0x7f2ba30736a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2ba30724a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2ba3072020"/>
        <function-ref name="getdt" scoped="" ref="0x7f2ba3071a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f2ba3071590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2ba3073b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2ba3074860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2ba3072ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2ba3074d30"/>
        <function-ref name="stop" scoped="" ref="0x7f2ba3073220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CRYPTO" ref="0x7f2ba306daa0" loc="2:../../../../tos/platforms/shimmer2r/CRYPTOC.nc">
      <component-ref qname="CRYPTOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CRYPTO" scoped="" ref="0x7f2ba306daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CRYPTO"/>
      </instance>
      <interface-functions>
        <function-ref name="xtea_decrypt" scoped="" ref="0x7f2ba306de20"/>
        <function-ref name="kasumi_decrypt" scoped="" ref="0x7f2ba306a020"/>
        <function-ref name="blowfish_encrypt" scoped="" ref="0x7f2ba306a1b0"/>
        <function-ref name="skipjack_encrypt" scoped="" ref="0x7f2ba306a340"/>
        <function-ref name="safer_decrypt" scoped="" ref="0x7f2ba306a4d0"/>
        <function-ref name="blowfish_setup" scoped="" ref="0x7f2ba306a660"/>
        <function-ref name="blowfish_done" scoped="" ref="0x7f2ba306a7f0"/>
        <function-ref name="rc5_encrypt" scoped="" ref="0x7f2ba306a980"/>
        <function-ref name="lsb" scoped="" ref="0x7f2ba306ab10"/>
        <function-ref name="kasumi_setup" scoped="" ref="0x7f2ba306aca0"/>
        <function-ref name="rc4_encrypt" scoped="" ref="0x7f2ba306ae30"/>
        <function-ref name="rc5_decrypt" scoped="" ref="0x7f2ba3069020"/>
        <function-ref name="rc2_decrypt" scoped="" ref="0x7f2ba30691b0"/>
        <function-ref name="rc5_setup" scoped="" ref="0x7f2ba3069440"/>
        <function-ref name="kasumi_done" scoped="" ref="0x7f2ba30695d0"/>
        <function-ref name="xxtea_encrypt" scoped="" ref="0x7f2ba3069760"/>
        <function-ref name="rc2_setup" scoped="" ref="0x7f2ba30698f0"/>
        <function-ref name="tea_decrypt" scoped="" ref="0x7f2ba3069a80"/>
        <function-ref name="tea_encrypt" scoped="" ref="0x7f2ba3069c10"/>
        <function-ref name="skipjack_done" scoped="" ref="0x7f2ba3069da0"/>
        <function-ref name="msb" scoped="" ref="0x7f2ba3068020"/>
        <function-ref name="skipjack_decrypt" scoped="" ref="0x7f2ba30681b0"/>
        <function-ref name="xxtea_decrypt" scoped="" ref="0x7f2ba3068340"/>
        <function-ref name="safer_encrypt" scoped="" ref="0x7f2ba30684d0"/>
        <function-ref name="skipjack_setup" scoped="" ref="0x7f2ba3068660"/>
        <function-ref name="blowfish_decrypt" scoped="" ref="0x7f2ba30689f0"/>
        <function-ref name="safer_done" scoped="" ref="0x7f2ba3068b80"/>
        <function-ref name="xtea_encrypt" scoped="" ref="0x7f2ba3068d10"/>
        <function-ref name="rc2_encrypt" scoped="" ref="0x7f2ba3067020"/>
        <function-ref name="rc2_done" scoped="" ref="0x7f2ba30671b0"/>
        <function-ref name="rc5_done" scoped="" ref="0x7f2ba3067340"/>
        <function-ref name="rc4_decrypt" scoped="" ref="0x7f2ba30674d0"/>
        <function-ref name="kasumi_encrypt" scoped="" ref="0x7f2ba3067660"/>
        <function-ref name="safer_setup" scoped="" ref="0x7f2ba30677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CRYPTO" ref="0x7f2ba3066680" loc="4:../../../../tos/platforms/shimmer2r/CRYPTOP.nc">
      <component-ref qname="CRYPTOP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CRYPTO" scoped="" ref="0x7f2ba3066680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CRYPTO"/>
      </instance>
      <interface-functions>
        <function-ref name="xtea_decrypt" scoped="" ref="0x7f2ba3066a00"/>
        <function-ref name="kasumi_decrypt" scoped="" ref="0x7f2ba3066b90"/>
        <function-ref name="blowfish_encrypt" scoped="" ref="0x7f2ba3066d20"/>
        <function-ref name="skipjack_encrypt" scoped="" ref="0x7f2ba3063020"/>
        <function-ref name="safer_decrypt" scoped="" ref="0x7f2ba30631b0"/>
        <function-ref name="blowfish_setup" scoped="" ref="0x7f2ba3063340"/>
        <function-ref name="blowfish_done" scoped="" ref="0x7f2ba30634d0"/>
        <function-ref name="rc5_encrypt" scoped="" ref="0x7f2ba3063660"/>
        <function-ref name="lsb" scoped="" ref="0x7f2ba30637f0"/>
        <function-ref name="kasumi_setup" scoped="" ref="0x7f2ba3063980"/>
        <function-ref name="rc4_encrypt" scoped="" ref="0x7f2ba3063b10"/>
        <function-ref name="rc5_decrypt" scoped="" ref="0x7f2ba3063ca0"/>
        <function-ref name="rc2_decrypt" scoped="" ref="0x7f2ba3063e30"/>
        <function-ref name="rc5_setup" scoped="" ref="0x7f2ba3062120"/>
        <function-ref name="kasumi_done" scoped="" ref="0x7f2ba30622b0"/>
        <function-ref name="xxtea_encrypt" scoped="" ref="0x7f2ba3062440"/>
        <function-ref name="rc2_setup" scoped="" ref="0x7f2ba30625d0"/>
        <function-ref name="tea_decrypt" scoped="" ref="0x7f2ba3062760"/>
        <function-ref name="tea_encrypt" scoped="" ref="0x7f2ba30628f0"/>
        <function-ref name="skipjack_done" scoped="" ref="0x7f2ba3062a80"/>
        <function-ref name="msb" scoped="" ref="0x7f2ba3062c10"/>
        <function-ref name="skipjack_decrypt" scoped="" ref="0x7f2ba3062da0"/>
        <function-ref name="xxtea_decrypt" scoped="" ref="0x7f2ba3061020"/>
        <function-ref name="safer_encrypt" scoped="" ref="0x7f2ba30611b0"/>
        <function-ref name="skipjack_setup" scoped="" ref="0x7f2ba3061340"/>
        <function-ref name="blowfish_decrypt" scoped="" ref="0x7f2ba30616d0"/>
        <function-ref name="safer_done" scoped="" ref="0x7f2ba3061860"/>
        <function-ref name="xtea_encrypt" scoped="" ref="0x7f2ba30619f0"/>
        <function-ref name="rc2_encrypt" scoped="" ref="0x7f2ba3061b80"/>
        <function-ref name="rc2_done" scoped="" ref="0x7f2ba3061d10"/>
        <function-ref name="rc5_done" scoped="" ref="0x7f2ba3060020"/>
        <function-ref name="rc4_decrypt" scoped="" ref="0x7f2ba30601b0"/>
        <function-ref name="kasumi_encrypt" scoped="" ref="0x7f2ba3060340"/>
        <function-ref name="safer_setup" scoped="" ref="0x7f2ba30604d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba2d098e0" loc="38:../../../../tos/platforms/shimmer/chips/msp430/FastClockC.nc">
      <component-ref qname="FastClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba2d098e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba2d09c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastClock" ref="0x7f2ba2d06020" loc="39:../../../../tos/platforms/shimmer/chips/msp430/FastClockC.nc">
      <component-ref qname="FastClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastClock" scoped="" ref="0x7f2ba2d06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastClock"/>
      </instance>
      <interface-functions>
        <function-ref name="setSMCLK" scoped="" ref="0x7f2ba2d063a0"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba2d06530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2ba2d030c0" loc="52:../../../../tos/platforms/shimmer/chips/msp430/FastClockP.nc">
      <component-ref qname="FastClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2ba2d030c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2ba2d03440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastClock" ref="0x7f2ba2d036f0" loc="53:../../../../tos/platforms/shimmer/chips/msp430/FastClockP.nc">
      <component-ref qname="FastClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastClock" scoped="" ref="0x7f2ba2d036f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastClock"/>
      </instance>
      <interface-functions>
        <function-ref name="setSMCLK" scoped="" ref="0x7f2ba2d03a70"/>
        <function-ref name="disable" scoped="" ref="0x7f2ba2d03c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2ba2d02020" loc="55:../../../../tos/platforms/shimmer/chips/msp430/FastClockP.nc">
      <component-ref qname="FastClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2ba2d02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2ba2d023a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2ba2d02530"/>
        <function-ref name="led1On" scoped="" ref="0x7f2ba2d026c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2ba2d02850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2ba2d029e0"/>
        <function-ref name="get" scoped="" ref="0x7f2ba2d02b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2ba2d02d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2ba2d014d0"/>
        <function-ref name="set" scoped="" ref="0x7f2ba2d01020"/>
        <function-ref name="led0On" scoped="" ref="0x7f2ba2d011b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f2ba2d01340"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2ba46f7860" loc="62:../../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f2ba46f52b0" loc="60:../../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f2ba46b8b40" loc="48:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f2ba46bbde0" loc="43:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f2ba46b8420" loc="47:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f2ba46bb700" loc="42:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f2ba46ba5a0" loc="45:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f2ba46be900" loc="40:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f2ba46bb020" loc="41:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f2ba46bacc0" loc="46:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f2ba4a40020" loc="62:../../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f2ba4d013a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f2ba4667500" loc="55:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f2ba4667280" loc="55:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f2ba466c9c0" loc="42:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2ba46b05a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f2ba46af020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f2ba4667d70" loc="57:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f2ba4665c80" loc="59:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f2ba4668b00" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f2ba46654f0" loc="58:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f2ba4669190" loc="43:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f2ba4669920" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f2ba4668390" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2ba46b05a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f2ba46af020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2ba4668110" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2ba46b05a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f2ba46af020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f2ba4659740" loc="44:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f2ba4657d80" loc="84:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f2ba4657b00" loc="84:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f2ba46559d0" loc="91:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f2ba4655750" loc="91:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f2ba4657350" loc="73:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f2ba4658a40" loc="68:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f2ba4658120" loc="56:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f2ba4659e70" loc="56:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f2ba4662890" loc="40:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f2ba465f2a0" loc="41:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f2ba465f020" loc="41:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f2ba465fc80" loc="42:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f2ba465fa00" loc="42:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f2ba465e6a0" loc="43:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f2ba465e420" loc="43:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2ba465ed90" loc="45:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f2ba466f120" loc="52:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f2ba466ea10" loc="55:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f2ba466e790" loc="55:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f2ba466f850" loc="53:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2ba4673350" loc="45:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f2ba466e020" loc="54:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f2ba4672270" loc="47:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f2ba46719e0" loc="51:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f2ba4673ae0" loc="46:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f2ba4672980" loc="48:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f2ba46712e0" loc="50:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2ba4671060" loc="50:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f2ba466d450" loc="56:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f2ba466d1d0" loc="56:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f2ba46301f0" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f2ba47927f0" loc="85:../../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f2ba4791020" loc="86:../../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f2ba4792020" loc="79:../../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f2ba4c1a810" loc="52:../../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2ba4dc0020" loc="57:../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f2ba4dbf020" loc="72:../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f2ba4dc0790" loc="65:../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f2ba4db4270" loc="67:../../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f2ba4db4ac0" loc="75:../../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2ba451a020" loc="80:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2ba471ad10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f2ba451c690" loc="80:../../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2ba471ad10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f2ba451ca10" loc="80:../../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2ba451cd40" loc="80:../../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2ba4515660" loc="135:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba4515060" loc="135:../../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2ba4515390" loc="135:../../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2ba4514790" loc="123:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2ba4519390" loc="96:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba4519110" loc="96:../../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2ba45178b0" loc="110:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba45172d0" loc="110:../../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f2ba4517620" loc="110:../../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f2ba4510020" loc="65:../../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba451ec60" loc="65:../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f2ba450f110" loc="78:../../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba4510e10" loc="78:../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2ba450b490" loc="126:../../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba450ce50" loc="126:../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2ba450b1c0" loc="126:../../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2ba450c560" loc="106:../../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f2ba450e5e0" loc="94:../../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba450e020" loc="94:../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2ba450e350" loc="94:../../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f2ba44fcd30" loc="177:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2ba471a930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2ba44fcab0" loc="177:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f2ba4505a10" loc="88:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2ba471ad10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2ba4505790" loc="88:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f2ba451de50" loc="68:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2ba471ad10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f2ba4507950" loc="78:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2ba471ad10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2ba45076d0" loc="78:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f2ba45023a0" loc="121:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2ba471ad10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2ba4506d70" loc="121:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2ba4502110" loc="121:../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2ba471ad10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f2ba4504e50" loc="103:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2ba471ad10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2ba4504870" loc="103:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2ba4504bc0" loc="103:../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2ba471ad10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f2ba44ff810" loc="147:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2ba471a550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2ba44ff590" loc="147:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f2ba44fdb90" loc="162:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2ba471a550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2ba44fd5e0" loc="162:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f2ba44fd900" loc="162:../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2ba471a550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f2ba4501600" loc="136:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2ba4501380" loc="136:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f2ba44fa2f0" loc="187:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2ba471a930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2ba44fecf0" loc="187:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f2ba44fa060" loc="187:../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2ba471a930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f2ba44f9190" loc="195:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2ba471a930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f2ba44f6ad0" loc="59:../../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba44f6850" loc="59:../../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f2ba44f4cd0" loc="71:../../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba44f4a50" loc="71:../../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f2ba44f2020" loc="85:../../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba44f5ce0" loc="85:../../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2ba44ec5e0" loc="75:../../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba44ec020" loc="75:../../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2ba44ec350" loc="75:../../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2ba44e7bb0" loc="125:../../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba44e75b0" loc="125:../../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2ba44e78e0" loc="125:../../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2ba44e9d20" loc="112:../../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2ba44ea900" loc="89:../../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba44ea680" loc="89:../../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2ba44e8e00" loc="100:../../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba44e8820" loc="100:../../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f2ba44e8b70" loc="100:../../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f2ba447bab0" loc="113:../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2ba447b830" loc="113:../../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f2ba4479020" loc="138:../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2ba447ad30" loc="138:../../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2ba447ed60" loc="104:../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2ba447a350" loc="130:../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f2ba4475410" loc="78:../../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
              <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba4478a80" loc="78:../../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f2ba4478dd0" loc="78:../../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2ba4475130" loc="78:../../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="52:../../../../tos/platforms/shimmer2r/Leds.nc">
      <documentation loc="33:../../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f2ba446b270" loc="62:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="59:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f2ba446ba20" loc="68:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="64:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f2ba446a270" loc="73:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="70:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f2ba44691f0" loc="84:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="80:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f2ba4467940" loc="101:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="97:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2ba4466190" loc="117:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="103:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f2ba446aa00" loc="78:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="75:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2ba4466d00" loc="134:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="120:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f2ba4466a80" loc="134:../../../../tos/platforms/shimmer2r/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f2ba446ca60" loc="57:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="54:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f2ba44699d0" loc="90:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="87:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f2ba4467190" loc="95:../../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="92:../../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f2ba43fd020" loc="31:../../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba43fe960" loc="31:../../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f2ba43fece0" loc="31:../../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f2ba4400020" loc="15:../../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f2ba43fe020" loc="23:../../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2ba44008b0" loc="23:../../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2ba470a720"/>
                <typename><typedef-ref name="message_t" ref="0x7f2ba4709d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f2ba4400c20" loc="23:../../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f2ba43e2a40" loc="95:../../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2ba43df270" loc="105:../../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f2ba43dd070" loc="54:../../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f2ba43e18e0" loc="49:../../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f2ba43f3b20" loc="56:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f2ba43e6020" loc="72:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f2ba43e5c20" loc="94:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba43e59a0" loc="94:../../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f2ba43e68a0" loc="79:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f2ba43e76d0" loc="65:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba43e7450" loc="65:../../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f2ba43e44b0" loc="100:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f2ba43e5190" loc="85:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f2ba43f00e0" loc="71:../../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f2ba43f0a10" loc="81:../../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f2ba43f2720" loc="62:../../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f2ba43f24a0" loc="62:../../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f2ba43ef5c0" loc="91:../../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2ba43ef340" loc="91:../../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f2ba43ed7a0" loc="62:../../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f2ba43ec400" loc="69:../../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba43ec180" loc="69:../../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f2ba43ea020" loc="80:../../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f2ba43ecc50" loc="80:../../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2ba42b7dd0" loc="48:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2ba42b7800" loc="48:../../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2ba42b7b40" loc="48:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f2ba42b0ac0" loc="79:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f2ba42b0840" loc="79:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f2ba42af930" loc="90:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2ba42af360" loc="90:../../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2ba42af6a0" loc="90:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f2ba42b1740" loc="65:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f2ba42ae2c0" loc="99:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2ba42ad920" loc="99:../../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2ba42adc60" loc="99:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f2ba42ae020" loc="99:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f2ba42b0070" loc="72:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2ba42b3720" loc="57:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2ba42b4db0" loc="57:../../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2ba42b3130" loc="57:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f2ba42b3480" loc="57:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2ba428d5b0" loc="50:../../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f2ba428d330" loc="50:../../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f2ba428ddf0" loc="59:../../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f2ba428ccf0" loc="69:../../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f2ba428c700" loc="69:../../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f2ba428ca60" loc="69:../../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f2ba428ab50" loc="79:../../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f2ba4237ae0" loc="53:../../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f2ba42304e0" loc="61:../../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f2ba422d890" loc="39:../../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2ba4256e70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f2ba42552b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f2ba4234350" loc="120:../../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f2ba4235350" loc="97:../../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f2ba4238980" loc="88:../../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f2ba4235b40" loc="102:../../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f2ba4234db0" loc="128:../../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f2ba4225020" loc="65:../../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f2ba4226750" loc="59:../../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f2ba421ed70" loc="54:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba421eaf0" loc="54:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f2ba421e350" loc="49:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f2ba41f5390" loc="213:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f2ba4200020" loc="143:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f2ba4210de0" loc="50:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2ba4285c50"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f2ba42844f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2ba4210b60" loc="50:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2ba4285c50"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f2ba42844f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f2ba42030e0" loc="123:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f2ba420a2a0" loc="70:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2ba4280c30"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f2ba427f4f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2ba420a020" loc="70:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2ba4280c30"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f2ba427f4f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f2ba41fa750" loc="180:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f2ba41f7cf0" loc="197:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f2ba420c830" loc="65:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2ba4283b60"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f2ba4281390"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f2ba420aa90" loc="75:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2ba4280c30"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f2ba427f4f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f2ba4207830" loc="97:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f2ba42075b0" loc="97:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f2ba4208e40" loc="95:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f2ba41fa020" loc="179:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f2ba420c040" loc="60:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2ba4283b60"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f2ba4281390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2ba420dda0" loc="60:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2ba4283b60"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f2ba4281390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f2ba4209c80" loc="85:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f2ba41fae80" loc="181:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f2ba4208690" loc="90:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f2ba4208410" loc="90:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f2ba4204190" loc="113:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f2ba4204910" loc="118:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f2ba41fb070" loc="177:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f2ba41fe020" loc="163:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f2ba4202070" loc="133:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f2ba41fb7b0" loc="178:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f2ba4200800" loc="148:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f2ba41f95c0" loc="182:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f2ba4205070" loc="103:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba428e330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f2ba4286320"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f2ba41f9d60" loc="187:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f2ba41f6bd0" loc="207:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f2ba42094d0" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f2ba4209250" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f2ba41f5d30" loc="224:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba41f5ab0" loc="224:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f2ba420d600" loc="55:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2ba4285c50"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f2ba42844f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f2ba4203850" loc="128:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f2ba41ff020" loc="153:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f2ba41fd800" loc="174:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2ba4256e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f2ba42552b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f2ba41fd580" loc="174:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2ba4256e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f2ba42552b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f2ba41feaf0" loc="168:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f2ba4268020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f2ba4268440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f2ba41fe870" loc="168:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f2ba4268020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f2ba4268440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f2ba41f4730" loc="231:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f2ba41f7570" loc="192:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f2ba4205880" loc="108:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f2ba41f6480" loc="202:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f2ba41ff790" loc="158:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f2ba4202850" loc="138:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2ba41efce0" loc="57:../../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2ba41efce0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2ba41eb020" loc="57:../../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2ba41eb020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f2ba41eb940" loc="64:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2ba41eb020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f2ba41eaa50" loc="76:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f2ba41ea1f0" loc="71:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f2ba41e91f0" loc="82:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f2ba4175930" loc="39:../../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f2ba4138a50" loc="78:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f2ba41371f0" loc="80:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f2ba4133b10" loc="110:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2ba4133890" loc="110:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f2ba41392d0" loc="58:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f2ba41350e0" loc="87:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f2ba4132490" loc="117:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f2ba4137930" loc="85:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2ba41382b0" loc="73:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f2ba41347c0" loc="99:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f2ba4139a70" loc="66:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2ba413b420" loc="48:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f2ba4135860" loc="92:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f2ba4133020" loc="101:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f2ba4134070" loc="94:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f2ba413bb50" loc="53:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../../tos/platforms/shimmer/chips/msp430/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f2ba414c780" loc="80:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f2ba415fc90" loc="31:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f2ba4152020" loc="62:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f2ba4153ca0" loc="62:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f2ba4166390" loc="11:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f2ba414f7a0" loc="71:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f2ba4157020" loc="49:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f2ba4160da0" loc="28:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f2ba415db70" loc="34:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f2ba4161d40" loc="25:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f2ba4161ac0" loc="25:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f2ba4162270" loc="21:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f2ba415b900" loc="41:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f2ba4151020" loc="66:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f2ba414c020" loc="78:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f2ba4153560" loc="61:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f2ba41471f0" loc="91:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f2ba4143880" loc="100:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f2ba4165270" loc="14:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f2ba415b190" loc="38:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f2ba415aa90" loc="45:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f2ba4160650" loc="27:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f2ba4168190" loc="7:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f2ba4154d40" loc="58:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f2ba4154ac0" loc="58:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f2ba416ba00" loc="6:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f2ba414f020" loc="69:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f2ba414a020" loc="81:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f2ba41459a0" loc="94:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f2ba4143120" loc="97:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f2ba414e790" loc="74:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f2ba414a750" loc="83:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f2ba41527b0" loc="65:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f2ba41481f0" loc="87:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f2ba4165990" loc="15:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f2ba41561f0" loc="53:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f2ba4149630" loc="86:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f2ba414d790" loc="77:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f2ba4158760" loc="46:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f2ba41584e0" loc="46:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f2ba4144190" loc="95:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f2ba4154390" loc="57:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f2ba414e020" loc="72:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f2ba4168c10" loc="8:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2ba4242b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f2ba4240020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f2ba4168990" loc="8:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2ba4242b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f2ba4240020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f2ba415ca00" loc="37:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f2ba4164a80" loc="19:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2ba4164800" loc="19:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f2ba415a2a0" loc="42:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba415a020" loc="42:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f2ba41489c0" loc="90:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f2ba41613b0" loc="24:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f2ba4164120" loc="18:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f2ba4156bb0" loc="54:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f2ba4156930" loc="54:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f2ba4166ac0" loc="12:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f2ba414ae70" loc="84:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f2ba414d020" loc="75:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f2ba4151790" loc="68:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f2ba41579f0" loc="50:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f2ba4157770" loc="50:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f2ba415c2b0" loc="35:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f2ba415f530" loc="29:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f2ba4144900" loc="96:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f2ba4162bf0" loc="22:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2ba4162970" loc="22:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f2ba41479b0" loc="92:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f2ba415d420" loc="32:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f2ba41451f0" loc="93:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f2ba3e6f730" loc="44:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f2ba3e6fe60" loc="45:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f2ba3e71880" loc="42:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f2ba3e6ecf0" loc="47:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2ba3e6f020" loc="43:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f2ba3e6e5b0" loc="46:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2ba3e74a90" loc="40:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f2ba3e71190" loc="41:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f2ba3e14020" loc="90:../../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f2ba3e14880" loc="98:../../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f2ba3ddfe00" loc="56:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f2ba3ddd020" loc="73:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f2ba3ddf570" loc="46:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f2ba3dde6d0" loc="65:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f2ba3ddd950" loc="81:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f2ba3dd0020" loc="79:../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2ba3dd8090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f2ba3dd2d20" loc="79:../../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2ba3dd8090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f2ba3dd3020" loc="53:../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f2ba3dd3b20" loc="62:../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2ba3dd8090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f2ba3dd38a0" loc="62:../../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2ba3dd8090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f2ba3dd2470" loc="70:../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f2ba3dd8090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f2ba3c67ad0" loc="43:../../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2ba3c67ad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f2ba3c62270" loc="80:../../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2ba3c67ad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f2ba3c60cb0" loc="97:../../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2ba3c67ad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f2ba3c60a30" loc="97:../../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2ba3c67ad0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f2ba5850c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f2ba5850c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f2ba3c5ec70" loc="108:../../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2ba3c67ad0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f2ba3c5e9f0" loc="108:../../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f2ba3c64b20" loc="57:../../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f2ba3c63ad0" loc="72:../../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f2ba3c62e50" loc="88:../../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f2ba3c67ad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f2ba3c643b0" loc="50:../../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f2ba3c632d0" loc="65:../../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f2ba3c3ddd0" loc="49:../../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f2ba3c3db50" loc="49:../../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="shimmerAnalogSetup" loc="43:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
      <function command="" provided="0" name="addAccelInputs" ref="0x7f2ba3bb22b0" loc="46:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerConversion" ref="0x7f2ba3bac190" loc="79:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNumberOfChannels" ref="0x7f2ba3baa070" loc="83:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addECGInputs" ref="0x7f2ba3bb1120" loc="52:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addAnExInput" ref="0x7f2ba3bae110" loc="64:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f2ba3bb0e30" loc="64:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f2ba3bad020" loc="70:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addEMGInput" ref="0x7f2ba3bb0720" loc="61:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addStrainGaugeInputs" ref="0x7f2ba3bae870" loc="67:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addGSRInput" ref="0x7f2ba3bb0020" loc="58:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="finishADCSetup" ref="0x7f2ba3bada00" loc="77:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f2ba3bad780" loc="77:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addUVInputs" ref="0x7f2ba3bb1820" loc="55:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addGyroInputs" ref="0x7f2ba3bb29d0" loc="49:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7f2ba3bac890" loc="81:../../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2ba3b9a5b0" loc="56:../../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2ba3b9a5b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2ba3b9a7f0" loc="56:../../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2ba3b9a7f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f2ba3b95390" loc="109:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2ba3b9a7f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2ba3b973b0" loc="78:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f2ba3b969d0" loc="103:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2ba3b9a7f0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2ba3b9a7f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2ba3b96400" loc="103:../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2ba3b9a7f0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f2ba3b96740" loc="103:../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2ba3b9a7f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f2ba3b97b90" loc="88:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f2ba3b95b80" loc="116:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2ba3b9a7f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2ba3b98390" loc="66:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2ba3b9a7f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2ba3b98110" loc="66:../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2ba3b9a7f0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2ba3b98bc0" loc="73:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GyroBoard" loc="39:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
      <function command="" provided="0" name="autoZero" ref="0x7f2ba3bd5bd0" loc="47:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="buttonPressed" ref="0x7f2ba3bd3350" loc="50:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledOn" ref="0x7f2ba3bd8730" loc="43:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledOff" ref="0x7f2ba3bd8de0" loc="44:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledToggle" ref="0x7f2ba3bd5500" loc="45:../../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BtCommandParser" loc="35:BtCommandParser.nc">
      <function command="" provided="0" name="handleByte" ref="0x7f2ba3b4e4d0" loc="36:BtCommandParser.nc">
        <interfacedef-ref qname="BtCommandParser"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba3b4e250" loc="36:BtCommandParser.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="activate" ref="0x7f2ba3b4d630" loc="38:BtCommandParser.nc">
        <interfacedef-ref qname="BtCommandParser"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="action" ref="0x7f2ba3b4ec10" loc="38:BtCommandParser.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="arg_size" ref="0x7f2ba3b4d020" loc="38:BtCommandParser.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x7f2ba3b4d390" loc="38:BtCommandParser.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f2ba3b41070" loc="52:../../../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2ba3b41070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7f2ba3b40190" loc="67:../../../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f2ba3b41940" loc="59:../../../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7f2ba3b40ba0" loc="74:../../../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2ba3b41070"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f2ba3b40920" loc="74:../../../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2ba3b41070"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Magnetometer" loc="37:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
      <function event="" provided="0" name="readDone" ref="0x7f2ba3bc98c0" loc="69:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba3bc92d0" loc="69:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="success" ref="0x7f2ba3bc9630" loc="69:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIdle" ref="0x7f2ba3bd0d50" loc="49:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableBus" ref="0x7f2ba3bd7bb0" loc="39:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="convertRegistersToData" ref="0x7f2ba3bcbb50" loc="66:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2">
                <typename><typedef-ref name="int16_t" ref="0x7f2ba584b580"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="readBuf" ref="0x7f2ba3bcb540" loc="66:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f2ba3bcb8c0" loc="66:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2">
                <typename><typedef-ref name="int16_t" ref="0x7f2ba584b580"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readHeading" ref="0x7f2ba3bcc610" loc="60:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="readBuf" ref="0x7f2ba3bcc390" loc="60:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f2ba3bc8390" loc="71:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="success" ref="0x7f2ba3bc8110" loc="71:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="goToSleep" ref="0x7f2ba3bcf4c0" loc="50:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selfTest" ref="0x7f2ba3bccd00" loc="63:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runSingleConversion" ref="0x7f2ba3bcfc40" loc="52:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="readData" ref="0x7f2ba3bcdb60" loc="57:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runContinuousConversion" ref="0x7f2ba3bcd420" loc="54:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOutputRate" ref="0x7f2ba3bd1c80" loc="44:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rate" ref="0x7f2ba3bd1a00" loc="44:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGain" ref="0x7f2ba3bd0640" loc="47:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="gain" ref="0x7f2ba3bd03c0" loc="47:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableBus" ref="0x7f2ba3bd12b0" loc="41:../../../../tos/platforms/shimmer2/chips/hmc5843/Magnetometer.nc">
        <interfacedef-ref qname="Magnetometer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="InternalFlash" loc="43:../../../../tos/interfaces/InternalFlash.nc">
      <documentation loc="36:../../../../tos/interfaces/InternalFlash.nc">
        <short>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.</short>
        <long>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Prabal Dutta &#60;prabal@cs.berkeley.edu> (Port to T2)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f2ba3b4b480" loc="56:../../../../tos/interfaces/InternalFlash.nc">
        <documentation loc="45:../../../../tos/interfaces/InternalFlash.nc">
          <short>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.</short>
          <long>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address from which to read.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer into which read bytes are&#10;               placed.&#10; @param   size The number of bytes to read.&#10; @return  SUCCESS if the bytes were successfully read.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f2ba3b71b40" loc="56:../../../../tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x7f2ba3b71e60" loc="56:../../../../tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f2ba3b4b1e0" loc="56:../../../../tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f2ba3b4ad40" loc="68:../../../../tos/interfaces/InternalFlash.nc">
        <documentation loc="58:../../../../tos/interfaces/InternalFlash.nc">
          <short>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.</short>
          <long>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address to which to write.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer from which bytes are read.&#10; @param   size The number of bytes to write.&#10; @return  SUCCESS if the bytes were successfully written.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f2ba3b4a430" loc="68:../../../../tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x7f2ba3b4a750" loc="68:../../../../tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f2ba3b4aaa0" loc="68:../../../../tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DigitalHeartRate" loc="39:../../../../tos/platforms/shimmer/chips/rmcm01/DigitalHeartRate.nc">
      <function event="" provided="0" name="beat" ref="0x7f2ba3bc13f0" loc="43:../../../../tos/platforms/shimmer/chips/rmcm01/DigitalHeartRate.nc">
        <interfacedef-ref qname="DigitalHeartRate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time_32k" ref="0x7f2ba3bc1170" loc="43:../../../../tos/platforms/shimmer/chips/rmcm01/DigitalHeartRate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2ba3b8a350" loc="53:../../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2ba3b8a350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f2ba3b8ac70" loc="61:../../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f2ba3b46ae0" loc="52:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2ba3b43670" loc="72:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f2ba3b46350" loc="47:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f2ba3b44d90" loc="67:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f2ba3b44b10" loc="67:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f2ba3b4fb20" loc="42:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f2ba3b44350" loc="59:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430DmaChannel" loc="41:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
      <function command="" provided="0" name="stopTransfer" ref="0x7f2ba3b52bf0" loc="102:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="99:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Stop a DMA transfer in progress&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="repeatTransfer" ref="0x7f2ba3b53b20" loc="91:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="86:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Repeat a DMA transfer using previous settings but new pointers&#10; and transfer size.</short>
          <long>&#10; Repeat a DMA transfer using previous settings but new pointers&#10; and transfer size.  Automatically starts the transfer (sets the&#10; enable bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src_addr" ref="0x7f2ba3b531b0" loc="91:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dst_addr" ref="0x7f2ba3b53510" loc="91:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f2ba3b53880" loc="92:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setupTransfer" ref="0x7f2ba3b57420" loc="49:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="43:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Setup a transfer using explicit argument (most robust and simple&#10; mechanism and recommended for novice users)&#10;&#10; See MSP430DMA.h for parameter options&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b65e20"/>
              <typename><typedef-ref name="dma_transfer_mode_t" ref="0x7f2ba3b63b30"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b6d480"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7f2ba3b691d0"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b5f960"/>
              <typename><typedef-ref name="dma_level_t" ref="0x7f2ba3b5e3c0"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b61c60"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7f2ba3b5f6b0"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b61c60"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7f2ba3b5f6b0"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b62b20"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7f2ba3b619d0"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b62b20"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7f2ba3b619d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="transfer_mode" ref="0x7f2ba3b59020" loc="49:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b65e20"/>
              <typename><typedef-ref name="dma_transfer_mode_t" ref="0x7f2ba3b63b30"/></typename>
            </type-tag>
          </variable>
          <variable name="trigger" ref="0x7f2ba3b593e0" loc="50:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b6d480"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7f2ba3b691d0"/></typename>
            </type-tag>
          </variable>
          <variable name="level" ref="0x7f2ba3b59770" loc="51:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b5f960"/>
              <typename><typedef-ref name="dma_level_t" ref="0x7f2ba3b5e3c0"/></typename>
            </type-tag>
          </variable>
          <variable name="src_addr" ref="0x7f2ba3b59af0" loc="52:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dst_addr" ref="0x7f2ba3b59e70" loc="53:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f2ba3b58210" loc="54:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="src_byte" ref="0x7f2ba3b585c0" loc="55:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b61c60"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7f2ba3b5f6b0"/></typename>
            </type-tag>
          </variable>
          <variable name="dst_byte" ref="0x7f2ba3b58970" loc="56:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b61c60"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7f2ba3b5f6b0"/></typename>
            </type-tag>
          </variable>
          <variable name="src_incr" ref="0x7f2ba3b58d20" loc="57:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b62b20"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7f2ba3b619d0"/></typename>
            </type-tag>
          </variable>
          <variable name="dst_incr" ref="0x7f2ba3b57110" loc="58:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b62b20"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7f2ba3b619d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startTransfer" ref="0x7f2ba3b54910" loc="84:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="80:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Enable the DMA module.</short>
          <long>&#10; Enable the DMA module.  Equivalent to setting the DMA enable bit.&#10; This function does not force a transfer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setupTransferRaw" ref="0x7f2ba3b56c40" loc="77:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="60:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Raw interface for setting up a DMA transfer.</short>
          <long>&#10; Raw interface for setting up a DMA transfer.  This function is&#10; intended to provide as much raw performance as possible but&#10; sacrifices type checking in the process.  Recommended ONLY for&#10; advanced users that have very intricate knowledge of the MSP430&#10; DMA module described in the user's guide.&#10;&#10; @param state The control register value, as specified by &#10;              dma_control_state_t in MSP430DMA.h&#10; @param trigger The trigger for the DMA transfer.  Should be one&#10;                of the options from dma_trigger_t in MSP430DMA.h&#10; @param src Pointer to the source address&#10; @param dest Pointer to the destination address&#10; @param size Size of the DMA transfer&#10;&#10; See MSP430DMA.h for parameter options&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="state" ref="0x7f2ba3b57c40" loc="77:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="trigger" ref="0x7f2ba3b56020" loc="77:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="src" ref="0x7f2ba3b56360" loc="78:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7f2ba3b56690" loc="78:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f2ba3b56980" loc="78:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="transferDone" ref="0x7f2ba3b51610" loc="107:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="104:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Notification that the transfer has completed&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="success" ref="0x7f2ba3b51390" loc="107:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="softwareTrigger" ref="0x7f2ba3b52420" loc="97:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="94:../../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Trigger a DMA transfer using software&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastClock" loc="37:../../../../tos/platforms/shimmer/chips/msp430/FastClock.nc">
      <function command="" provided="0" name="setSMCLK" ref="0x7f2ba3afbb90" loc="41:../../../../tos/platforms/shimmer/chips/msp430/FastClock.nc">
        <interfacedef-ref qname="FastClock"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mhz" ref="0x7f2ba3afb910" loc="41:../../../../tos/platforms/shimmer/chips/msp430/FastClock.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f2ba3afb270" loc="39:../../../../tos/platforms/shimmer/chips/msp430/FastClock.nc">
        <interfacedef-ref qname="FastClock"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Gsr" loc="35:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
      <function command="" provided="0" name="controlRange" ref="0x7f2ba3bb92b0" loc="66:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
        <documentation loc="57:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
          <short>&#10; Determines whether to change the currently active internal resistor based &#10; on the ADC value, and if necessary change the internal resistor to a new&#10; value&#10;&#10; </short>
          <long>&#10; Determines whether to change the currently active internal resistor based &#10; on the ADC value, and if necessary change the internal resistor to a new&#10; value&#10;&#10; @param ADC_val: the ADC value to be used in the calculation&#10; @param active_resistor: the currently active resistor on the GSR board &#10; @return the active internal resistor &#10;</long>
        </documentation>
        <interfacedef-ref qname="Gsr"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ADC_val" ref="0x7f2ba3bbab70" loc="66:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="active_resistor" ref="0x7f2ba3bb9020" loc="66:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="smoothSample" ref="0x7f2ba3bb5020" loc="90:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
        <documentation loc="83:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
          <short>&#10; Smooths the GSR values&#10;&#10; </short>
          <long>&#10; Smooths the GSR values&#10;&#10; @param resistance: the current resistance value to smoothed &#10; @param active_resistor: the currently active resistor on the GSR board &#10; @return the smoothed resistance. Returns 0xFFFFFFFF if transient sample&#10;</long>
        </documentation>
        <interfacedef-ref qname="Gsr"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="resistance" ref="0x7f2ba3bb7920" loc="90:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </variable>
          <variable name="active_resistor" ref="0x7f2ba3bb7cd0" loc="90:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initSmoothing" ref="0x7f2ba3bb8020" loc="73:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
        <documentation loc="68:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
          <short>&#10; Initializes the smoothing state &#10;&#10; </short>
          <long>&#10; Initializes the smoothing state &#10;&#10; @param active_resistor: the currently active resistor on the GSR board &#10;</long>
        </documentation>
        <interfacedef-ref qname="Gsr"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="active_resistor" ref="0x7f2ba3bb9c20" loc="73:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="calcResistance" ref="0x7f2ba3bba2b0" loc="55:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
        <documentation loc="48:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
          <short>&#10; Calculates resistance from a raw ADC value using linear fit to conductance&#10;&#10; </short>
          <long>&#10; Calculates resistance from a raw ADC value using linear fit to conductance&#10;&#10; @param ADC_val: the ADC value to be used in the calculation&#10; @param active_resistor: the currently active resistor on the GSR board &#10; @return the calculated resistance&#10;</long>
        </documentation>
        <interfacedef-ref qname="Gsr"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ADC_val" ref="0x7f2ba3bbcbb0" loc="55:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="active_resistor" ref="0x7f2ba3bba020" loc="55:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRange" ref="0x7f2ba3bbc2e0" loc="46:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
        <documentation loc="37:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
          <short>&#10; Adjusts the GSR's range by selecting the which internal resistor is used&#10;&#10; </short>
          <long>&#10; Adjusts the GSR's range by selecting the which internal resistor is used&#10;&#10; @param range: select the resistor to use&#10;               0:  40 kohm&#10;               1: 287 kohm&#10;               2: 1.0 Mohm&#10;               3: 3.3 Mohm &#10;</long>
        </documentation>
        <interfacedef-ref qname="Gsr"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="range" ref="0x7f2ba3bbc060" loc="46:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="smoothTransition" ref="0x7f2ba3bb7020" loc="81:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
        <documentation loc="75:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
          <short> &#10; Smooths ADC values during autorange transition settling time.</short>
          <long> &#10; Smooths ADC values during autorange transition settling time.&#10; @param active_resistor: currently selected HW resistor&#10; @param sampling_period: sampling period of shimmer. Determines number of transient samples&#10; @return true if transient and false otherwise.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="Gsr"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dummy_active_resistor" ref="0x7f2ba3bb8900" loc="81:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="sampling_period" ref="0x7f2ba3bb8cc0" loc="81:../../../../tos/platforms/shimmer/chips/gsr/Gsr.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StrainGauge" loc="35:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGauge.nc">
      <function command="" provided="0" name="powerOn" ref="0x7f2ba3bd2b60" loc="36:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGauge.nc">
        <interfacedef-ref qname="StrainGauge"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="powerOff" ref="0x7f2ba3bc5270" loc="38:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGauge.nc">
        <interfacedef-ref qname="StrainGauge"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledOn" ref="0x7f2ba3bc5940" loc="41:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGauge.nc">
        <interfacedef-ref qname="StrainGauge"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledOff" ref="0x7f2ba3bc3020" loc="42:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGauge.nc">
        <interfacedef-ref qname="StrainGauge"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledToggle" ref="0x7f2ba3bc36f0" loc="43:../../../../tos/platforms/shimmer2/chips/straingauge/StrainGauge.nc">
        <interfacedef-ref qname="StrainGauge"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2ba3bb36b0" loc="53:../../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2ba3bb36b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f2ba3ba1420" loc="136:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2ba3ba6d60" loc="83:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f2ba3ba3b10" loc="114:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2ba3ba3540" loc="114:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f2ba3ba3880" loc="114:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f2ba3ba5d60" loc="98:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f2ba3ba0460" loc="151:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f2ba3ba1bb0" loc="144:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f2ba3ba5570" loc="92:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f2ba3ba72a0" loc="64:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2ba3ba7020" loc="64:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f2ba3ba2aa0" loc="129:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2ba3ba24d0" loc="129:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f2ba3ba2810" loc="129:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f2ba3ba7d60" loc="73:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2ba3ba7ae0" loc="73:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2ba3ba6650" loc="78:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Bluetooth" loc="47:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
      <documentation loc="34:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <short>&#10; </short>
        <long>&#10; @author Steve Ayer&#10; @author Adrian Burns&#10; @date February, 2007&#10;&#10; @author Mike Healy&#10; @date April 20, 2009 - ported to TinyOS 2.x &#10;</long>
      </documentation>
      <function command="" provided="0" name="resetDefaults" ref="0x7f2ba3b78350" loc="90:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setBaudrate" ref="0x7f2ba3b7b810" loc="84:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_baud" ref="0x7f2ba3b7b590" loc="84:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDiscoverable" ref="0x7f2ba3b83700" loc="66:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="disc" ref="0x7f2ba3b83480" loc="66:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="commandModeEnded" ref="0x7f2ba3b76020" loc="95:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataAvailable" ref="0x7f2ba3b769e0" loc="103:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba3b76760" loc="103:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="connectionClosed" ref="0x7f2ba3b77740" loc="94:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reason" ref="0x7f2ba3b774c0" loc="94:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setName" ref="0x7f2ba3b80350" loc="69:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x7f2ba3b800d0" loc="69:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setServiceName" ref="0x7f2ba3b7e020" loc="72:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x7f2ba3b7fcc0" loc="72:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRawBaudrate" ref="0x7f2ba3b7ce40" loc="78:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rate_factor" ref="0x7f2ba3b7cbc0" loc="78:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPagingTime" ref="0x7f2ba3b7a2a0" loc="88:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hexval_time" ref="0x7f2ba3b7a020" loc="88:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f2ba3b740e0" loc="104:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInquiryTime" ref="0x7f2ba3b7ac30" loc="89:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hexval_time" ref="0x7f2ba3b7a9b0" loc="89:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="connect" ref="0x7f2ba3b843d0" loc="61:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f2ba3b84150" loc="61:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="connectionMade" ref="0x7f2ba3b78d20" loc="93:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f2ba3b78aa0" loc="93:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAuthentication" ref="0x7f2ba3b82a10" loc="68:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="auth" ref="0x7f2ba3b82790" loc="68:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setServiceClass" ref="0x7f2ba3b7f5f0" loc="71:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="class" ref="0x7f2ba3b7f370" loc="71:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f2ba3b87b00" loc="51:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2ba3b87540" loc="51:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2ba3b87870" loc="51:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="discoverDevices" ref="0x7f2ba3b869c0" loc="58:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRadioMode" ref="0x7f2ba3b84d40" loc="64:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2ba3b84ac0" loc="64:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPIN" ref="0x7f2ba3b80c50" loc="70:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x7f2ba3b809d0" loc="70:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEncryption" ref="0x7f2ba3b820b0" loc="67:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enc" ref="0x7f2ba3b83db0" loc="67:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRemoteConfig" ref="0x7f2ba3b7c490" loc="74:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="disableConfig" ref="0x7f2ba3b7c210" loc="74:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDeviceClass" ref="0x7f2ba3b7e980" loc="73:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="class" ref="0x7f2ba3b7e700" loc="73:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disconnect" ref="0x7f2ba3b86270" loc="54:../../../../tos/platforms/shimmer/chips/bluetooth/Bluetooth.nc">
        <interfacedef-ref qname="Bluetooth"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CRYPTO" loc="2:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
      <function command="" provided="0" name="xtea_decrypt" ref="0x7f2ba3b272c0" loc="13:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
                <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ct" ref="0x7f2ba3b28820" loc="13:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="pt" ref="0x7f2ba3b28b40" loc="13:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f2ba3b27020" loc="13:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
                <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="kasumi_decrypt" ref="0x7f2ba3b0ddc0" loc="37:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f2ba3b345a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f2ba3b31020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ct" ref="0x7f2ba3b0d420" loc="37:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="pt" ref="0x7f2ba3b0d780" loc="37:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f2ba3b0db20" loc="37:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f2ba3b345a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f2ba3b31020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="blowfish_encrypt" ref="0x7f2ba3b09e50" loc="41:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="blowfish_key" ref="0x7f2ba3b39a50"/></typename>
                <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f2ba3b3beb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pt" ref="0x7f2ba3b09460" loc="41:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="ct" ref="0x7f2ba3b097c0" loc="41:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f2ba3b09bb0" loc="41:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="blowfish_key" ref="0x7f2ba3b39a50"/></typename>
                <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f2ba3b3beb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="skipjack_encrypt" ref="0x7f2ba3b24800" loc="16:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f2ba3b351a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f2ba3b35870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pt" ref="0x7f2ba3b26e20" loc="16:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="ct" ref="0x7f2ba3b241b0" loc="16:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f2ba3b24560" loc="16:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f2ba3b351a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f2ba3b35870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="safer_decrypt" ref="0x7f2ba3b18cc0" loc="27:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f2ba3b35c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f2ba3b34200"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block_in" ref="0x7f2ba3b182f0" loc="27:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="block_out" ref="0x7f2ba3b18690" loc="27:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f2ba3b18a20" loc="27:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f2ba3b35c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f2ba3b34200"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="blowfish_setup" ref="0x7f2ba3b0bcb0" loc="40:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f2ba3b3beb0"/>
                <typename><typedef-ref name="blowfish_key" ref="0x7f2ba3b39a50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f2ba3b0b020" loc="40:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="keylen" ref="0x7f2ba3b0b320" loc="40:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="num_rounds" ref="0x7f2ba3b0b650" loc="40:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="skey" ref="0x7f2ba3b0ba00" loc="40:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f2ba3b3beb0"/>
                <typename><typedef-ref name="blowfish_key" ref="0x7f2ba3b39a50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="blowfish_done" ref="0x7f2ba3b079f0" loc="43:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f2ba3b3beb0"/>
                <typename><typedef-ref name="blowfish_key" ref="0x7f2ba3b39a50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skey" ref="0x7f2ba3b07770" loc="43:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f2ba3b3beb0"/>
                <typename><typedef-ref name="blowfish_key" ref="0x7f2ba3b39a50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc5_encrypt" ref="0x7f2ba3b14a80" loc="31:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc5_key" ref="0x7f2ba3b37d50"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f2ba3b37500"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pt" ref="0x7f2ba3b14110" loc="31:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="ct" ref="0x7f2ba3b14430" loc="31:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x7f2ba3b147e0" loc="31:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc5_key" ref="0x7f2ba3b37d50"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f2ba3b37500"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lsb" ref="0x7f2ba3b05350" loc="45:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba3b050d0" loc="45:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="kasumi_setup" ref="0x7f2ba3b109a0" loc="35:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f2ba3b345a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f2ba3b31020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f2ba3b11bb0" loc="35:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="keylen" ref="0x7f2ba3b10020" loc="35:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="num_rounds" ref="0x7f2ba3b10350" loc="35:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="skey" ref="0x7f2ba3b106f0" loc="35:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f2ba3b345a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f2ba3b31020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc4_encrypt" ref="0x7f2ba3b2b360" loc="9:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba3b2cd20" loc="9:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="data_len" ref="0x7f2ba3b2b0d0" loc="9:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc5_decrypt" ref="0x7f2ba3b13ac0" loc="32:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc5_key" ref="0x7f2ba3b37d50"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f2ba3b37500"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ct" ref="0x7f2ba3b13150" loc="32:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="pt" ref="0x7f2ba3b13470" loc="32:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x7f2ba3b13820" loc="32:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc5_key" ref="0x7f2ba3b37d50"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f2ba3b37500"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc2_decrypt" ref="0x7f2ba3b1db10" loc="22:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc2_key" ref="0x7f2ba3b3bb00"/></typename>
                <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f2ba3b3b490"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ct" ref="0x7f2ba3b1d150" loc="22:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="pt" ref="0x7f2ba3b1d4b0" loc="22:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f2ba3b1d870" loc="22:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc2_key" ref="0x7f2ba3b3bb00"/></typename>
                <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f2ba3b3b490"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc5_setup" ref="0x7f2ba3b15a40" loc="30:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f2ba3b37500"/>
                <typename><typedef-ref name="rc5_key" ref="0x7f2ba3b37d50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f2ba3b17d20" loc="30:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="keysize_b" ref="0x7f2ba3b150d0" loc="30:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="rounds" ref="0x7f2ba3b15420" loc="30:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
          <variable name="ctx" ref="0x7f2ba3b15790" loc="30:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f2ba3b37500"/>
                <typename><typedef-ref name="rc5_key" ref="0x7f2ba3b37d50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="kasumi_done" ref="0x7f2ba3b0c790" loc="38:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f2ba3b345a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f2ba3b31020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skey" ref="0x7f2ba3b0c510" loc="38:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f2ba3b345a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f2ba3b31020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="xxtea_encrypt" ref="0x7f2ba3b2d780" loc="6:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba3b2d180" loc="6:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="data_len" ref="0x7f2ba3b2d4f0" loc="6:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc2_setup" ref="0x7f2ba3b207b0" loc="20:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f2ba3b3b490"/>
                <typename><typedef-ref name="rc2_key" ref="0x7f2ba3b3bb00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f2ba3b21ae0" loc="20:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="keylen" ref="0x7f2ba3b21de0" loc="20:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="num_rounds" ref="0x7f2ba3b20180" loc="20:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="skey" ref="0x7f2ba3b20500" loc="20:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f2ba3b3b490"/>
                <typename><typedef-ref name="rc2_key" ref="0x7f2ba3b3bb00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tea_decrypt" ref="0x7f2ba3b31d50" loc="3:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v0" ref="0x7f2ba3b31790" loc="3:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
          <variable name="v1" ref="0x7f2ba3b31ac0" loc="3:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tea_encrypt" ref="0x7f2ba3b2fa20" loc="4:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v0" ref="0x7f2ba3b2f460" loc="4:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
          <variable name="v1" ref="0x7f2ba3b2f790" loc="4:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="skipjack_done" ref="0x7f2ba3b213d0" loc="18:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f2ba3b351a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f2ba3b35870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skey" ref="0x7f2ba3b21150" loc="18:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f2ba3b351a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f2ba3b35870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="msb" ref="0x7f2ba3b05c50" loc="46:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba3b059d0" loc="46:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="skipjack_decrypt" ref="0x7f2ba3b239d0" loc="17:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f2ba3b351a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f2ba3b35870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ct" ref="0x7f2ba3b23020" loc="17:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="pt" ref="0x7f2ba3b23380" loc="17:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f2ba3b23730" loc="17:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f2ba3b351a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f2ba3b35870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="xxtea_decrypt" ref="0x7f2ba3b2c620" loc="7:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba3b2c020" loc="7:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="data_len" ref="0x7f2ba3b2c390" loc="7:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="safer_encrypt" ref="0x7f2ba3b19b20" loc="26:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f2ba3b35c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f2ba3b34200"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block_in" ref="0x7f2ba3b19150" loc="26:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="block_out" ref="0x7f2ba3b194f0" loc="26:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f2ba3b19880" loc="26:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f2ba3b35c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f2ba3b34200"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="skipjack_setup" ref="0x7f2ba3b266c0" loc="15:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f2ba3b351a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f2ba3b35870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f2ba3b27a00" loc="15:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="keylen" ref="0x7f2ba3b27d00" loc="15:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="num_rounds" ref="0x7f2ba3b26060" loc="15:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="skey" ref="0x7f2ba3b26410" loc="15:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f2ba3b351a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f2ba3b35870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="blowfish_decrypt" ref="0x7f2ba3b07020" loc="42:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="blowfish_key" ref="0x7f2ba3b39a50"/></typename>
                <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f2ba3b3beb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ct" ref="0x7f2ba3b085f0" loc="42:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="pt" ref="0x7f2ba3b08950" loc="42:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f2ba3b08d40" loc="42:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="blowfish_key" ref="0x7f2ba3b39a50"/></typename>
                <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f2ba3b3beb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="safer_done" ref="0x7f2ba3b17690" loc="28:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f2ba3b35c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f2ba3b34200"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skey" ref="0x7f2ba3b17410" loc="28:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f2ba3b35c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f2ba3b34200"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="xtea_encrypt" ref="0x7f2ba3b28130" loc="12:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
                <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pt" ref="0x7f2ba3b2a7b0" loc="12:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="ct" ref="0x7f2ba3b2aad0" loc="12:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f2ba3b2ae60" loc="12:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
                <typename><typedef-ref name="uint32_t" ref="0x7f2ba584a920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc2_encrypt" ref="0x7f2ba3b1f9e0" loc="21:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc2_key" ref="0x7f2ba3b3bb00"/></typename>
                <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f2ba3b3b490"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pt" ref="0x7f2ba3b1f020" loc="21:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="ct" ref="0x7f2ba3b1f380" loc="21:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f2ba3b1f740" loc="21:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc2_key" ref="0x7f2ba3b3bb00"/></typename>
                <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f2ba3b3b490"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc2_done" ref="0x7f2ba3b1c510" loc="23:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f2ba3b3b490"/>
                <typename><typedef-ref name="rc2_key" ref="0x7f2ba3b3bb00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skey" ref="0x7f2ba3b1c290" loc="23:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f2ba3b3b490"/>
                <typename><typedef-ref name="rc2_key" ref="0x7f2ba3b3bb00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc5_done" ref="0x7f2ba3b11480" loc="33:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f2ba3b37500"/>
                <typename><typedef-ref name="rc5_key" ref="0x7f2ba3b37d50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ctx" ref="0x7f2ba3b11200" loc="33:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f2ba3b37500"/>
                <typename><typedef-ref name="rc5_key" ref="0x7f2ba3b37d50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc4_decrypt" ref="0x7f2ba3b2a0c0" loc="10:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2ba3b2ba60" loc="10:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="data_len" ref="0x7f2ba3b2bdd0" loc="10:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="kasumi_encrypt" ref="0x7f2ba3b0fcb0" loc="36:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f2ba3b345a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f2ba3b31020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pt" ref="0x7f2ba3b0f310" loc="36:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="ct" ref="0x7f2ba3b0f670" loc="36:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f2ba3b0fa10" loc="36:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f2ba3b345a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f2ba3b31020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="safer_setup" ref="0x7f2ba3b1b980" loc="25:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f2ba3b35c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f2ba3b34200"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f2ba3b1cc30" loc="25:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="keylen" ref="0x7f2ba3b1b020" loc="25:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="numrounds" ref="0x7f2ba3b1b340" loc="25:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="skey" ref="0x7f2ba3b1b6d0" loc="25:../../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f2ba3b35c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f2ba3b34200"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mma_Accel" loc="40:../../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
      <function command="" provided="0" name="setSensitivity" ref="0x7f2ba3bbfb80" loc="54:../../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
        <documentation loc="49:../../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
          <short>&#10; Sets the sensitivity (gain) of the sensors.</short>
          <long>&#10; Sets the sensitivity (gain) of the sensors.&#10;&#10; @param sensitivity the sensitivity (gain)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Mma_Accel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sensitivity" ref="0x7f2ba3bbf900" loc="54:../../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wake" ref="0x7f2ba3bbf110" loc="47:../../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
        <documentation loc="42:../../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
          <short>&#10; Turns the accelerometer on or off.</short>
          <long>&#10; Turns the accelerometer on or off.&#10;&#10; @param wakeup if &#60;code>TRUE&#60;/code> turns it on; if &#60;code>FALSE&#60;/code> turns it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Mma_Accel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="wakeup" ref="0x7f2ba3bc6e10" loc="47:../../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f2ba35517b0" loc="95:../../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2ba3550030" loc="105:../../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430DmaControl" loc="40:../../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
      <documentation loc="34:../../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setFlags" ref="0x7f2ba349aa40" loc="42:../../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
        <interfacedef-ref qname="Msp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable_nmi" ref="0x7f2ba349a0d0" loc="42:../../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </variable>
          <variable name="round_robin" ref="0x7f2ba349a430" loc="42:../../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </variable>
          <variable name="on_fetch" ref="0x7f2ba349a7a0" loc="43:../../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f2ba349e990" loc="41:../../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
        <interfacedef-ref qname="Msp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <function command="" provided="0" name="getCtl0" ref="0x7f2ba347ed80" loc="63:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba34835f0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7f2ba3482090"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7f2ba347a020" loc="82:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2ba34959f0"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7f2ba3493020"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f2ba347cc90" loc="82:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7f2ba3478610" loc="106:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7f2ba3477800" loc="118:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7f2ba3477040" loc="112:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7f2ba3478d90" loc="112:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7f2ba347d5e0" loc="68:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba3481710"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7f2ba347f020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7f2ba347c410" loc="75:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2ba34959f0"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f2ba3493020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f2ba347dd50" loc="75:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7f2ba347c180" loc="75:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2ba34959f0"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f2ba3493020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f2ba34758b0" loc="128:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7f2ba347fad0" loc="51:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba34835f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f2ba3482090"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7f2ba347f850" loc="51:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba34835f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f2ba3482090"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7f2ba347aaf0" loc="89:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f2ba347a870" loc="89:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7f2ba34795c0" loc="95:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f2ba3479340" loc="95:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7f2ba3479e30" loc="101:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7f2ba3475020" loc="123:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7f2ba3474070" loc="133:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7f2ba347e560" loc="57:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba3481710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f2ba347f020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7f2ba347e2e0" loc="57:../../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2ba3481710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f2ba347f020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430DmaChannel" loc="38:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
      <documentation loc="33:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableDMA" ref="0x7f2ba33d5e50" loc="61:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTrigger" ref="0x7f2ba33e15c0" loc="40:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDstDecrement" ref="0x7f2ba33da7c0" loc="51:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLevelSensitive" ref="0x7f2ba33d5020" loc="58:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcIncrement" ref="0x7f2ba33dc8e0" loc="49:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getState" ref="0x7f2ba33cbab0" loc="77:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_state_s" ref="0x7f2ba3b5e750"/>
            <typename><typedef-ref name="dma_channel_state_t" ref="0x7f2ba3b5b5b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordToWord" ref="0x7f2ba33d97b0" loc="53:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTrigger" ref="0x7f2ba33e9e50" loc="39:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b6d480"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7f2ba3b691d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="trigger" ref="0x7f2ba33e9bd0" loc="39:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2ba3b6d480"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7f2ba3b691d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestination" ref="0x7f2ba33ca9b0" loc="79:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatedBlockMode" ref="0x7f2ba33deb10" loc="45:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="aborted" ref="0x7f2ba33d3e40" loc="68:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setByteToByte" ref="0x7f2ba33d7020" loc="56:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f2ba33d45e0" loc="63:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterrupt" ref="0x7f2ba33d4d40" loc="64:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="interruptPending" ref="0x7f2ba33d3510" loc="66:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2ba4dc4090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStateRaw" ref="0x7f2ba33cb2e0" loc="76:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="state" ref="0x7f2ba33cc270" loc="76:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="trigger" ref="0x7f2ba33cc5e0" loc="76:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="src" ref="0x7f2ba33cc900" loc="76:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7f2ba33ccc30" loc="76:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f2ba33cb020" loc="76:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTrigger" ref="0x7f2ba33c8990" loc="81:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_trigger_s" ref="0x7f2ba3b69590"/>
            <typename><typedef-ref name="dma_channel_trigger_t" ref="0x7f2ba3b68180"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDstIncrement" ref="0x7f2ba33d9070" loc="52:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f2ba33c70e0" loc="83:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSingleMode" ref="0x7f2ba33e1d00" loc="41:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerDMA" ref="0x7f2ba33d25b0" loc="69:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setByteToWord" ref="0x7f2ba33d8020" loc="54:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrc" ref="0x7f2ba33d0020" loc="71:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="saddr" ref="0x7f2ba33d2c80" loc="71:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatedSingleMode" ref="0x7f2ba33de390" loc="44:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcNoIncrement" ref="0x7f2ba33dda10" loc="47:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setBurstMode" ref="0x7f2ba33e0bd0" loc="43:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSource" ref="0x7f2ba33ca230" loc="78:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0x7f2ba33c8190" loc="80:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcDecrement" ref="0x7f2ba33dc190" loc="48:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="transferDone" ref="0x7f2ba33c7a90" loc="85:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="success" ref="0x7f2ba33c7810" loc="85:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableDMA" ref="0x7f2ba33d5730" loc="60:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatedBurstMode" ref="0x7f2ba33dd2b0" loc="46:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setBlockMode" ref="0x7f2ba33e04a0" loc="42:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSize" ref="0x7f2ba33cf350" loc="73:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sz" ref="0x7f2ba33cf0d0" loc="73:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setState" ref="0x7f2ba33ceaf0" loc="75:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_state_s" ref="0x7f2ba3b5e750"/>
              <typename><typedef-ref name="dma_channel_state_t" ref="0x7f2ba3b5b5b0"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_trigger_s" ref="0x7f2ba3b69590"/>
              <typename><typedef-ref name="dma_channel_trigger_t" ref="0x7f2ba3b68180"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7f2ba33cfa90" loc="75:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_state_s" ref="0x7f2ba3b5e750"/>
              <typename><typedef-ref name="dma_channel_state_t" ref="0x7f2ba3b5b5b0"/></typename>
            </type-tag>
          </variable>
          <variable name="t" ref="0x7f2ba33cfe40" loc="75:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_trigger_s" ref="0x7f2ba3b69590"/>
              <typename><typedef-ref name="dma_channel_trigger_t" ref="0x7f2ba3b68180"/></typename>
            </type-tag>
          </variable>
          <variable name="src" ref="0x7f2ba33ce1b0" loc="75:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7f2ba33ce4e0" loc="75:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f2ba33ce830" loc="75:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDstNoIncrement" ref="0x7f2ba33da070" loc="50:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdgeSensitive" ref="0x7f2ba33d7780" loc="57:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordToByte" ref="0x7f2ba33d8760" loc="55:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDst" ref="0x7f2ba33d0970" loc="72:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="daddr" ref="0x7f2ba33d06f0" loc="72:../../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430DmaControl" loc="40:../../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
      <documentation loc="34:../../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearENNMI" ref="0x7f2ba33e61f0" loc="47:../../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoundRobin" ref="0x7f2ba33e8c20" loc="44:../../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOnFetch" ref="0x7f2ba33e84e0" loc="43:../../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setENNMI" ref="0x7f2ba33e7aa0" loc="46:../../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getState" ref="0x7f2ba33e4350" loc="49:../../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_state_s" ref="0x7f2ba3b66020"/>
            <typename><typedef-ref name="dma_state_t" ref="0x7f2ba3b65230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f2ba33e4a40" loc="50:../../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOnFetch" ref="0x7f2ba33ebd90" loc="42:../../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setState" ref="0x7f2ba33e6b60" loc="48:../../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_state_s" ref="0x7f2ba3b66020"/>
              <typename><typedef-ref name="dma_state_t" ref="0x7f2ba3b65230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7f2ba33e68e0" loc="48:../../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_state_s" ref="0x7f2ba3b66020"/>
              <typename><typedef-ref name="dma_state_t" ref="0x7f2ba3b65230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearRoundRobin" ref="0x7f2ba33e7390" loc="45:../../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430DmaInterrupt" loc="38:../../../../tos/chips/msp430/dma/HplMsp430DmaInterrupt.nc">
      <documentation loc="33:../../../../tos/chips/msp430/dma/HplMsp430DmaInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f2ba33b43b0" loc="39:../../../../tos/chips/msp430/dma/HplMsp430DmaInterrupt.nc">
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f2ba3267950" loc="68:../../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f2ba3267190" loc="61:../../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f2ba32689e0" loc="54:../../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f2ba3268120" loc="53:../../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="102:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f2ba3207e60" loc="102:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f2ba3207e60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f2ba32054c0" loc="120:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
        <documentation loc="103:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10;    I2C_RESTART - restarting an I2C transaction (turn bus around).&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f2ba32099b0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f2ba32067a0" loc="120:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f2ba32099b0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f2ba3206af0" loc="120:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f2ba3206e40" loc="120:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f2ba3205210" loc="120:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f2ba31fd020" loc="157:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
        <documentation loc="149:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2ba31ff260" loc="157:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f2ba31ff5b0" loc="157:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f2ba31ff900" loc="157:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f2ba31ffc80" loc="157:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f2ba32043c0" loc="137:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
        <documentation loc="122:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_RESTART - restarting an I2C transaction (turn bus around).&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f2ba32099b0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f2ba32036b0" loc="137:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f2ba32099b0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f2ba3203a00" loc="137:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f2ba3203d50" loc="137:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f2ba3204110" loc="137:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f2ba32002d0" loc="147:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
        <documentation loc="139:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2ba32014b0" loc="147:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f2ba4dbbc20"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f2ba3201800" loc="147:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2ba584a520"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f2ba3201b50" loc="147:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f2ba3200020" loc="147:../../../../tos/platforms/shimmer2r/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2ba584a160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
